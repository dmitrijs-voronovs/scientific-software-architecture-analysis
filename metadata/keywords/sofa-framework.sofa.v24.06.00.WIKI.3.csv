quality_attribute,keyword,matched_word,sentence,source,filename,author,repo,version,wiki,url
Deployability,update,updateRepositoryPath,"LINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseAddResourceRepository, sofa::core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool updateRepositoryPath ();  ; void cleanup () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html
Integrability,message,messages,"a::component::sceneutility::BaseAddResourceRepository Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::BaseAddResourceRepository Class Referenceabstract . #include <AddResourceRepository.h>. Inheritance diagram for sofa::component::sceneutility::BaseAddResourceRepository:. [legend]. Public Attributes; DataFileName d_repositoryPath;  Path to add to the pool of resources. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; FileRepository * m_repository;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::sceneutility::BaseAddResourceRepository Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::BaseAddResourceRepository Class Referenceabstract . #include <AddResourceRepository.h>. Inheritance diagram for sofa::component::sceneutility::BaseAddResourceRepository:. [legend]. Public Attributes; DataFileName d_repositoryPath;  Path to add to the pool of resources. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; FileRepository * m_repository;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html
Performance,load,loader,". Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseAddResourceRepository, sofa::core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool updateRepositoryPath ();  ; void cleanup () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html
Deployability,update,updateInternal," t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FileMessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::FileMessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~FileMessageHandlerComponent() overridesofa::component::sceneutility::FileMessageHandlerComponent.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::sceneutility::FileMessageHandlerComponent Member List . This is the complete list of members for sofa::component::sceneutility::FileMessageHandlerComponent, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html
Performance,load,loader,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FileMessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::FileMessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::sceneutility::FileMessageHandlerComponent; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; FileMessageHandlerComponent()sofa::component::sceneutility::FileMessageHandlerComponent; findData(const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html
Availability,down,down,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html
Integrability,message,message,"﻿. SOFA API: sofa::component::sceneutility::FileMessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::FileMessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a FileMessageHandlerComponent to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::FileMessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a FileMessageHandlerComponent to the main logger. . Public Attributes; Data< std::string > d_filename;  Name of the file into which the message will be saved in. More...;  ; helper::logging::MessageHandler * m_handler { nullptr };  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::sceneutility::FileMessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::FileMessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a FileMessageHandlerComponent to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::FileMessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a FileMessageHandlerComponent to the main logger. . Public Attributes; Data< std::string > d_filename;  Name of the file into which the message will be saved in. More...;  ; helper::logging::MessageHandler * m_handler { nullptr };  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html
Performance,load,loader," std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html
Testability,log,logger,"﻿. SOFA API: sofa::component::sceneutility::FileMessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::FileMessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a FileMessageHandlerComponent to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::FileMessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a FileMessageHandlerComponent to the main logger. . Public Attributes; Data< std::string > d_filename;  Name of the file into which the message will be saved in. More...;  ; helper::logging::MessageHandler * m_handler { nullptr };  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html
Deployability,update,updateInternal,"oveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::MessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~MessageHandlerComponent() overridesofa::component::sceneutility::MessageHandlerComponentinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::sceneutility::MessageHandlerComponent Member List . This is the complete list of members for sofa::component::sceneutility::MessageHandlerComponent, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html
Performance,load,loader,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::MessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_typesofa::component::sceneutility::MessageHandlerComponent; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html
Availability,down,down,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html
Integrability,message,messages,"Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::MessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a MessageHandler to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::MessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a MessageHandler to the main logger. . Public Attributes; Data< std::string > d_type;  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MessageHandlerComponent, core::objectmodel::BaseObject);  ;  MessageHandlerComponent ();  ;  ~MessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::sceneutility::MessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::MessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a MessageHandler to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::MessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a MessageHandler to the main logger. . Public Attributes; Data< std::string > d_type;  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MessageHandlerComponent, core::objectmodel::BaseObject);  ;  MessageHandlerComponent ();  ;  ~MessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html
Performance,load,loader,"Pos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MessageHandlerComponent, core::objectmodel::BaseObject);  ;  MessageHandlerComponent ();  ;  ~MessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html
Testability,log,logger,"﻿. SOFA API: sofa::component::sceneutility::MessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::MessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a MessageHandler to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::MessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a MessageHandler to the main logger. . Public Attributes; Data< std::string > d_type;  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MessageHandlerComponent, core::objectmodel::BaseObject);  ;  MessageHandlerComponent ();  ;  ~MessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html
Deployability,update,updateInternal,"moveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PauseAnimation, core::objectmodel::BaseObject)sofa::component::sceneutility::PauseAnimation; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PauseAnimation() overridesofa::component::sceneutility::PauseAnimationprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::sceneutility::PauseAnimation Member List . This is the complete list of members for sofa::component::sceneutility::PauseAnimation, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html
Performance,load,loader,"ectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PauseAnimation, core::objectmodel::BaseObject)sofa::component::sceneutility::PauseAnimation; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html
Availability,down,down,"agram for sofa::component::sceneutility::PauseAnimation:. [legend]; Detailed Description; Abstract class defining how to pause the animation. . Protected Attributes; sofa::core::objectmodel::BaseNode * root;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool ins",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html
Integrability,depend,dependent,"::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimation Class Referenceabstract . #include <PauseAnimation.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimation:. [legend]; Detailed Description; Abstract class defining how to pause the animation. . Protected Attributes; sofa::core::objectmodel::BaseNode * root;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html
Performance,load,loader," MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html
Usability,pause,pause,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimation Class Referenceabstract . #include <PauseAnimation.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimation:. [legend]; Detailed Description; Abstract class defining how to pause the animation. . Protected Attributes; sofa::core::objectmodel::BaseNode * root;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html
Deployability,update,updateInternal,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PauseAnimation, core::objectmodel::BaseObject)sofa::component::sceneutility::PauseAnimation; SOFA_CLASS(PauseAnimationOnEvent, PauseAnimation)sofa::component::sceneutility::PauseAnimationOnEvent; sofa::component::sceneutility::PauseAnimation::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PauseAnimation() overridesofa::component::sceneutility::PauseAnimationprotected; ~PauseAnimationOnEvent() overridesofa::component::sceneutility::PauseAnimationOnEventprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::sceneutility::PauseAnimationOnEvent Member List . This is the complete list of members for sofa::component::sceneutility::PauseAnimationOnEvent, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html
Performance,load,loader,"ectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PauseAnimation, core::objectmodel::BaseObject)sofa::component::sceneutility::PauseAnimation; SOFA_CLASS(PauseAnimationOnEvent, PauseAnimation)sofa::component::sceneutility::PauseAnimationOnEvent; sofa::component::sceneutility::PauseAnimation::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html
Availability,down,down,"> f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=n",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html
Deployability,update,updateInternal,"ol removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html
Integrability,message,messages,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimationOnEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimationOnEvent Class Reference . #include <PauseAnimationOnEvent.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimationOnEvent:. [legend]. Public Attributes; bool paused;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimationOnEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimationOnEvent Class Reference . #include <PauseAnimationOnEvent.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimationOnEvent:. [legend]. Public Attributes; bool paused;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html
Performance,load,loader,"and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph crea",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html
Usability,pause,paused,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimationOnEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimationOnEvent Class Reference . #include <PauseAnimationOnEvent.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimationOnEvent:. [legend]. Public Attributes; bool paused;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html
Deployability,update,updateInternal,"(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BackgroundSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::BackgroundSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::setting::BackgroundSetting Member List . This is the complete list of members for sofa::component::setting::BackgroundSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BackgroundSetting()sofa::component::setting::BackgroundSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BackgroundSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::BackgroundSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BackgroundSetting()sofa::component::setting::BackgroundSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html
Usability,clear,clearLoggedMessages,"ag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BackgroundSetting()sofa::component::setting::BackgroundSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::setting::BackgroundSetting; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::setting::BackgroundSetting; d_componentStatesofa::core::objectmodel::Base; d_imagesofa::component::setting::BackgroundSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html
Availability,down,down,"le::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html
Deployability,configurat,configuration,"﻿. SOFA API: sofa::component::setting::BackgroundSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::BackgroundSetting Class Reference . #include <BackgroundSetting.h>; Class for the configuration of background settings. ; More... Inheritance diagram for sofa::component::setting::BackgroundSetting:. [legend]; Detailed Description; Class for the configuration of background settings. . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > color;  ; sofa::core::objectmodel::DataFileName image;  Image to be used as background of the viewer. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the background. More...;  ; sofa::core::objectmodel::DataFileName d_image;  Image to be used as background of the viewer. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::Co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html
Integrability,message,messages,"configuration of background settings. ; More... Inheritance diagram for sofa::component::setting::BackgroundSetting:. [legend]; Detailed Description; Class for the configuration of background settings. . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > color;  ; sofa::core::objectmodel::DataFileName image;  Image to be used as background of the viewer. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the background. More...;  ; sofa::core::objectmodel::DataFileName d_image;  Image to be used as background of the viewer. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html
Modifiability,config,configuration,"﻿. SOFA API: sofa::component::setting::BackgroundSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::BackgroundSetting Class Reference . #include <BackgroundSetting.h>; Class for the configuration of background settings. ; More... Inheritance diagram for sofa::component::setting::BackgroundSetting:. [legend]; Detailed Description; Class for the configuration of background settings. . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > color;  ; sofa::core::objectmodel::DataFileName image;  Image to be used as background of the viewer. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the background. More...;  ; sofa::core::objectmodel::DataFileName d_image;  Image to be used as background of the viewer. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::Co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html
Deployability,update,updateInternal,"onst std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::setting::MouseButtonSetting Member List . This is the complete list of members for sofa::component::setting::MouseButtonSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html
Usability,clear,clearLoggedMessages,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html
Availability,down,down,"inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ; virtual std::string getOperationType ()=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html
Integrability,message,messages,"uttonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::MouseButtonSetting Class Referenceabstract . #include <MouseButtonSetting.h>. Inheritance diagram for sofa::component::setting::MouseButtonSetting:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ; virtual std::string getOperationType ()=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::setting::MouseButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::MouseButtonSetting Class Referenceabstract . #include <MouseButtonSetting.h>. Inheritance diagram for sofa::component::setting::MouseButtonSetting:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ; virtual std::string getOperationType ()=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-do",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html
Deployability,update,updateInternal,"const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::SofaDefaultPathSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SofaDefaultPathSetting()sofa::component::setting::SofaDefaultPathSettingprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::setting::SofaDefaultPathSetting Member List . This is the complete list of members for sofa::component::setting::SofaDefaultPathSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecPara",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::SofaDefaultPathSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SofaDefaultPathSetting()sofa::component::setting::SofaDefaultPathSettingprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecPara",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_gnuplotPathsofa::component::setting::SofaDefaultPathSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html
Availability,down,down,"eprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html
Deployability,configurat,configuration,"﻿. SOFA API: sofa::component::setting::SofaDefaultPathSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::SofaDefaultPathSetting Class Reference . #include <SofaDefaultPathSetting.h>; Class for the configuration of default path for sofa application. ; More... Inheritance diagram for sofa::component::setting::SofaDefaultPathSetting:. [legend]; Detailed Description; Class for the configuration of default path for sofa application. . Public Attributes; sofa::core::objectmodel::RenamedData< std::string > gnuplotPath;  ; sofa::core::objectmodel::Data< std::string > d_gnuplotPath;  Path where will be saved the gnuplot files. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html
Integrability,message,messages," List of all members . sofa::component::setting::SofaDefaultPathSetting Class Reference . #include <SofaDefaultPathSetting.h>; Class for the configuration of default path for sofa application. ; More... Inheritance diagram for sofa::component::setting::SofaDefaultPathSetting:. [legend]; Detailed Description; Class for the configuration of default path for sofa application. . Public Attributes; sofa::core::objectmodel::RenamedData< std::string > gnuplotPath;  ; sofa::core::objectmodel::Data< std::string > d_gnuplotPath;  Path where will be saved the gnuplot files. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html
Modifiability,config,configuration,"﻿. SOFA API: sofa::component::setting::SofaDefaultPathSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::SofaDefaultPathSetting Class Reference . #include <SofaDefaultPathSetting.h>; Class for the configuration of default path for sofa application. ; More... Inheritance diagram for sofa::component::setting::SofaDefaultPathSetting:. [legend]; Detailed Description; Class for the configuration of default path for sofa application. . Public Attributes; sofa::core::objectmodel::RenamedData< std::string > gnuplotPath;  ; sofa::core::objectmodel::Data< std::string > d_gnuplotPath;  Path where will be saved the gnuplot files. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html
Deployability,update,updateInternal,"model::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(StatsSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::StatsSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StatsSetting()sofa::component::setting::StatsSettingprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::setting::StatsSetting Member List . This is the complete list of members for sofa::component::setting::StatsSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(StatsSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::StatsSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StatsSetting()sofa::component::setting::StatsSettingprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dumpStatesofa::component::setting::StatsSetting; d_exportStatesofa::component::setting::StatsSetting; d_logTimesofa::component::setting::StatsSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpStatesofa::component::setting::StatsSetting; exportStatesofa::component::setting::StatsSetting; f_bboxsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html
Availability,down,down,"fecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (StatsSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html
Deployability,configurat,configuration,"﻿. SOFA API: sofa::component::setting::StatsSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::StatsSetting Class Reference . #include <StatsSetting.h>; Class for the configuration of stats settings. ; More... Inheritance diagram for sofa::component::setting::StatsSetting:. [legend]; Detailed Description; Class for the configuration of stats settings. . Public Attributes; sofa::core::objectmodel::RenamedData< bool > dumpState;  ; sofa::core::objectmodel::RenamedData< bool > logTime;  ; sofa::core::objectmodel::RenamedData< bool > exportState;  ; Data< bool > d_dumpState;  Dump state vectors at each time step of the simulation. More...;  ; Data< bool > d_logTime;  Output in the console an average of the time spent during different stages of the simulation. More...;  ; Data< bool > d_exportState;  Create GNUPLOT files with the positions, velocities and forces of all the simulated objects of the scene. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html
Integrability,message,messages," settings. . Public Attributes; sofa::core::objectmodel::RenamedData< bool > dumpState;  ; sofa::core::objectmodel::RenamedData< bool > logTime;  ; sofa::core::objectmodel::RenamedData< bool > exportState;  ; Data< bool > d_dumpState;  Dump state vectors at each time step of the simulation. More...;  ; Data< bool > d_logTime;  Output in the console an average of the time spent during different stages of the simulation. More...;  ; Data< bool > d_exportState;  Create GNUPLOT files with the positions, velocities and forces of all the simulated objects of the scene. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (StatsSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html
Modifiability,config,configuration,"﻿. SOFA API: sofa::component::setting::StatsSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::StatsSetting Class Reference . #include <StatsSetting.h>; Class for the configuration of stats settings. ; More... Inheritance diagram for sofa::component::setting::StatsSetting:. [legend]; Detailed Description; Class for the configuration of stats settings. . Public Attributes; sofa::core::objectmodel::RenamedData< bool > dumpState;  ; sofa::core::objectmodel::RenamedData< bool > logTime;  ; sofa::core::objectmodel::RenamedData< bool > exportState;  ; Data< bool > d_dumpState;  Dump state vectors at each time step of the simulation. More...;  ; Data< bool > d_logTime;  Output in the console an average of the time spent during different stages of the simulation. More...;  ; Data< bool > d_exportState;  Create GNUPLOT files with the positions, velocities and forces of all the simulated objects of the scene. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html
Testability,log,logTime,"﻿. SOFA API: sofa::component::setting::StatsSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::StatsSetting Class Reference . #include <StatsSetting.h>; Class for the configuration of stats settings. ; More... Inheritance diagram for sofa::component::setting::StatsSetting:. [legend]; Detailed Description; Class for the configuration of stats settings. . Public Attributes; sofa::core::objectmodel::RenamedData< bool > dumpState;  ; sofa::core::objectmodel::RenamedData< bool > logTime;  ; sofa::core::objectmodel::RenamedData< bool > exportState;  ; Data< bool > d_dumpState;  Dump state vectors at each time step of the simulation. More...;  ; Data< bool > d_logTime;  Output in the console an average of the time spent during different stages of the simulation. More...;  ; Data< bool > d_exportState;  Create GNUPLOT files with the positions, velocities and forces of all the simulated objects of the scene. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html
Deployability,update,updateInternal,"a::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ViewerSetting, ConfigurationSetting)sofa::component::setting::ViewerSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; ViewerSetting()sofa::component::setting::ViewerSettingprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::setting::ViewerSetting Member List . This is the complete list of members for sofa::component::setting::ViewerSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html
Performance,load,loader,"a(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resolutionsofa::component::setting::ViewerSetting; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ViewerSetting, ConfigurationSetting)sofa::component::setting::ViewerSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; ViewerSetting()s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html
Usability,clear,clearLoggedMessages,"bjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_cameraModesofa::component::setting::ViewerSetting; d_componentStatesofa::core::objectmodel::Base; d_fullscreensofa::component::setting::ViewerSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; d_objectPickingMethodsofa::component::setting::ViewerSetting; d_resolutionsofa::component::setting::ViewerSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_li",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html
Availability,down,down,"e; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (ViewerSetting, ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html
Deployability,configurat,configuration,"﻿. SOFA API: sofa::component::setting::ViewerSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::ViewerSetting Class Reference . #include <ViewerSetting.h>; Class for the configuration of viewer settings. ; More... Inheritance diagram for sofa::component::setting::ViewerSetting:. [legend]; Detailed Description; Class for the configuration of viewer settings. . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::Vec< 2, int > > resolution;  ; sofa::core::objectmodel::RenamedData< bool > fullscreen;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > cameraMode;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > objectPickingMethod;  ; Data< sofa::type::Vec< 2, int > > d_resolution;  resolution of the Viewer More...;  ; Data< bool > d_fullscreen;  Fullscreen mode. More...;  ; Data< sofa::helper::OptionsGroup > d_cameraMode;  Camera mode. More...;  ; Data< sofa::helper::OptionsGroup > d_objectPickingMethod;  The method used to pick objects. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html
Integrability,message,messages," 2, int > > resolution;  ; sofa::core::objectmodel::RenamedData< bool > fullscreen;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > cameraMode;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > objectPickingMethod;  ; Data< sofa::type::Vec< 2, int > > d_resolution;  resolution of the Viewer More...;  ; Data< bool > d_fullscreen;  Fullscreen mode. More...;  ; Data< sofa::helper::OptionsGroup > d_cameraMode;  Camera mode. More...;  ; Data< sofa::helper::OptionsGroup > d_objectPickingMethod;  The method used to pick objects. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (ViewerSetting, ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html
Modifiability,config,configuration,"﻿. SOFA API: sofa::component::setting::ViewerSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::ViewerSetting Class Reference . #include <ViewerSetting.h>; Class for the configuration of viewer settings. ; More... Inheritance diagram for sofa::component::setting::ViewerSetting:. [legend]; Detailed Description; Class for the configuration of viewer settings. . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::Vec< 2, int > > resolution;  ; sofa::core::objectmodel::RenamedData< bool > fullscreen;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > cameraMode;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > objectPickingMethod;  ; Data< sofa::type::Vec< 2, int > > d_resolution;  resolution of the Viewer More...;  ; Data< bool > d_fullscreen;  Fullscreen mode. More...;  ; Data< sofa::helper::OptionsGroup > d_cameraMode;  Camera mode. More...;  ; Data< sofa::helper::OptionsGroup > d_objectPickingMethod;  The method used to pick objects. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html
Deployability,update,updateInternal,", SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::ForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::ForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addDForce(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx)=0sofa::core::behavior::ForceField< DataTypes >pure virtual; addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html
Performance,load,loader,"jectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::F",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html
Testability,log,logging,"v &dx)=0sofa::core::behavior::ForceField< DataTypes >pure virtual; addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0sofa::core::behavior::ForceField< DataTypes >pure virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseLinearElasticityFEMForceField()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; BaseObject()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"ix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; d_youngModulussofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::core::behavior::ForceField< DataTypes >; DataVecDeriv type",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html
Availability,down,down,"tes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Protected Attributes; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  BaseLinearElasticityFEMForceField ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void setPoissonRatio (Real val);  ; void setYoungModulus (Real val);  ; Real getYoungModulusInElement (sofa::Size elementId) const;  ; Real getPoissonRatioInElement (sofa::Size elementId) const;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; virtual void addForce (const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addDForce (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx)=0;  ; virtual void addClambda (const Mechan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Protected Attributes; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  BaseLinearElasticityFEMForceField ();  ; void init () override;  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html
Modifiability,inherit,inherited,"ork for multi-physics simuation. Public Attributes |; Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes > Class Template Reference . #include <BaseLinearElasticityFEMForceField.h>. Inheritance diagram for sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >:. [legend]. Public Attributes; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html
Performance,load,loader,"mber Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html
Deployability,configurat,configuration,"﻿. SOFA API: sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Friends |; List of all members . sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation Class Reference . #include <FastTetrahedralCorotationalForceField.h>; data structure stored for each tetrahedron ; More...; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Coord shapeVector [4];  shape vector at the rest configuration More...;  ; Real restVolume;  rest volume More...;  ; Coord restEdgeVector [6];  ; Mat3x3 linearDfDxDiag [4];  ; Mat3x3 linearDfDx [6];  ; Mat3x3 rotation;  ; Mat3x3 restRotation;  ; Real edgeOrientation [6];  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ edgeOrientation. template<class DataTypes > . Real sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation::edgeOrientation[6]. ◆ linearDfDx. template<class DataTypes > . Mat3x3 sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation::linearDfDx[6]. ◆ linearDfDxDiag. template<class DataTypes > . Mat3x3 sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation::linearDfDxDiag[4]. ◆ restEdgeVector. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::elastic::FastTetrahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_for61007de5689b896ba934034e84420a35.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_for61007de5689b896ba934034e84420a35.html
Modifiability,config,configuration,"﻿. SOFA API: sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Friends |; List of all members . sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation Class Reference . #include <FastTetrahedralCorotationalForceField.h>; data structure stored for each tetrahedron ; More...; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Coord shapeVector [4];  shape vector at the rest configuration More...;  ; Real restVolume;  rest volume More...;  ; Coord restEdgeVector [6];  ; Mat3x3 linearDfDxDiag [4];  ; Mat3x3 linearDfDx [6];  ; Mat3x3 rotation;  ; Mat3x3 restRotation;  ; Real edgeOrientation [6];  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ edgeOrientation. template<class DataTypes > . Real sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation::edgeOrientation[6]. ◆ linearDfDx. template<class DataTypes > . Mat3x3 sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation::linearDfDx[6]. ◆ linearDfDxDiag. template<class DataTypes > . Mat3x3 sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation::linearDfDxDiag[4]. ◆ restEdgeVector. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::elastic::FastTetrahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_for61007de5689b896ba934034e84420a35.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_for61007de5689b896ba934034e84420a35.html
Deployability,update,updateInternal,"aTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; Tetrahedron typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; tetrahedronInfosofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protected; updateTopologyInformation()sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecCoord typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMat3x3 typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecReal typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetrahedronRestInformation typ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >, including all inherited members. _initialPointssofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const sofa::core::MechanicalParams *, DataVecDeriv &datadF, const DataVecDeriv &datadX) overridesofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html
Performance,load,loader,"Objectvirtual; RotationDecompositionMethod enum namesofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setRotationDecompositionMethod(const RotationDecompositionMethod m)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_ATTRIBUTE_DISABLED("""", ""v24.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html
Testability,log,logging,"l; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseLinearElasticityFEMForceField()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; BaseObject()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html
Usability,clear,clearLoggedMessages,"em::elastic::FastTetrahedralCorotationalForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeQRRotation(Mat3x3 &r, const Coord *dp)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protectedstatic; Coord typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const core::topology::BaseMeshTopology::Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html
Availability,down,down,"> l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FastTetrahedralCorotationalForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youngModulus instead"") DeprecatedAndRemoved f_youngModulus;  ;  FastTetrahedralCorotationalForceField ();  ; virtual ~FastTetrahedralCorotationalForceField ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const sofa::core::MechanicalParams *, DataVecDeriv &dataF, const DataVecCoord &dataX, const DataVecDeriv &dataV) override;  ; void addDForce (const sofa::core::MechanicalParams *, DataVecDeriv &datadF, const DataVecDeriv &datadX) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *matrix) override;  ; void updateTopologyInformation ();  ; void setRotationDecompositionMethod (const RotationDecompositionMethod m);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Deployability,update,updateMatrix,"a< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool updateMatrix;  ; ExtraData m_data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FastTetrahedralCorotationalForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool updateMatrix;  ; ExtraData m_data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Modifiability,inherit,inherited,"ointInfo;  Internal point data. More...;  ; core::topology::EdgeData< VecMat3x3 > d_edgeInfo;  Internal edge data. More...;  ; core::topology::TetrahedronData< VecTetrahedronRestInformation > d_tetrahedronInfo;  Internal tetrahedron data. More...;  ; VecCoord _initialPoints;  the initial positions of the points More...;  ; Data< std::string > d_method;  method for rotation computation :""qr"" (by QR) or ""polar"" or ""polar2"" or ""none"" (Linear elastic) More...;  ; RotationDecompositionMethod m_decompositionMethod;  ; Data< bool > d_drawing;  draw the forcefield if true More...;  ; Data< sofa::type::RGBAColor > d_drawColor1;  draw color for faces 1 More...;  ; Data< sofa::type::RGBAColor > d_drawColor2;  draw color for faces 2 More...;  ; Data< sofa::type::RGBAColor > d_drawColor3;  draw color for faces 3 More...;  ; Data< sofa::type::RGBAColor > d_drawColor4;  draw color for faces 4 More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Security,access,access,":solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::updateMatrix. protected . Constructor details. ◆ FastTetrahedralCorotationalForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::FastTetrahedralCorotationalForceField. ◆ ~FastTetrahedralCorotationalForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::~FastTetrahedralCorotationalForceField. virtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::addDForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::addForce ; (; const sofa::core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::addKToM",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceFieldData< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceFieldData< DataTypes >, including all inherited members. Main typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceFieldData< DataTypes >; reinit(Main *m)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceFieldData< DataTypes >inline. Generated on Mon Nov 11 2024 02:56:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation, including all inherited members. edgeOrientationsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; linearDfDxsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; linearDfDxDiagsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; operator<<(std::ostream &os, const TetrahedronRestInformation &)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformationfriend; operator>>(std::istream &in, TetrahedronRestInformation &)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformationfriend; restEdgeVectorsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; restRotationsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; restVolumesofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; rotationsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation; shapeVectorsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::TetrahedronRestInformation. Generated on Mon Nov 11 2024 02:56:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_fored9a332bffdea387980e4c6a67e45327.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_fored9a332bffdea387980e4c6a67e45327.html
Deployability,integrat,integrateStiffness," const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initLarge(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html
Integrability,integrat,integrateStiffness," const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initLarge(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >, including all inherited members. _coefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; accumulateForceLarge(WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; accumulateForcePolar(WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html
Performance,load,loader,"::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_ATTRIBUTE_DISABLED("""", ""v24.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html
Testability,log,logging,"pes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseLinearElasticityFEMForceField()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; BaseObject()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; computeForce(Displacement &F, const Displacement &Depl, const ElementStiffness &K)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeMaterialStiffness(MaterialStiffness &m, double youngModulus, double poissonRatio)sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html
Availability,down,down,"fa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HexahedralFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void setMethod (int val);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Modifiability,inherit,inherited," keywords = ""surgical simulation physical animation truth cube"", url = ""http://www-evasion.imag.fr/Publications/2005/NMPCPF05"" }; indices ordering (same as in HexahedronSetTopology): Y 7---------6; ^ / /|; |/ Z / |; 3----^----2 |; | / | |; | 4------|--5; | / | /; |/ |/; 0---------1-->X; . Classes; class  HexahedronInformation;  the information stored for each hexahedron More...;  . Public Attributes; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< HexahedronInformation > > hexahedronInfo;  ; Data< std::string > d_method;  ""large"" or ""polar"" displacements More...;  ; core::topology::HexahedronData< sofa::type::vector< HexahedronInformation > > d_hexahedronInfo;  container that stotes all requires information for each hexahedron More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Security,access,access,"< DataTypes >::~HexahedralFEMForceField. protectedvirtual . Function details. ◆ accumulateForceLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::accumulateForceLarge ; (; WDataRefVecDeriv & ; f, . RDataRefVecCoord & ; p, . const int ; i . ). protectedvirtual . ◆ accumulateForcePolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::accumulateForcePolar ; (; WDataRefVecDeriv & ; f, . RDataRefVecCoord & ; p, . const int ; i . ). protectedvirtual . ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::elastic::Hex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformation, including all inherited members. HexahedronInformation()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformationinline; materialMatrixsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformation; operator<<(std::ostream &os, const HexahedronInformation &)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformationfriend; operator>>(std::istream &in, HexahedronInformation &)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformationfriend; rotatedInitialElementssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformation; rotationsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformation; stiffnesssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::HexahedronInformation. Generated on Mon Nov 11 2024 02:56:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_1_1_hexahedron_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_1_1_hexahedron_information-members.html
Deployability,integrat,integrateStiffness,"odel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html
Integrability,integrat,integrateStiffness,"odel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >, including all inherited members. _coefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; _densitysofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _elementMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _elementTotalMasssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _lumpedMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _particleMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _useLumpedMasssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; accFromF(const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::accFromF(const MechanicalParams *mparams, MultiVecDerivId aid) overridesofa::core::behavior::Mass< DataTypes >virtual; accumulateForceLarge(WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; accumulateForcePolar(WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html
Performance,load,loader,"ctmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDensity(Real d)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::ForceField< DataTypes >::sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::ForceField< DataTypes >::sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; ForceField< DataTypes >::sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; sofa::core::beha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html
Testability,log,logging,"DataTypes >inline; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html
Usability,clear,clearLoggedMessages,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementMass(ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html
Availability,down,down,"s inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedralFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedralFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void addMBKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; void addForce (const core::MechanicalParams *mparams",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Energy Efficiency,energy,energy,"ticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; SReal getElementMass (sofa::Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Integrability,depend,dependent,"ons inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Modifiability,inherit,inherited," > > _elementMasses;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Real > > _elementTotalMass;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Real > > _particleMasses;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Coord > > _lumpedMasses;  ; Data< Real > d_density;  density == volumetric mass in english (kg.m-3) More...;  ; Data< bool > d_useLumpedMass;  Does it use lumped masses? More...;  ; core::topology::HexahedronData< sofa::type::vector< ElementMass > > d_elementMasses;  Mass matrices per element (M_i) More...;  ; core::topology::HexahedronData< sofa::type::vector< Real > > d_elementTotalMass;  Total mass per element. More...;  ; core::topology::PointData< sofa::type::vector< Real > > d_particleMasses;  Mass per particle. More...;  ; core::topology::PointData< sofa::type::vector< Coord > > d_lumpedMasses;  Lumped masses. More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Performance,perform,perform,"KToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Safety,recover,recover,"rride;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Security,access,access," it use lumped masses? . Constructor details. ◆ HexahedralFEMForceFieldAndMass(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::HexahedralFEMForceFieldAndMass. protected . Function details. ◆ accFromF(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::accFromF ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; a, . const DataVecDeriv & ; f . ). overridevirtual . Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >. ◆ addGravityToV(). template<class DataTypes > . void sofa::component::solidmech",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html
Deployability,integrat,integrateStiffness," *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html
Integrability,integrat,integrateStiffness," *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >, including all inherited members. _alreadyInitsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _coefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _elementStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _gatherBsizesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _gatherPtsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _initialPointssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _initialrotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _materialsStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _rotatedInitialElementssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _rotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _sparseGridsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _stiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; accumulateForceLarge(WDataRefVecDeriv &f, RDataRefVecCoord &p, sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedvirtual; accumulateForcePolar(WDataRefVecDeriv &f, RDataRefVecCoord &p, sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html
Performance,load,loader,"s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUpdateStiffnessMatrix(bool val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html
Testability,log,logging,"pes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseLinearElasticityFEMForceField()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; BaseObject()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"ofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inlinevirtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes, const sofa::Index elementIndice, double stiffnessFactor=1.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html
Availability,down,down," BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youngModulus instead"") DeprecatedAndRemoved f_youngModulus;  ; void setMethod (int val);  ; void setUpdateStiffnessMatrix (bool val);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; const Transformation & getElementRotation (const sofa::Index elemidx);  ; void getNodeRotation (Transformation &R, sofa::Index nodeIdx);  ; void getRotations (linearalgebra::BaseMatrix *rotations, int offset=0) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Deployability,update,updateInternal,"verride;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecMaterialStiffness _materialsStiffnesses;  the material stiffness matrices vector More...;  ; sofa::core::objectmodel::RenamedData< VecElementStiffness > _elementStiffnesses;  ; Data< VecElementStiffness > d_elementStiffnesses;  Stiffness matrices per element (K_i) More...;  ; CompressedMatrix _stiffnesses;  ; SReal m_potentialEnergy;  ; topology::container::grid::SparseGridTopology * _sparseGrid;  ; sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Modifiability,inherit,inherited,"updateStiffnessMatrix;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > _gatherPt;  ; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > _gatherBsize;  ; sofa::core::objectmodel::RenamedData< bool > f_drawing;  ; sofa::core::objectmodel::RenamedData< Real > f_drawPercentageOffset;  ; Data< std::string > d_method;  ""large"" or ""polar"" or ""small"" displacements More...;  ; Data< bool > d_updateStiffnessMatrix;  ; Data< sofa::helper::OptionsGroup > d_gatherPt;  number of dof accumulated per threads during the gather operation (Only use in GPU version) More...;  ; Data< sofa::helper::OptionsGroup > d_gatherBsize;  number of dof accumulated per threads during the gather operation (Only use in GPU version) More...;  ; Data< bool > d_drawing;  draw the forcefield if true More...;  ; Data< Real > d_drawPercentageOffset;  size of the hexa More...;  ; bool needUpdateTopology;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Security,access,access,"). protectedvirtual . ◆ accumulateForcePolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::accumulateForcePolar ; (; WDataRefVecDeriv & ; f, . RDataRefVecCoord & ; p, . sofa::Index ; i, . const Element & ; elem . ). protectedvirtual . ◆ accumulateForceSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::accumulateForceSmall ; (; WDataRefVecDeriv & ; f, . RDataRefVecCoord & ; p, . sofa::Index ; i, . const Element & ; elem . ). protectedvirtual . ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html
Deployability,integrat,integrateMass,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html
Integrability,integrat,integrateMass,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >, including all inherited members. _alreadyInitsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _coefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _elementStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _gatherBsizesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _gatherPtsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _initialPointssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _initialrotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _lumpedMassessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >protected; _materialsStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _particleMassessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >protected; _rotatedInitialElementssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _rotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _sparseGridsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _stiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; accFromF(const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) overridesofa::component::solidmechani",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html
Performance,load,loader,"ctmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDensity(Real d)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUpdateStiffnessMatrix(bool val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; sofa::ForceField< DataTypes >::sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::ForceField< DataTypes >::sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAcces",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html
Testability,log,logging,":solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html
Usability,clear,clearLoggedMessages,"aTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField::computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeElementMass(ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html
Availability,down,down,"core::objectmodel::RenamedData< VecElementStiffness > _elementStiffnesses;  ; Data< VecElementStiffness > d_elementStiffnesses;  Stiffness matrices per element (K_i) More...;  ; CompressedMatrix _stiffnesses;  ; SReal m_potentialEnergy;  ; topology::container::grid::SparseGridTopology * _sparseGrid;  ; sofa::core::objectmodel::RenamedData< VecCoord > _initialPoints;  ; Data< VecCoord > d_initialPoints;  Initial Position. More...;  ; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  ; HexahedronFEMForceFieldInternalData< DataTypes > * data;  ; type::vector< type::fixed_array< Coord, 8 > > _rotatedInitialElements;  The initials positions in its frame. More...;  ; type::vector< Transformation > _rotations;  ; type::vector< Transformation > _initialrotations;  ; bool _alreadyInit;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &of",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Deployability,integrat,integrateMass,") override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Energy Efficiency,energy,energy,"alParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Integrability,integrat,integrateMass,") override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Modifiability,inherit,inherited," > Class Template Reference . #include <HexahedronFEMForceFieldAndMass.h>. Inheritance diagram for sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; Compute Finite Element forces based on hexahedral elements including continuum mass matrices . Protected Attributes; Data< VecElementMass > d_elementMasses;  Mass matrices per element (M_i) More...;  ; Data< Real > d_density;  density == volumetric mass in english (kg.m-3) More...;  ; Data< bool > d_lumpedMass;  Does it use lumped masses? More...;  ; MassVector _particleMasses;  masses per particle in order to compute gravity More...;  ; type::vector< Coord > _lumpedMasses;  masses per particle computed by lumping mass matrices More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Performance,perform,perform," ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Safety,recover,recover,"r internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Security,access,access," it use lumped masses? . Constructor details. ◆ HexahedronFEMForceFieldAndMass(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::HexahedronFEMForceFieldAndMass. protected . Function details. ◆ accFromF(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::accFromF ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; a, . const DataVecDeriv & ; f . ). overridevirtual . Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformH",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldInternalData< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldInternalData< DataTypes >, including all inherited members. initPtrData(Main *m)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldInternalData< DataTypes >inline; Main typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldInternalData< DataTypes >. Generated on Mon Nov 11 2024 02:57:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_internal_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_internal_data-members.html
Deployability,update,updateInternal,"a::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(QuadBendingFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; Stiffness typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; StrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; vertexInfosofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >, including all inherited members. accumulateForceSmall(VecCoord &f, const VecCoord &p, Index elementIndex)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) overridesofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; add",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html
Performance,load,loader,"odel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >inline; setMethod(const std::string &methodName)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoisson(Real val)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoung(Real val)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html
Testability,log,logging,"st core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) overridesofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffness(VecCoord &f, Real h, const VecCoord &x, const SReal &kFactor)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protectedvirtual; applyStiffnessSmall(VecCoord &f, Real h, const VecCoord &x, const SReal &kFactor)sofa::component::sol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"ase; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeBendingMaterialStiffness(int i, Index &a, Index &b, Index &c, Index &d)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protectedvirtual; computeBendingStrainDisplacement(StrainDisplacement &Jb, Real gauss1, Real gauss2, Real l, Real h)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeDisplacementSmall(Displacement &D, Index elementIndex, const VecCoord &p)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeElementStiffness(Stiffness &K, Index elementIndex)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeForce(Displacement &F, Index elementIndex, Displacement &D)sofa::component::solidmechanics::fem::elastic::QuadBendingFE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html
Availability,down,down,"e events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void createQuadInformation (unsigned int quadIndex, QuadInformation &, const core::topology::BaseMeshTopology::Quad &t, const sofa::type::vector< unsigned int > &, const sofa::type::vector< SReal > &);  ; Real getPoisson ();  Get/Set methods. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Integrability,message,messages,"s;  Thickness of the elements. More...;  ; SingleLink< QuadBendingFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Modifiability,inherit,inherited,"gy * m_topology;  ; int method;  Forcefield intern parameters. More...;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_poisson;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_young;  ; sofa::core::objectmodel::RenamedData< Real > f_thickness;  ; Data< std::string > d_method;  large: large displacements, small: small displacements More...;  ; Data< type::vector< Real > > d_poisson;  Poisson ratio in Hooke's law (vector) More...;  ; Data< type::vector< Real > > d_young;  Young modulus in Hooke's law (vector) More...;  ; Data< Real > d_thickness;  Thickness of the elements. More...;  ; SingleLink< QuadBendingFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Performance,load,loader,"mber Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Security,access,access,"component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadBendingFEMForceField. protected . ForceField API. . ◆ ~QuadBendingFEMForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::~QuadBendingFEMForceField. overrideprotected . Function details. ◆ accumulateForceSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::accumulateForceSmall ; (; VecCoord & ; f, . const VecCoord & ; p, . Index ; elementIndex . ). protected . ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyStiffness(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::applyStiffness ; (; VecCoord & ; f, .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::EdgeInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::EdgeInformation, including all inherited members. EdgeInformation()sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::EdgeInformationinline; operator<<(std::ostream &os, const EdgeInformation &)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::EdgeInformationfriend; operator>>(std::istream &in, EdgeInformation &)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::EdgeInformationfriend. Generated on Mon Nov 11 2024 02:57:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field_1_1_edge_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field_1_1_edge_information-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation, including all inherited members. BendingmaterialMatrixsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; Bendingstiffnesssofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; differenceToCriteriasofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; InitialPosElementssofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; Intcentroidsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; Inthalfheightsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; Inthalflengthsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; IntheightElementsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; IntlengthElementsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformation; operator<<(std::ostream &os, const QuadInformation &)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformationfriend; operator>>(std::istream &in, QuadInformation &)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformationfriend; QuadInformation()sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::QuadInformationinline; ShearmaterialMatrixsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field_1_1_quad_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field_1_1_quad_information-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::VertexInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::VertexInformation, including all inherited members. operator<<(std::ostream &os, const VertexInformation &)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::VertexInformationfriend; operator>>(std::istream &in, VertexInformation &)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::VertexInformationfriend; VertexInformation()sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::VertexInformationinline. Generated on Mon Nov 11 2024 02:57:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field_1_1_vertex_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field_1_1_vertex_information-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation, including all inherited members. elemShapeFunsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation; initialTransformationsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation; materialMatrixsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation; operator<<(std::ostream &os, const TetrahedronInformation &)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformationfriend; operator>>(std::istream &in, TetrahedronInformation &)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformationfriend; rotatedInitialElementssofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation; rotationsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation; strainDisplacementTransposedMatrixsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformation; TetrahedronInformation()sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::TetrahedronInformationinline. Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_fo346cec34fd807c3c4d32ac67c4081456.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_fo346cec34fd807c3c4d32ac67c4081456.html
Deployability,update,updateInternal,"reResetState()sofa::core::objectmodel::BaseObjectvirtual; StrainDisplacementTransposed typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; TetrahedralCorotationalFEMForceField()sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >protected; tetrahedronInfosofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >, including all inherited members. _assemblingsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; _displayWholeVolumesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; _localStiffnessFactorsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; _poissonRatiosofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; _stiffnessessofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; _topologysofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; _updateStiffnessMatrixsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; _volumeGraphsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; accumulateForceLarge(Vector &f, const Vector &p, Index elementIndex)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >protected; accumulateForcePolar(Vector &f, const Vector &p, Index elementIndex)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >protected; accumulateForceSmall(Vector &f, const Vector &p, Index elementIndex)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mpar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html
Performance,load,loader,"mputeGlobalMatrix(bool val)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUpdateStiffnessMatrix(bool val)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inline; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleSta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html
Testability,log,logging," &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffnessLarge(Vector &f, const Vector &x, int i=0, Index a=0, Index b=1, Index c=2, Index d=3, SReal fact=1.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacementTransposed &J)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inlineprotected; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacementTransposed &J, SReal fact)sofa::component::solidmechanics::fem::elastic::Tet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html
Availability,down,down,"tring > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralCorotationalFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youngModulus instead"") DeprecatedAndRemoved _youngModulus;  ; void setMethod (int val);  ; void setUpdateStiffnessMatrix (bool val);  ; void setComputeGlobalMatrix (bool val);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void getRotation (Transformation &R, Index nodeIdx);  ; void getRotations ();  ; void getElementRotation (Transformation",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralCorotationalFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youngModulus instead"") DeprecatedAndRemoved _youngModulus;  ; void setMethod (int val);  ; void setUpdateStiffnessMatrix (bool val);  ; void setComputeGlobalMatrix (bool val);  ; void init () override;  Initialization m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Modifiability,inherit,inherited,"fnessFactor[i*M/N]. More...;  ; Data< bool > d_updateStiffnessMatrix;  ; Data< bool > d_assembling;  ; Data< bool > d_drawing;  draw the forcefield if true More...;  ; Data< bool > _displayWholeVolume;  ; Data< sofa::type::RGBAColor > d_drawColor1;  draw color for faces 1 More...;  ; Data< sofa::type::RGBAColor > d_drawColor2;  draw color for faces 2 More...;  ; Data< sofa::type::RGBAColor > d_drawColor3;  draw color for faces 3 More...;  ; Data< sofa::type::RGBAColor > d_drawColor4;  draw color for faces 4 More...;  ; Data< std::map< std::string, sofa::type::vector< double > > > _volumeGraph;  ; Data< bool > d_computeVonMisesStress;  ; Data< type::vector< Real > > d_vonMisesPerElement;  von Mises Stress per element More...;  ; Data< type::vector< Real > > d_vonMisesPerNode;  von Mises Stress per node More...;  ; sofa::helper::ColorMap * m_vonMisesColorMap;  ; Real prevMaxStress = -1.0;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Security,access,access,"; f, . const Vector & ; p, . Index ; elementIndex . ). protected . ◆ accumulateForcePolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::accumulateForcePolar ; (; Vector & ; f, . const Vector & ; p, . Index ; elementIndex . ). protected . ◆ accumulateForceSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::accumulateForceSmall ; (; Vector & ; f, . const Vector & ; p, . Index ; elementIndex . ). protected . ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::addKToMatrix ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html
Deployability,update,updateInternal,"mponent::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; TetrahedronFEMForceField()sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; TetrahedronFEMForceFieldInternalData< DataTypes > classsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >friend; TetrahedronID typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVonMisesStresssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >, including all inherited members. _assemblingsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _computeVonMisesStresssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _gatherBsizesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _gatherPtsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _indexedElementssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; _initialPointssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _initialRotationssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; _initialTransformationsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; _localStiffnessFactorsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _plasticCreepsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _plasticMaxThresholdsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _plasticStrainssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; _plasticYieldThresholdsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _poissonRatiosofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; _rotatedInitialElementssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; _rotationIdxsofa::component::solidmechanics::fem::elastic",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html
Performance,load,loader,"orceField< DataTypes >inline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(std::string methodName)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; setMethod(int val)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUpdateStiffnessMatrix(bool val)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >inline; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRAC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html
Testability,log,logging,"FEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0sofa::core::behavior::ForceField< DataTypes >pure virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffnessCorotational(Vector &f, const Vector &x, Index i=0, Index a=0, Index b=1, Index c=2, Index d=3, SReal fact=1.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"dmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; computeForce(Displacement &F, const Displacement &Depl, VoigtTensor &plasticStrain, const MaterialStiffness &K, const StrainDisplacement &J)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >inlineprotected; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacement &J, SReal fact)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html
Availability,down,down,"sticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::RotationFinder, DataTypes));  ; Real getRestVolume ();  ; void getRotation (Mat33 &R, Index nodeIdx);  ; void getRotations (VecReal &vecR);  ; void getRotations (linearalgebra::BaseMatrix *rotations, int offset=0) override;  ; const type::vector< Mat33 > & getRotations () override;  ; void setComputeGlobalMatrix (bool val);  ; const Transformation & getActualTetraRotation (Index index);  ; const Transformation & getInitialTetraRotation (Index index);  ; const MaterialStiffness & getMaterialStiffness (TetrahedronID tetraId);  ; const StrainDisplacement & getStrainDisplacement (TetrahedronID tetraId);  ; const type::fixed_array< Coord, 4 > & getRotatedInitialElements (TetrahedronID tetraId);  ; void setMethod (std::string methodName);  ; void setMethod (int val);  ; void setUpdateStiffnessMatrix (bool val);  ; void reset () override;  Reset to initial state. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &x) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) overri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Deployability,update,update,"enamedData< bool > _showVonMisesStressPerNode;  ; core::objectmodel::RenamedData< bool > _showVonMisesStressPerNodeColorMap;  ; core::objectmodel::RenamedData< bool > _showVonMisesStressPerElement;  ; core::objectmodel::RenamedData< bool > _updateStiffness;  ; Data< std::string > d_showStressColorMap;  Color map used to show stress values. More...;  ; Data< float > d_showStressAlpha;  Alpha for vonMises visualisation. More...;  ; Data< bool > d_showVonMisesStressPerNode;  draw points showing vonMises stress interpolated in nodes More...;  ; Data< bool > d_showVonMisesStressPerNodeColorMap;  draw elements showing vonMises stress interpolated in nodes More...;  ; Data< bool > d_showVonMisesStressPerElement;  draw triangles showing vonMises stress interpolated in elements More...;  ; Data< Real > d_showElementGapScale;  draw gap between elements (when showWireFrame is disabled) [0,1]: 0: no gap, 1: no element More...;  ; Data< bool > d_updateStiffness;  update structures (precomputed in init) using stiffness parameters in each iteration (set listening=1) More...;  ; type::vector< type::Vec< 6, Real > > elemDisplacements;  ; bool updateVonMisesStress;  ; Plasticity such as ""Interactive Virtual Materials"", Muller & Gross, GI 2004; Data< Real > d_plasticMaxThreshold;  ; Data< Real > d_plasticYieldThreshold;  Plastic Yield Threshold (2-norm of the strain) More...;  ; Data< Real > d_plasticCreep;  Plastic Creep Factor * dt [0,1]. Warning this factor depends on dt. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Integrability,depend,depends,"tressPerNode;  draw points showing vonMises stress interpolated in nodes More...;  ; Data< bool > d_showVonMisesStressPerNodeColorMap;  draw elements showing vonMises stress interpolated in nodes More...;  ; Data< bool > d_showVonMisesStressPerElement;  draw triangles showing vonMises stress interpolated in elements More...;  ; Data< Real > d_showElementGapScale;  draw gap between elements (when showWireFrame is disabled) [0,1]: 0: no gap, 1: no element More...;  ; Data< bool > d_updateStiffness;  update structures (precomputed in init) using stiffness parameters in each iteration (set listening=1) More...;  ; type::vector< type::Vec< 6, Real > > elemDisplacements;  ; bool updateVonMisesStress;  ; Plasticity such as ""Interactive Virtual Materials"", Muller & Gross, GI 2004; Data< Real > d_plasticMaxThreshold;  ; Data< Real > d_plasticYieldThreshold;  Plastic Yield Threshold (2-norm of the strain) More...;  ; Data< Real > d_plasticCreep;  Plastic Creep Factor * dt [0,1]. Warning this factor depends on dt. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Modifiability,inherit,inherited,"orMap;  draw elements showing vonMises stress interpolated in nodes More...;  ; Data< bool > d_showVonMisesStressPerElement;  draw triangles showing vonMises stress interpolated in elements More...;  ; Data< Real > d_showElementGapScale;  draw gap between elements (when showWireFrame is disabled) [0,1]: 0: no gap, 1: no element More...;  ; Data< bool > d_updateStiffness;  update structures (precomputed in init) using stiffness parameters in each iteration (set listening=1) More...;  ; type::vector< type::Vec< 6, Real > > elemDisplacements;  ; bool updateVonMisesStress;  ; Plasticity such as ""Interactive Virtual Materials"", Muller & Gross, GI 2004; Data< Real > d_plasticMaxThreshold;  ; Data< Real > d_plasticYieldThreshold;  Plastic Yield Threshold (2-norm of the strain) More...;  ; Data< Real > d_plasticCreep;  Plastic Creep Factor * dt [0,1]. Warning this factor depends on dt. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (us",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Security,access,access,"ate<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; d_df, . const DataVecDeriv & ; d_dx . ). inlineoverride . ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; d_f, . const DataVecCoord & ; d_x, . const DataVecDeriv & ; d_v . ). inlineoverride . ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::addKToMatrix ; (; sofa::linearalgebra::BaseMatrix * ; matrix, . SReal ; kFact, . unsigned int & ; offset . ). overridevirtual . Internal addKToMatrix Overloaded function, usually called from the generic addKToMatrix version. This addKToMatrix version directly gives access to the matrix to fill, the stiffness factor and the offset used to identify where the force field must add its contributions in the matrix. Parameters. matrixthe global stiffness matrix in which the force field adds its contribution. The matrix is global, i.e. different objects can add their contribution into the same large matrix. Each object adds its contribution to a different section of the matrix. That is why, an offset is used to identify where in the matrix the force field must start adding its contribution. ; kFactstiffness factor that needs to be multiplied to each matrix entry. ; offsetStarting index of the submatrix to fill in the global matrix. . Reimplemented from sofa::core::behavior::ForceField< DataTypes >. ◆ applyStiffnessCorotational(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::applyStiffnessCorotational ; (; Vector & ; f, . const Vector & ; x, . Index ; i = 0, . Index ; a = 0, . Index ; b = 1, . Index ; c = 2, . Index ; d = 3, . SReal",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceFieldInternalData< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceFieldInternalData< DataTypes >, including all inherited members. initPtrData(Main *m)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceFieldInternalData< DataTypes >inline; Main typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceFieldInternalData< DataTypes >. Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field_internal_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field_internal_data-members.html
Deployability,update,updateInternal,":Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; StiffnessMatrix typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; StrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; TriangleFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >, including all inherited members. _indexedElementssofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; _initialPointssofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; _materialsStiffnessessofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; _rotatedInitialElementssofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; _rotationssofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; _strainDisplacementssofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; accumulateForceLarge(VecCoord &f, const VecCoord &p, bool implicit=false)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; accumulateForceSmall(VecCoord &f, const VecCoord &p, bool implicit=false)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html
Performance,load,loader,"ofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; setMethod(std::string val)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALLsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >static; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLAS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html
Testability,log,logging,"d< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffness(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protectedvirtual; applyStiffnessLarge(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidmec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"olidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >virtual; computeElementStiffnessMatrix(StiffnessMatrix &S, StiffnessMatrix &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; computeMaterialStiffnesses()sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_initialPointssofa::component::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html
Availability,down,down,"herited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangleFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int SMALL = 1;  Symbol of small displacements triangle solver. More...;  ; static const int LARGE = 0;  Symbol of large displacements triangle solver. More...;  . Protected Attributes; VecMaterialStiffness _materialsStiffnesses;  the material stiffness matrices vector More...;  ; VecStrainDisplacement _strainDisplacements;  the strain-displacement matrices vector More...;  ; const VecElement",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Modifiability,inherit,inherited,"ments. The material properties are uniform across the domain. Two methods are proposed, one for small displacements and one for large displacements. The method for small displacements has not been validated and we suspect that it is broke. Use it very carefully, and compare with the method for large displacements. . Public Attributes; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poisson;  ; sofa::core::objectmodel::RenamedData< Real > f_young;  ; sofa::core::objectmodel::RenamedData< Real > f_thickness;  ; sofa::core::objectmodel::RenamedData< bool > f_planeStrain;  ; Data< std::string > d_method;  large: large displacements, small: small displacements More...;  ; Data< Real > d_thickness;  Thickness of the elements. More...;  ; Data< bool > d_planeStrain;  Plane strain or plane stress assumption. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Security,validat,validated,"erence. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes > Class Template Reference . #include <TriangleFEMForceField.h>. Inheritance diagram for sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; Triangle FEM force field using the QR decomposition of the deformation gradient, inspired from http://www-evasion.imag.fr/Publications/2005/NPF05 , to handle large displacements. The material properties are uniform across the domain. Two methods are proposed, one for small displacements and one for large displacements. The method for small displacements has not been validated and we suspect that it is broke. Use it very carefully, and compare with the method for large displacements. . Public Attributes; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poisson;  ; sofa::core::objectmodel::RenamedData< Real > f_young;  ; sofa::core::objectmodel::RenamedData< Real > f_thickness;  ; sofa::core::objectmodel::RenamedData< bool > f_planeStrain;  ; Data< std::string > d_method;  large: large displacements, small: small displacements More...;  ; Data< Real > d_thickness;  Thickness of the elements. More...;  ; Data< bool > d_planeStrain;  Plane strain or plane stress assumption. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >, including all inherited members. computeDisplacementLarge(Displacement &D, const Transformation &R_0_2, const type::fixed_array< Coord, 3 > &rotatedInitCoord, const Coord &pA, const Coord &pB, const Coord &pC) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; computeDisplacementSmall(Displacement &D, const type::fixed_array< Coord, 3 > &rotatedInitCoord, const Coord &pAB, const Coord &pAC) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; computeForceLarge(Displacement &F, const StrainDisplacement &J, const type::Vec< 3, Real > &stress) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; computeRotationLarge(Transformation &r, const Coord &pA, const Coord &pB, const Coord &pC) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; computeStrain(type::Vec< 3, Real > &strain, const StrainDisplacement &J, const Displacement &D, bool fullMethod=false) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; computeStrainDisplacementGlobal(StrainDisplacement &J, const Coord &pA, const Coord &pB, const Coord &pC) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; computeStrainDisplacementLocal(StrainDisplacement &J, const Coord &pB, const Coord &pC) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; computeStress(type::Vec< 3, Real > &stress, const MaterialStiffness &K, const type::Vec< 3, Real > &strain, bool fullMethod=false) constsofa::component::solidmechanics::fem::elastic::TriangleFEMUtils< DataTypes >; Coord typedefsofa::component::solidmechanics::fem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_utils-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_utils-members.html
Deployability,update,updateInternal,cs::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; TriangleFiberDirection typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; triangleInfosofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TriangleInformation typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; TrianglesAroundVertex typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TriangularAnisotropicFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >protected; TriangularFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >, including all inherited members. _anisotropicMaterialsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; accumulateForceLarge(VecCoord &f, const VecCoord &p)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; accumulateForceSmall(VecCoord &f, const VecCoord &p)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html
Performance,load,loader,"odel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; setMethod(const std::string &methodName)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; showFibersofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; showFracturableTrianglessofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; showStressValuesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; showStressVectorsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html
Testability,log,logging," DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffness(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protectedvirtual; applyStiffnessLarge(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"idmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffnessMatrix(type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeMaterialStiffness(int i, Index &a, Index &b, Index &c) overridesofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >virtual; computePrincipalStrain(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computePrincipalStress(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computeStiffness(Stiffness &K, const StrainDisplacement ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html
Availability,down,down,"vents, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularAnisotropicFEMForceField, DataTypes), SOFA_TEMPLATE(TriangularFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeMaterialStiffness (int i, Index &a, Index &b, Index &c) override;  ; void getFiberDir (int element, Deriv &dir);  ; void createTriangleInfo (Index triangleIndex, TriangleFiberDirection &, const core::topology::BaseMeshTopology::Triangle &t, const sofa::type::vector< unsigned int > &, const sofa::type::vector< SReal > &);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularAnisotropicFEMForceField, DataTypes), SOFA_TEMPLATE(TriangularFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualPa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html
Modifiability,inherit,inherited,"medData< VecCoord > f_fiberCenter;  ; sofa::core::objectmodel::RenamedData< bool > showFiber;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< TriangleFiberDirection > > localFiberDirection;  ; Data< type::vector< Real > > f_poisson2;  ; Data< type::vector< Real > > d_young2;  Young modulus along transverse direction. More...;  ; Data< Real > d_theta;  Fiber angle in global reference frame (in degrees) More...;  ; Data< VecCoord > d_fiberCenter;  Concentric fiber center in global reference frame. More...;  ; Data< bool > d_showFiber;  Flag activating rendering of fiber directions within each triangle. More...;  ; core::topology::TriangleData< sofa::type::vector< TriangleFiberDirection > > d_localFiberDirection;  Computed fibers direction within each triangle. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; sofa::core::objectmodel::RenamedData< sofa::type::vector< TriangleInformation > > triangleInfo;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< VertexInformation > > vertexInfo;  ; core::topology::TriangleData< sofa::type::vector< TriangleInformation > > d_triangleInfo;  Topology Data. More...;  ; core::topology::PointData< sofa::type::vector< VertexInformation > > d_vertexInfo;  Internal point data. More...;  ; int method;  Forcefield intern parameters. More...;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_poisson;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_young;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< type::fixed_array< Coord, 3 > > > m_rotatedInitialElements;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Transformation > > m_initialTransformation;  ; sofa::core::objectmodel::RenamedData< Real > hosfordExponant;  ; sofa::core::objectmodel::RenamedData< Real > criteriaValue;  ; sofa::core::objectmodel::RenamedData<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html
Deployability,update,updateInternal,"al; StrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; triangleInfosofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TrianglesAroundVertex typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TriangularFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >, including all inherited members. _anisotropicMaterialsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; accumulateForceLarge(VecCoord &f, const VecCoord &p)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; accumulateForceSmall(VecCoord &f, const VecCoord &p)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) overridesofa::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html
Performance,load,loader,"odel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; setMethod(const std::string &methodName)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; showFracturableTrianglessofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; showStressValuesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; showStressVectorsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html
Testability,log,logging," DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffness(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protectedvirtual; applyStiffnessLarge(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"idmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffnessMatrix(type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeMaterialStiffness(int i, Index &a, Index &b, Index &c)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protectedvirtual; computePrincipalStrain(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computePrincipalStress(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computeStiffness(Stiffness &K, const StrainDisplacement &J, const M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html
Availability,down,down,"erited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void computeElementStiffnessMatrix (type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot);  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Deployability,update,updateMatrix,"td::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool _anisotropicMaterial;  ; bool updateMatrix;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Integrability,message,messages,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool _anisotropicMaterial;  ; bool updateMatrix;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Modifiability,inherit,inherited,"mall displacements More...;  ; Data< sofa::type::vector< type::fixed_array< Coord, 3 > > > d_rotatedInitialElements;  Initial strain parameters (if FEM is initialised with predefine values) More...;  ; Data< sofa::type::vector< Transformation > > d_initialTransformation;  Flag activating rendering of stress directions within each triangle. More...;  ; Data< Real > d_hosfordExponant;  Fracture parameters. More...;  ; Data< Real > d_criteriaValue;  Fracturable threshold used to draw fracturable triangles. More...;  ; Data< bool > d_showStressValue;  Display parameters. More...;  ; Data< bool > d_showStressVector;  Flag activating rendering of stress directions within each triangle. More...;  ; Data< bool > d_showFracturableTriangles;  Flag activating rendering of triangles to fracture. More...;  ; Data< bool > d_computePrincipalStress;  Compute principal stress for each triangle. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Security,access,access,"a::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::~TriangularFEMForceField. overrideprotected . Function details. ◆ accumulateForceLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::accumulateForceLarge ; (; VecCoord & ; f, . const VecCoord & ; p . ). protected . ◆ accumulateForceSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::accumulateForceSmall ; (; VecCoord & ; f, . const VecCoord & ; p . ). protected . ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::addKToMatrix ; (; sofa::linearalgebra::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation, including all inherited members. areasofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; differenceToCriteriasofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; initialTransformationsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; lastNStressDirectionsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; materialMatrixsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; maxStrainsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; maxStresssofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; operator<<(std::ostream &os, const TriangleInformation &)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformationfriend; operator>>(std::istream &in, TriangleInformation &)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformationfriend; principalStrainDirectionsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; principalStressDirectionsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; rotatedInitialElementssofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::TriangleInformation; rotationsofa::component::solidmechanics::fe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_1_1_triangle_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_1_1_triangle_information-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformation, including all inherited members. meanStrainDirectionsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformation; operator<<(std::ostream &os, const VertexInformation &)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformationfriend; operator>>(std::istream &in, VertexInformation &)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformationfriend; rotationsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformation; stresssofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformation; sumEigenValuessofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformation; VertexInformation()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::VertexInformationinline. Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_1_1_vertex_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_1_1_vertex_information-members.html
Deployability,update,updateInternal,"or::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >protected; Triangle typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; TrianglesAroundVertex typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; TriangularFEMForceFieldOptim()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; VecTriangleInfo typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; VecTriangleState typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOpt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html
Performance,load,loader,"jectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularFEMForceFieldOptim, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html
Testability,log,logging,"virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseLinearElasticityFEMForceField()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; BaseObject()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html
Usability,clear,clearLoggedMessages,"hanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; computeMuGamma(Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >protectedstatic; computePrincipalStress()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; computeTriangleRotation(Transformation &result, Coord eab, Coord eac)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, Coord a, Coord b, Coord c)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, VecCoord &x0, Triangle t)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; Coord type",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html
Availability,down,down,"ited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceFieldOptim, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void computePrincipalStress ();  ; void getTrianglePrincipalStress (Index i, Real &stressValue, Deriv &stressDirection);  ; void comput",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Integrability,depend,dependent,"nent::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; corotational triangle from @InProceedings{NPF05, author = ""Nesme, Matthieu and Payan, Yohan and Faure, Fran\c{c}ois"", title = ""Efficient, Physically Plausible Finite Elements"", booktitle = ""Eurographics (short papers)"", month = ""august"", year = ""2005"", editor = ""J. Dingliana and F. Ganovelli"", keywords = ""animation, physical model, elasticity, finite elements"", url = ""http://www-evasion.imag.fr/Publications/2005/NPF05"" } . Classes; class  TriangleInfo;  Class to store FEM information on each triangle, for topology modification handling. More...;  ; class  TriangleState;  . Public Attributes; core::topology::TriangleData< VecTriangleInfo > d_triangleInfo;  Internal triangle data (persistent) More...;  ; core::topology::TriangleData< VecTriangleState > d_triangleState;  Internal triangle data (time-dependent) More...;  ; Data< Real > d_damping;  Forcefield intern parameters. More...;  ; Data< Real > d_restScale;  Scale factor applied to rest positions (to simulate pre-stretched materials) More...;  ; Data< bool > d_computePrincipalStress;  Compute principal stress for each triangle. More...;  ; Data< Real > d_stressMaxValue;  Max stress value computed over the triangulation. More...;  ; Data< bool > d_showStressVector;  Display parameters. More...;  ; Data< Real > d_showStressThreshold;  Threshold value to render only stress vectors higher to this threshold. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Modifiability,inherit,inherited," on each triangle, for topology modification handling. More...;  ; class  TriangleState;  . Public Attributes; core::topology::TriangleData< VecTriangleInfo > d_triangleInfo;  Internal triangle data (persistent) More...;  ; core::topology::TriangleData< VecTriangleState > d_triangleState;  Internal triangle data (time-dependent) More...;  ; Data< Real > d_damping;  Forcefield intern parameters. More...;  ; Data< Real > d_restScale;  Scale factor applied to rest positions (to simulate pre-stretched materials) More...;  ; Data< bool > d_computePrincipalStress;  Compute principal stress for each triangle. More...;  ; Data< Real > d_stressMaxValue;  Max stress value computed over the triangulation. More...;  ; Data< bool > d_showStressVector;  Display parameters. More...;  ; Data< Real > d_showStressThreshold;  Threshold value to render only stress vectors higher to this threshold. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Security,access,access,"&stressValue, Deriv &stressDirection);  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void createTriangleInfo (Index triangleIndex, TriangleInfo &, const Triangle &t, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ; void createTriangleState (Index triangleIndex, TriangleState &, const Triangle &t, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ; void initTriangleInfo (Index triangleIndex, TriangleInfo &ti, const Triangle t, const VecCoord &x0);  ; void initTriangleState (Index triangleIndex, TriangleState &ti, const Triangle t, const VecCoord &x);  ; void computeTriangleRotation (Transformation &result, Coord eab, Coord eac);  ; void computeTriangleRotation (Transformation &result, Coord a, Coord b, Coord c);  ; void computeTriangleRotation (Transformation &result, VecCoord &x0, Triangle t);  ; void getTriangleVonMisesStress (Index i, Real &stressValue);  ; void getTrianglePrincipalStress (Index i, Real &stressValue, Deriv &stressDirection, Real &stressValue2, Deriv &stressDirection2);  ; type::fixed_array< Coord, 3 > getRotatedInitialElement (Index elemId);  Public methods to access FEM information per element. Those method should not be used internally as they add check on element id. More...;  ; Transformation getRotationMatrix (Index elemId);  ; MaterialStiffness getMaterialStiffness (Index elemId);  ; type::Vec3 getStrainDisplacementFactors (Index elemId);  ; Real getTriangleFactor (Index elemId);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >;  SOFA_CLASS ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo, including all inherited members. bxsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; cxsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; cysofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; init_framesofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; operator<<(std::ostream &os, const TriangleInfo &ti)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfofriend; operator>>(std::istream &in, TriangleInfo &ti)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfofriend; ss_factorsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; stresssofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; stress2sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; stressVectorsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; stressVector2sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfo; TriangleInfo()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleInfoinline. Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim_1_1_triangle_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim_1_1_triangle_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleState Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleState, including all inherited members. framesofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleState; operator<<(std::ostream &os, const TriangleState &ti)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleStatefriend; operator>>(std::istream &in, TriangleState &ti)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleStatefriend; stresssofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleState; TriangleState()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangleStateinline. Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim_1_1_triangle_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim_1_1_triangle_state-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptimInternalData< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptimInternalData< DataTypes >, including all inherited members. Main typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptimInternalData< DataTypes >; reinit(Main *)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptimInternalData< DataTypes >inline. Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim_internal_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim_internal_data-members.html
Deployability,update,updateInternal,":core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMaterial() overridesofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html
Performance,load,loader,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html
Usability,clear,clearLoggedMessages,"model::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDStress(type::Vec3 &, type::Vec3 &)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinlinevirtual; computeStress(type::Vec3 &, type::Vec3 &, unsigned int &)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinlinevirtual; computeStress(unsigned int)=0sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialpure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParam",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html
Availability,down,down,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial Class Referenceabstract . #include <BaseMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial:. [legend]; Detailed Description; Generic material class . Public Member Functions;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeStress (type::Vec3 &, type::Vec3 &, unsigned int &);  ; virtual void computeDStress (type::Vec3 &, type::Vec3 &);  ; virtual void computeStress (unsigned int)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html
Integrability,depend,dependent,"enceabstract . #include <BaseMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial:. [legend]; Detailed Description; Generic material class . Public Member Functions;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeStress (type::Vec3 &, type::Vec3 &, unsigned int &);  ; virtual void computeDStress (type::Vec3 &, type::Vec3 &);  ; virtual void computeStress (unsigned int)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial Class Referenceabstract . #include <BaseMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial:. [legend]; Detailed Description; Generic material class . Public Member Functions;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeStress (type::Vec3 &, type::Vec3 &, unsigned int &);  ; virtual void computeDStress (type::Vec3 &, type::Vec3 &);  ; virtual void computeStress (unsigned int)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html
Performance,load,loader,";  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeStress (type::Vec3 &, type::Vec3 &, unsigned int &);  ; virtual void computeDStress (type::Vec3 &, type::Vec3 &);  ; virtual void computeStress (unsigned int)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor)sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral)sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor)sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param)sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >; Namesofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >static; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >; ~HyperelasticMaterial()sofa::component::solidmechanics::fem::hyperel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda-members.html
Deployability,configurat,configuration,", MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::Name = ""ArrudaBoyce"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlinevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMateri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes > Class Template Reference . #include <BoyceAndArruda.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""ArrudaBoyce"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hype",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html
Integrability,depend,depends,"e. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes > Class Template Reference . #include <BoyceAndArruda.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""ArrudaBoyce"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. templa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html
Modifiability,inherit,inherited," a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""ArrudaBoyce"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::Name = ""ArrudaBoyce"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the cur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor)sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral)sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor)sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param)sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >; Namesofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >static; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >; ~HyperelasticMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 03:01",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa-members.html
Deployability,configurat,configuration,"t MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::Name = ""Costa"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlinevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes > Class Template Reference . #include <Costa.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""Costa"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html
Integrability,depend,depends," DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes > Class Template Reference . #include <Costa.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""Costa"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<cla",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html
Modifiability,inherit,inherited,"pes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""Costa"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::Name = ""Costa"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Rei",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &, const MatrixSym &, MatrixSym &)sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &, MatrixSym &)sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &, Matrix6 &)sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &)sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; ~HyperelasticMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 03:02:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material-members.html
Deployability,configurat,configuration," > &, Matrix6 &);  . Constructor details. ◆ ~HyperelasticMaterial(). template<class DataTypes > . virtual sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::~HyperelasticMaterial ; (; ). inlinevirtual . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >, and sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >, sofa::component::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes > Class Template Reference . #include <HyperelasticMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; a Class that describe a generic hyperelastic material . The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. . Public Member Functions; virtual ~HyperelasticMaterial ();  ; virtual Real getStrainEnergy (StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &, MatrixSym &);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &, const MatrixSym &, MatrixSym &);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &, Matrix6 &);  . Constructor details. ◆ ~HyperelasticMaterial(). template<class DataTypes > . virtual sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::~HyperelasticMaterial ; (; ). inlinevirtual . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::applyElasticityTe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html
Modifiability,config,configuration," > &, Matrix6 &);  . Constructor details. ◆ ~HyperelasticMaterial(). template<class DataTypes > . virtual sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::~HyperelasticMaterial ; (; ). inlinevirtual . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >, and sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >, sofa::component::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) overridesofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) overridesofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >; Namesofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >static; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >; ~HyperelasticMaterial()sofa::component::solidmechanics",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin-members.html
Deployability,configurat,configuration,"xSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >::Name = ""MooneyRivlin"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes > Class Template Reference . #include <MooneyRivlin.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""MooneyRivlin"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html
Integrability,depend,depends,"Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes > Class Template Reference . #include <MooneyRivlin.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""MooneyRivlin"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html
Modifiability,inherit,inherited,"Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""MooneyRivlin"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >::Name = ""MooneyRivlin"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the curr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) overridesofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) overridesofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >; Namesofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >static; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >; ~HyperelasticMaterial()sofa::component::solidmechanics::fem::hyperelastic::m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean-members.html
Deployability,configurat,configuration," MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::Name = ""NeoHookean"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . MatrixSym & ; SPKTensorGeneral . ). inlineoverridevirtual . Compute the second Piola-Kirchhoff stress tensor in terms of the right Cauchy-Green deformation tensor ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html
Energy Efficiency,energy,energy," const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . MatrixSym & ; SPKTensorGeneral . ). inlineoverridevirtual . Compute the second Piola-Kirchhoff stress tensor in terms of the right Cauchy-Green deformation tensor ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param . ). inlineoverridevirtual . Strain energy density function for a compressible Neo-Hookean material, taken from: ""Javier Bonet and Richard D Wood. 2008. Nonlinear continuum mechanics for; finite element analysis. Cambridge University Press"" ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsolidmechanicsfemhyperelasticmaterialNeoHookean; Generated on Mon Nov 11 2024 03:02:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html
Modifiability,inherit,inherited,"tion. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes > Class Template Reference . #include <NeoHookean.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >; Compressible Neo-Hookean material . Static Public Attributes; static constexpr std::string_view Name = ""NeoHookean"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::Name = ""NeoHookean"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; CoordEigen typedefsofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) overridesofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >inlinevirtual; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >; ElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) overridesofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >; Namesofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >static; Real typedefsofa::compon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden-members.html
Deployability,configurat,configuration,"m &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::Name = ""Ogden"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes > Class Template Reference . #include <Ogden.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""Ogden"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html
Integrability,depend,depends," DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes > Class Template Reference . #include <Ogden.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""Ogden"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html
Modifiability,inherit,inherited,"s >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""Ogden"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::Name = ""Ogden"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; R",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html
Deployability,update,updateInternal,"l::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; SOFA_CLASS(PlasticMaterial, BaseMaterial)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial::SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecDouble typedefsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStress typedefsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMaterial() overridesofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial, including all inherited members. _Esofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _epsilonsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _poissonRatiosofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _previousVonMisesStrainsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _sigmasofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _youngModulussofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html
Performance,load,loader,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; SOFA_CLASS(PlasticMaterial, BaseMaterial)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial::SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html
Testability,log,logging," _Esofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _epsilonsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _poissonRatiosofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _previousVonMisesStrainsofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _sigmasofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; _youngModulussofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html
Usability,clear,clearLoggedMessages,"model::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDStress(Vec3 &dstress, Vec3 &dstrain) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialvirtual; computeStress(Vec3 &stress, Vec3 &strain, unsigned int &elementIndex) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialvirtual; computeStress(unsigned int) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialinlinevirtual; computeStressOnSection(Vec3 &Stress, Vec3 Strain, int section)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; computeVonMisesStrain(Vec3 &strain)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html
Availability,down,down,"f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PlasticMaterial, BaseMaterial);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  PlasticMaterial ();  ; void computeStress (Vec3 &stress, Vec3 &strain, unsigned int &elementIndex) override;  ; void computeDStress (Vec3 &dstress, Vec3 &dstrain) override;  ; SReal computeVonMisesStrain (Vec3 &strain);  ; void computeStressOnSection (Vec3 &Stress, Vec3 Strain, int section);  ; void computeStress (unsigned int) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html
Integrability,message,messages," of all members . sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial Class Reference . #include <PlasticMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial:. [legend]; Detailed Description; Plastic material (proof of principle) . Public Attributes; Data< SReal > _poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< SReal > _youngModulus;  Young modulus in Hooke's law. More...;  ; VecDouble _E;  ; VecDouble _epsilon;  ; VecStress _sigma;  ; VecDouble _previousVonMisesStrain;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PlasticMaterial, BaseMaterial);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  PlasticMaterial ();  ; void computeStress (Vec3 &stress, Vec3 &strain, unsigned int &elementIndex) override;  ; void computeDStress (Vec3 &dstress, Vec3 &dstrain) override;  ; SReal computeVonMisesStrain (Vec3 &strain);  ; void computeStressOnSection (Vec3 &Stress, Vec3 Strain, int section",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial Class Reference . #include <PlasticMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial:. [legend]; Detailed Description; Plastic material (proof of principle) . Public Attributes; Data< SReal > _poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< SReal > _youngModulus;  Young modulus in Hooke's law. More...;  ; VecDouble _E;  ; VecDouble _epsilon;  ; VecStress _sigma;  ; VecDouble _previousVonMisesStrain;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PlasticMaterial, BaseMaterial);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  PlasticMaterial ();  ; void computeStress (Vec3 &stress, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html
Performance,load,loader,"verride;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) overridesofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) overridesofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >; Namesofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >static; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >; ~Hyper",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean-members.html
Deployability,configurat,configuration,"Tensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::Name = ""StableNeoHookean"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . MatrixSym & ; SPKTensorGeneral . ). inlineoverridevirtual . Compute the second Piola-Kirchhoff stress tensor in terms of the right Cauchy-Green deformation tensor ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmech",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean.html
Energy Efficiency,energy,energy,"neoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . MatrixSym & ; SPKTensorGeneral . ). inlineoverridevirtual . Compute the second Piola-Kirchhoff stress tensor in terms of the right Cauchy-Green deformation tensor ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param . ). inlineoverridevirtual . Strain energy density function for a stable Neo-Hookean material. The regularized origin barrier is removed according to ""Kim, Theodore,; and David Eberle. ""Dynamic deformables: implementation and production practicalities (now with code!)."" ACM SIGGRAPH 2022 Courses. 2022. 1-259."" ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsolidmechanicsfemhyperelasticmaterialStableNeoHookean; Generated on Mon Nov 11 2024 03:02:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean.html
Modifiability,inherit,inherited,"s Template Reference . #include <StableNeoHookean.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >; Stable Neo-Hookean material From: ""Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.)"" . Static Public Attributes; static constexpr std::string_view Name = ""StableNeoHookean"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::Name = ""StableNeoHookean"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_stable_neo_hookean.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >, including all inherited members. Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; CoordEigen typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; deformationTensorsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Esofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evaluesofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evectsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; hasBeenInitializedsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Jsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; lambdasofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; logJsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; StrainInformation()sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >inline; trCsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; trCsquaresofa::component::solidmechanics::fem::hype",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information-members.html
Testability,log,logJsofa,"s for sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >, including all inherited members. Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; CoordEigen typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; deformationTensorsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Esofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evaluesofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evectsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; hasBeenInitializedsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Jsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; lambdasofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; logJsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; StrainInformation()sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >inline; trCsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; trCsquaresofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; ~StrainInformation()sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 03:01:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information-members.html
Testability,log,logJ,﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes > Class Template Reference . #include <HyperelasticMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >:. [legend]. Public Attributes; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  StrainInformation ();  ; virtual ~StrainInformation ();  . Attribute details. ◆ deformationTensor. template<typename DataTypes > . MatrixSym sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::deformationTensor. right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) . ◆ E. template<typename DataTypes > . MatrixSym sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::E. ◆ Evalue. template<typename DataTypes > . CoordEigen sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::Evalue. ◆ Evect. template<typename DataTypes > . EigenMatrix sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::Evect. ◆ hasBeenInitialized. template<typename DataTypes > . bool sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::hasBeenInitialized. boolean indicating whether the invariant,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) overridesofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) overridesofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >inlinevirtual; Namesofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >static; ~HyperelasticMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 03:02:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff-members.html
Deployability,configurat,configuration,"utTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::Name = ""StVenantKirchhoff"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMater",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html
Energy Efficiency,energy,energy," template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ;  . ). inlineoverridevirtual . returns the strain energy of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsolidmechanicsfemhyperelasticmaterialSTVenantKirchhoff; Generated on Mon Nov 11 2024 03:02:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html
Modifiability,inherit,inherited,"es |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes > Class Template Reference . #include <STVenantKirchhoff.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >; Saint Venant-Kirchhoff material . Static Public Attributes; static constexpr std::string_view Name = ""StVenantKirchhoff"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::Name = ""StVenantKirchhoff"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, including all inherited members. applyElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >inlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; deriveSPKTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) overridesofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >inlinevirtual; ElasticityTensor(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) overridesofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >inlinevirtual; getStrainEnergy(StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) overridesofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >inlinevirtual; Matrix3 typedefsofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >; Matrix6 typedefsofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >; Namesofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >static; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >; ~HyperelasticMaterial()sofa::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman-members.html
Deployability,configurat,configuration,"outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >::Name = ""VerondaWestman"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMateri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes > Class Template Reference . #include <VerondaWestman.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""VerondaWestman"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html
Integrability,depend,depends,"e. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes > Class Template Reference . #include <VerondaWestman.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""VerondaWestman"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html
Modifiability,inherit,inherited,"ass that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""VerondaWestman"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >::Name = ""VerondaWestman"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html
Deployability,configurat,configuration,eField< DataTypes >::TetrahedronRestInformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference . #include <StandardTetrahedralFEMForceField.h>; data structure stored for each tetrahedron ; More... Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Real restVolume;  rest volume More...;  ; Real volScale;  current tetrahedron volume More...;  ; Coord shapeVector [4];  shape vector at the rest configuration More...;  ; Coord fiberDirection;  fiber direction in rest configuration More...;  ; Coord dJ [4];  derivatives of J More...;  ; Real strainEnergy;  deformation gradient = gradPhi More...;  ; float tetraIndices [4] {};  ; float tetraEdges [6] {};  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformati,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html
Modifiability,config,configuration,eField< DataTypes >::TetrahedronRestInformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference . #include <StandardTetrahedralFEMForceField.h>; data structure stored for each tetrahedron ; More... Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Real restVolume;  rest volume More...;  ; Real volScale;  current tetrahedron volume More...;  ; Coord shapeVector [4];  shape vector at the rest configuration More...;  ; Coord fiberDirection;  fiber direction in rest configuration More...;  ; Coord dJ [4];  derivatives of J More...;  ; Real strainEnergy;  deformation gradient = gradPhi More...;  ; float tetraIndices [4] {};  ; float tetraEdges [6] {};  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformati,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html
Testability,log,logJ,"ahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Real restVolume;  rest volume More...;  ; Real volScale;  current tetrahedron volume More...;  ; Coord shapeVector [4];  shape vector at the rest configuration More...;  ; Coord fiberDirection;  fiber direction in rest configuration More...;  ; Coord dJ [4];  derivatives of J More...;  ; Real strainEnergy;  deformation gradient = gradPhi More...;  ; float tetraIndices [4] {};  ; float tetraEdges [6] {};  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ dJ. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::dJ[4]. derivatives of J . ◆ fiberDirection. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::fiberDirection. fiber direction in rest configuration . ◆ restVolume. template<class DataTy",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::EdgeInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::EdgeInformation, including all inherited members. DfDxsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::EdgeInformation; EdgeInformation()sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::EdgeInformationinline; operator<<(std::ostream &os, const EdgeInformation &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::EdgeInformationfriend; operator>>(std::istream &in, EdgeInformation &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::EdgeInformationfriend; verticessofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::EdgeInformation. Generated on Mon Nov 11 2024 02:59:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f3b230953642207ca2abc743457f1eeee.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f3b230953642207ca2abc743457f1eeee.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation, including all inherited members. Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; CoordEigen typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; deformationTensorsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; dJsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; Esofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evaluesofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evectsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; fiberDirectionsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; hasBeenInitializedsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Jsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; lambdasofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; logJsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; operator<<(std::ostream &os, const Te",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_fa9b34b1e46f0210d547309242ee3a5c7.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_fa9b34b1e46f0210d547309242ee3a5c7.html
Testability,log,logJsofa,"ataTypes >; dJsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; Esofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evaluesofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evectsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; fiberDirectionsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; hasBeenInitializedsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Jsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; lambdasofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; logJsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; operator<<(std::ostream &os, const TetrahedronRestInformation &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformationfriend; operator>>(std::istream &in, TetrahedronRestInformation &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformationfriend; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; restVolumesofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; shapeVectorsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; strainEnergysofa::component",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_fa9b34b1e46f0210d547309242ee3a5c7.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_fa9b34b1e46f0210d547309242ee3a5c7.html
Deployability,update,updateInternal,"S(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StandardTetrahedralFEMForceField()sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testDerivatives()sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; tetrahedronInfosofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; tetrahedronRestInfoVector typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >, including all inherited members. _initialPointssofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; _meshSavedsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html
Performance,load,loader,"rection)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMaterialName(const std::string &name)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setparameter(const type::vector< Real > &param)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >inline; SetParameterArray typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(StandardTetrahedralFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html
Testability,log,logging,"overridesofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"re::behavior::DampingMatrix *) finalsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const core::topology::BaseMeshTopology::Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html
Availability,down,down,"aseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(StandardTetrahedralFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void setMaterialName (const std::string &name);  ; void setparameter (const type::vector< Real > &param);  ; void setdirection (const type::vector< Coord > &direction);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initNeighbourhoodPoints ();  ; void initNeighbourhoodEdges ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Deployability,update,updateMatrix,"ject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord _initialPoints;  ; bool updateMatrix;  the initial positions of the points More...;  ; bool _meshSaved;  ; Data< std::string > f_materialName;  the name of the material to be used More...;  ; Data< SetParameterArray > f_parameterSet;  The global parameters specifying the material. More...;  ; Data< SetAnisotropyDirectionArray > f_anisotropySet;  The global directions of anisotropy of the material. More...;  ; Data< std::string > f_parameterFileName;  the name of the file describing the material parameters for all tetrahedra More...;  ; SingleLink< StandardTetrahedralFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; material::HyperelasticMaterial< DataTypes > * myMaterial;  the array that describes the complete material energy and its derivatives More...;  ; core::topology::TetrahedronData< tetrahedronRestInfoVector > tetrahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Energy Efficiency,energy,energy,"ionSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord _initialPoints;  ; bool updateMatrix;  the initial positions of the points More...;  ; bool _meshSaved;  ; Data< std::string > f_materialName;  the name of the material to be used More...;  ; Data< SetParameterArray > f_parameterSet;  The global parameters specifying the material. More...;  ; Data< SetAnisotropyDirectionArray > f_anisotropySet;  The global directions of anisotropy of the material. More...;  ; Data< std::string > f_parameterFileName;  the name of the file describing the material parameters for all tetrahedra More...;  ; SingleLink< StandardTetrahedralFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; material::HyperelasticMaterial< DataTypes > * myMaterial;  the array that describes the complete material energy and its derivatives More...;  ; core::topology::TetrahedronData< tetrahedronRestInfoVector > tetrahedronInfo;  Internal tetrahedron data. More...;  ; core::topology::EdgeData< edgeInformationVector > edgeInfo;  Internal edge data. More...;  ; VecCoord myposition;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Integrability,message,messages,"trahedral elements. . Classes; class  EdgeInformation;  data structure stored for each edge More...;  ; class  TetrahedronRestInformation;  data structure stored for each tetrahedron More...;  . Public Attributes; material::MaterialParameters< DataTypes > globalParameters;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord _initialPoints;  ; bool updateMatrix;  the initial positions of the points More...;  ; bool _meshSaved;  ; Data< std::string > f_materialName;  the name of the material to be used More...;  ; Data< SetParameterArray > f_parameterSet;  The global parameters specifying the material. More...;  ; Data< SetAnisotropyDirectionArray > f_anisotropySet;  The ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Modifiability,inherit,inherited,". Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes > Class Template Reference . #include <StandardTetrahedralFEMForceField.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; Compute Finite Element forces based on tetrahedral elements. . Classes; class  EdgeInformation;  data structure stored for each edge More...;  ; class  TetrahedronRestInformation;  data structure stored for each tetrahedron More...;  . Public Attributes; material::MaterialParameters< DataTypes > globalParameters;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Security,access,access,"c::StandardTetrahedralFEMForceField< DataTypes >::updateMatrix. protected . the initial positions of the points . Constructor details. ◆ StandardTetrahedralFEMForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::StandardTetrahedralFEMForceField. protected . ◆ ~StandardTetrahedralFEMForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::~StandardTetrahedralFEMForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::addKToMatrix ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html
Deployability,configurat,configuration,onent::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference . #include <TetrahedronHyperelasticityFEMForceField.h>; data structure stored for each tetrahedron ; More... Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Coord m_shapeVector [4];  shape vector at the rest configuration More...;  ; Coord m_fiberDirection;  fiber direction in rest configuration More...;  ; Real m_restVolume {};  rest volume More...;  ; Real m_volScale {};  current tetrahedron volume More...;  ; Real m_volume {};  ; MatrixSym m_SPKTensorGeneral;  volume/ restVolume More...;  ; Matrix3 m_deformationGradient;  deformation gradient = gradPhi More...;  ; Real m_strainEnergy {};  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html
Modifiability,config,configuration,onent::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference . #include <TetrahedronHyperelasticityFEMForceField.h>; data structure stored for each tetrahedron ; More... Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Coord m_shapeVector [4];  shape vector at the rest configuration More...;  ; Coord m_fiberDirection;  fiber direction in rest configuration More...;  ; Real m_restVolume {};  rest volume More...;  ; Real m_volScale {};  current tetrahedron volume More...;  ; Real m_volume {};  ; MatrixSym m_SPKTensorGeneral;  volume/ restVolume More...;  ; Matrix3 m_deformationGradient;  deformation gradient = gradPhi More...;  ; Real m_strainEnergy {};  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html
Testability,log,logJ,"tor [4];  shape vector at the rest configuration More...;  ; Coord m_fiberDirection;  fiber direction in rest configuration More...;  ; Real m_restVolume {};  rest volume More...;  ; Real m_volScale {};  current tetrahedron volume More...;  ; Real m_volume {};  ; MatrixSym m_SPKTensorGeneral;  volume/ restVolume More...;  ; Matrix3 m_deformationGradient;  deformation gradient = gradPhi More...;  ; Real m_strainEnergy {};  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ()=default;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ m_deformationGradient. template<class DataTypes > . Matrix3 sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation::m_deformationGradient. deformation gradient = gradPhi . ◆ m_fiberDirection. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation::m_fiberDirection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::EdgeInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::EdgeInformation, including all inherited members. DfDxsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::EdgeInformation; EdgeInformation()=defaultsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::EdgeInformation; operator<<(std::ostream &os, const EdgeInformation &)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::EdgeInformationfriend; operator>>(std::istream &in, EdgeInformation &)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::EdgeInformationfriend. Generated on Mon Nov 11 2024 03:00:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_1368ed237e1fb7afed4d92f0295503cf.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_1368ed237e1fb7afed4d92f0295503cf.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation, including all inherited members. Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; CoordEigen typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; deformationTensorsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Esofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evaluesofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evectsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; hasBeenInitializedsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Jsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; lambdasofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; logJsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; m_deformationGradientsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_fiberDirectionsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_restVolumesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_28d7221c38b7eaeee1e80f39f23d1b4d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_28d7221c38b7eaeee1e80f39f23d1b4d.html
Testability,log,logJsofa,m::hyperelastic::material::StrainInformation< DataTypes >; CoordEigen typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; deformationTensorsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Esofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evaluesofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evectsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; hasBeenInitializedsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Jsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; lambdasofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; logJsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; m_deformationGradientsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_fiberDirectionsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_restVolumesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_shapeVectorsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_SPKTensorGeneralsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_strainEnergysofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; m_volScal,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_28d7221c38b7eaeee1e80f39f23d1b4d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_28d7221c38b7eaeee1e80f39f23d1b4d.html
Deployability,update,updateInternal,"ssor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testDerivatives()sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >protected; Tetra typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; Tetrahedron typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; TetrahedronHyperelasticityFEMForceField()sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >protected; TetraID typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TrianglesInTetrahedron typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTangentMatrix()sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html
Performance,load,loader,"sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMaterialName(std::string materialName)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setparameter(const SetParameterArray &param)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; SetParameterArray typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedronHyperelasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html
Testability,log,logging,"esofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html
Usability,clear,clearLoggedMessages,"DampingMatrix *) finalsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_anisotropySetsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_compon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html
Availability,down,down,"Object, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedronHyperelasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void setMaterialName (std::string materialName);  ; void setparameter (const SetParameterArray &param);  ; void setdirection (const SetAnisotropyDirectionArray &direction);  ; void createTetrahedronRestInformation (Index, TetrahedronRestInformation &t, const Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Energy Efficiency,energy,energy,"td::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord m_initialPoints;  ; bool m_updateMatrix;  the initial positions of the points More...;  ; std::unique_ptr< material::HyperelasticMaterial< DataTypes > > m_myMaterial;  the array that describes the complete material energy and its derivatives More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Integrability,message,messages,"rnal edge data. More...;  ; SingleLink< TetrahedronHyperelasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord m_initialPoints;  ; bool m_updateMatrix;  the initial positions of the points More...;  ; std::unique_ptr< material::HyperelasticMaterial< DataTypes > > m_myMaterial;  the array that describes the complete material energy and its derivatives More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Modifiability,inherit,inherited,"en', 'StVenantKirchhoff', 'VerondaWestman', 'StableNeoHookean' More...;  ; Data< SetParameterArray > d_parameterSet;  The global parameters specifying the material. More...;  ; Data< SetAnisotropyDirectionArray > d_anisotropySet;  The global directions of anisotropy of the material: vector containing anisotropic directions. The vector size is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials. More...;  ; TetrahedronData< sofa::type::vector< TetrahedronRestInformation > > m_tetrahedronInfo;  Internal tetrahedron data. More...;  ; EdgeData< sofa::type::vector< EdgeInformation > > m_edgeInfo;  Internal edge data. More...;  ; SingleLink< TetrahedronHyperelasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Security,access,access,"protected . the initial positions of the points . Constructor details. ◆ TetrahedronHyperelasticityFEMForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronHyperelasticityFEMForceField. protected . ◆ ~TetrahedronHyperelasticityFEMForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::~TetrahedronHyperelasticityFEMForceField ; (; ). overrideprotecteddefault . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html
Deployability,integrat,integrateMass,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; IS_CONSTRAINED_27sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html
Integrability,integrat,integrateMass,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; IS_CONSTRAINED_27sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >, including all inherited members. _alreadyInitsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _coefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _elementStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _finalWeightssofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >; _gatherBsizesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _gatherPtsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _initialPointssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _initialrotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _lumpedMassessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >protected; _materialsStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _particleMassessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >protected; _rotatedInitialElementssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _rotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _sparseGridsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _stiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTy",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html
Performance,load,loader,"DataTypes >protectedstatic; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDensity(Real d)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUpdateStiffnessMatrix(bool val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; sofa::ForceField< DataTypes >::sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::ForceField< DataTypes >::sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAcces",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html
Testability,log,logging,"cs::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html
Usability,clear,clearLoggedMessages,"nics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CoarseToFinesofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >protectedstatic; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField::computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeClassicalMechanicalMatrices(ElementStiffness &K, ElementMass &M, const Index elementIndice, int level)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html
Availability,down,down,"const bool IS_CONSTRAINED_27 [27];  ; static const int WEIGHT_MASK [27 *3][8 *3];  ; static const int WEIGHT_MASK_CROSSED [27 *3][8 *3];  ; static const int WEIGHT_MASK_CROSSED_DIFF [27 *3][8 *3];  ; static const float MIDDLE_INTERPOLATION [27][8];  ; static const int MIDDLE_AXES [27];  ; static const int FINE_ELEM_IN_COARSE_IN_ASS_FRAME [8][8];  ; static const float RIGID_STIFFNESS [8 *3][8 *3];  ;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; static const float FINE_TO_COARSE [8][8][8];  ;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronCompositeFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(NonUniformHexahedronFEMForceFieldAndMass, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void findFinestChildren (type::vector< Index > &finestChildren, const Index elementIndice, int level=0);  ; void computeMechanicalMatricesDirectlyFromTheFinestToCoarse (ElementStiffness &K, ElementMass &M, const Index elementIndice);  ; void computeMechanicalMatricesRecursively (ElementStiffness &K, ElementMass &M, const Index elementIndice, int level);  ; void computeMechanicalMatricesRecursivelyWithRamifications (ElementStiffness &K, ElementMass &M, const Index elementIndice, int level);  ; void computeFinalWeights (const Weight &W, const Index coarseElementIndice, const Index elemen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Deployability,integrat,integrateMass,"&x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Energy Efficiency,energy,energy,"ssMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Integrability,message,messages,"dAndMass< DataTypes >; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Modifiability,inherit,inherited,". sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes > Class Template Reference . #include <HexahedronCompositeFEMForceFieldAndMass.h>. Inheritance diagram for sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >:. [legend]. Public Attributes; Data< bool > d_finestToCoarse;  Does the homogenization is done directly from the finest level to the coarse one? More...;  ; Data< int > d_homogenizationMethod;  0->static, 1->constrained static, 2->modal analysis More...;  ; Data< bool > d_completeInterpolation;  Is the non-linear, complete interpolation used? More...;  ; Data< bool > d_useRamification;  If SparseGridRamification, are ramifications taken into account? More...;  ; Data< int > d_drawType;  ; Data< int > d_drawColor;  ; Data< float > d_drawSize;  ; type::vector< type::vector< Weight > > _weights;  ; type::vector< std::pair< Index, Weight > > _finalWeights;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Performance,perform,perform,"st override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Safety,recover,recover,"t override;  Get the mass relative to the DOF at index. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >, including all inherited members. _alreadyInitsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _finePossofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _finestBarycentricCoordsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _finestSparseGridsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _finestWeightssofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _forcefieldsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _p0sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _qCoarse0sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _qFinesofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _qFine0sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _rotationssofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _sparseGridsofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; _weightssofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMMapping< BasicMapping >protected; apply(const sofa::core::MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in) over",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_mapping-members.html
Deployability,integrat,integrateStiffness,"eld, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html
Integrability,integrat,integrateStiffness,"eld, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >, including all inherited members. _coefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; _densitysofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _elementMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _elementTotalMasssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _lumpedMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _particleMassessofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; _useLumpedMasssofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; accFromF(const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::accFromF(const MechanicalParams *mparams, MultiVecDerivId aid) overridesofa::core::behavior::Mass< DataTypes >virtual; accumulateForceLarge(WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; accumulateForcePolar(WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html
Performance,load,loader,"ctmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDensity(Real d)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::ForceField< DataTypes >::sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::ForceField< DataTypes >::sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; ForceField< DataTypes >::sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; sofa::core::beha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html
Testability,log,logging,"ams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const core::MechanicalParams *mparams, core::MultiVecDerivId dfId) overridesofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; addMBKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html
Usability,clear,clearLoggedMessages,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeCorrection(ElementMass &)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >inlineprotectedvirtual; computeElementMass(ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >pro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html
Availability,down,down," inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NonUniformHexahedralFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void handleTopologyChange (core::topology::Topology *) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedralFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedralFEMForceField, DataTypes));  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFac",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Deployability,update,updateInternal,"th, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Energy Efficiency,energy,energy,"ticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; SReal getElementMass (sofa::Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Integrability,depend,dependent,"ons inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Modifiability,inherit,inherited,"ss"", booktitle = ""Eurographics Workshop in Virtual Reality Interaction and Physical Simulation (VRIPHYS)"", month = ""nov"", year = ""2006"", organization = ""Eurographics"", address = ""Madrid"", url = ""http://www-evasion.imag.fr/Publications/2006/NPF06"" }; indices ordering (same as in HexahedronSetTopology): Y 7---------6; ^ / /|; |/ Z / |; 3----^----2 |; | / | |; | 4------|--5; | / | /; |/ |/; 0---------1-->X; . Protected Attributes; Data< bool > useMBK;  compute MBK and use it in addMBKdx, instead of using addDForce and addMDx. More...;  ; bool matrixIsDirty;  Matrix needs to be recomputed. More...;  ; type::vector< ElementMass > mbkMatrix;  Matrix . More...;  ;  Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >; sofa::core::objectmodel::RenamedData< Real > _density;  ; sofa::core::objectmodel::RenamedData< bool > _useLumpedMass;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< ElementMass > > _elementMasses;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Real > > _elementTotalMass;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Real > > _particleMasses;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Coord > > _lumpedMasses;  ; Data< Real > d_density;  density == volumetric mass in english (kg.m-3) More...;  ; Data< bool > d_useLumpedMass;  Does it use lumped masses? More...;  ; core::topology::HexahedronData< sofa::type::vector< ElementMass > > d_elementMasses;  Mass matrices per element (M_i) More...;  ; core::topology::HexahedronData< sofa::type::vector< Real > > d_elementTotalMass;  Total mass per element. More...;  ; core::topology::PointData< sofa::type::vector< Real > > d_particleMasses;  Mass per particle. More...;  ; core::topology::PointData< sofa::type::vector< Coord > > d_lumpedMasses;  Lumped masses. More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Performance,perform,perform,"KToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Safety,recover,recover,"rride;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html
Deployability,integrat,integrateMass,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html
Integrability,integrat,integrateMass,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, including all inherited members. _alreadyInitsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _coefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _elementStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _gatherBsizesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _gatherPtsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; _initialPointssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _initialrotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _lumpedMassessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >protected; _materialsStiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _particleMassessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >protected; _rotatedInitialElementssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _rotationssofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _sparseGridsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; _stiffnessessofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; accFromF(const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) overridesof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html
Performance,load,loader,"ctmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDensity(Real d)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUpdateStiffnessMatrix(bool val)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inline; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SMALL enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; sofa::ForceField< DataTypes >::sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::ForceField< DataTypes >::sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAcces",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html
Testability,log,logging,"cs::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html
Usability,clear,clearLoggedMessages,"nics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField::computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeClassicalMechanicalMatrices(ElementStiffness &K, ElementMass &M, const Index elementIndice, int level)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >protected; computeElementMas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html
Availability,down,down," sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  . Static Protected Attributes; static const float FINE_TO_COARSE [8][8][8];  ;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NonUniformHexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Deployability,integrat,integrateMass,"&x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Energy Efficiency,energy,energy,"cDeriv &a, const DataVecDeriv &f) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Integrability,message,messages,"} . Public Attributes; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Modifiability,inherit,inherited," Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; Need a SparseGridTopology with _sparseGrid->d_nbVirtualFinerLevels >= this->d_nbVirtualFinerLevels; @InProceedings{NPF06, author = ""Nesme, Matthieu and Payan, Yohan and Faure, Fran\c{c}ois"", title = ""Animating Shapes at Arbitrary Resolution with Non-Uniform Stiffness"", booktitle = ""Eurographics Workshop in Virtual Reality Interaction and Physical Simulation (VRIPHYS)"", month = ""nov"", year = ""2006"", organization = ""Eurographics"", address = ""Madrid"", url = ""http://www-evasion.imag.fr/Publications/2006/NPF06"" } . Public Attributes; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Performance,perform,perform," ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Safety,recover,recover,"r internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html
Deployability,update,updateInternal,"ehavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(AngularSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; springColorsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTy",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html
Performance,load,loader,"ring::AngularSpringForceField< DataTypes >virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(AngularSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; ForceField< DataTypes >::SOFA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html
Testability,log,logging,"st DataVecCoord &x, const DataVecDeriv &v) overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; angularLimitsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; AngularSpringForceField()sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >protected; angularStiffnesssofa::component::solidmechanics::spring::AngularSpringForce",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html
Usability,clear,clearLoggedMessages,"r::DampingMatrix *) finalsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; bwdInit() overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_angularLimitsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_angularStiffnesssofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_indicessofa::component::solidmechanics::spring::AngularSpringFo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html
Availability,down,down,"emoveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  AngularSpringForceField ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Deployability,update,updateInternal,"LinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Integrability,message,messages," d_angularLimit;  angular limit (max; min) values where the force applies More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< type::RGBAColor > d_springColor;  spring color More...;  ; linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real > matS;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mState;  ; VecReal k;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_sl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Modifiability,inherit,inherited,"ons. An external MechanicalState reference can also be passed to the ForceField as rest shape position. . Public Attributes; sofa::core::objectmodel::RenamedData< type::vector< sofa::Index > > indices;  ; sofa::core::objectmodel::RenamedData< VecReal > angularStiffness;  ; sofa::core::objectmodel::RenamedData< VecReal > angularLimit;  ; sofa::core::objectmodel::RenamedData< bool > drawSpring;  ; sofa::core::objectmodel::RenamedData< type::RGBAColor > springColor;  ; Data< type::vector< sofa::Index > > d_indices;  index of nodes controlled by the angular springs More...;  ; Data< VecReal > d_angularStiffness;  angular stiffness for the controlled nodes More...;  ; Data< VecReal > d_angularLimit;  angular limit (max; min) values where the force applies More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< type::RGBAColor > d_springColor;  spring color More...;  ; linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real > matS;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other inte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Security,access,access,"< DataTypes >::matS. ◆ mState. template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >::mState. protected . ◆ springColor. template<class DataTypes > . sofa::core::objectmodel::RenamedData<type::RGBAColor> sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >::springColor. Constructor details. ◆ AngularSpringForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >::AngularSpringForceField. protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Add the forces. ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >::addKToMatrix ; (; const core::MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Brings ForceField contribution to the global system stiffness matrix. ; Implements sofa::core::behavior::BaseForceField. ◆ buildDampingMatrix(). template<class DataTypes >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Usability,simpl,simple,﻿. SOFA API: sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes > Class Template Reference . #include <AngularSpringForceField.h>; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; More... Inheritance diagram for sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; Springs are applied to given degrees of freedom between their current positions and their rest shape positions. An external MechanicalState reference can also be passed to the ForceField as rest shape position. . Public Attributes; sofa::core::objectmodel::RenamedData< type::vector< sofa::Index > > indices;  ; sofa::core::objectmodel::RenamedData< VecReal > angularStiffness;  ; sofa::core::objectmodel::RenamedData< VecReal > angularLimit;  ; sofa::core::objectmodel::RenamedData< bool > drawSpring;  ; sofa::core::objectmodel::RenamedData< type::RGBAColor > springColor;  ; Data< type::vector< sofa::Index > > d_indices;  index of nodes controlled by the angular springs More...;  ; Data< VecReal > d_angularStiffness;  angular stiffness for the controlled nodes More...;  ; Data< VecReal > d_angularLimit;  angular limit (max; min) values where the force applies More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< type::RGBAColor > d_springColor;  spring color More...;  ; linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real > matS;  ;  Public Attr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html
Deployability,update,updateInternal,"r::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FastTriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; ForceField< _DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, _DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, _DataTypes))sofa::core::behavior::ForceField< _DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~FastTriangularBendingSprings()sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protectedvirtual; ~ForceField() override",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< _DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< _DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< _DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< _DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; ForceField< _DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< _DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::sprin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html
Performance,load,loader,"FastTriangularBendingSprings< _DataTypes >virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< _DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FastTriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; ForceField< _Data",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html
Testability,log,logging,"&d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; ForceField< _DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< _DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; ForceField< _DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< _DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< _DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeSpring &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protected; applyPointDe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html
Usability,clear,clearLoggedMessages,"Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< _DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bendingStiffnesssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeSpringssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minDistValiditysofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; DataTypes typedefsofa::component::solidmechanics::spring::FastTr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html
Availability,down,down,"emoveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions; void applyEdgeCreation (Index edgeIndex, EdgeSpring &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ; void applyTriangleCreation (const sofa::type::vector< Index > &triangleAdded, const sofa::type::vector< core::topology::BaseMeshTopology::Triangle > &, const sofa::type::vector< sofa::type::vector< Index > > &, const sofa::type::vector< sofa::type::vector< SReal > > &);  ; void applyTriangleDestruction (const sofa::type::vector< Index > &triangleRemoved);  ; void applyPointDestruction (const sofa::type::vector< In",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Integrability,message,messages,"ich a spring is not valid. More...;  ; SingleLink< FastTriangularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< type::vector< EdgeSpring > > d_edgeSprings;  The list of edge springs, one for each edge between two triangles. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Modifiability,inherit,inherited,"; template<class _DataTypes>; class sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; Bending elastic force added between vertices of triangles sharing a common edge.; Adapted from: P. Volino, N. Magnenat-Thalmann. Simple Linear Bending Stiffness in Particle Systems. Eurographics Symposium on Computer Animation (SIGGRAPH), pp. 101-105, September 2006. http://www.miralab.ch/repository/papers/165.pdf; AuthorFrançois Faure, 2012 . Classes; class  EdgeSpring;  . Public Attributes; Data< SReal > d_bendingStiffness;  Bending stiffness of the material. More...;  ; Data< SReal > d_minDistValidity;  Distance under which a spring is not valid. More...;  ; SingleLink< FastTriangularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Security,access,access,"late<class _DataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::m_topology. protected . Constructor details. ◆ FastTriangularBendingSprings(). template<class DataTypes > . sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::FastTriangularBendingSprings. protected . ◆ ~FastTriangularBendingSprings(). template<class DataTypes > . sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::~FastTriangularBendingSprings. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< _DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< _DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::addKToMatrix ; (; sofa::linearalgebra::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring Member List . This is the complete list of members for sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring, including all inherited members. A enum valuesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; addDForce(VecDeriv &df, const VecDeriv &dp, Real kfactor) constsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpringinline; addForce(VecDeriv &f, const VecCoord &p, const VecDeriv &) constsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; addStiffness(sofa::linearalgebra::BaseMatrix *bm, unsigned int offset, SReal scale, core::behavior::ForceField< _DataTypes > *ff) constsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; alphasofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; B enum valuesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; C enum valuesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; D enum valuesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; getStiffness(StiffnessMatrix &K) constsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; is_activatedsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; is_initializedsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; lambdasofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring; operator<<(std::ostream &os, const EdgeSpring &)sofa::component::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs_1_1_edge_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs_1_1_edge_spring-members.html
Energy Efficiency,energy,energy,". SOFA API: sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring Class Reference . #include <FastTriangularBendingSprings.h>. Public Attributes; sofa::type::Vec< 4, unsigned > vid;  vertex indices, in circular order More...;  ; sofa::type::Vec< 4, Real > alpha;  weight of each vertex in the bending vector More...;  ; Real lambda;  bending stiffness More...;  ; bool is_activated;  ; bool is_initialized;  . Public Member Functions; void setEdgeSpring (const VecCoord &p, unsigned iA, unsigned iB, unsigned iC, unsigned iD, Real materialBendingStiffness);  Store the vertex indices and perform all the precomputations. More...;  ; Real addForce (VecDeriv &f, const VecCoord &p, const VecDeriv &) const;  Accumulates force and return potential energy. More...;  ; void addDForce (VecDeriv &df, const VecDeriv &dp, Real kfactor) const;  ; void addStiffness (sofa::linearalgebra::BaseMatrix *bm, unsigned int offset, SReal scale, core::behavior::ForceField< _DataTypes > *ff) const;  Stiffness matrix assembly. More...;  ; void getStiffness (StiffnessMatrix &K) const;  Compliant stiffness matrix assembly. More...;  ; void replaceIndex (Index oldIndex, Index newIndex);  replace a vertex index with another one More...;  ; void replaceIndices (const type::vector< Index > &newIndices);  replace all the vertex indices with the given ones More...;  . Friends; std::ostream & operator<< (std::ostream &os, const EdgeSpring &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, EdgeSpring &);  Input stream. More...;  . Attribute details. ◆ alpha. template<class _DataTypes > . sofa::type::Vec<4,Real> sofa::component::solidmechanics::spring::FastTriangularBendingSpring",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs_1_1_edge_spring.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs_1_1_edge_spring.html
Performance,perform,perform,"﻿. SOFA API: sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::EdgeSpring Class Reference . #include <FastTriangularBendingSprings.h>. Public Attributes; sofa::type::Vec< 4, unsigned > vid;  vertex indices, in circular order More...;  ; sofa::type::Vec< 4, Real > alpha;  weight of each vertex in the bending vector More...;  ; Real lambda;  bending stiffness More...;  ; bool is_activated;  ; bool is_initialized;  . Public Member Functions; void setEdgeSpring (const VecCoord &p, unsigned iA, unsigned iB, unsigned iC, unsigned iD, Real materialBendingStiffness);  Store the vertex indices and perform all the precomputations. More...;  ; Real addForce (VecDeriv &f, const VecCoord &p, const VecDeriv &) const;  Accumulates force and return potential energy. More...;  ; void addDForce (VecDeriv &df, const VecDeriv &dp, Real kfactor) const;  ; void addStiffness (sofa::linearalgebra::BaseMatrix *bm, unsigned int offset, SReal scale, core::behavior::ForceField< _DataTypes > *ff) const;  Stiffness matrix assembly. More...;  ; void getStiffness (StiffnessMatrix &K) const;  Compliant stiffness matrix assembly. More...;  ; void replaceIndex (Index oldIndex, Index newIndex);  replace a vertex index with another one More...;  ; void replaceIndices (const type::vector< Index > &newIndices);  replace all the vertex indices with the given ones More...;  . Friends; std::ostream & operator<< (std::ostream &os, const EdgeSpring &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, EdgeSpring &);  Input stream. More...;  . Attribute details. ◆ alpha. template<class _DataTypes > . sofa::type::Vec<4,Real> sofa::component::solidmechanics::spring::FastTriangularBendingSpring",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs_1_1_edge_spring.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs_1_1_edge_spring.html
Deployability,update,updateInternal,"pes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FrameSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; springRefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; springssofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecN typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PairInteractionForceField() overridesofa::core::behavior::PairInteractionForceFi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) overridesofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html
Performance,load,loader,"seObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathObject1(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setPathObject2(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html
Testability,log,logging,"ypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(const Spring &s)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; addSpring(int m1, int m2, Real softKst, Real softKsr, Real kd)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, int i, const Spring &spring)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; addSpringForce(SReal &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, int i, const Spring &spring)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; addTag(Tag t)sofa::core::objectmodel::Base; addUp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html
Usability,clear,clear,":Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_spring",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html
Availability,down,down,"::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FrameSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; sofa::type::vector< Spring > * getSprings ();  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Energy Efficiency,energy,energy,";  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Integrability,depend,dependent," the system matrix corresponding to . More...;  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Modifiability,inherit,inherited," Classes; class  Spring;  . Protected Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< Spring > > springs;  ; sofa::core::objectmodel::RenamedData< bool > showLawfulTorsion;  ; sofa::core::objectmodel::RenamedData< bool > showExtraTorsion;  ; SReal m_potentialEnergy;  ; Data< sofa::type::vector< Spring > > d_springs;  the list of the springs More...;  ; VecCoord springRef;  the list of the local referentials of the springs More...;  ; Data< bool > d_showLawfulTorsion;  bool to allow the display of the 2 parts of springs torsions More...;  ; Data< bool > d_showExtraTorsion;  display the illicit part of the joint rotation More...;  ; FrameSpringForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Usability,clear,clear,"onst core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; sofa::type::vector< Spring > * getSprings ();  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; void addSpring (const Spring &s);  ; void addSpring (int m1, int m2, Real softKst, Real softKsr, Real kd);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void ad",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Spring Member List . This is the complete list of members for sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Spring, including all inherited members. getInitVec1()sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; getStiffnessRotation()sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; getStiffnessTranslation()sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; kdsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Spring; m1sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Spring; m2sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Spring; operator<<(std::ostream &out, const Spring &s)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springfriend; operator>>(std::istream &in, Spring &s)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springfriend; setDamping(Real _kd)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; setInitVec1(const VecN &l)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; setInitVec2(const VecN &l)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; setStiffnessRotation(Real ksr)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; setStiffnessTranslation(Real kst)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; Spring(int m1=0, int m2=0, Real softKst=0, Real softKsr=0, Real kd=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::Springinline; stiffnessRotsofa::component::soli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field_1_1_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field_1_1_spring-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::GearSpring< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::GearSpring< DataTypes >, including all inherited members. angle1sofa::component::solidmechanics::spring::GearSpring< DataTypes >; angle2sofa::component::solidmechanics::spring::GearSpring< DataTypes >; Coord typedefsofa::component::solidmechanics::spring::GearSpring< DataTypes >; Deriv typedefsofa::component::solidmechanics::spring::GearSpring< DataTypes >; freeAxissofa::component::solidmechanics::spring::GearSpring< DataTypes >; GearSpring()sofa::component::solidmechanics::spring::GearSpring< DataTypes >; GearSpring(unsigned int m1, unsigned int m2, unsigned int p1, unsigned int p2)sofa::component::solidmechanics::spring::GearSpring< DataTypes >; GearSpring(unsigned int m1, unsigned int m2, unsigned int p1, unsigned int p2, Real hardKst, Real softKsr, Real hardKsr, Real kd, Real ratio)sofa::component::solidmechanics::spring::GearSpring< DataTypes >; getFreeAxis()sofa::component::solidmechanics::spring::GearSpring< DataTypes >inline; getHardStiffnessRotation()sofa::component::solidmechanics::spring::GearSpring< DataTypes >inline; getHardStiffnessTranslation()sofa::component::solidmechanics::spring::GearSpring< DataTypes >inline; getRatio()sofa::component::solidmechanics::spring::GearSpring< DataTypes >inline; getSoftStiffnessRotation()sofa::component::solidmechanics::spring::GearSpring< DataTypes >inline; hardStiffnessRotsofa::component::solidmechanics::spring::GearSpring< DataTypes >; hardStiffnessTranssofa::component::solidmechanics::spring::GearSpring< DataTypes >; ini1sofa::component::solidmechanics::spring::GearSpring< DataTypes >; ini2sofa::component::solidmechanics::spring::GearSpring< DataTypes >; kdsofa::component::solidmechanics::spring::GearSpring< DataTypes >; m1sofa::component::solidmechanics::spri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring-members.html
Deployability,update,updateInternal,"eAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(GearSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Spring typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; springssofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~GearSpringForceField()sofa::component::solidmechanics::spring::GearSpringForceFie",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html
Performance,load,loader,"seObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathObject1(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setPathObject2(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; showFactorSizesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html
Testability,log,logging,">virtual; addForce(const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(const Spring &s)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; addSpring(int m1, int m2, int p1, int p2, Real hardKst, Real softKsr, Real hardKsr, Real kd, Real ratio)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, int i, Spring &spring, Real kFactor)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protected; addSpringForce(SReal &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, int i, Spring &spring)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protecte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html
Usability,clear,clear,"cted; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_reinitsofa::component::solidmechanics::sp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html
Availability,down,down,"a::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GearSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Deployability,update,updateInternal,"LinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Energy Efficiency,energy,energy,";  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Integrability,message,messages,".;  ; Data< Real > d_period;  period between outputs More...;  ; Data< bool > d_reinit;  flag enabling reinitialization of the output file at each timestep More...;  ; Real lastTime;  ; Data< Real > d_showFactorSize;  bool to allow the display of the extra torsion More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; std::ofstream * outfile;  ; GearSpringForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Modifiability,inherit,inherited,"id DOFS Use kst vector to specify the directionnal stiffnesses (on each local axe) Use ksr vector to specify the rotational stiffnesses (on each local axe) . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< Spring > > springs;  ; sofa::core::objectmodel::DataFileName f_filename;  ; sofa::core::objectmodel::RenamedData< Real > f_period;  ; sofa::core::objectmodel::RenamedData< bool > f_reinit;  ; sofa::core::objectmodel::RenamedData< Real > showFactorSize;  ; Data< sofa::type::vector< Spring > > d_springs;  the list of the springs More...;  ; sofa::core::objectmodel::DataFileName d_filename;  output file name More...;  ; Data< Real > d_period;  period between outputs More...;  ; Data< bool > d_reinit;  flag enabling reinitialization of the output file at each timestep More...;  ; Real lastTime;  ; Data< Real > d_showFactorSize;  bool to allow the display of the extra torsion More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other inte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Usability,clear,clear,"x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; sofa::type::vector< Spring > * getSprings ();  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; void addSpring (const Spring &s);  ; void addSpring (int m1, int m2, int p1, int p2, Real hardKst, Real softKsr, Real hardKsr, Real kd, Real ratio);  ; GearSpringForceField< DataTypes >::Real getAngleAroundAxis (Coord p1, Coord p2, unsigned int axis);  ; void getVectorAngle (Vector u, Vector v, Vector &w);  ; void getVectorAngle (Coord p1, Coord p2, unsigned int axis, Vector &w);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionFor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::JointSpring< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::JointSpring< DataTypes >, including all inherited members. blocStiffnessRotsofa::component::solidmechanics::spring::JointSpring< DataTypes >; Coord typedefsofa::component::solidmechanics::spring::JointSpring< DataTypes >; Deriv typedefsofa::component::solidmechanics::spring::JointSpring< DataTypes >; freeMovementssofa::component::solidmechanics::spring::JointSpring< DataTypes >; getBlocStiffnessRotation()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getFreeAxis()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getHardStiffnessRotation()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getHardStiffnessTranslation()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getInitLength()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getInitOrientation()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getLimitAngles()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getSoftStiffnessRotation()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; getSoftStiffnessTranslation()sofa::component::solidmechanics::spring::JointSpring< DataTypes >inline; hardStiffnessRotsofa::component::solidmechanics::spring::JointSpring< DataTypes >; hardStiffnessTranssofa::component::solidmechanics::spring::JointSpring< DataTypes >; initRotsofa::component::solidmechanics::spring::JointSpring< DataTypes >; initTranssofa::component::solidmechanics::spring::JointSpring< DataTypes >; JointSpring(sofa::Index m1=0, sofa::Index m2=0, Real softKst=0, Real hardKst=10000, Real softKsr=0, Real hardKsr=10000, Real blocKsr=100, Real axmin=-100000, Real axmax=100000, Real ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring-members.html
Deployability,update,updateInternal,"eAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(JointSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Spring typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~JointSpringForceField()sofa::component::solidmechanics::spring::JointSpringFor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html
Performance,load,loader,"seObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathObject1(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setPathObject2(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html
Testability,log,logging,"ypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(const Spring &s)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; addSpring(sofa::Index m1, sofa::Index m2, Real softKst, Real hardKst, Real softKsr, Real hardKsr, Real blocKsr, Real axmin, Real axmax, Real aymin, Real aymax, Real azmin, Real azmax, Real kd)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, Spring &spring, Real kFactor)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >protected; addSpringForce(SReal &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, sofa::Index i, Sp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html
Usability,clear,clear,"ed; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_infilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outfilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_periodsofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html
Availability,down,down,"UBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(JointSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Deployability,update,updateInternal,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Energy Efficiency,energy,energy,";  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Integrability,message,messages,"rsion;  bool to allow the display of the 2 parts of springs torsions More...;  ; Data< bool > d_showExtraTorsion;  display the illicit part of the joint rotation More...;  ; Data< Real > d_showFactorSize;  modify the size of the debug information of a given factor More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; Real m_lastTime;  ; std::ifstream * m_infile;  ; std::ofstream * m_outfile;  ; JointSpringForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Sin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Modifiability,inherit,inherited,"objectmodel::DataFileName f_infilename;  ; sofa::core::objectmodel::RenamedData< Real > f_period;  ; sofa::core::objectmodel::RenamedData< bool > f_reinit;  ; sofa::core::objectmodel::DataFileName d_outfilename;  output file name More...;  ; sofa::core::objectmodel::DataFileName d_infilename;  input file containing constant joint force More...;  ; Data< Real > d_period;  period between outputs More...;  ; Data< bool > d_reinit;  flag enabling reinitialization of the output file at each timestep More...;  ; Data< sofa::type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< bool > d_showLawfulTorsion;  bool to allow the display of the 2 parts of springs torsions More...;  ; Data< bool > d_showExtraTorsion;  display the illicit part of the joint rotation More...;  ; Data< Real > d_showFactorSize;  modify the size of the debug information of a given factor More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Usability,clear,clear,";  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; sofa::type::vector< Spring > * getSprings ();  ; void clear (sofa::Size reserve=0);  ; void addSpring (const Spring &s);  ; void addSpring (sofa::Index m1, sofa::Index m2, Real softKst, Real hardKst, Real softKsr, Real hardKsr, Real blocKsr, Real axmin, Real axmax, Real aymin, Real aymax, Real azmin, Real azmax, Real kd);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::LinearSpring< T > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::LinearSpring< T >, including all inherited members. elongationOnlysofa::component::solidmechanics::spring::LinearSpring< T >; enabledsofa::component::solidmechanics::spring::LinearSpring< T >; initpossofa::component::solidmechanics::spring::LinearSpring< T >; kdsofa::component::solidmechanics::spring::LinearSpring< T >; kssofa::component::solidmechanics::spring::LinearSpring< T >; LinearSpring(const sofa::Index m1=0, const sofa::Index m2=0, Real ks=0.0, Real kd=0.0, Real initpos=0.0, const bool noCompression=false, const bool enabled=true)sofa::component::solidmechanics::spring::LinearSpring< T >inlineexplicit; m1sofa::component::solidmechanics::spring::LinearSpring< T >; m2sofa::component::solidmechanics::spring::LinearSpring< T >; operator<<(std::ostream &out, const LinearSpring< Real > &s)sofa::component::solidmechanics::spring::LinearSpring< T >friend; operator>>(std::istream &in, LinearSpring< Real > &s)sofa::component::solidmechanics::spring::LinearSpring< T >friend; Real typedefsofa::component::solidmechanics::spring::LinearSpring< T >. Generated on Mon Nov 11 2024 03:03:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_linear_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_linear_spring-members.html
Availability,mask,maskInUsesofa,"pes >protected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MeshSpringForceField()sofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >protected; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; Nsofa::component::solidmechanics::spring::SpringForceField< DataTypes >static; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html
Deployability,update,updateInternal,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html
Performance,load,load,"lse)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; initializeTopologyHandler(sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >protected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html
Testability,log,logging,"pes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(std::set< std::pair< sofa::Index, sofa::Index > > &sset, sofa::Index m1, sofa::Index m2, Real stiffness, Real damping)sofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >protected; sofa::component::solidmechanics::spring::SpringForceField::addSpring(sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::component::solidmechanics::spring::SpringForceField::addSpring(const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html
Usability,clear,clear,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html
Availability,mask,maskInUse,"longation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawMaxElongationRange;  Max range of elongation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawSpringSize;  Size of drawed lines. More...;  ; Data< type::Vec< 2, sofa::Index > > d_localRange;  optional range of local DOF indices. Any computation involving only indices outside of this range are discarded (useful for parallelization using mesh partitioning) More...;  ; SingleLink< MeshSpringForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) Mor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Energy Efficiency,green,green,"#include <MeshSpringForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >:. [legend]. Protected Attributes; Data< Real > d_linesStiffness;  Stiffness for the Lines. More...;  ; Data< Real > d_linesDamping;  Damping for the Lines. More...;  ; Data< Real > d_trianglesStiffness;  Stiffness for the Triangles. More...;  ; Data< Real > d_trianglesDamping;  Damping for the Triangles. More...;  ; Data< Real > d_quadsStiffness;  Stiffness for the Quads. More...;  ; Data< Real > d_quadsDamping;  Damping for the Quads. More...;  ; Data< Real > d_tetrahedraStiffness;  Stiffness for the Tetrahedra. More...;  ; Data< Real > d_tetrahedraDamping;  Damping for the Tetrahedra. More...;  ; Data< Real > d_cubesStiffness;  Stiffness for the Cubes. More...;  ; Data< Real > d_cubesDamping;  Damping for the Cubes. More...;  ; Data< bool > d_noCompression;  Only consider elongation. More...;  ; Data< Real > d_drawMinElongationRange;  Min range of elongation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawMaxElongationRange;  Max range of elongation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawSpringSize;  Size of drawed lines. More...;  ; Data< type::Vec< 2, sofa::Index > > d_localRange;  optional range of local DOF indices. Any computation involving only indices outside of this range are discarded (useful for parallelization using mesh partitioning) More...;  ; SingleLink< MeshSpringForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true }",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Integrability,depend,dependent,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Modifiability,inherit,inherited,"longation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawMaxElongationRange;  Max range of elongation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawSpringSize;  Size of drawed lines. More...;  ; Data< type::Vec< 2, sofa::Index > > d_localRange;  optional range of local DOF indices. Any computation involving only indices outside of this range are discarded (useful for parallelization using mesh partitioning) More...;  ; SingleLink< MeshSpringForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) Mor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Performance,load,load," Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::Mecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Usability,clear,clear,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html
Deployability,update,updateInternal,"TRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PolynomialRestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprot",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) overridesofa::component::solidmechanics::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html
Performance,load,loader,"einit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PolynomialRestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; For",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html
Testability,log,logging,"lRestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inlinevirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html
Usability,clear,clearLoggedMessages,"t::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; bwdInit() overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(sofa::Index stiffnessIndex, sofa::Index springIndex)sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_external_pointssofa::component::solidmechanic",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html
Availability,down,down,"emoveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  PolynomialRestShapeSpringsForceField ();  ; void recomputeIndices ();  ; void ComputeJacobian (sofa::Index stiffnessIndex, sofa::Index springIndex);  Indicator whether an external MechanicalState is used as rest reference. More...;  ; Real PolynomialValue (sofa::Index springIndex, Real strainValue);  ; Real PolynomialDerivativeValue (sofa::Index springIndex, Real strainValue);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Deployability,update,updateInternal,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Integrability,message,messages,"ue More...;  ; Data< Real > d_smoothScale;  denominator correction adding scale More...;  ; SingleLink< PolynomialRestShapeSpringsForceField< DataTypes >, sofa::core::behavior::MechanicalState< DataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > d_restMState;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecIndex m_indices;  ; VecIndex m_ext_indices;  ; type::vector< JacobianVector > m_differential;  ; VecReal m_directionSpringLength;  ; VecReal m_strainValue;  ; VecCoord m_weightedCoordinateDifference;  ; VecReal m_coordinateSquaredNorm;  ; type::vector< type::vector< sofa::Size > > m_polynomialsMap;  ; bool m_useRestMState;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Modifiability,inherit,inherited,"r< sofa::Index > > d_external_points;  points from the external Mechanical State that define the rest shape springs More...;  ; Data< VecReal > d_polynomialStiffness;  ; Data< type::vector< sofa::Size > > d_polynomialDegree;  Describe set of polynomial degrees fro every spring. More...;  ; Data< bool > d_recomputeIndices;  Recompute indices (should be false for BBOX) More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring color More...;  ; Data< float > d_showIndicesScale;  Scale for indices display. (default=0.02) More...;  ; Data< VecReal > d_zeroLength;  initial virtual length of the spring More...;  ; Data< Real > d_smoothShift;  denominator correction adding shift value More...;  ; Data< Real > d_smoothScale;  denominator correction adding scale More...;  ; SingleLink< PolynomialRestShapeSpringsForceField< DataTypes >, sofa::core::behavior::MechanicalState< DataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > d_restMState;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Security,access,access,"es > . bool sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >::m_useRestMState. protected . ◆ m_weightedCoordinateDifference. template<class DataTypes > . VecCoord sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >::m_weightedCoordinateDifference. protected . Constructor details. ◆ PolynomialRestShapeSpringsForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >::PolynomialRestShapeSpringsForceField. protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Add the forces. ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >::addKToMatrix ; (; const core::MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Brings ForceField contribution to the global system stiffness matrix. ; Implements sofa::core::behavior::BaseForceField. ◆ addMBKToMatrix(). temp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html
Deployability,update,updateInternal,":core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PolynomialSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_p1, const DataVecCoord &data_p2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const core::behavior::MultiMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html
Performance,load,loader,"seObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathObject1(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setPathObject2(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html
Testability,log,logging,"t DataVecCoord &data_p1, const DataVecCoord &data_p2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >inlinevirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanic",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html
Usability,clear,clearLoggedMessages,"::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; bwdInit() overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(unsigned int stiffnessIndex, unsigned int springIndex)sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_computeZeroLen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html
Availability,down,down,"BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes1 > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< DataTypes1 > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< DataTypes2 > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< DataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMech",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Deployability,update,updateInternal,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Energy Efficiency,energy,energy,";  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Integrability,message,messages,"be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring color More...;  ; Data< float > d_showIndicesScale;  Scale for indices display (default=0.02) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecIndex m_firstObjectIndices;  ; VecIndex m_secondObjectIndices;  ; type::vector< JacobianMatrix > m_differential;  ; VecReal m_springLength;  ; VecReal m_strainValue;  ; VecCoord m_weightedCoordinateDifference;  ; type::vector< type::vector< unsigned int > > m_polynomialsMap;  ; VecReal m_initialSpringLength;  ; VecReal m_strainSign;  ; std::vector< int > m_computeSpringsZeroLength;  ; const unsigned int m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Modifiability,inherit,inherited,"Data< VecIndex > d_secondObjectPoints;  points related to the second object More...;  ; Data< VecReal > d_polynomialStiffness;  ; Data< type::vector< unsigned int > > d_polynomialDegree;  Describe set of polynomial degrees fro every spring. More...;  ; Data< int > d_computeZeroLength;  flag to compute initial length for springs More...;  ; Data< VecReal > d_zeroLength;  initial length for springs More...;  ; Data< bool > d_recomputeIndices;  Recompute indices (should be false for BBOX) More...;  ; Data< bool > d_compressible;  Indicates if object compresses without any reaction force. More...;  ; Data< int > d_drawMode;  The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring color More...;  ; Data< float > d_showIndicesScale;  Scale for indices display (default=0.02) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html
Deployability,update,updateInternal,"ior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(QuadularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html
Performance,load,loader,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKd(const SReal kd)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >inline; setKs(const SReal ks)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(QuadularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; ForceField< DataTypes >::SOFA_C",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html
Testability,log,logging,"onst core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; applyPointDestruction(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html
Usability,clear,clearLoggedMessages,"::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForce(const VecDeriv &v, const EdgeInformation &einfo, const typename EdgeInformation::Spring &spring, Coord direction, Real distance)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeLocalJacobian(EdgeInformation &einfo, const Coord &direction, const ForceOutput &force)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeSpringForce(VecDeriv &f, const VecCoord &x, const VecDeriv &v, EdgeInformation &einfo, typename EdgeInformation::Spring &spring)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html
Availability,down,down,"emoveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions; ForceOutput computeForce (const VecDeriv &v, const EdgeInformation &einfo, const typename EdgeInformation::Spring &spring, Coord direction, Real distance);  ; Mat computeLocalJacobian (EdgeInformation &einfo, const Coord &direction, const ForceOutput &force);  ; void computeSpringForce (VecDeriv &f, const VecCoord &x, const VecDeriv &v, EdgeInformation &einfo, typename EdgeInformation::Spring &spring);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Me",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Deployability,update,updateMatrix," More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< sofa::type::vector< EdgeInformation > > edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ; bool updateMatrix;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  QuadularBendingSprings ();  ;  ~QuadularBendingSprings ();  ; void init () ove",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Integrability,message,messages,"form damping for the all springs More...;  ; SingleLink< QuadularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< sofa::type::vector< EdgeInformation > > edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ; bool updateMatrix;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Modifiability,inherit,inherited,"e <QuadularBendingSprings.h>. Inheritance diagram for sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; Bending springs added between vertices of quads sharing a common edge. The springs connect the vertices not belonging to the common edge. It compresses when the surface bends along the common edge. . Classes; class  EdgeInformation;  ; struct  ForceOutput;  . Public Attributes; Data< SReal > f_ks;  uniform stiffness for the all springs More...;  ; Data< SReal > f_kd;  uniform damping for the all springs More...;  ; SingleLink< QuadularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Security,access,access,"adularBendingSprings< DataTypes >::m_topology. protected . Pointer to the current topology. . ◆ updateMatrix. template<class DataTypes > . bool sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::updateMatrix. protected . Constructor details. ◆ QuadularBendingSprings(). template<class DataTypes > . sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::QuadularBendingSprings. ◆ ~QuadularBendingSprings(). template<class DataTypes > . sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::~QuadularBendingSprings. Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyEdgeCreation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::applyEdgeCreation ; (; Index ; edgeIndex, . EdgeIn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation Member List . This is the complete list of members for sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation, including all inherited members. EdgeInformation(int m1=0, int m2=0, int m3=0, int m4=0, SReal restlength1=0_sreal, SReal restlength2=0_sreal, const bool is_activated=false, const bool is_initialized=false)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformationinline; is_activatedsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation; is_initializedsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation; kdsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation; kssofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation; operator<<(std::ostream &os, const EdgeInformation &)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformationfriend; operator>>(std::istream &in, EdgeInformation &)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformationfriend; springssofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation. Generated on Mon Nov 11 2024 03:04:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_edge_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_edge_information-members.html
Availability,mask,maskInUsesofa,"ar *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; localRangesofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; Nsofa::component::solidmechanics::spring::SpringForceField< DataTypes >static; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html
Deployability,update,updateInternal,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html
Performance,load,load,"ReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; initializeTopologyHandler(sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; localRangesofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html
Testability,log,logging,"pes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(unsigned, unsigned, std::set< IndexPair > &)sofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >protected; sofa::component::solidmechanics::spring::SpringForceField::addSpring(sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::component::solidmechanics::spring::SpringForceField::addSpring(const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringForce(Real &p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html
Usability,clear,clear,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html
Availability,down,down," ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingSprings, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void setObject1 (MechanicalState *object1);  ; void setObject2 (MechanicalState *object2);  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Energy Efficiency,energy,energy,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Integrability,message,messages,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingSprings, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void setObject1 (MechanicalState *object1);  ; void setObject2 (Mechanical",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Modifiability,inherit,inherited,"spring::QuadBendingSprings< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >; Bending springs added between vertices of quads sharing a common edge. The springs connect the vertices not belonging to the common edge. It compresses when the surface bends along the common edge. . Public Attributes; sofa::core::objectmodel::RenamedData< type::Vec< 2, int > > localRange;  ; Data< type::Vec< 2, int > > d_localRange;  optional range of local DOF indices. Any computation involving only indices outside of this range are discarded (useful for parallelization using mesh partitioning) More...;  ; SingleLink< QuadBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< int > d_drawMode;  The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< type::vector< SReal > > d_ks;  List of stiffness for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< SReal > > d_kd;  List of damping for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< type::vector< SReal > > d_lengths;  List of lengths to create the springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Performance,load,load," Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::Mecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Usability,clear,clear,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html
Availability,mask,maskInUsesofa,"bjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; Nsofa::component::solidmechanics::spring::SpringForceField< DataTypes >static; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html
Deployability,update,updateInternal,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) overridesofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html
Performance,load,load,", const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; initializeTopologyHandler(sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html
Testability,log,logging,"icalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpring(const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringForce(Real &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, sofa::Index, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; addTag(Ta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html
Usability,clear,clear,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html
Availability,mask,maskInUse,"ected Member Functions |; List of all members . sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes > Class Template Reference . #include <RegularGridSpringForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >:. [legend]. Protected Attributes; Data< Real > d_linesStiffness;  Lines Stiffness. More...;  ; Data< Real > d_linesDamping;  Lines Damping. More...;  ; Data< Real > d_quadsStiffness;  Quads Stiffness. More...;  ; Data< Real > d_quadsDamping;  Quads Damping. More...;  ; Data< Real > d_cubesStiffness;  Cubes Stiffness. More...;  ; Data< Real > d_cubesDamping;  Cubes Damping. More...;  ; topology::container::grid::RegularGridTopology * topology;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Energy Efficiency,energy,energy,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Integrability,depend,dependent,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Modifiability,inherit,inherited,"ected Member Functions |; List of all members . sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes > Class Template Reference . #include <RegularGridSpringForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >:. [legend]. Protected Attributes; Data< Real > d_linesStiffness;  Lines Stiffness. More...;  ; Data< Real > d_linesDamping;  Lines Damping. More...;  ; Data< Real > d_quadsStiffness;  Quads Stiffness. More...;  ; Data< Real > d_quadsDamping;  Quads Damping. More...;  ; Data< Real > d_cubesStiffness;  Cubes Stiffness. More...;  ; Data< Real > d_cubesDamping;  Cubes Damping. More...;  ; topology::container::grid::RegularGridTopology * topology;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Performance,load,load," Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::Mecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Usability,clear,clear,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html
Availability,mask,maskInUsesofa,"bjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; N enum valuesofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr)sofa::core::behavior::PairStateAccessor< D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html
Deployability,update,updateInternal,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overrideso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html
Performance,load,load,", const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; initializeTopologyHandler(sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html
Testability,log,logging,"anicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpring(const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringForce(Real &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, sofa::Index, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; addTag(Ta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html
Usability,clear,clear,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html
Availability,down,down,"﻿. SOFA API: sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes > Class Template Reference . #include <RepulsiveSpringForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >:. [legend]. Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RepulsiveSpringForceField, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; SReal getPotentialEnergy (const sofa::core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Energy Efficiency,energy,energy,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Integrability,depend,dependent,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes > Class Template Reference . #include <RepulsiveSpringForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >:. [legend]. Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RepulsiveSpringForceField, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; SReal getPotentialEnergy (const sofa::core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Performance,load,load," Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::Mecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Usability,clear,clear,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html
Deployability,update,updateInternal,"; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; spatial_dimensionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >static; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) overridesofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) overridesofa::component::solidmechanics::spring::RestShapeSpringsForceF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html
Performance,load,loader,"::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; RestShapeSpringsForceField()sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protected; s_defaultActiveDirectionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protectedstatic; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; ForceField< DataTypes >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html
Testability,log,logging,"aVecCoord &x, const DataVecDeriv &v) overridesofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *matrix) overrid",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html
Usability,clear,clearLoggedMessages,"ofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkOutOfBoundsIndices()sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protected; checkOutOfBoundsIndices(const VecIndex &indices, const sofa::Size dimension)sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; coord_total_sizesofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activeDirectionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; d_angularStiffnesssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidme",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html
Availability,down,down,"emoveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  RestShapeSpringsForceField ();  ; void recomputeIndices ();  ; bool checkOutOfBoundsIndices ();  ; bool checkOutOfBoundsIndices (const VecIndex &indices, const sofa::Size dimension);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAcce",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Deployability,update,updateInternal,"LinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Integrability,message,messages,"rix< typename DataTypes::Real > matS;  ; SingleLink< RestShapeSpringsForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr sofa::Size spatial_dimensions = Coord::spatial_dimensions;  ; static constexpr sofa::Size coord_total_size = Coord::total_size;  . Protected Attributes; VecIndex m_indices;  ; VecIndex m_ext_indices;  ; type::vector< CPos > m_pivots;  ; SReal lastUpdatedStep {};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Modifiability,inherit,inherited,"shape springs More...;  ; Data< bool > d_recompute_indices;  Recompute indices (should be false for BBOX) More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring color. (default=[0.0,1.0,0.0,1.0]) More...;  ; Data< type::fixed_array< bool, coord_total_size > > d_activeDirections;  directions (translation, and rotation in case of Rigids) in which the spring is active More...;  ; SingleLink< RestShapeSpringsForceField< DataTypes >, sofa::core::behavior::MechanicalState< DataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_restMState;  ; linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real > matS;  ; SingleLink< RestShapeSpringsForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other inte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Security,access,access,":RestShapeSpringsForceField< DataTypes >::s_defaultActiveDirections = sofa::type::makeHomogeneousArray<bool, coord_total_size>(true). staticconstexprprotected . ◆ spatial_dimensions. template<class DataTypes > . constexpr sofa::Size sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >::spatial_dimensions = Coord::spatial_dimensions. staticconstexpr . Constructor details. ◆ RestShapeSpringsForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >::RestShapeSpringsForceField. protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Add the forces. ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >::addKToMatrix ; (; const core::MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Brings ForceField contribution to the global system stiffness matrix. ; Implements sofa::core::behavior::BaseForceField. ◆ buildDampingMatrix(). template<class DataT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Usability,simpl,simple,﻿. SOFA API: sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes > Class Template Reference . #include <RestShapeSpringsForceField.h>; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; More... Inheritance diagram for sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; Springs are applied to given degrees of freedom between their current positions and their rest shape positions. An external MechanicalState reference can also be passed to the ForceField as rest shape position. . Public Attributes; DataSubsetIndex d_points;  points controlled by the rest shape springs More...;  ; Data< VecReal > d_stiffness;  stiffness values between the actual position and the rest shape position More...;  ; Data< VecReal > d_angularStiffness;  angularStiffness assigned when controlling the rotation of the points More...;  ; Data< type::vector< CPos > > d_pivotPoints;  global pivot points used when translations instead of the rigid mass centers More...;  ; Data< VecIndex > d_external_points;  points from the external Mechanical State that define the rest shape springs More...;  ; Data< bool > d_recompute_indices;  Recompute indices (should be false for BBOX) More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring col,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html
Availability,mask,maskInUsesofa,"bjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; Nsofa::component::solidmechanics::spring::SpringForceField< DataTypes >static; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html
Deployability,update,updateInternal,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::SpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTy",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html
Performance,load,load,", const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; initializeTopologyHandler(sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html
Testability,log,logging,"pes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpring(const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringForce(Real &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, sofa::Index, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; addTag(Ta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html
Usability,clear,clear,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html
Availability,mask,maskInUse,"d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr auto N = DataTypes::spatial_dimensions;  . Protected Attributes; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Energy Efficiency,energy,energy,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Integrability,message,messages,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr auto N = DataTypes::spatial_dimensions;  . Protected Attributes; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Modifiability,inherit,inherited,"re...;  ; Data< type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< type::vector< SReal > > d_lengths;  List of lengths to create the springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< bool > > d_elongationOnly;  List of boolean stating on the fact that the spring should only apply forces on elongations. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, False will be applied everywhere. More...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Performance,load,load,"lState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::Mecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Usability,simpl,simple,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Static Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes > Class Template Reference . #include <SpringForceField.h>; Set of simple springs between particles. ; More... Inheritance diagram for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; Set of simple springs between particles. . Classes; class  Loader;  ; struct  SpringForce;  . Public Attributes; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< int > d_drawMode;  The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< type::vector< SReal > > d_ks;  List of stiffness for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< SReal > > d_kd;  List of damping for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< type::vector< SReal > > d_lengths;  List of lengths to create the springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< bool > > d_elongationOnly;  List of boolean stating on the fact that the spring sh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader Member List . This is the complete list of members for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, including all inherited members. addMass(SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool)sofa::helper::io::XspLoaderDataHookinlinevirtual; addSpring(size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loaderinlinevirtual; addVectorSpring(size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; destsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader; finalizeLoading(bool isOk)sofa::helper::io::XspLoaderDataHookinlinevirtual; Loader(SpringForceField< DataTypes > *dest)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loaderinline; setGravity(SReal, SReal, SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; setNumMasses(size_t)sofa::helper::io::XspLoaderDataHookinlinevirtual; setNumSprings(size_t)sofa::helper::io::XspLoaderDataHookinlinevirtual; setViscosity(SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; ~XspLoaderDataHook()sofa::helper::io::XspLoaderDataHookvirtual. Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_loader-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader Class Reference . Inheritance diagram for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader:. [legend]. Public Attributes; SpringForceField< DataTypes > * dest;  . Public Member Functions;  Loader (SpringForceField< DataTypes > *dest);  ; void addSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos) override;  Add a new spring. More...;  ;  Public Member Functions inherited from sofa::helper::io::XspLoaderDataHook; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Attribute details. ◆ dest. template<class DataTypes > . SpringForceField<DataTypes>* sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader::dest. Constructor details. ◆ Loader(). template<class DataTypes > . sofa::component::solidmechanics::spring::SpringForceField< DataTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_loader.html
Performance,load,loading,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader Class Reference . Inheritance diagram for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader:. [legend]. Public Attributes; SpringForceField< DataTypes > * dest;  . Public Member Functions;  Loader (SpringForceField< DataTypes > *dest);  ; void addSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos) override;  Add a new spring. More...;  ;  Public Member Functions inherited from sofa::helper::io::XspLoaderDataHook; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Attribute details. ◆ dest. template<class DataTypes > . SpringForceField<DataTypes>* sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader::dest. Constructor details. ◆ Loader(). template<class DataTypes > . sofa::component::solidmechanics::spring::SpringForceField< DataTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_loader.html
Availability,mask,maskInUsesofa,"s< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; Nsofa::component::solidmechanics::spring::SpringForceField< DataTypes >static; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html
Deployability,update,updateInternal,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html
Performance,load,load,"Only=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; initializeTopologyHandler(sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html
Testability,log,logging,"pes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(unsigned, unsigned)sofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes >protected; sofa::component::solidmechanics::spring::SpringForceField::addSpring(sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::component::solidmechanics::spring::SpringForceField::addSpring(const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringForce(Real &potentialEnergy, VecDe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html
Usability,clear,clear,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html
Availability,down,down,"BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes1 > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< DataTypes1 > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< DataTypes2 > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< DataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMech",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Energy Efficiency,energy,energy,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Integrability,message,messages,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangleBendingSprings, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::Pa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Modifiability,inherit,inherited,"tions |; List of all members . sofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes > Class Template Reference . #include <TriangleBendingSprings.h>. Inheritance diagram for sofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes >; Bending springs added between vertices of triangles sharing a common edge. The springs connect the vertices not belonging to the common edge. It compresses when the surface bends along the common edge.; @author The SOFA team </www.sofa-framework.org>; . Public Attributes; SingleLink< TriangleBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< int > d_drawMode;  The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< type::vector< SReal > > d_ks;  List of stiffness for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< SReal > > d_kd;  List of damping for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< type::vector< SReal > > d_lengths;  List of lengths to create the springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Performance,load,load,"ringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::Mecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Usability,clear,clear,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html
Deployability,update,updateInternal,"a::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TriangularBendingSprings()sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< Data",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::TriangularBendingS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html
Performance,load,loader,"removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKd(const Real kd)sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; setKs(const Real ks)sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; ForceField< DataTypes >::SO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html
Testability,log,logging,"st core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >protected; applyPointDes",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html
Usability,clear,clearLoggedMessages,"jectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kdsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showSpringssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; DataTypes typedefsofa::core::b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html
Availability,down,down,"inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual Real getKs () const;  Getter/setter on the mesh spring stiffness. More...;  ; void setKs (const Real ks);  ; virtual Real getKd () const;  Getter/setter on the mesh spring damping. More...;  ; void s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Energy Efficiency,energy,energy,"rom sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  potential energy accumulate in method More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the linked topology used to create this spring forcefield. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-ma",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Integrability,message,messages,"y;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::objectmodel::RenamedData< type::vector< EdgeInformation > > edgeInfo;  ; sofa::core::topology::EdgeData< type::vector< EdgeInformation > > d_edgeInfo;  Internal edge data. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  potential energy accumulate in method More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the linked topology used to create this spring forcefield. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inheri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Modifiability,inherit,inherited,"an only by adjacent to maximum 2 triangles. If more than 2 triangles are connected to an edge, only one spring will be created (the first 2 triangles encountered during initialisation phase); AuthorThe SOFA team </www.sofa-framework.org> . Classes; class  EdgeInformation;  . Public Attributes; Data< Real > d_ks;  uniform stiffness for the all springs More...;  ; Data< Real > d_kd;  uniform damping for the all springs More...;  ; Data< bool > d_showSprings;  option to draw springs More...;  ; SingleLink< TriangularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::objectmodel::RenamedData< type::vector< EdgeInformation > > edgeInfo;  ; sofa::core::topology::EdgeData< type::vector< EdgeInformation > > d_edgeInfo;  Internal edge data. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Security,access,access,"opology::BaseMeshTopology* sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::m_topology. protected . Pointer to the linked topology used to create this spring forcefield. . Constructor details. ◆ TriangularBendingSprings(). template<class DataTypes > . sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::TriangularBendingSprings. protected . ◆ ~TriangularBendingSprings(). template<class DataTypes > . sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::~TriangularBendingSprings. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyEdgeCreation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::applyEdgeCreation ; (; Index ; edgeIndex, . Ed",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation, including all inherited members. DfDxsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation; EdgeInformation(int m1=0, int m2=0, Real restlength=0.0, bool is_activated=false, bool is_initialized=false)sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformationinline; is_activatedsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation; is_initializedsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation; kdsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation; kssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation; m1sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation; m2sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation; operator<<(std::ostream &os, const EdgeInformation &)sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformationfriend; operator>>(std::istream &in, EdgeInformation &)sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformationfriend; restlengthsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::EdgeInformation. Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs_1_1_edge_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs_1_1_edge_information-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformation, including all inherited members. currentSquareLengthsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformation; deltaL2sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformation; EdgeRestInformation()=defaultsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformation; operator<<(std::ostream &os, const EdgeRestInformation &)sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformationfriend; operator>>(std::istream &in, EdgeRestInformation &)sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformationfriend; restSquareLengthsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformation; stiffnesssofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::EdgeRestInformation. Generated on Mon Nov 11 2024 03:06:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_fiel20df208bd6f402dee690649e671e9c95.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_fiel20df208bd6f402dee690649e671e9c95.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation, including all inherited members. areasofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; areaVectorsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; currentNormalsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; DfDxsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; dpsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; gammasofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; Jsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; lastValidNormalsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; operator<<(std::ostream &os, const TriangleRestInformation &)sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformationfriend; operator>>(std::istream &in, TriangleRestInformation &)sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformationfriend; restAreasofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangleRestInformation; stiffnesssofa::component::solidmechanics::spring::TriangularBiquadraticSpring",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_fiel2168b875f677a1dff47eacb199b0ab36.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_fiel2168b875f677a1dff47eacb199b0ab36.html
Deployability,update,updateInternal,"es >; SOFA_CLASS(SOFA_TEMPLATE(TriangularBiquadraticSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triangleInfosofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; TriangularBiquadraticSpringsForceField()sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >, including all inherited members. _initialPointssofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::Mech",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html
Performance,load,loader,"seNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(const Real ratio)sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(const Real modulus)sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularBiquadraticSpringsForceField, DataTypes), SOFA_TEMPLA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html
Testability,log,logging,"nicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &edge, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs)sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html
Usability,clear,clearLoggedMessages,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_dampingRatiosofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularBiquadrat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html
Availability,down,down,"ed from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularBiquadraticSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; virtual Real getLambda () const;  ; virtual Real getMu () const;  ; void setYoungModulus (const Real modulus);  ; void setPoissonRatio (const Real ratio);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateLameCoefficients ();  compute lambda and mu based on the Young modulus and Poisson ratio More...;  ; void applyEdgeCreation ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Deployability,update,updateMatrix,"ectmodel::RenamedData< type::vector< TriangleRestInformation > > triangleInfo;  ; sofa::core::objectmodel::RenamedData< type::vector< EdgeRestInformation > > edgeInfo;  ; sofa::core::objectmodel::RenamedData< VecCoord > _initialPoints;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; sofa::core::objectmodel::RenamedData< Real > f_dampingRatio;  ; sofa::core::objectmodel::RenamedData< bool > f_useAngularSprings;  ; sofa::core::objectmodel::RenamedData< bool > f_compressible;  ; sofa::core::objectmodel::RenamedData< Real > f_stiffnessMatrixRegularizationWeight;  ; sofa::core::topology::TriangleData< type::vector< TriangleRestInformation > > d_triangleInfo;  Internal triangle data. More...;  ; sofa::core::topology::EdgeData< type::vector< EdgeRestInformation > > d_edgeInfo;  Internal edge data. More...;  ; Data< VecCoord > d_initialPoints;  Initial Position. More...;  ; bool updateMatrix;  ; Data< Real > d_poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< Real > d_youngModulus;  Young modulus in Hooke's law. More...;  ; Data< Real > d_dampingRatio;  Ratio damping/stiffness. More...;  ; Data< bool > d_useAngularSprings;  If Angular Springs should be used or not. More...;  ; Data< bool > d_compressible;  If additional energy penalizing compressibility should be used. More...;  ; Data< Real > d_stiffnessMatrixRegularizationWeight;  Regularization of the Stiffnes Matrix (between 0 and 1) More...;  ; Real lambda;  ; Real mu;  first Lame coefficient More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Energy Efficiency,energy,energy,"RenamedData< Real > f_youngModulus;  ; sofa::core::objectmodel::RenamedData< Real > f_dampingRatio;  ; sofa::core::objectmodel::RenamedData< bool > f_useAngularSprings;  ; sofa::core::objectmodel::RenamedData< bool > f_compressible;  ; sofa::core::objectmodel::RenamedData< Real > f_stiffnessMatrixRegularizationWeight;  ; sofa::core::topology::TriangleData< type::vector< TriangleRestInformation > > d_triangleInfo;  Internal triangle data. More...;  ; sofa::core::topology::EdgeData< type::vector< EdgeRestInformation > > d_edgeInfo;  Internal edge data. More...;  ; Data< VecCoord > d_initialPoints;  Initial Position. More...;  ; bool updateMatrix;  ; Data< Real > d_poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< Real > d_youngModulus;  Young modulus in Hooke's law. More...;  ; Data< Real > d_dampingRatio;  Ratio damping/stiffness. More...;  ; Data< bool > d_useAngularSprings;  If Angular Springs should be used or not. More...;  ; Data< bool > d_compressible;  If additional energy penalizing compressibility should be used. More...;  ; Data< Real > d_stiffnessMatrixRegularizationWeight;  Regularization of the Stiffnes Matrix (between 0 and 1) More...;  ; Real lambda;  ; Real mu;  first Lame coefficient More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Integrability,message,messages,"ation;  . Public Attributes; SingleLink< TriangularBiquadraticSpringsForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::objectmodel::RenamedData< type::vector< TriangleRestInformation > > triangleInfo;  ; sofa::core::objectmodel::RenamedData< type::vector< EdgeRestInformation > > edgeInfo;  ; sofa::core::objectmodel::RenamedData< VecCoord > _initialPoints;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; sofa::core::objectmodel::Rena",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Modifiability,inherit,inherited,"cSpringsForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes > Class Template Reference . #include <TriangularBiquadraticSpringsForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >:. [legend]. Classes; class  EdgeRestInformation;  ; class  Mat3;  ; class  TriangleRestInformation;  . Public Attributes; SingleLink< TriangularBiquadraticSpringsForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Security,access,access,"TriangularBiquadraticSpringsForceField< DataTypes >::updateMatrix. protected . Constructor details. ◆ TriangularBiquadraticSpringsForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::TriangularBiquadraticSpringsForceField. protected . second Lame coefficient . ◆ ~TriangularBiquadraticSpringsForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::~TriangularBiquadraticSpringsForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyEdgeCreation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::applyEdgeCreation ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::Mat3 Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::Mat3, including all inherited members. Array typedefsofa::type::fixed_array< Deriv, 3 >; array() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; array() noexceptsofa::type::fixed_array< Deriv, 3 >inline; assign(const Deriv &value) noexceptsofa::type::fixed_array< Deriv, 3 >inline; at(size_type i)sofa::type::fixed_array< Deriv, 3 >inline; at(size_type i) constsofa::type::fixed_array< Deriv, 3 >inline; back()sofa::type::fixed_array< Deriv, 3 >inline; back() constsofa::type::fixed_array< Deriv, 3 >inline; begin() noexceptsofa::type::fixed_array< Deriv, 3 >inline; begin() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; cbegin() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; cend() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; const_iterator typedefsofa::type::fixed_array< Deriv, 3 >; const_reference typedefsofa::type::fixed_array< Deriv, 3 >; data() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; difference_type typedefsofa::type::fixed_array< Deriv, 3 >; elemssofa::type::fixed_array< Deriv, 3 >; empty() noexceptsofa::type::fixed_array< Deriv, 3 >inlinestatic; end() noexceptsofa::type::fixed_array< Deriv, 3 >inline; end() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; fixed_array()sofa::type::fixed_array< Deriv, 3 >inline; fixed_array(value_type r1) noexceptsofa::type::fixed_array< Deriv, 3 >inlineexplicit; fixed_array(ArgsT &&... r) noexceptsofa::type::fixed_array< Deriv, 3 >inline; front()sofa::type::fixed_array< Deriv, 3 >inline; front() constsofa::type::fixed_array< Deriv, 3 >inline; get() &noexceptsofa::type::fixed_array< Deriv, 3 >inline; get() const &noexceptsofa::t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field_1_1_mat3-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field_1_1_mat3-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::Mat3 Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::Mat3 Class Reference . #include <TriangularBiquadraticSpringsForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::Mat3:. [legend]. Public Member Functions; Deriv operator* (const Deriv &v);  ; Deriv transposeMultiply (const Deriv &v);  ;  Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr Deriv & get () &noexcept;  ; constexpr const Deriv & get () const &noexcept;  ; constexpr Deriv && get () &&noexcept;  ; constexpr const Deriv && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< Deriv, N > &y);  ; constexpr const Deriv * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array Mor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field_1_1_mat3.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field_1_1_mat3.html
Security,access,access,">. Inheritance diagram for sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >::Mat3:. [legend]. Public Member Functions; Deriv operator* (const Deriv &v);  ; Deriv transposeMultiply (const Deriv &v);  ;  Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr Deriv & get () &noexcept;  ; constexpr const Deriv & get () const &noexcept;  ; constexpr Deriv && get () &&noexcept;  ; constexpr const Deriv && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< Deriv, N > &y);  ; constexpr const Deriv * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< Deriv, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const Deriv &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< Deriv, 3 >; Deriv elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; static constexpr size_type size () noexcept;  ; static b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field_1_1_mat3.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field_1_1_mat3.html
Deployability,update,updateInternal,"r< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularQuadraticSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triangleInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; TriangularQuadraticSpringsForceField()sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >, including all inherited members. _initialPointssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalPa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html
Performance,load,loader,"BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(const Real ratio)sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(const Real modulus)sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularQuadraticSpringsForceField, DataTypes), SOFA_TEMPLATE(c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html
Testability,log,logging,"hanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &edge, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs)sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html
Usability,clear,clearLoggedMessages,"el::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingRatiosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::compone",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html
Availability,down,down,"ted from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularQuadraticSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; virtual Real getLambda () const;  ; virtual Real getMu () const;  ; void setYoungModulus (const Real modulus);  ; void setPoissonRatio (const Real ratio);  ; void includeAngularSprings (const bool useAngularSprings);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateLameCoefficients ();  compute lambda and mu based on the Young ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Deployability,update,updateMatrix,"ource framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes > Class Template Reference . #include <TriangularQuadraticSpringsForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >:. [legend]. Classes; class  EdgeRestInformation;  ; class  Mat3;  ; class  TriangleRestInformation;  . Protected Attributes; sofa::core::objectmodel::RenamedData< VecCoord > _initialPoints;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; sofa::core::objectmodel::RenamedData< Real > f_dampingRatio;  ; sofa::core::objectmodel::RenamedData< bool > f_useAngularSprings;  ; Data< VecCoord > d_initialPoints;  Initial Position. More...;  ; bool updateMatrix;  ; Data< Real > d_poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< Real > d_youngModulus;  Young modulus in Hooke's law. More...;  ; Data< Real > d_dampingRatio;  Ratio damping/stiffness. More...;  ; Data< bool > d_useAngularSprings;  If Angular Springs should be used or not. More...;  ; Real lambda;  ; Real mu;  first Lame coefficient More...;  ; SingleLink< TriangularQuadraticSpringsForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  second Lame coefficient More...;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< TriangleRestInformation > > triangleInfo;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< EdgeRestInformation > > edgeInfo;  ; sofa::core::topology::TriangleData< sofa::type::vector< TriangleRestInformation > > d_triangleInfo;  Internal triangle data. More...;  ; sofa::core::topology::EdgeData< sofa::type::vector< EdgeRestInformation > > d_edgeInfo;  Internal edge data. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Integrability,depend,dependent," the system matrix corresponding to . More...;  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Modifiability,inherit,inherited,"re::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  second Lame coefficient More...;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< TriangleRestInformation > > triangleInfo;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< EdgeRestInformation > > edgeInfo;  ; sofa::core::topology::TriangleData< sofa::type::vector< TriangleRestInformation > > d_triangleInfo;  Internal triangle data. More...;  ; sofa::core::topology::EdgeData< sofa::type::vector< EdgeRestInformation > > d_edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularQuadraticSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Security,access,access," sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::updateMatrix. protected . Constructor details. ◆ TriangularQuadraticSpringsForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangularQuadraticSpringsForceField. protected . ◆ ~TriangularQuadraticSpringsForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::~TriangularQuadraticSpringsForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyEdgeCreation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::applyEdgeCreation ; (;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3 Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3, including all inherited members. Array typedefsofa::type::fixed_array< Deriv, 3 >; array() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; array() noexceptsofa::type::fixed_array< Deriv, 3 >inline; assign(const Deriv &value) noexceptsofa::type::fixed_array< Deriv, 3 >inline; at(size_type i)sofa::type::fixed_array< Deriv, 3 >inline; at(size_type i) constsofa::type::fixed_array< Deriv, 3 >inline; back()sofa::type::fixed_array< Deriv, 3 >inline; back() constsofa::type::fixed_array< Deriv, 3 >inline; begin() noexceptsofa::type::fixed_array< Deriv, 3 >inline; begin() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; cbegin() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; cend() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; const_iterator typedefsofa::type::fixed_array< Deriv, 3 >; const_reference typedefsofa::type::fixed_array< Deriv, 3 >; data() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; difference_type typedefsofa::type::fixed_array< Deriv, 3 >; elemssofa::type::fixed_array< Deriv, 3 >; empty() noexceptsofa::type::fixed_array< Deriv, 3 >inlinestatic; end() noexceptsofa::type::fixed_array< Deriv, 3 >inline; end() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; fixed_array()sofa::type::fixed_array< Deriv, 3 >inline; fixed_array(value_type r1) noexceptsofa::type::fixed_array< Deriv, 3 >inlineexplicit; fixed_array(ArgsT &&... r) noexceptsofa::type::fixed_array< Deriv, 3 >inline; front()sofa::type::fixed_array< Deriv, 3 >inline; front() constsofa::type::fixed_array< Deriv, 3 >inline; get() &noexceptsofa::type::fixed_array< Deriv, 3 >inline; get() const &noexceptsofa::type:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3 Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3 Class Reference . #include <TriangularQuadraticSpringsForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3:. [legend]. Public Member Functions; Deriv operator* (const Deriv &v);  ; Deriv transposeMultiply (const Deriv &v);  ;  Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr Deriv & get () &noexcept;  ; constexpr const Deriv & get () const &noexcept;  ; constexpr Deriv && get () &&noexcept;  ; constexpr const Deriv && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< Deriv, N > &y);  ; constexpr const Deriv * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3.html
Security,access,access,".h>. Inheritance diagram for sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3:. [legend]. Public Member Functions; Deriv operator* (const Deriv &v);  ; Deriv transposeMultiply (const Deriv &v);  ;  Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr Deriv & get () &noexcept;  ; constexpr const Deriv & get () const &noexcept;  ; constexpr Deriv && get () &&noexcept;  ; constexpr const Deriv && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< Deriv, N > &y);  ; constexpr const Deriv * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< Deriv, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const Deriv &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< Deriv, 3 >; Deriv elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; static constexpr size_type size () noexcept;  ; static b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformation, including all inherited members. currentLengthsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformation; dlsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformation; EdgeRestInformation()=defaultsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformation; operator<<(std::ostream &os, const EdgeRestInformation &)sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformationfriend; operator>>(std::istream &in, EdgeRestInformation &)sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformationfriend; restLengthsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformation; stiffnesssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::EdgeRestInformation. Generated on Mon Nov 11 2024 03:07:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_893dca3a156d1407de7740ab16bd8174.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_893dca3a156d1407de7740ab16bd8174.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformation, including all inherited members. DfDxsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformation; gammasofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformation; operator<<(std::ostream &os, const TriangleRestInformation &)sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformationfriend; operator>>(std::istream &in, TriangleRestInformation &)sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformationfriend; stiffnesssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformation; TriangleRestInformation()=defaultsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::TriangleRestInformation. Generated on Mon Nov 11 2024 03:07:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_caa747ab5028c30eb63dc8dbffaf223b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_caa747ab5028c30eb63dc8dbffaf223b.html
Deployability,update,updateInternal,"eAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(VectorSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; springArraysofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useTopologysofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VectorSpringForceField()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; VectorSpringForceField(MechanicalState *_object)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; VectorSpringForceField(MechanicalState *_object1, MechanicalState *_object2)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; writeDatas(std::map< std::string, std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) overridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html
Performance,load,load,"st char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path)sofa::core::behavior::BaseInteractionForceFieldinlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; Loader classsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >friend; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_filenamesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; m_stiffnesssofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; m_topologysofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html
Testability,log,logging,"pes >virtual; addForce(const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(int m1, int m2, SReal ks, SReal kd, Coord restVector)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::VectorSp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html
Usability,clear,clear,"; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; createDefaultSprings()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; createEdgeInformation(Index, Spring &t, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs)sofa::component::solidmechanics::sp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html
Availability,down,down,"::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(VectorSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; bool load (const char *filename);  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void createDefaultSprings ();  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; Real g",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Deployability,update,updateInternal,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Energy Efficiency,energy,energy,";  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Integrability,message,messages,":core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; bool useTopology;  true if the springs are initialized from the topology More...;  ; sofa::type::vector< core::topology::BaseMeshTopology::Edge > edgeArray;  indices in case we don't use the topology More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Modifiability,inherit,inherited,"RenamedData< bool > m_useTopology;  ; sofa::core::topology::EdgeData< sofa::type::vector< Spring > > d_springArray;  where the springs information are stored More...;  ; sofa::core::objectmodel::DataFileName d_filename;  the filename where to load the spring information More...;  ; Data< SReal > d_stiffness;  By default, assume that all edges have the same stiffness. More...;  ; Data< SReal > d_viscosity;  By default, assume that all edges have the same viscosity. More...;  ; Data< bool > d_useTopology;  Activate/Deactivate topology mode of the component (springs on each edge) More...;  ; SingleLink< VectorSpringForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Performance,load,load,"or multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes > Class Template Reference . #include <VectorSpringForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >:. [legend]. Classes; class  Loader;  ; struct  Spring;  . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< Spring > > springArray;  ; sofa::core::objectmodel::DataFileName m_filename;  ; sofa::core::objectmodel::RenamedData< SReal > m_stiffness;  ; sofa::core::objectmodel::RenamedData< SReal > m_viscosity;  ; sofa::core::objectmodel::RenamedData< bool > m_useTopology;  ; sofa::core::topology::EdgeData< sofa::type::vector< Spring > > d_springArray;  where the springs information are stored More...;  ; sofa::core::objectmodel::DataFileName d_filename;  the filename where to load the spring information More...;  ; Data< SReal > d_stiffness;  By default, assume that all edges have the same stiffness. More...;  ; Data< SReal > d_viscosity;  By default, assume that all edges have the same viscosity. More...;  ; Data< bool > d_useTopology;  Activate/Deactivate topology mode of the component (springs on each edge) More...;  ; SingleLink< VectorSpringForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Usability,clear,clear,"VecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; Real getStiffness () const;  ; const Real getViscosity () const;  ; const core::topology::EdgeData< sofa::type::vector< Spring > > & getSpringArray () const;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; void addSpring (int m1, int m2, SReal ks, SReal kd, Coord restVector);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader Member List . This is the complete list of members for sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader, including all inherited members. addMass(SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool)sofa::helper::io::XspLoaderDataHookinlinevirtual; addSpring(size_t, size_t, SReal, SReal, SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; addVectorSpring(size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal restx, SReal resty, SReal restz)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loaderinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader; destsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader; finalizeLoading(bool isOk)sofa::helper::io::XspLoaderDataHookinlinevirtual; Loader(VectorSpringForceField< DataTypes > *dest)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loaderinline; Real typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader; setGravity(SReal, SReal, SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; setNumMasses(size_t)sofa::helper::io::XspLoaderDataHookinlinevirtual; setNumSprings(size_t)sofa::helper::io::XspLoaderDataHookinlinevirtual; setViscosity(SReal)sofa::helper::io::XspLoaderDataHookinlinevirtual; ~XspLoaderDataHook()sofa::helper::io::XspLoaderDataHookvirtual. Generated on Mon Nov 11 2024 03:08:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_loader-members.html
Modifiability,extend,extended,"﻿. SOFA API: sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader Class Reference . Inheritance diagram for sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader:. [legend]. Public Attributes; VectorSpringForceField< DataTypes > * dest;  . Public Member Functions;  Loader (VectorSpringForceField< DataTypes > *dest);  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal restx, SReal resty, SReal restz);  Add an extended spring. More...;  ;  Public Member Functions inherited from sofa::helper::io::XspLoaderDataHook; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  . Attribute details. ◆ dest. template<class DataTypes > . VectorSpringForceField<DataTypes>* sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader::dest. Constructor details. ◆ Loader(). template<class DataTypes > . sofa::component::solidmecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_loader.html
Performance,load,loading,"﻿. SOFA API: sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader Class Reference . Inheritance diagram for sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader:. [legend]. Public Attributes; VectorSpringForceField< DataTypes > * dest;  . Public Member Functions;  Loader (VectorSpringForceField< DataTypes > *dest);  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal restx, SReal resty, SReal restz);  Add an extended spring. More...;  ;  Public Member Functions inherited from sofa::helper::io::XspLoaderDataHook; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  . Attribute details. ◆ dest. template<class DataTypes > . VectorSpringForceField<DataTypes>* sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader::dest. Constructor details. ◆ Loader(). template<class DataTypes > . sofa::component::solidmecha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_loader.html
Deployability,update,updateInternal,"or::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedralTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedralTensorMassForceField()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecType typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >, including all inherited members. _initialPointssofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html
Performance,load,loader,":BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(const Real ratio)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(const Real modulus)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedralTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html
Testability,log,logging,"chanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTetrahedronCreation(const sofa::type::vector< Index > &tetrahedronAdded, const sofa::type::vector< core::topology::BaseMeshTopology::Tetrahedron > &, const sofa::type::vector< sofa::type::vector< Index > > &, const sofa::type::vector< sofa::type::vector< SReal > > &)sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html
Usability,clear,clearLoggedMessages,"gMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; buildStiffnessMatrix(sofa::core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgeRestInformation(Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html
Availability,down,down,"erited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initNeighbourhoodPoints ();  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildStiffnessMatrix (sofa::core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; virtual Real getLambda () const;  ; virtual Real getMu () const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams) const override;  Get the potential energy associated to this ForceField during the last call of addForce( const MechanicalParams* mparams );. More...;  ; void setYoungModulus (con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Deployability,update,updateMatrix,"﻿. SOFA API: sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes > Class Template Reference . #include <TetrahedralTensorMassForceField.h>. Inheritance diagram for sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >:. [legend]. Classes; class  EdgeRestInformation;  . Protected Attributes; VecCoord _initialPoints;  the initial positions of the points More...;  ; bool updateMatrix;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; Data< Real > d_poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< Real > d_youngModulus;  Young's modulus in Hooke's law. More...;  ; Real lambda;  ; Real mu;  first Lame coefficient More...;  ; SingleLink< TetrahedralTensorMassForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  second Lame coefficient More...;  ; sofa::core::objectmodel::RenamedData< edgeRestInfoVector > edgeInfo;  ; core::topology::EdgeData< edgeRestInfoVector > d_edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Energy Efficiency,energy,energy,"links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initNeighbourhoodPoints ();  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildStiffnessMatrix (sofa::core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; virtual Real getLambda () const;  ; virtual Real getMu () const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams) const override;  Get the potential energy associated to this ForceField during the last call of addForce( const MechanicalParams* mparams );. More...;  ; void setYoungModulus (const Real modulus);  ; void setPoissonRatio (const Real ratio);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateLameCoefficients ();  compute lambda and mu based on the Young modulus and Poisson ratio More...;  ; void createEdgeRestInformation (Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ; void applyTetrahedronCreation (const s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Integrability,depend,dependent,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Modifiability,inherit,inherited,"Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; Data< Real > d_poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< Real > d_youngModulus;  Young's modulus in Hooke's law. More...;  ; Real lambda;  ; Real mu;  first Lame coefficient More...;  ; SingleLink< TetrahedralTensorMassForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  second Lame coefficient More...;  ; sofa::core::objectmodel::RenamedData< edgeRestInfoVector > edgeInfo;  ; core::topology::EdgeData< edgeRestInfoVector > d_edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Security,access,access,"class DataTypes > . bool sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::updateMatrix. protected . Constructor details. ◆ TetrahedralTensorMassForceField(). template<class DataTypes > . sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::TetrahedralTensorMassForceField. protected . ◆ ~TetrahedralTensorMassForceField(). template<class DataTypes > . sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::~TetrahedralTensorMassForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyTetrahedronCreation(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::applyTetrahedronC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::EdgeRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::EdgeRestInformation, including all inherited members. DfDxsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::EdgeRestInformation; EdgeRestInformation()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::EdgeRestInformationinline; operator<<(std::ostream &os, const EdgeRestInformation &)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::EdgeRestInformationfriend; operator>>(std::istream &in, EdgeRestInformation &)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::EdgeRestInformationfriend; verticessofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::EdgeRestInformation. Generated on Mon Nov 11 2024 03:09:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field_1eb0fc0a974463f19d5f6066263586323.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field_1eb0fc0a974463f19d5f6066263586323.html
Deployability,update,updateInternal,"cessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TriangularTensorMassForceField()sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFie",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >, including all inherited members. _initialPointssofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addBToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor)sofa::core::behavior::ForceField< DataTypes >virtual; addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::ForceField< DataTypes >inline; sofa::core::behavior::BaseForceField::addClambda(const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) overridesofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >virtual; ForceField< DataTypes >::addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addForce(const core::MechanicalParams *mp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html
Performance,load,loader,"::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(const Real ratio)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(const Real modulus)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::beh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html
Testability,log,logging,"echanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeRestInformation &, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html
Usability,clear,clearLoggedMessages,"odel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; d_youngModulussofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; DataTypes typedefsofa::core::behavio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html
Availability,down,down,"erited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; virtual Real getLambda () const;  ; virtual Real getMu () const;  ; void setYoungModulus (const Real modulus);  ; void setPoissonRatio (const Real ratio);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateLameCoefficients ();  compute lambda and mu based on the Young modulus and Poisson ratio More...;  ;  Public Member Functions in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Deployability,update,updateMatrix,"orMassForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes > Class Template Reference . #include <TriangularTensorMassForceField.h>. Inheritance diagram for sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >:. [legend]. Classes; class  EdgeRestInformation;  ; class  Mat3;  . Protected Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< EdgeRestInformation > > edgeInfo;  ; sofa::core::topology::EdgeData< sofa::type::vector< EdgeRestInformation > > d_edgeInfo;  Internal edge data. More...;  ; VecCoord _initialPoints;  the initial positions of the points More...;  ; bool updateMatrix;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; Data< Real > d_poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< Real > d_youngModulus;  Young's modulus in Hooke's law. More...;  ; SingleLink< TriangularTensorMassForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Real lambda;  ; Real mu;  first Lame coefficient More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLEL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Integrability,depend,dependent," the system matrix corresponding to . More...;  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Modifiability,inherit,inherited,"dateMatrix;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; Data< Real > d_poissonRatio;  Poisson ratio in Hooke's law. More...;  ; Data< Real > d_youngModulus;  Young's modulus in Hooke's law. More...;  ; SingleLink< TriangularTensorMassForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Real lambda;  ; Real mu;  first Lame coefficient More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Performance,load,loader,"liant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Security,access,access,". bool sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::updateMatrix. protected . Constructor details. ◆ TriangularTensorMassForceField(). template<class DataTypes > . sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::TriangularTensorMassForceField. protected . second Lame coefficient . ◆ ~TriangularTensorMassForceField(). template<class DataTypes > . sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::~TriangularTensorMassForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyEdgeCreation(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::applyEdgeCreation ; (; Ind",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::EdgeRestInformation Member List . This is the complete list of members for sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::EdgeRestInformation, including all inherited members. DfDxsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::EdgeRestInformation; EdgeRestInformation()sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::EdgeRestInformationinline; operator<<(std::ostream &os, const EdgeRestInformation &)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::EdgeRestInformationfriend; operator>>(std::istream &in, EdgeRestInformation &)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::EdgeRestInformationfriend. Generated on Mon Nov 11 2024 03:09:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_edge_rest_information-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_edge_rest_information-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::Mat3 Member List . This is the complete list of members for sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::Mat3, including all inherited members. Array typedefsofa::type::fixed_array< Deriv, 3 >; array() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; array() noexceptsofa::type::fixed_array< Deriv, 3 >inline; assign(const Deriv &value) noexceptsofa::type::fixed_array< Deriv, 3 >inline; at(size_type i)sofa::type::fixed_array< Deriv, 3 >inline; at(size_type i) constsofa::type::fixed_array< Deriv, 3 >inline; back()sofa::type::fixed_array< Deriv, 3 >inline; back() constsofa::type::fixed_array< Deriv, 3 >inline; begin() noexceptsofa::type::fixed_array< Deriv, 3 >inline; begin() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; cbegin() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; cend() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; const_iterator typedefsofa::type::fixed_array< Deriv, 3 >; const_reference typedefsofa::type::fixed_array< Deriv, 3 >; data() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; difference_type typedefsofa::type::fixed_array< Deriv, 3 >; elemssofa::type::fixed_array< Deriv, 3 >; empty() noexceptsofa::type::fixed_array< Deriv, 3 >inlinestatic; end() noexceptsofa::type::fixed_array< Deriv, 3 >inline; end() const noexceptsofa::type::fixed_array< Deriv, 3 >inline; fixed_array()sofa::type::fixed_array< Deriv, 3 >inline; fixed_array(value_type r1) noexceptsofa::type::fixed_array< Deriv, 3 >inlineexplicit; fixed_array(ArgsT &&... r) noexceptsofa::type::fixed_array< Deriv, 3 >inline; front()sofa::type::fixed_array< Deriv, 3 >inline; front() constsofa::type::fixed_array< Deriv, 3 >inline; get() &noexceptsofa::type::fixed_array< Deriv, 3 >inline; get() const &noexceptsofa::type::fix",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_mat3-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_mat3-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::Mat3 Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::Mat3 Class Reference . #include <TriangularTensorMassForceField.h>. Inheritance diagram for sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::Mat3:. [legend]. Public Member Functions; Deriv operator* (const Deriv &v);  ; Deriv transposeMultiply (const Deriv &v);  ;  Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr Deriv & get () &noexcept;  ; constexpr const Deriv & get () const &noexcept;  ; constexpr Deriv && get () &&noexcept;  ; constexpr const Deriv && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< Deriv, N > &y);  ; constexpr const Deriv * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_mat3.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_mat3.html
Security,access,access,"ld.h>. Inheritance diagram for sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::Mat3:. [legend]. Public Member Functions; Deriv operator* (const Deriv &v);  ; Deriv transposeMultiply (const Deriv &v);  ;  Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr Deriv & get () &noexcept;  ; constexpr const Deriv & get () const &noexcept;  ; constexpr Deriv && get () &&noexcept;  ; constexpr const Deriv && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< Deriv, N > &y);  ; constexpr const Deriv * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< Deriv, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const Deriv &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< Deriv, 3 >; Deriv elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; static constexpr size_type size () noexcept;  ; static b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_mat3.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field_1_1_mat3.html
Deployability,update,updateInternal,"td::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(SOFA_TEMPLATE(MappedObject, DataTypes), SOFA_TEMPLATE(core::State, DataTypes))sofa::component::statecontainer::MappedObject< DataTypes >; State< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::statecontainer::MappedObject< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::statecontainer::MappedObject< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; write(core::VecCoordId v) overridesofa::component::statecontainer::MappedObject< DataTypes >inlinevirtual; write(core::VecDerivId v) overridesofa::component::statecontainer::MappedObject< DataTypes >inlinevirtual; write(core::MatrixDerivId) overridesofa::component::statecontainer::MappedObject< DataTypes >inlinevirtual; WriteCoord typedefsofa::core::State< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::statecontainer::MappedObject< DataTypes > Member List . This is the complete list of members for sofa::component::statecontainer::MappedObject< DataTypes >, including all inherited members. accumulatedForcessofa::core::State< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html
Performance,load,loader,"DataTypes >virtual; removeInNode(objectmodel::BaseNode *node) overridesofa::core::BaseStatevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(Size vsize) overridesofa::component::statecontainer::MappedObject< DataTypes >inlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(SOFA_TEMPLATE(MappedObject, DataTypes), SOFA_TEMPLATE(core::State, DataTypes))sofa::component::statecontainer::MappedObject< DataTypes >; State< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html
Testability,log,logging," accumulatedForcessofa::core::State< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html
Usability,clear,clearLoggedMessages,"uts, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< DataTypes >virtual; Coord typedefsofa::component::statecontainer::MappedObject< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_Vsofa::component::statecontainer::MappedObject< DataTypes >; d_Xsofa::component::statecontainer::MappedObject< DataTypes >; datasofa::component::statecontainer::MappedObject< DataTypes >protected; DataTypes typedefsofa::core::State< DataTypes >; Deriv typedefsofa::component::statecontainer::MappedObject< DataTypes >; doUpdateInternal()sofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html
Availability,down,down,"nt m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; MappedObjectInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MappedObject, DataTypes), SOFA_TEMPLATE(core::State, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (Size vsize) override;  Resize all stored vector. More...;  ; VecCoord * getX ();  ; VecDeriv * getV ();  ; const VecCoord * getX () const;  ; const VecDeriv * getV () const;  ; Size getSize () const override;  Current size of all stored vectors. More...;  ; Data< VecCoord > * write (core::VecCoordId v) override;  ; const Data< VecCoord > * read (core::ConstVecCoordId v) const override;  ; Data< VecDeriv > * write (core::VecDerivId v) override;  ; const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Integrability,message,messages,"clude <MappedObject.h>. Inheritance diagram for sofa::component::statecontainer::MappedObject< DataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecCoord > f_X;  ; sofa::core::objectmodel::RenamedData< VecDeriv > f_V;  ; Data< VecCoord > d_X;  position vector More...;  ; Data< VecDeriv > d_V;  velocity vector More...;  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; MappedObjectInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::statecontainer::MappedObject< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::statecontainer::MappedObject< DataTypes > Class Template Reference . #include <MappedObject.h>. Inheritance diagram for sofa::component::statecontainer::MappedObject< DataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecCoord > f_X;  ; sofa::core::objectmodel::RenamedData< VecDeriv > f_V;  ; Data< VecCoord > d_X;  position vector More...;  ; Data< VecDeriv > d_V;  velocity vector More...;  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; MappedObjectInternalData< D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Performance,load,loader,"VecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Security,access,access,"nst Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Usability,simpl,simplified,"nst Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html
Deployability,update,updateInternal,"component::statecontainer::MechanicalObject< DataTypes >; MechanicalState< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; MechanicalState< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; SOFA_CLASS2(SOFA_TEMPLATE(MechanicalState, DataTypes), BaseMechanicalState, SOFA_TEMPLATE(State, DataTypes))sofa::core::behavior::MechanicalState< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState() overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; swapValues(const sofa::Index idx1, const sofa::Index idx2)sofa::component::statecontainer::MechanicalObject< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; translationsofa::component::statecontainer::MechanicalObject< DataTypes >protected; translation2sofa::component::statecontainer::MechanicalObject< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; vsofa::component::statecontainer::MechanicalObject< DataTypes >; vAlloc(const core::ExecParams *params, core::VecCoordId v, const core::VecIdProperties &properties={}) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAlloc(const core::ExecParams *params, core::VecDerivId v, const core::VecIdProperties &properties={}) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAllocImpl(core::TVecId< vtype, core::V_WRITE > v, const core::VecIdProperties &properties)sofa::component::statecontainer::MechanicalObject< DataTypes >protected; vAvail(const core::ExecParams *params, core::VecCoordId &v) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAvail(const core::ExecParams *params, core::VecDerivId &v) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAvailImpl(cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::statecontainer::MechanicalObject< DataTypes > Member List . This is the complete list of members for sofa::component::statecontainer::MechanicalObject< DataTypes >, including all inherited members. accumulatedForcessofa::core::State< DataTypes >; accumulateForce(const core::ExecParams *params, core::VecDerivId f=core::VecDerivId::force()) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *minBBox, SReal *maxBBox) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addFromBaseVectorDifferentSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorDifferentSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorDifferentSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html
Performance,load,loader,"on2sofa::component::statecontainer::MechanicalObject< DataTypes >protected; scalesofa::component::statecontainer::MechanicalObject< DataTypes >protected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::component::statecontainer::MechanicalObject< DataTypes >inline; setScale(SReal sx, SReal sy, SReal sz)sofa::component::statecontainer::MechanicalObject< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranslation(SReal dx, SReal dy, SReal dz)sofa::component::statecontainer::MechanicalObject< DataTypes >inline; setVecCoord(core::ConstVecCoordId, Data< VecCoord > *)sofa::component::statecontainer::MechanicalObject< DataTypes >protected; setVecDeriv(core::ConstVecDerivId, Data< VecDeriv > *)sofa::component::statecontainer::MechanicalObject< DataTypes >protected; setVecIdProperties(core::TVecId< vtype, vaccess > v, const core::VecIdProperties &properties, core::BaseData *vec_d)sofa::component::statecontainer::MechanicalObject< DataTypes >protectedstatic; setVecMatrixDeriv(core::ConstMatrixDerivId, Data< MatrixDeriv > *)sofa::component::statecontainer::MechanicalObject< DataTypes >protected; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::MechanicalState< DataTypes >inlinestatic; showIndicessofa::component::statecontainer::MechanicalObject< D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html
Testability,log,logging,":BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBaseVectorSameSize(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)sofa::component::statecontainer::MechanicalObject< DataTypes >virtual; addFromBuffer(VecId dst, const SReal *src, unsigned n) overridesofa::core::behavior::MechanicalState< DataTypes >; sofa::core::behavior::BaseMechanicalState::addFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToBaseVector(linearalgebra::BaseVector *dest, core::ConstVecId src, unsigned int &offset) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; sofa::addToTotalForces(core::ConstVecDerivId forceId)sofa::core::BaseStatevirtual; State< DataTypes >::addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::stat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html
Usability,clear,clearLoggedMessages," State< DataTypes >::baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; beginIntegration(SReal dt) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; buildIdentityBlocksInJacobian(const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; csofa::component::statecontainer::MechanicalObject< DataTypes >; c2sofa::component::statecontainer::MechanicalObject< DataTypes >; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compareVec(core::ConstVecId v, std::istream &in) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; MechanicalState< DataTypes >::computeBBox() constsofa::core::State< DataTypes >; computeWeightedValue(const sofa::Index i, const sofa::type::vector< sofa::Index > &ancestors, const sofa::type::vector< double > &coefs)sofa::component::statecontainer::MechanicalObject< DataTypes >; ConstraintBlock typedefsofa::component::statecontainer::MechanicalObject< DataTypes >; constraintBlocks(const std::list< unsigned int > &indices) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; Coord typedefsofa::component::statecontainer::MechanicalObject< DataTypes >; copyFromBaseVector(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html
Availability,down,down,"Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalObject, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::MechanicalState, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; MechanicalObject & operator= (const MechanicalObject &);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ; void reset () override;  Reset to initial state. More...;  ; void writeVec (core::ConstVecId v, std::ostream &out) override;  ; void readVec (core::VecId v, std::istream &in) override;  ; SReal compareVec (core::ConstVecId v, std::istream &in) override;  ; void writeState (std::ostream &out) override;  Write current state to the given output stream. More...;  ; void initGnuplot (const std::string path) override;  ; void exportGnuplot (SReal time) override;  ; void resize (Size vsize) override;  Resize all stored vector. More...;  ; virtual void reserve (Size vsize);  ; Size getSize () const override;  Current size of all stored vectors. More...;  ; SReal getPX (sofa::Index i) const override;  ; SReal getPY (sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Deployability,update,update,"es at index outputIndex by the ones at inputIndex. More...;  ; void swapValues (const sofa::Index idx1, const sofa::Index idx2);  Exchange values at indices idx1 and idx2. More...;  ; void renumberValues (const sofa::type::vector< sofa::Index > &index);  Reorder values according to parameter. More...;  ; void computeWeightedValue (const sofa::Index i, const sofa::type::vector< sofa::Index > &ancestors, const sofa::type::vector< double > &coefs);  Replace the value at index by the sum of the ancestors values weithed by the coefs. More...;  ; void forcePointPosition (const sofa::Index i, const sofa::type::vector< double > &m_x);  Force the position of a point (and force its velocity to zero value) More...;  ; void getIndicesInSpace (sofa::type::vector< sofa::Index > &indices, Real xmin, Real xmax, Real ymin, Real ymax, Real zmin, Real zmax) const override;  Get the indices of the particles located in the given bounding box. More...;  ; bool addBBox (SReal *minBBox, SReal *maxBBox) override;  update the given bounding box, to include this More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  Bounding Box computation method. More...;  ; virtual std::list< ConstraintBlock > constraintBlocks (const std::list< unsigned int > &indices) const override;  Express the matrix L in term of block of matrices, using the indices of the lines in the MatrixDeriv container. More...;  ; SReal getConstraintJacobianTimesVecDeriv (unsigned int line, core::ConstVecId id) override;  Compute the error given a state vector and a line of the Jacobian (line in vector C) More...;  ; void handleStateChange () override;  ; bool pickParticles (const core::ExecParams *params, double rayOx, double rayOy, double rayOz, double rayDx, double rayDy, double rayDz, double radius0, double dRadius, std::multimap< double, std::pair< sofa::core::behavior::BaseMechanicalState *, int > > &particles) override;  ; bool isIndependent () const;  if this mechanical object sto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Energy Efficiency,allocate,allocated,"unsigned int &offset) override;  ; void addFromBaseVectorDifferentSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; virtual type::Vec3 getTranslation () const;  ; virtual type::Vec3 getRotation () const;  ; type::Vec3 getScale () const override;  ; Integration related methods; void beginIntegration (SReal dt) override;  Called at the beginning of each integration step. More...;  ; void endIntegration (const core::ExecParams *params, SReal dt) override;  Called at the end of each integration step. More...;  ; void accumulateForce (const core::ExecParams *params, core::VecDerivId f=core::VecDerivId::force()) override;  Add stored external forces to F. More...;  ; void vAvail (const core::ExecParams *params, core::VecCoordId &v) override;  Increment the index of the given VecCoordId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAvail (const core::ExecParams *params, core::VecDerivId &v) override;  Increment the index of the given VecDerivId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAlloc (const core::ExecParams *params, core::VecCoordId v, const core::VecIdProperties &properties={}) override;  Increment the index of the given MatrixDerivId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAlloc (const core::ExecParams *params, core::VecDerivId v, const core::VecIdProperties &properties={}) override;  Allocate a new temporary vector. More...;  ; void vRealloc (const core::ExecParams *params, core::VecCoordId v, const core::VecIdProperties &properties={}) override;  Allocate a new temporary vector. More...;  ; void vRealloc (const core::ExecParams *params, core::VecDerivId v, const core::VecIdProperties &properties={}) ov",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Integrability,message,messages," More...;  ; Data< bool > showIndices;  Show indices. (default=false) More...;  ; Data< float > showIndicesScale;  Scale for indices display. (default=0.02) More...;  ; Data< bool > showVectors;  Show velocity. (default=false) More...;  ; Data< float > showVectorsScale;  Scale for vectors display. (default=0.0001) More...;  ; Data< int > drawMode;  The way vectors will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. The DOFS will be drawn: - 0: point - >1: sphere. (default=0) More...;  ; Data< type::RGBAColor > d_color;  Color for object display. (default=[1 1 1 1]) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; Data< int > d_size;  Size of the vectors. More...;  ; SingleLink< MechanicalObject< DataTypes >, core::topology::BaseMeshTopology, BaseLink::FLAG_STRONGLINK|BaseLink::FLAG_STOREPATH >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Modifiability,inherit,inherited,"tes (to simulated pre-existing internal tension).(default = 1.0) More...;  ; Data< bool > d_useTopology;  Shall this object rely on any active topology to initialize its size and positions. More...;  ; Data< bool > showObject;  Show objects. (default=false) More...;  ; Data< float > showObjectScale;  Scale for object display. (default=0.1) More...;  ; Data< bool > showIndices;  Show indices. (default=false) More...;  ; Data< float > showIndicesScale;  Scale for indices display. (default=0.02) More...;  ; Data< bool > showVectors;  Show velocity. (default=false) More...;  ; Data< float > showVectorsScale;  Scale for vectors display. (default=0.0001) More...;  ; Data< int > drawMode;  The way vectors will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. The DOFS will be drawn: - 0: point - >1: sphere. (default=0) More...;  ; Data< type::RGBAColor > d_color;  Color for object display. (default=[1 1 1 1]) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Performance,load,loader,"ectors. More...;  ; virtual void copyToBuffer (SReal *dst, ConstVecId src, unsigned int n) const =0;  Copy data to an external, user-allocated buffer. More...;  ; virtual void copyFromBuffer (VecId dst, const SReal *src, unsigned int n)=0;  Copy data from an external, user-allocated buffer. More...;  ; virtual void addFromBuffer (VecId dst, const SReal *src, unsigned int n)=0;  Add data from an external, user-allocated buffer. More...;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Security,access,access,"tate the current state. More...;  ; SOFA_COMPONENT_STATECONTAINER_API void addFromBaseVectorSameSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset);  Perform dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) More...;  ; SOFA_COMPONENT_STATECONTAINER_API void addFromBaseVectorDifferentSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset);  Perform dest[ offset + i ][j] += src[i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) More...;  ; SOFA_COMPONENT_STATECONTAINER_API void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; New vectors access API based on VecId; Data< VecCoord > * write (core::VecCoordId v) override;  ; const Data< VecCoord > * read (core::ConstVecCoordId v) const override;  ; Data< VecDeriv > * write (core::VecDerivId v) override;  ; const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; Data< MatrixDeriv > * write (core::MatrixDerivId v) override;  ; const Data< MatrixDeriv > * read (core::ConstMatrixDerivId v) const override;  ; Initial transformations application methods.; void applyTranslation (const SReal dx, const SReal dy, const SReal dz) override;  Apply translation vector to the position. More...;  ; void applyRotation (const SReal rx, const SReal ry, const SReal rz) override;  Rotation using Euler Angles in degree. More...;  ; void applyRotation (const type::Quat< SReal > q) override;  Rotate the current state. More...;  ; void applyScale (const SReal sx, const SReal sy, const SReal sz) override;  Scale the current state. More...;  ; Base Matrices and Vectors Interface; void copyToBaseVector (linearalgebra::BaseVector *dest, core::ConstVecId src, unsigned int &offset) override;  ; void copyFromBaseVector (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; void",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::statecontainer::MechanicalObjectInternalData< DataTypes > Member List . This is the complete list of members for sofa::component::statecontainer::MechanicalObjectInternalData< DataTypes >, including all inherited members. MechanicalObjectInternalData(MechanicalObject< DataTypes > *=nullptr)sofa::component::statecontainer::MechanicalObjectInternalData< DataTypes >inline. Generated on Mon Nov 11 2024 03:10:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object_internal_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object_internal_data-members.html
Deployability,update,updateEdges,ner::constant::CubeTopologyprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateEdges()sofa::component::topology::container::constant::CubeTopologyprotected; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePoints()sofa::component::topology::container::constant::CubeTopologyprotected; updateQuads()sofa::component::topology::container::constant::CubeTopologyprotected; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseOb,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::constant::CubeTopology Member List . This is the complete list of members for sofa::component::topology::container::constant::CubeTopology, including all inherited members. _drawEdgessofa::component::topology::container::constant::MeshTopology; _drawHexasofa::component::topology::container::constant::MeshTopology; _drawQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html
Performance,load,load,lidQuadsofa::core::topology::Topologystatic; InvalidQuadsInHexahedronsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isLines()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isSurface()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isVolume()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInHexahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTetrahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTrianglesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundEdgesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundVertexsofa::component::topology::container::constant::MeshTopologyprote,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html
Testability,log,logging,"wQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addTriangle(Index a, Index b, Index c) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html
Usability,clear,clear,"ofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologypro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html
Availability,down,down,"  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CubeTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void setSize (int nx, int ny, int nz);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; int getNx () const;  ; int getNy () const;  ; int getNz () const;  ; void setNx (int n);  ; void setNy (int n);  ; void setNz (int n);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; int point (int x, int y, int z, Plane p=PLANE_UNKNOWN) const;  ; void setP0 (const Vec3 &val);  ; void setDx (const Vec3 &val);  ; void setDy (const Vec3 &val);  ; void setDz (const Vec3 &val);  ; void setPos (SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax);  ; const Vec3 & getP0 () const;  ; const Vec3 & getDx () const;  ; const Vec3 & getDy () const;  ; const Vec3 & getDz () const;  ; Vec3 getMin () const;  ; Vec3 getMax () const;  ; Vec3 getPoint (int i) const;  ; virtual Vec3 getPoint (int x, int y, int z) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void setSplitNormals (bool b);  ;  Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Deployability,update,updateTetrahedra,"ndex is vertexIndex. Returns -1 if none. More...;  ; int getEdgeIndexInHexahedron (const EdgesInHexahedron &t, EdgeID edgeIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5, 6, 7, 8, 9, 10, 11) of the edge whose global index is edgeIndex. Returns -1 if none. More...;  ; int getQuadIndexInHexahedron (const QuadsInHexahedron &t, QuadID quadIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5) of the quad whose global index is quadIndex. Returns -1 if none. More...;  ; Edge getLocalEdgesInTetrahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 5) the two vertex indices that are adjacent to that edge. More...;  ; Edge getLocalEdgesInHexahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 12) the two vertex indices that are adjacent to that edge. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  ; void invalidate ();  ; virtual void updateTetrahedra ();  ; virtual void updateHexahedra ();  ; const EdgesAroundVertex & getEdgesAroundVertex (PointID i) override;  Returns the set of edges adjacent to a given vertex. More...;  ; const type::vector< EdgesAroundVertex > & getEdgesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const TrianglesAroundVertex & getTrianglesAroundVertex (PointID i) override;  Returns the set of triangles adjacent to a given vertex. More...;  ; const type::vector< TrianglesAroundVertex > & getTrianglesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const EdgesInTriangle & getEdgesInTriangle (TriangleID i) override;  Returns the set of 3 edge indices of a given triangle. More...;  ; const type::vector< EdgesInTriangle > & getEdgesInTriangleArray ();  Returns the EdgesInTriangle array (i.e. provide the 3 edge indices for each triangle). More...;  ; const Tria",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Integrability,depend,dependent,"re...;  ; virtual std::list< const TopologyChange * >::const_iterator beginChange () const;  Provides an iterator on the first element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endChange () const;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator beginStateChange () const;  Provides an iterator on the first element in the list of StateChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endStateChange () const;  Provides an iterator on the last element in the list of StateChange objects. More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void r",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Modifiability,inherit,inherited,::core::objectmodel::RenamedData< bool > splitNormals;  ; sofa::core::objectmodel::RenamedData< Vec3 > min;  ; sofa::core::objectmodel::RenamedData< Vec3 > max;  ; Data< int > d_nx;  x grid resolution More...;  ; Data< int > d_ny;  y grid resolution More...;  ; Data< int > d_nz;  z grid resolution More...;  ; Data< bool > d_internalPoints;  include internal points (allow a one-to-one mapping between points from RegularGridTopology and CubeTopology) More...;  ; Data< bool > d_splitNormals;  split corner points to have planar normals More...;  ; Data< Vec3 > d_min;  Min. More...;  ; Data< Vec3 > d_max;  ; Vec3 p0;  Position of point 0. More...;  ; Vec3 dx;  Distance between points in the grid. Must be perpendicular to each other. More...;  ; Vec3 dy;  ; Vec3 dz;  ; SReal inv_dx2;  ; SReal inv_dy2;  ; SReal inv_dz2;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::MeshTopology; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; type::vector< EdgesAroundVertex > m_orientedEdgesAroundVertex;  ; type::vector< EdgesInTriangle > m_edgesInTriangle;  ; type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad More...;  ; type::vector< EdgesInTetrahedron > m_edgesInTetrahedron;  provides the set of edges for each tetrahedron More...;  ; type::vector< EdgesInHexahedron > m_edgesInHexahedron;  provides the set of edges for each hexahedron More...;  ; type::vector< TrianglesAroundVertex > m_trianglesAroundVertex;  for each vertex provides the set of triangles adjacent to that vertex More...;  ; type::vector< TrianglesAroundVertex > m_orientedTrianglesAroundVertex;  for each vertex provides the set of oriented triangles adjacent to that vertex More...;  ; type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge More...;  ; type::vector< TrianglesInTetrahedron > m_trianglesInTetrahed,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Performance,load,load,"tual const type::vector< Index > getConnectedElement (Index elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; virtual const type::vector< Index > getElementAroundElement (Index elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const type::vector< Index > getElementAroundElements (type::vector< Index > elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseMeshTopology;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual Triangle getLocalTrianglesInTetrahedron (const PointID i) const;  Returns for each index (between 0 and 3) the three local vertices indices that are adjacent to that triangle. More...;  ; virtual Quad getLocalQuadsInHexahedron (const PointID i) const;  Returns for each index (between 0 and 6) the four vertices indices that are adjacent to that quad. More...;  ; virtual const sofa::type::vector< TriangleID > & getTrianglesOnBorder ();  Returns the set of triangles on the border of the triangulation. More...;  ; virtual const sofa::type::vector< EdgeID > & getEdgesOnBorder ();  Returns the set of edges on the border of the triangulation. More...;  ; virtual const sofa::type::vector< PointID > & getPointsOnBorder ();  Returns the set of points on the border of the triangulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbTetras ();  ; virtual Size getNbHexas ();  ; virtual Tetra getTetra (TetraID i);  ; virtual Hexa ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Safety,detect,detect,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Usability,clear,clear,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html
Deployability,update,updateHexahedra,"ofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::constant::MeshTopology Member List . This is the complete list of members for sofa::component::topology::container::constant::MeshTopology, including all inherited members. _drawEdgessofa::component::topology::container::constant::MeshTopology; _drawHexasofa::component::topology::container::constant::MeshTopology; _drawQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html
Performance,load,load,lidQuadsofa::core::topology::Topologystatic; InvalidQuadsInHexahedronsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isLines()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isSurface()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isVolume()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInHexahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTetrahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTrianglesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundEdgesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundVertexsofa::component::topology::container::constant::MeshTopologyprote,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html
Testability,log,logging,"wQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addTriangle(Index a, Index b, Index c) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html
Usability,clear,clear,"ofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologypro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html
Availability,down,down,"mentType;  Type of higher topology element contains in this container. More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Deployability,update,updateTetrahedra,"x whose global index is vertexIndex. Returns -1 if none. More...;  ; int getEdgeIndexInHexahedron (const EdgesInHexahedron &t, EdgeID edgeIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5, 6, 7, 8, 9, 10, 11) of the edge whose global index is edgeIndex. Returns -1 if none. More...;  ; int getQuadIndexInHexahedron (const QuadsInHexahedron &t, QuadID quadIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5) of the quad whose global index is quadIndex. Returns -1 if none. More...;  ; Edge getLocalEdgesInTetrahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 5) the two vertex indices that are adjacent to that edge. More...;  ; Edge getLocalEdgesInHexahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 12) the two vertex indices that are adjacent to that edge. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  ; void invalidate ();  ; virtual void updateTetrahedra ();  ; virtual void updateHexahedra ();  ; neighbors queries for Edge Topology; Returns the set of edges adjacent to a given vertex. . const EdgesAroundVertex & getEdgesAroundVertex (PointID i) override;  Returns the set of edges adjacent to a given vertex. More...;  ; const type::vector< EdgesAroundVertex > & getEdgesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; neighbors queries for Triangle Topology; Returns the set of triangle adjacent to a given vertex. . const TrianglesAroundVertex & getTrianglesAroundVertex (PointID i) override;  Returns the set of triangles adjacent to a given vertex. More...;  ; const type::vector< TrianglesAroundVertex > & getTrianglesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const EdgesInTriangle & getEdgesInTriangle (TriangleID i) override;  Returns the set of 3 edge indices of ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Integrability,message,messages,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; type::vector< EdgesAroundVertex > m_orientedEdgesAroundVertex;  ; type::vector< EdgesInTriangle > m_edgesInTriangle;  ; type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad More...;  ; type::vector< EdgesInTetrahedron > m_edgesInTetrahedron;  provides the set o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Modifiability,inherit,inherited,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; typ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Performance,load,load,"tual const type::vector< Index > getConnectedElement (Index elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; virtual const type::vector< Index > getElementAroundElement (Index elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const type::vector< Index > getElementAroundElements (type::vector< Index > elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseMeshTopology;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual Triangle getLocalTrianglesInTetrahedron (const PointID i) const;  Returns for each index (between 0 and 3) the three local vertices indices that are adjacent to that triangle. More...;  ; virtual Quad getLocalQuadsInHexahedron (const PointID i) const;  Returns for each index (between 0 and 6) the four vertices indices that are adjacent to that quad. More...;  ; virtual const sofa::type::vector< TriangleID > & getTrianglesOnBorder ();  Returns the set of triangles on the border of the triangulation. More...;  ; virtual const sofa::type::vector< EdgeID > & getEdgesOnBorder ();  Returns the set of edges on the border of the triangulation. More...;  ; virtual const sofa::type::vector< PointID > & getPointsOnBorder ();  Returns the set of points on the border of the triangulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbTetras ();  ; virtual Size getNbHexas ();  ; virtual Tetra getTetra (TetraID i);  ; virtual Hexa ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Safety,detect,detect,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Security,access,accessors,"s -1 if none. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ getEdgeIndexInTetrahedron(). int sofa::component::topology::container::constant::MeshTopology::getEdgeIndexInTetrahedron ; (; const EdgesInTetrahedron & ; t, . EdgeID ; edgeIndex . ); const. overridevirtual . Returns the index (either 0, 1 ,2 ,3, 4, 5) of the edge whose global index is edgeIndex. Returns -1 if none. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ getEdgeIndexInTriangle(). int sofa::component::topology::container::constant::MeshTopology::getEdgeIndexInTriangle ; (; const EdgesInTriangle & ; t, . EdgeID ; edgeIndex . ); const. overridevirtual . Returns the index (either 0, 1 ,2) of the edge whose global index is edgeIndex. Returns -1 if none. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ getEdges(). const MeshTopology::SeqEdges & sofa::component::topology::container::constant::MeshTopology::getEdges ; (; ). overridevirtual . Complete sequence accessors ; Implements sofa::core::topology::BaseMeshTopology. ◆ getEdgesAroundVertex(). const MeshTopology::EdgesAroundVertex & sofa::component::topology::container::constant::MeshTopology::getEdgesAroundVertex ; (; PointID ; i). overridevirtual . Returns the set of edges adjacent to a given vertex. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ getEdgesAroundVertexArray(). const vector< MeshTopology::EdgesAroundVertex > & sofa::component::topology::container::constant::MeshTopology::getEdgesAroundVertexArray ; (; ). Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). . ◆ getEdgesInHexahedron(). const MeshTopology::EdgesInHexahedron & sofa::component::topology::container::constant::MeshTopology::getEdgesInHexahedron ; (; HexaID ; i). overridevirtual . Returns the set of edges adjacent to a given hexahedron. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ getEdgesInHexahedronArray(). const vector< MeshTopology::EdgesInHexahedro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Usability,clear,clear,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html
Deployability,update,update,"bjectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PrimitiveUpdate, sofa::core::DataEngine)sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; sofa::core::DataEngine::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; topologysofa::component::topology::container::constant::MeshTopology::PrimitiveUpdateprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate Member List . This is the complete list of members for sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html
Performance,load,loader,"odel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PrimitiveUpdate, sofa::core::DataEngine)sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; sofa::core::DataEngine::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; topologysofa::component::topology::container::constant::MeshTopology::PrimitiveUpdateprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; update() finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html
Usability,clear,clearLoggedMessages,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprot",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html
Availability,down,down,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html
Deployability,update,update,"  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PrimitiveUpdate, sofa::core::DataEngine);  ;  PrimitiveUpdate (MeshTopology *t);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this no",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html
Integrability,depend,dependent,". More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate Class Reference . #include <MeshTopology.h>. Inheritance diagram for sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate:. [legend]. Protected Attributes; MeshTopology * topology;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PrimitiveUpdate, sofa::core::DataEngine);  ;  PrimitiveUpdate (MeshTopology *t);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html
Performance,load,loader,"led after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html
Deployability,update,updateEdges,ner::constant::CubeTopologyprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateEdges()sofa::component::topology::container::constant::CubeTopologyprotected; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePoints()sofa::component::topology::container::constant::CubeTopologyprotected; updateQuads()sofa::component::topology::container::constant::CubeTopologyprotected; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseOb,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::constant::SphereQuadTopology Member List . This is the complete list of members for sofa::component::topology::container::constant::SphereQuadTopology, including all inherited members. _drawEdgessofa::component::topology::container::constant::MeshTopology; _drawHexasofa::component::topology::container::constant::MeshTopology; _drawQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html
Performance,load,load,lidQuadsofa::core::topology::Topologystatic; InvalidQuadsInHexahedronsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isLines()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isSurface()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isVolume()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInHexahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTetrahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTrianglesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundEdgesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundVertexsofa::component::topology::container::constant::MeshTopologyprote,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html
Testability,log,logging,"wQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addTriangle(Index a, Index b, Index c) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html
Usability,clear,clear,"MeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::topology::container::constant::SphereQuadTopologyprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologypro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html
Availability,down,down,") More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SphereQuadTopology, CubeTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; Vec3 getPoint (int x, int y, int z) const override;  ;  Public Member Functions inherited from sofa::component::topology::container::constant::CubeTopology;  SOFA_CLASS (CubeTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void setSize (int nx, int ny, int nz);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; int getNx () const;  ; int getNy () const;  ; int getNz () const;  ; void setNx (int n);  ; void setNy (int n);  ; void setNz (int n);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; int point (int x, int y, int z, Plane p=PLANE_UNKNOWN) const;  ; void setP0 (const Vec3 &val);  ; void setDx (const Vec3 &val);  ; void setDy (const Vec3 &val);  ; void setDz (const Vec3 &val);  ; void setPos (SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax);  ; const Vec3 & getP0 () const;  ; const Vec3 & getDx () const;  ; const Vec3 & getDy () const;  ; const Vec3 & getDz () const;  ; Vec3 getMin () const;  ; Vec3 getMax () const;  ; Vec3 getPoint (int i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void setSplitNormals (bool b);  ;  Public Member Functions inherited from sofa::component::top",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Deployability,update,updateTetrahedra,"ndex is vertexIndex. Returns -1 if none. More...;  ; int getEdgeIndexInHexahedron (const EdgesInHexahedron &t, EdgeID edgeIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5, 6, 7, 8, 9, 10, 11) of the edge whose global index is edgeIndex. Returns -1 if none. More...;  ; int getQuadIndexInHexahedron (const QuadsInHexahedron &t, QuadID quadIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5) of the quad whose global index is quadIndex. Returns -1 if none. More...;  ; Edge getLocalEdgesInTetrahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 5) the two vertex indices that are adjacent to that edge. More...;  ; Edge getLocalEdgesInHexahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 12) the two vertex indices that are adjacent to that edge. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  ; void invalidate ();  ; virtual void updateTetrahedra ();  ; virtual void updateHexahedra ();  ; const EdgesAroundVertex & getEdgesAroundVertex (PointID i) override;  Returns the set of edges adjacent to a given vertex. More...;  ; const type::vector< EdgesAroundVertex > & getEdgesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const TrianglesAroundVertex & getTrianglesAroundVertex (PointID i) override;  Returns the set of triangles adjacent to a given vertex. More...;  ; const type::vector< TrianglesAroundVertex > & getTrianglesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const EdgesInTriangle & getEdgesInTriangle (TriangleID i) override;  Returns the set of 3 edge indices of a given triangle. More...;  ; const type::vector< EdgesInTriangle > & getEdgesInTriangleArray ();  Returns the EdgesInTriangle array (i.e. provide the 3 edge indices for each triangle). More...;  ; const Tria",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Integrability,depend,dependent,"re...;  ; virtual std::list< const TopologyChange * >::const_iterator beginChange () const;  Provides an iterator on the first element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endChange () const;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator beginStateChange () const;  Provides an iterator on the first element in the list of StateChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endStateChange () const;  Provides an iterator on the last element in the list of StateChange objects. More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void r",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Modifiability,inherit,inherited, API: sofa::component::topology::container::constant::SphereQuadTopology Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::constant::SphereQuadTopology Class Reference . #include <SphereQuadTopology.h>. Inheritance diagram for sofa::component::topology::container::constant::SphereQuadTopology:. [legend]. Protected Attributes; sofa::core::objectmodel::RenamedData< Vec3 > center;  ; sofa::core::objectmodel::RenamedData< SReal > radius;  ; Data< Vec3 > d_center;  Center of the sphere. More...;  ; Data< SReal > d_radius;  Radius of the sphere. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::CubeTopology; sofa::core::objectmodel::RenamedData< int > nx;  ; sofa::core::objectmodel::RenamedData< int > ny;  ; sofa::core::objectmodel::RenamedData< int > nz;  ; sofa::core::objectmodel::RenamedData< bool > internalPoints;  ; sofa::core::objectmodel::RenamedData< bool > splitNormals;  ; sofa::core::objectmodel::RenamedData< Vec3 > min;  ; sofa::core::objectmodel::RenamedData< Vec3 > max;  ; Data< int > d_nx;  x grid resolution More...;  ; Data< int > d_ny;  y grid resolution More...;  ; Data< int > d_nz;  z grid resolution More...;  ; Data< bool > d_internalPoints;  include internal points (allow a one-to-one mapping between points from RegularGridTopology and CubeTopology) More...;  ; Data< bool > d_splitNormals;  split corner points to have planar normals More...;  ; Data< Vec3 > d_min;  Min. More...;  ; Data< Vec3 > d_max;  ; Vec3 p0;  Position of point 0. More...;  ; Vec3 dx;  Distance between points in the grid. Must be perpendicular to each other. More...;  ; Vec3 dy;  ; Vec3 dz;  ; SReal inv_dx2;  ; SReal inv_dy2;  ; SReal inv_dz2;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::MeshTopology; Size nbPoints;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Performance,load,load,"tual const type::vector< Index > getConnectedElement (Index elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; virtual const type::vector< Index > getElementAroundElement (Index elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const type::vector< Index > getElementAroundElements (type::vector< Index > elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseMeshTopology;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual Triangle getLocalTrianglesInTetrahedron (const PointID i) const;  Returns for each index (between 0 and 3) the three local vertices indices that are adjacent to that triangle. More...;  ; virtual Quad getLocalQuadsInHexahedron (const PointID i) const;  Returns for each index (between 0 and 6) the four vertices indices that are adjacent to that quad. More...;  ; virtual const sofa::type::vector< TriangleID > & getTrianglesOnBorder ();  Returns the set of triangles on the border of the triangulation. More...;  ; virtual const sofa::type::vector< EdgeID > & getEdgesOnBorder ();  Returns the set of edges on the border of the triangulation. More...;  ; virtual const sofa::type::vector< PointID > & getPointsOnBorder ();  Returns the set of points on the border of the triangulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbTetras ();  ; virtual Size getNbHexas ();  ; virtual Tetra getTetra (TetraID i);  ; virtual Hexa ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Safety,detect,detect,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Usability,clear,clear,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::BasicArrayInterface< T > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::BasicArrayInterface< T >, including all inherited members. operator[](int i)=0sofa::component::topology::container::dynamic::BasicArrayInterface< T >pure virtual; ~BasicArrayInterface()sofa::component::topology::container::dynamic::BasicArrayInterface< T >inlinevirtual. Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface-members.html
Energy Efficiency,efficient,efficient,﻿. SOFA API: sofa::component::topology::container::dynamic::BasicArrayInterface< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::topology::container::dynamic::BasicArrayInterface< T > Class Template Referenceabstract . #include <EdgeSetGeometryAlgorithms.h>; A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. ; More...; Detailed Description; template<class T>; class sofa::component::topology::container::dynamic::BasicArrayInterface< T >; A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. . Public Member Functions; virtual T & operator[] (int i)=0;  ; virtual ~BasicArrayInterface ();  . Constructor details. ◆ ~BasicArrayInterface(). template<class T > . virtual sofa::component::topology::container::dynamic::BasicArrayInterface< T >::~BasicArrayInterface ; (; ). inlinevirtual . Function details. ◆ operator[](). template<class T > . virtual T& sofa::component::topology::container::dynamic::BasicArrayInterface< T >::operator[] ; (; int ; i). pure virtual . sofacomponenttopologycontainerdynamicBasicArrayInterface; Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface.html
Integrability,interface,interface,﻿. SOFA API: sofa::component::topology::container::dynamic::BasicArrayInterface< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::topology::container::dynamic::BasicArrayInterface< T > Class Template Referenceabstract . #include <EdgeSetGeometryAlgorithms.h>; A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. ; More...; Detailed Description; template<class T>; class sofa::component::topology::container::dynamic::BasicArrayInterface< T >; A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. . Public Member Functions; virtual T & operator[] (int i)=0;  ; virtual ~BasicArrayInterface ();  . Constructor details. ◆ ~BasicArrayInterface(). template<class T > . virtual sofa::component::topology::container::dynamic::BasicArrayInterface< T >::~BasicArrayInterface ; (; ). inlinevirtual . Function details. ◆ operator[](). template<class T > . virtual T& sofa::component::topology::container::dynamic::BasicArrayInterface< T >::operator[] ; (; int ; i). pure virtual . sofacomponenttopologycontainerdynamicBasicArrayInterface; Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface.html
Availability,toler,tolerance," >protected; initializedHexahedronCubatureTablessofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; initPointAdded(PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs) overridesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >virtual; initPointsAdded(const type::vector< sofa::Index > &indices, const type::vector< core::topology::PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::topology::BaseTopologyObjectvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isHexahedronAffine(const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; isPointInQuad(const QuadID ind_q, const sofa::type::Vec< 3, Real > &p) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; isPointOnEdge(const sofa::type::Vec< 3, Real > &pt, const EdgeID ind_e) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; isQuadInPlane(const QuadID ind_q, const PointID ind_p, const type::Vec< 3, Real > &plane_vect) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; LocalCoord typedefsofa::component::topology::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html
Deployability,update,updateInternal,":EdgeSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; topoContainersofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >, including all inherited members. _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html
Performance,load,loader,"er::dynamic::PointSetGeometryAlgorithms< DataTypes >; SeqEdges typedefsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; SeqHexahedra typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; SeqQuads typedefsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showEdgeIndicessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; showQuadIndicessofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; SOFA_CLASS(SOFA_TEMPLATE(DynamicSparseGridGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::QuadSetGe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html
Testability,log,logging," _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,"t::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; computeEdgeAABB(const EdgeID i, CPos &minCoord, CPos &maxCoord) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeEdgeBarycentricCoordinates(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html
Availability,down,down,"; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DynamicSparseGridGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes));  ; int findNearestElementInRestPos (const Coord &pos, type::Vec3 &baryC, Real &distance) const override;  finds a hexahedron, in its rest position, which is nearest to a given point. Computes barycentric coordinates and a distance measure. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::topology::BaseMeshTopology::HexaID getTopoIndexFromRegularGridIndex (unsigned int index, bool &existing);  ; unsigned int getRegularGridIndexFromTopoIndex (core::topology::BaseMeshTopology::HexaID index);  ; int findNearestElementInRestPos (const Coord &pos, sofa::type::Vec3 &baryC, Real &distance) const;  finds a hexahedron, in its rest position, which is nearest to a given point. Computes barycentric coordinates and a distance measure. More...;  ; int SOFA_COMPONENT_TOPOLOGY_CONTAINER_DYNAMIC_API findNearestElementInRestPos (const Coord &pos, sofa::type::Vec3 &baryC, Real &distance) const;  finds a hexahedron, in its rest position, which is nearest to a given point. Computes barycentric coordinates and a distance measure. More...;  ; int SOFA_COMPONENT_TOPOLOGY_CONTAINER_DYNAMIC_API findNearestElementInRestPos (const Coord &pos, sofa::type::Vec3 &baryC, Real &distance) const;  finds a hexahedron, in its re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html
Integrability,interface,interface,"earest to a given point. Computes barycentric coordinates and a distance measure. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes));  ; void computeHexahedronAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; void computeHexahedronRestAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeHexahedronCenter (const HexaID h) const;  ; Coord computeHexahedronRestCenter (const HexaID h) const;  ; void getHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; void getRestHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; Real computeHexahedronVolume (const HexaID h) const;  computes the volume of hexahedron no h and returns it More...;  ; void computeHexahedronVolume (BasicArrayInterface< Real > &ai) const;  computes the hexahedron volume of all hexahedra are store in the array interface More...;  ; Real computeRestHexahedronVolume (const HexaID h) const;  computes the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes > Class Template Reference . #include <DynamicSparseGridGeometryAlgorithms.h>. Inheritance diagram for sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; A class that provides geometry information on an HexahedronSet. . Protected Attributes; DynamicSparseGridTopologyContainer * topoContainer;  ; MObject * dof;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; bool initializedHexahedronCubatureTables;  ; Data< bool > d_showHexaIndices;  Debug : view Hexa indices. More...;  ; Data< bool > d_drawHexahedra;  if true, draw the Hexahedron in the topology More...;  ; Data< float > d_drawScaleHexahedra;  Scale of the hexahedra (between 0 and 1; if <1.0, it produces gaps between the hexahedra) More...;  ; Data< sofa::type::RGBAColor > d_drawColorHexahedra;  ; NumericalIntegrationDescriptor< Real, 3 > hexahedronNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; Data< bool > showQuadIndices;  Debug : view Quad indices. More...;  ; Data< bool > _drawQuads;  if true, draw the quads in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGB code color used to draw quads. More...;  ;  Protected Attributes inherited from sofa::component::topology::conta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html
Performance,load,loader,"cal coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html
Testability,test,test,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html
Usability,simpl,simple,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html
Deployability,update,updateInternal,"fa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; valuesIndexedInRegularGridsofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer; valuesIndexedInTopologysofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecHexaID typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecQuadID typedefsofa::component::topology::container::dynamic::QuadSetTopologyContainer; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; voxelSizesofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; wr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html
Performance,load,load,"nline; isEdgeTopologyDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; isHexahedronTopologyDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerinlineprotected; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; isQuadTopologyDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; LocalPointID typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_edgesInHexahedronsofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; m_edgesInQuadsofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; m_edgeTopologyDirtysofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_hexahedraAroundEdgesofa::component::topology::container::dynamic::He",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html
Usability,clear,clear,"textLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html
Availability,down,down,"ntainer::dynamic::HexahedronSetTopologyContainer; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DynamicSparseGridTopologyContainer, HexahedronSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Modifiability,inherit,inherited,"Topology::HexaID > > idxInRegularGrid;  ; sofa::core::objectmodel::RenamedData< std::map< unsigned int, BaseMeshTopology::HexaID > > idInRegularGrid2IndexInTopo;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > voxelSize;  ; Data< sofa::type::Vec3i > d_resolution;  voxel grid resolution More...;  ; Data< sofa::type::vector< unsigned char > > d_valuesIndexedInRegularGrid;  values indexed in the Regular Grid More...;  ; core::topology::HexahedronData< sofa::type::vector< unsigned char > > d_valuesIndexedInTopology;  values indexed in the topology More...;  ; Data< sofa::type::vector< BaseMeshTopology::HexaID > > d_idxInRegularGrid;  indices in the Regular Grid More...;  ; Data< std::map< unsigned int, BaseMeshTopology::HexaID > > d_idInRegularGrid2IndexInTopo;  map between id in the Regular Grid and index in the topology More...;  ; Data< type::Vec3 > d_voxelSize;  Size of the Voxels. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Performance,load,loading,"﻿. SOFA API: sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer Class Reference . #include <DynamicSparseGridTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer:. [legend]; Detailed Description; a class that stores a sparse regular grid of hexahedra and provides a better loading and access to neighbors than HexahedronSetTopologyContainer . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::Vec3i > resolution;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< unsigned char > > valuesIndexedInRegularGrid;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< unsigned char > > valuesIndexedInTopology;  values indexed in the topology More...;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< BaseMeshTopology::HexaID > > idxInRegularGrid;  ; sofa::core::objectmodel::RenamedData< std::map< unsigned int, BaseMeshTopology::HexaID > > idInRegularGrid2IndexInTopo;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > voxelSize;  ; Data< sofa::type::Vec3i > d_resolution;  voxel grid resolution More...;  ; Data< sofa::type::vector< unsigned char > > d_valuesIndexedInRegularGrid;  values indexed in the Regular Grid More...;  ; core::topology::HexahedronData< sofa::type::vector< unsigned char > > d_valuesIndexedInTopology;  values indexed in the topology More...;  ; Data< sofa::type::vector< BaseMeshTopology::HexaID > > d_idxInRegularGrid;  indices in the Regular Grid More...;  ; Data< std::map< unsigned int, BaseMeshTopology::HexaID > > d_idInRegularGrid2IndexInTopo;  map between id in the Regular Grid and index in the topology More...;  ; Data< type",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Safety,avoid,avoids,"ring m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DynamicSparseGridTopologyContainer, HexahedronSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it does not exist. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; const sofa::type::vector< Hexahedron > & getHexahedronArray ();  Returns the Hexahedron array. More...;  ; const sofa::type::vector< EdgesInHexahedron > & getEdgesInHexahedronArray ();  Returns the EdgesInHexahedron array (i.e. provide the 12 edge indices for each hexahedron). ; More...;  ; const sofa::type::vector< QuadsInHexahedron > & getQuadsInHexahedronArray ();  Returns the QuadsInHexahedron array (i.e. provide the 8 quad indices for each hexahedron). ; More...;  ; const sofa::type::vector< HexahedraAroundVertex > & getHexahedraAroundVertexArray ();  Returns the HexahedraAroundVertex array (i.e. provide the hexahedron indices adjacent to each vertex). More...;  ; const sofa::type::vector< HexahedraAroundEdge > & getHexahedraAroundEdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer Class Reference . #include <DynamicSparseGridTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer:. [legend]; Detailed Description; a class that stores a sparse regular grid of hexahedra and provides a better loading and access to neighbors than HexahedronSetTopologyContainer . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::Vec3i > resolution;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< unsigned char > > valuesIndexedInRegularGrid;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< unsigned char > > valuesIndexedInTopology;  values indexed in the topology More...;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< BaseMeshTopology::HexaID > > idxInRegularGrid;  ; sofa::core::objectmodel::RenamedData< std::map< unsigned int, BaseMeshTopology::HexaID > > idInRegularGrid2IndexInTopo;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > voxelSize;  ; Data< sofa::type::Vec3i > d_resolution;  voxel grid resolution More...;  ; Data< sofa::type::vector< unsigned char > > d_valuesIndexedInRegularGrid;  values indexed in the Regular Grid More...;  ; core::topology::HexahedronData< sofa::type::vector< unsigned char > > d_valuesIndexedInTopology;  values indexed in the topology More...;  ; Data< sofa::type::vector< BaseMeshTopology::HexaID > > d_idxInRegularGrid;  indices in the Regular Grid More...;  ; Data< std::map< unsigned int, BaseMeshTopology::HexaID > > d_idInRegularGrid2IndexInTopo;  map between id in the Regular Grid and index in the topology More...;  ; Data< type",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Usability,clear,clear,"ent to each vertex). More...;  ; const sofa::type::vector< HexahedraAroundEdge > & getHexahedraAroundEdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();  Returns the HexahedraAroundQuad array (i.e. provide the hexahedron indices adjacent to each quad). More...;  ; bool hasHexahedra () const;  ; bool hasEdgesInHexahedron () const;  ; bool hasQuadsInHexahedron () const;  ; bool hasHexahedraAroundVertex () const;  ; bool hasHexahedraAroundEdge () const;  ; bool hasHexahedraAroundQuad () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; const SeqHexahedra & getHexahedra () override;  Get the array of hexahedra. More...;  ; const Hexahedron getHexahedron (HexaID i) override;  Get a hexahedron from its index. More...;  ; virtual unsigned int getLocalIndexFromBinaryIndex (const HexahedronBinaryIndex bi) const;  Get the local hexahedron index (0<i<8) from its 3 binary indices. More...;  ; virtual HexahedronBinaryIndex getBinaryIndexFromLocalIndex (const unsigned int li) const;  Get the binary index (array of 3 binary values) from its local index (0<li<8) More...;  ; HexahedronID getHexahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8) override;  Get the index of a hexahedron from the indices of its vertices. More...;  ; const EdgesInHexahedron & getEdgesInHexahedron (HexaID id) override;  Get the 12 ed",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html
Deployability,update,updateInternal,"er::dynamic::EdgeSetTopologyModifiervirtual; splitEdgesProcess(sofa::type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~DynamicSparseGridTopologyModifier() overridesofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifierinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~HexahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier Member List . This is the complete list of members for sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdgeProcess(Edge e)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; addEdges(const sofa::type::vector< Edge > &edges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdgesProcess(const sofa::type::vector< Edge > &edges) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html
Performance,load,loader,"inverse_permutation)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; SeqHexahedra typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; SeqQuads typedefsofa::component::topology::container::dynamic::QuadSetTopologyModifier; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DynamicSparseGridTopologyModifier, HexahedronSetTopologyModifier)sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier; sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::SOFA_CLASS(HexahedronSetTopologyModifier, QuadSetTopologyModifier)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; sofa::component::topology::container::dynamic::QuadSetTopologyModifier::SOFA_CLASS(QuadSetTopologyModifier, EdgeSetTopologyModifier)sofa::component::topology::container::dynamic::QuadSetTopologyModifier; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::SOFA_CLASS(EdgeSetTopologyModifier, PointSetTopologyModifier)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; sofa::compone",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html
Testability,log,logging,"exahedron > &hexahedra, const sofa::type::vector< unsigned int > &indices)sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifiervirtual; addHexahedraWarning(const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotected; addHexahedraWarning(const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotected; addHexahedronProcess(Hexahedron e)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; DynamicSparseGridTopologyModifier()sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifierinlineprotected; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html
Availability,down,down,"﻿. SOFA API: sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier Class Reference . #include <DynamicSparseGridTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing hexahedra . Public Member Functions;  SOFA_CLASS (DynamicSparseGridTopologyModifier, HexahedronSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addHexahedraProcess (const sofa::type::vector< Hexahedron > &hexahedra) override;  Actually Add some hexahedra to this topology. Wrong way to add some hexahedra for the moment ! More...;  ; virtual void addHexahedraProcess (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::type::vector< unsigned int > &indices);  Actually Add some hexahedra to this topology. More...;  ; void removeHexahedraProcess (const sofa::type::vector< Index > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of hexahedra. More...;  ; virtual void renumberAttributes (const sofa::type::vector< Index > &hexahedra);  Renumber the attributes of this class. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier;  SOFA_CLASS (HexahedronSetTopologyModifier, QuadSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra);  add a set of hexahedra More...;  ; virtual void addHexahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Integrability,depend,dependent," Object component that points have been added or will be removed. More...;  ; void notifyEndingEvent () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyModifier;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Modifiability,inherit,inherited,"HexahedronSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addHexahedraProcess (const sofa::type::vector< Hexahedron > &hexahedra) override;  Actually Add some hexahedra to this topology. Wrong way to add some hexahedra for the moment ! More...;  ; virtual void addHexahedraProcess (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::type::vector< unsigned int > &indices);  Actually Add some hexahedra to this topology. More...;  ; void removeHexahedraProcess (const sofa::type::vector< Index > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of hexahedra. More...;  ; virtual void renumberAttributes (const sofa::type::vector< Index > &hexahedra);  Renumber the attributes of this class. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier;  SOFA_CLASS (HexahedronSetTopologyModifier, QuadSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra);  add a set of hexahedra More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of hexahedra More...;  ; void addHexahedronProcess (Hexahedron e);  Add a hexahedron. More...;  ; virtual void removeHexahedra (const sofa::type::vector< HexahedronID > &hexahedraIds);  Remove a set of hexahedra. More...;  ; void removeItems (const sofa::type::vector< HexahedronID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyModifier;  SOFA_CLASS (Qu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Performance,load,loader,"lization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Safety,detect,detected,"fa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  Split an array of edges, replacing each edge (p1, p2) by two edges (p1, p3) and (p3, p2) where p3 is the new vertex On each edge, a vertex is created based on its barycentric coordinates. More...;  ; virtual void resortCuthillMckee (sofa::type::vector< int > &inverse_permutation);  Gives the optimal vertex permutation according to the Reverse CuthillMckee algorithm (use BOOST GRAPH LIBRARY) More...;  ; virtual bool removeConnectedComponents (EdgeID elemID);  Given an element indice, it will remove all the connected component in which this element belongs to. Warning: if there is only one connected component in the model. All the object will be removed. More...;  ; virtual bool removeConnectedElements (EdgeID elemID);  Given an element indice, it will remove all elements directly connected to the input one. More...;  ; virtual bool removeIsolatedElements ();  If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. More...;  ; virtual bool removeIsolatedElements (sofa::Size scaleElem);  If several connected components are detected, it will remove all connected component with less than a given number of elements. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points renumbering. More...;  ; virtual void addPoints (const sofa::Size nPoints, const bool addDOF=true);  Add a set of points. More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Security,access,access,"ributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html
Deployability,update,updateInternal,"rithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >, including all inherited members. _drawColorsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html
Performance,load,loader,"del::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; RGBAColor typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; RIGHT enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showEdgeIndicessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; SOFA_CLASS(SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html
Testability,log,logging," _drawColorsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; computeEdgeAABB(const EdgeID i, CPos &minCoord, CPos &maxCoord) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeEdgeBarycentricCoordinates(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html
Availability,down,down,"ofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection);  ; void computeLocalFrameEdgeWeights (type::vector< EdgeID > &numEdges, type::vector< Edge > &edges, type::vector< Vec3d > &weights) const;  ; void initPointAdded (PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs) override;  Process the added point initialization according to the topology and local coordinates. More...;  ; NumericalIntegrationDescriptor< Real, 1 > & getEdgeNumericalIntegrationDescriptor ();  ; bool computeEdgeSegmentIntersection (EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b, Real &baryCoef);  ; sofa::type::vector< SReal > compute2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; sofa::type::vector< SReal > computeRest2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html
Integrability,interface,interface,";  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes));  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; Real computeEdgeLength (const EdgeID i) const;  computes the length of edge no i and returns it More...;  ; void computeEdgeLength (BasicArrayInterface< Real > &ai) const;  computes the edge length of all edges and stores it in the array interface More...;  ; Real computeRestEdgeLength (const EdgeID i) const;  computes the initial length of edge no i and returns it More...;  ; Real computeRestSquareEdgeLength (const EdgeID i) const;  computes the initial square length of edge no i and returns it More...;  ; void computeEdgeAABB (const EdgeID i, CPos &minCoord, CPos &maxCoord) const;  ; Coord computeEdgeCenter (const EdgeID i) const;  ; Coord computeEdgeDirection (const EdgeID i) const;  ; Coord computeRestEdgeDirection (const EdgeID i) const;  ; void getEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; void getRestEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; bool isPointOnEdge (const sofa::type::Vec< 3, Real > &pt, const EdgeID ind_e) const;  ; sofa::type::vector< SReal > computeEdgeBarycentricCoordinates (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, bool useRestPosition=false) const;  Compute the barycentric coor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html
Modifiability,inherit,inherited,"s |; List of all members . sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes > Class Template Reference . #include <EdgeSetGeometryAlgorithms.h>. Inheritance diagram for sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an EdgeSet. . Protected Attributes; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instanc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html
Performance,load,loader,"cal coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html
Deployability,update,updateInternal,"edefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyContainer() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; ~PointSetTopologyContainer() override=defaultsofa::component::topolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::EdgeSetTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::EdgeSetTopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html
Performance,load,load,"Tetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isEdgeTopologyDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_edgeTopologyDirtysofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_pointTopologyDirtysofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; m_stateChangeListsofa::core::topology::Topology",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html
Usability,clear,clear,"ginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html
Availability,down,down,"ation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::EdgeSetTopologyContainer Class Reference . #include <EdgeSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::EdgeSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of edges and provides access to the adjacency between points and edges . Public Attributes; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Modifiability,inherit,inherited,"PI: sofa::component::topology::container::dynamic::EdgeSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::EdgeSetTopologyContainer Class Reference . #include <EdgeSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::EdgeSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of edges and provides access to the adjacency between points and edges . Public Attributes; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the event",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Performance,load,loader,"tmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Safety,avoid,avoids,"try::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addEdge (Index a, Index b) override;  . const SeqEdges & getEdges () override;  Returns the edge array. More...;  ; const Edge getEdge (EdgeID i) override;  Get an Edge from its ID. More...;  ; EdgeID getEdgeIndex (PointID v1, PointID v2) override;  Get the index of the edge joining two vertices. More...;  ; const EdgesAroundVertex & getEdgesAroundVertex (PointID id) override;  Get the indices of the edges around a vertex. More...;  . void initTopology ();  ; bool checkTopology () const override;  Checks if the topology is coherent. More...;  ; Size getNumberOfEdges () const;  Returns the number of edges in this topology. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; virtual int getNumberConnectedComponents (sofa::type::vector< EdgeID > &components);  Returns the number of connected components from the graph containing all edges and give, for each vertex, which component it belongs to (use BOOST GRAPH LIBRARY) More...;  ; virtual const sofa::type::vector< Edge > & getEdgeArray ();  Returns the Edge array. More...;  ; virtual const sofa::type::vector< sofa::type::vector< EdgeID > > & getEdgesAroundVertexArray ();  Returns the list of Edge indices around each DOF. More...;  ; bool hasEdges () const;  ; bool hasEdgesAroundVertex () const;  . bool checkConnexity () override;  Checks if the topology has only one connected component. More...;  ; Size getNumberOfConnectedComponent () override;  Returns the number of connected component. More...;  ; const VecEdgeID getConnectedElement (EdgeID elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::EdgeSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::EdgeSetTopologyContainer Class Reference . #include <EdgeSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::EdgeSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of edges and provides access to the adjacency between points and edges . Public Attributes; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Usability,clear,clear,"  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (EdgeSetTopologyContainer, PointSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addEdge (Index a, Index b) override;  . const SeqEdges & getEdges () override;  Returns the edge array. More...;  ; const Edge getEdge (EdgeID i) override;  Get an Edge from its ID. More...;  ; EdgeID getEdgeIndex (PointID v1, PointID v2) override;  Get the index of the edge joining two vertices. More...;  ; const EdgesAroundVertex & getEdgesAroundVertex (PointID id) override;  Get the indices of the edges around a vertex. More...;  . void initTopology ();  ; bool checkTopology () const override;  Checks if the topology is coherent. More...;  ; Size getNumberOfEdges () const;  Returns the number of edges in this topology. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; virtual int getNumberConnectedComponents (sofa::type::vector< EdgeID > &components);  Returns the number of connected components from the graph containing all edges and",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html
Deployability,update,updateInternal,"ent::topology::container::dynamic::EdgeSetTopologyModifiervirtual; splitEdgesProcess(sofa::type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~TopologyModifier() overridesofa::core::topology::TopologyModifierinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::EdgeSetTopologyModifier Member List . This is the complete list of members for sofa::component::topology::container::dynamic::EdgeSetTopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdgeProcess(Edge e)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; addEdges(const sofa::type::vector< Edge > &edges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdgesProcess(const sofa::type::vector< Edge > &edges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< Ed",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html
Performance,load,loader,"F=true)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotected; reset()sofa::core::objectmodel::BaseObjectvirtual; resortCuthillMckee(sofa::type::vector< int > &inverse_permutation)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(EdgeSetTopologyModifier, PointSetTopologyModifier)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; sofa::component::topology::container::dynamic::PointSetTopologyModifier::SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::topology::TopologyModifier::SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; splitEdges(sofa::type::vector< EdgeID > &indices, const bool removeIsolatedPoi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html
Testability,log,logging,"st sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bool addD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html
Availability,down,down,"﻿. SOFA API: sofa::component::topology::container::dynamic::EdgeSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::EdgeSetTopologyModifier Class Reference . #include <EdgeSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::EdgeSetTopologyModifier:. [legend]; Detailed Description; A class that can apply basic transformations on a set of edges. . Public Member Functions;  SOFA_CLASS (EdgeSetTopologyModifier, PointSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  add a set of edges More...;  ; void addEdgeProcess (Edge e);  Effectively add an edge. More...;  ; virtual void swapEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs);  Swap the edges. More...;  ; virtual void fuseEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs, const bool removeIsolatedPoints=true);  Fuse the edges. More...;  ; virtual void splitEdgesProcess (sofa::type::vector< EdgeID > &indices, const bool removeIsolatedPoints=true);  Split the edges. More...;  ; virtual void splitEdgesProcess (sofa::type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Integrability,depend,dependent,"removeItems (const sofa::type::vector< PointID > &) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyModifier;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Modifiability,inherit,inherited,"ID);  Given an element indice, it will remove all the connected component in which this element belongs to. Warning: if there is only one connected component in the model. All the object will be removed. More...;  ; virtual bool removeConnectedElements (EdgeID elemID);  Given an element indice, it will remove all elements directly connected to the input one. More...;  ; virtual bool removeIsolatedElements ();  If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. More...;  ; virtual bool removeIsolatedElements (sofa::Size scaleElem);  If several connected components are detected, it will remove all connected component with less than a given number of elements. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points renumbering. More...;  ; virtual void addPoints (const sofa::Size nPoints, const bool addDOF=true);  Add a set of points. More...;  ; virtual void addPoints (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Add a set of points. More...;  ; virtual void addPoints (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Add a set of points according",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Performance,load,loader,"lization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Safety,detect,detected,"fa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  Split an array of edges, replacing each edge (p1, p2) by two edges (p1, p3) and (p3, p2) where p3 is the new vertex On each edge, a vertex is created based on its barycentric coordinates. More...;  ; virtual void resortCuthillMckee (sofa::type::vector< int > &inverse_permutation);  Gives the optimal vertex permutation according to the Reverse CuthillMckee algorithm (use BOOST GRAPH LIBRARY) More...;  ; virtual bool removeConnectedComponents (EdgeID elemID);  Given an element indice, it will remove all the connected component in which this element belongs to. Warning: if there is only one connected component in the model. All the object will be removed. More...;  ; virtual bool removeConnectedElements (EdgeID elemID);  Given an element indice, it will remove all elements directly connected to the input one. More...;  ; virtual bool removeIsolatedElements ();  If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. More...;  ; virtual bool removeIsolatedElements (sofa::Size scaleElem);  If several connected components are detected, it will remove all connected component with less than a given number of elements. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points ren",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Security,access,access,"ributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html
Availability,toler,tolerance," >protected; initializedHexahedronCubatureTablessofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; initPointAdded(PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs) overridesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >virtual; initPointsAdded(const type::vector< sofa::Index > &indices, const type::vector< core::topology::PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::topology::BaseTopologyObjectvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isHexahedronAffine(const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; isPointInQuad(const QuadID ind_q, const sofa::type::Vec< 3, Real > &p) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; isPointOnEdge(const sofa::type::Vec< 3, Real > &pt, const EdgeID ind_e) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; isQuadInPlane(const QuadID ind_q, const PointID ind_p, const type::Vec< 3, Real > &plane_vect) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; LocalCoord typedefsofa::component::topology::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html
Deployability,update,updateInternal,"rithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >, including all inherited members. _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjectprotect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html
Performance,load,loader,"er::dynamic::PointSetGeometryAlgorithms< DataTypes >; SeqEdges typedefsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; SeqHexahedra typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; SeqQuads typedefsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showEdgeIndicessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; showQuadIndicessofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; SOFA_CLASS(SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms::SOFA_CLASS(SOF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html
Testability,log,logging," _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjectprotect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,"t::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; computeEdgeAABB(const EdgeID i, CPos &minCoord, CPos &maxCoord) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeEdgeBarycentricCoordinates(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html
Availability,toler,tolerance,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html
Integrability,interface,interface,"ta;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes));  ; void computeHexahedronAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; void computeHexahedronRestAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeHexahedronCenter (const HexaID h) const;  ; Coord computeHexahedronRestCenter (const HexaID h) const;  ; void getHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; void getRestHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; Real computeHexahedronVolume (const HexaID h) const;  computes the volume of hexahedron no h and returns it More...;  ; void computeHexahedronVolume (BasicArrayInterface< Real > &ai) const;  computes the hexahedron volume of all hexahedra are store in the array interface More...;  ; Real computeRestHexahedronVolume (const HexaID h) const;  computes the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html
Modifiability,inherit,inherited," <HexahedronSetGeometryAlgorithms.h>. Inheritance diagram for sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an HexahedronSet. . Protected Attributes; bool initializedHexahedronCubatureTables;  ; Data< bool > d_showHexaIndices;  Debug : view Hexa indices. More...;  ; Data< bool > d_drawHexahedra;  if true, draw the Hexahedron in the topology More...;  ; Data< float > d_drawScaleHexahedra;  Scale of the hexahedra (between 0 and 1; if <1.0, it produces gaps between the hexahedra) More...;  ; Data< sofa::type::RGBAColor > d_drawColorHexahedra;  ; NumericalIntegrationDescriptor< Real, 3 > hexahedronNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; Data< bool > showQuadIndices;  Debug : view Quad indices. More...;  ; Data< bool > _drawQuads;  if true, draw the quads in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGB code color used to draw quads. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html
Performance,load,loader,"cal coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html
Testability,test,test,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html
Usability,simpl,simple,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html
Deployability,update,updateInternal,"fa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecHexaID typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecQuadID typedefsofa::component::topology::container::dynamic::QuadSetTopologyContainer; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html
Performance,load,load,"nline; isEdgeTopologyDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; isHexahedronTopologyDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerinlineprotected; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; isQuadTopologyDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; LocalPointID typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_edgesInHexahedronsofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; m_edgesInQuadsofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; m_edgeTopologyDirtysofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_hexahedraAroundEdgesofa::component::topology::container::dynamic::He",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html
Usability,clear,clear,"textLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container-members.html
Availability,down,down,"nt quads, edges and vertices . Public Attributes; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInHexahedron > m_edgesInHexahedron;  provides the set of edges for each hexahedron. More...;  ; sofa::type::vector< QuadsInHexahedron > m_quadsInHexahedron;  provides the set of quads for each hexahedron. More...;  ; sofa::type::vector< HexahedraAroundVertex > m_hexahedraAroundVertex;  for each vertex provides the set of hexahedra adjacent to that vertex. More...;  ; sofa::type::vect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer Class Reference . #include <HexahedronSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of hexahedra and provides access with adjacent quads, edges and vertices . Public Attributes; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Performance,load,loader,"tmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Safety,avoid,avoids," ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it does not exist. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; const sofa::type::vector< Hexahedron > & getHexahedronArray ();  Returns the Hexahedron array. More...;  ; const sofa::type::vector< EdgesInHexahedron > & getEdgesInHexahedronArray ();  Returns the EdgesInHexahedron array (i.e. provide the 12 edge indices for each hexahedron). ; More...;  ; const sofa::type::vector< QuadsInHexahedron > & getQuadsInHexahedronArray ();  Returns the QuadsInHexahedron array (i.e. provide the 8 quad indices for each hexahedron). ; More...;  ; const sofa::type::vector< HexahedraAroundVertex > & getHexahedraAroundVertexArray ();  Returns the HexahedraAroundVertex array (i.e. provide the hexahedron indices adjacent to each vertex). More...;  ; const sofa::type::vector< HexahedraAroundEdge > & getHexahedraAroundEdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer Class Reference . #include <HexahedronSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of hexahedra and provides access with adjacent quads, edges and vertices . Public Attributes; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Usability,clear,clear,"EdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();  Returns the HexahedraAroundQuad array (i.e. provide the hexahedron indices adjacent to each quad). More...;  ; bool hasHexahedra () const;  ; bool hasEdgesInHexahedron () const;  ; bool hasQuadsInHexahedron () const;  ; bool hasHexahedraAroundVertex () const;  ; bool hasHexahedraAroundEdge () const;  ; bool hasHexahedraAroundQuad () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  . const SeqHexahedra & getHexahedra () override;  Get the array of hexahedra. More...;  ; const Hexahedron getHexahedron (HexaID i) override;  Get a hexahedron from its index. More...;  ; virtual unsigned int getLocalIndexFromBinaryIndex (const HexahedronBinaryIndex bi) const;  Get the local hexahedron index (0<i<8) from its 3 binary indices. More...;  ; virtual HexahedronBinaryIndex getBinaryIndexFromLocalIndex (const unsigned int li) const;  Get the binary index (array of 3 binary values) from its local index (0<li<8) More...;  ; HexahedronID getHexahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8) override;  Get the index of a hexahedron from the indices of its vertices. More...;  ; const EdgesInHexahedron & getEdgesInHexahedron (HexaID id) override;  Get the 12 edges that form a hexahedron. More...;  ; const QuadsInHexahedron & getQuadsInHexahedron (HexaID id) ov",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html
Deployability,update,updateInternal,"er::dynamic::EdgeSetTopologyModifiervirtual; splitEdgesProcess(sofa::type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~HexahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTop",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier Member List . This is the complete list of members for sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdgeProcess(Edge e)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; addEdges(const sofa::type::vector< Edge > &edges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdgesProcess(const sofa::type::vector< Edge > &edges) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html
Performance,load,loader,"inverse_permutation)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; SeqHexahedra typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; SeqQuads typedefsofa::component::topology::container::dynamic::QuadSetTopologyModifier; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(HexahedronSetTopologyModifier, QuadSetTopologyModifier)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; sofa::component::topology::container::dynamic::QuadSetTopologyModifier::SOFA_CLASS(QuadSetTopologyModifier, EdgeSetTopologyModifier)sofa::component::topology::container::dynamic::QuadSetTopologyModifier; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::SOFA_CLASS(EdgeSetTopologyModifier, PointSetTopologyModifier)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; sofa::component::topology::container::dynamic::PointSetTopologyModifier::SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::topology::TopologyMod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html
Testability,log,logging,"ddHexahedraProcess(const sofa::type::vector< Hexahedron > &hexahedra)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotectedvirtual; addHexahedraWarning(const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotected; addHexahedraWarning(const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotected; addHexahedronProcess(Hexahedron e)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html
Availability,down,down,"ning;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (HexahedronSetTopologyModifier, QuadSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra);  add a set of hexahedra More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of hexahedra More...;  ; void addHexahedronProcess (Hexahedron e);  Add a hexahedron. More...;  ; virtual void removeHexahedra (const sofa::type::vector< HexahedronID > &hexahedraIds);  Remove a set of hexahedra. More...;  ; void removeItems (const sofa::type::vector< HexahedronID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyModifier;  SOFA_CLASS (QuadSetTopologyModifier, EdgeSetTopologyModifier);",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Integrability,message,messages,"amic::HexahedronSetTopologyModifier Class Reference . #include <HexahedronSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing hexahedra . Public Attributes; Data< bool > removeIsolated;  Remove isolated DOFs. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (HexahedronSetTopologyModifier, QuadSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra);  add a set of hexahedra More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::ty",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier Class Reference . #include <HexahedronSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing hexahedra . Public Attributes; Data< bool > removeIsolated;  Remove isolated DOFs. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (HexahedronSetTopologyModifier, QuadSetTopologyModifier);  ; voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Performance,load,loader,"lization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Safety,detect,detected,"fa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  Split an array of edges, replacing each edge (p1, p2) by two edges (p1, p3) and (p3, p2) where p3 is the new vertex On each edge, a vertex is created based on its barycentric coordinates. More...;  ; virtual void resortCuthillMckee (sofa::type::vector< int > &inverse_permutation);  Gives the optimal vertex permutation according to the Reverse CuthillMckee algorithm (use BOOST GRAPH LIBRARY) More...;  ; virtual bool removeConnectedComponents (EdgeID elemID);  Given an element indice, it will remove all the connected component in which this element belongs to. Warning: if there is only one connected component in the model. All the object will be removed. More...;  ; virtual bool removeConnectedElements (EdgeID elemID);  Given an element indice, it will remove all elements directly connected to the input one. More...;  ; virtual bool removeIsolatedElements ();  If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. More...;  ; virtual bool removeIsolatedElements (sofa::Size scaleElem);  If several connected components are detected, it will remove all connected component with less than a given number of elements. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points renumbering. More...;  ; virtual void addPoints (const sofa::Size nPoints, const bool addDOF=true);  Add a set of points. More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Security,access,access,"ta &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class HexahedronSetGeometryAlgorithms;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html
Deployability,update,updateInternal,"fa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3i typedefsofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecHexaID typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecQuadID typedefsofa::component::topology::container::dynamic::QuadSetTopologyContainer; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, including all inherited members. _levelsofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html
Performance,load,load,"nline; isEdgeTopologyDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; isHexahedronTopologyDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerinlineprotected; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; isQuadTopologyDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; LocalPointID typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_edgesInHexahedronsofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; m_edgesInQuadsofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; m_edgeTopologyDirtysofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_hexahedraAroundEdgesofa::component::topology::container::dynamic::He",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html
Testability,log,logging," _levelsofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html
Usability,clear,clear,"textLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html
Availability,down,down,"ntainer::dynamic::HexahedronSetTopologyContainer; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultilevelHexahedronSetTopologyContainer, HexahedronSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void clear () override;  ; void getHexaNeighbors (const Index hexaId, type::vector< Index > &neighbors);  ; void getHexaFaceNeighbors (const Index hexaId, const Index faceId, type::vector< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer Class Reference . #include <MultilevelHexahedronSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer:. [legend]. Public Attributes; Data< int > _level;  Number of resolution levels between the fine and coarse mesh. More...;  ; Data< Vec3i > fineResolution;  fine resolution More...;  ; Data< type::vector< Index > > hexaIndexInRegularGrid;  indices of the hexa in the grid. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Performance,load,loader,"tmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Safety,avoid,avoids,"oarseRegularGrid (const Index hexaId) const;  ; const Vec3i & getHexaIdxInFineRegularGrid (const Index hexaId) const;  ; Index getHexaIdInFineRegularGrid (const Index hexaId) const;  ; Index getHexaChildren (const Index hexaId, type::vector< Index > &children) const;  ; Index getHexaParent (const Index hexaId) const;  ; Index getHexaInFineRegularGrid (const Vec3i &id) const;  ; const std::set< Vec3i > & getHexaVoxels (const Index hexaId) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it does not exist. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; const sofa::type::vector< Hexahedron > & getHexahedronArray ();  Returns the Hexahedron array. More...;  ; const sofa::type::vector< EdgesInHexahedron > & getEdgesInHexahedronArray ();  Returns the EdgesInHexahedron array (i.e. provide the 12 edge indices for each hexahedron). ; More...;  ; const sofa::type::vector< QuadsInHexahedron > & getQuadsInHexahedronArray ();  Returns the QuadsInHexahedron array (i.e. provide the 8 quad indices for each hexahedron). ; More...;  ; const sofa::type::vector< HexahedraAroundVertex > & getHexahedraAroundVertexArray ();  Returns the HexahedraAroundVertex array (i.e. provide the hexahedron indices adjacent to each vertex). More...;  ; const sofa::type::vector< HexahedraAroundEdge > & getHexahedraAroundEdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Usability,clear,clear,"logyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void clear () override;  ; void getHexaNeighbors (const Index hexaId, type::vector< Index > &neighbors);  ; void getHexaFaceNeighbors (const Index hexaId, const Index faceId, type::vector< Index > &neighbors);  ; void getHexaVertexNeighbors (const Index hexaId, const Index vertexId, type::vector< Index > &neighbors);  ; void addTopologyChangeFine (const core::topology::TopologyChange *topologyChange);  ; void resetTopologyChangeListFine ();  ; std::list< const core::topology::TopologyChange * >::const_iterator beginChangeFine () const;  ; std::list< const core::topology::TopologyChange * >::const_iterator endChangeFine () const;  ; const std::list< const core::topology::TopologyChange * > & getChangeListFine () const;  ; int getLevel () const;  ; const Vec3i & getCoarseResolution () const;  ; bool getHexaContainsPosition (const Index hexaId, const type::Vec3 &baryC) const;  ; const Vec3i & getHexaIdxInCoarseRegularGrid (const Index hexaId) const;  ; int getHexaIdInCoarseRegularGrid (const Index hexaId) const;  ; const Vec3i & getHexaIdxInFineRegularGrid (const Index hexaId) const;  ; Index getHexaIdInFineRegularGrid (const Index hexaId) const;  ; Index getHexaChildren (const Index hexaId, type::vector< Index > &children) const;  ; Index getHexaParent (const Index hexaId) const;  ; Index getHexaInFineRegularGrid (const Vec3i &id) const;  ; const std::set< Vec3i > & getHexaVoxels (const Index hexaId) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it does not exist. More...;  ; Size getNumberOfEle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::MultilevelModification Member List . This is the complete list of members for sofa::component::topology::container::dynamic::MultilevelModification, including all inherited members. getArray() constsofa::component::topology::container::dynamic::MultilevelModificationinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getNbModifiedHexahedra() constsofa::component::topology::container::dynamic::MultilevelModificationinline; getRemovedVoxels(const Index hexaId) constsofa::component::topology::container::dynamic::MultilevelModificationinline; Index typedefsofa::component::topology::container::dynamic::MultilevelModification; m_changeTypesofa::core::topology::TopologyChangeprotected; MULTILEVEL_MODIFICATIONsofa::component::topology::container::dynamic::MultilevelModificationstatic; MultilevelModification(const sofa::type::vector< Index > &_tArray, const std::map< Index, std::list< Vec3i > > &removedVoxels)sofa::component::topology::container::dynamic::MultilevelModificationinline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; Vec3i typedefsofa::component::topology::container::dynamic::MultilevelModification; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_modification-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_modification-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::MultilevelModification Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::topology::container::dynamic::MultilevelModification Class Reference . #include <MultilevelHexahedronSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::MultilevelModification:. [legend]; Detailed Description; notifies change in the multilevel structure other than adding or removing coarse hexahedra . Static Public Attributes; static const int MULTILEVEL_MODIFICATION = core::topology::TOPOLOGYCHANGE_LASTID + 1;  . Public Member Functions;  MultilevelModification (const sofa::type::vector< Index > &_tArray, const std::map< Index, std::list< Vec3i > > &removedVoxels);  ; const sofa::type::vector< Index > & getArray () const;  ; const std::list< Vec3i > & getRemovedVoxels (const Index hexaId) const;  ; size_t getNbModifiedHexahedra () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ MULTILEVEL_MODIFICATION. const int sofa::component::topology::container::dynamic::MultilevelModification::MULTILEVEL_MODIFICATION = core::topology::TOPOLOGYCHANGE_LASTID + 1. static . Constructor details. ◆ MultilevelModification(). sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_modification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_modification.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >, including all inherited members. addQuadratureMethod(const QuadratureMethod qt, const IntegrationOrder order, QuadraturePointArray qpa)sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; BarycentricCoordinatesType typedefsofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; GAUSS_CUBE_METHOD enum valuesofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; GAUSS_LEGENDRE_METHOD enum valuesofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; GAUSS_LOBATO_METHOD enum valuesofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; GAUSS_QUAD_METHOD enum valuesofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; GAUSS_SIMPLEX_METHOD enum valuesofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; getIntegrationOrders(const QuadratureMethod qt) constsofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; getQuadratureMethod(const QuadratureMethod qt, const IntegrationOrder order) constsofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; getQuadratureMethods() constsofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; IntegrationOrder typedefsofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; NEWTON_COTES_METHOD enum valuesofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; NumericalIntegrationDescriptor()sofa::component::top",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor-members.html
Availability,avail,available," . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N > Class Template Reference . #include <NumericalIntegrationDescriptor.h>; Cross product for 3-elements vectors. ; More... Inheritance diagram for sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >:. [legend]; Detailed Description; template<typename Real, int N>; class sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; Cross product for 3-elements vectors. . Protected Attributes; std::map< QuadratureMethodKey, QuadraturePointArray > quadratureMap;  . Public Member Functions;  NumericalIntegrationDescriptor ();  empty constructor More...;  ; QuadraturePointArray getQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order) const;  returns the set of quadrature points associated with a given quadrature method and integration order More...;  ; std::set< QuadratureMethod > getQuadratureMethods () const;  returns all the indices corresponding to all available quadrature methods More...;  ; std::set< IntegrationOrder > getIntegrationOrders (const QuadratureMethod qt) const;  returns the quadrature integration orders available for a given method More...;  ; void addQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order, QuadraturePointArray qpa);  add a quadrature method in the map More...;  . Attribute details. ◆ quadratureMap. template<typename Real , int N> . std::map<QuadratureMethodKey, QuadraturePointArray> sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::NumericalIntegrationDescriptor ; (; ). inline . empty constructor . Function details. ◆ addQuadratureMethod(). template<typename Real , int N> . void sofa::component::topolog",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html
Deployability,integrat,integration,"r< Real, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N > Class Template Reference . #include <NumericalIntegrationDescriptor.h>; Cross product for 3-elements vectors. ; More... Inheritance diagram for sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >:. [legend]; Detailed Description; template<typename Real, int N>; class sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; Cross product for 3-elements vectors. . Protected Attributes; std::map< QuadratureMethodKey, QuadraturePointArray > quadratureMap;  . Public Member Functions;  NumericalIntegrationDescriptor ();  empty constructor More...;  ; QuadraturePointArray getQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order) const;  returns the set of quadrature points associated with a given quadrature method and integration order More...;  ; std::set< QuadratureMethod > getQuadratureMethods () const;  returns all the indices corresponding to all available quadrature methods More...;  ; std::set< IntegrationOrder > getIntegrationOrders (const QuadratureMethod qt) const;  returns the quadrature integration orders available for a given method More...;  ; void addQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order, QuadraturePointArray qpa);  add a quadrature method in the map More...;  . Attribute details. ◆ quadratureMap. template<typename Real , int N> . std::map<QuadratureMethodKey, QuadraturePointArray> sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< R",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html
Integrability,integrat,integration,"r< Real, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N > Class Template Reference . #include <NumericalIntegrationDescriptor.h>; Cross product for 3-elements vectors. ; More... Inheritance diagram for sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >:. [legend]; Detailed Description; template<typename Real, int N>; class sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; Cross product for 3-elements vectors. . Protected Attributes; std::map< QuadratureMethodKey, QuadraturePointArray > quadratureMap;  . Public Member Functions;  NumericalIntegrationDescriptor ();  empty constructor More...;  ; QuadraturePointArray getQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order) const;  returns the set of quadrature points associated with a given quadrature method and integration order More...;  ; std::set< QuadratureMethod > getQuadratureMethods () const;  returns all the indices corresponding to all available quadrature methods More...;  ; std::set< IntegrationOrder > getIntegrationOrders (const QuadratureMethod qt) const;  returns the quadrature integration orders available for a given method More...;  ; void addQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order, QuadraturePointArray qpa);  add a quadrature method in the map More...;  . Attribute details. ◆ quadratureMap. template<typename Real , int N> . std::map<QuadratureMethodKey, QuadraturePointArray> sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< R",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html
Deployability,update,updateInternal,"td::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~GeometryAlgorithms() overridesofa::core::topology::GeometryAlgorithmsinlineprotected; ~PointSetGeometryAlgorithms() overridesofa::component::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >, including all inherited members. ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::Point",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html
Performance,load,loader,"oveInNode(objectmodel::BaseNode *node) overridesofa::core::topology::BaseTopologyObjectvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; RIGHT enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html
Testability,log,logging," ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::Point",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; Coord typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showIndicesScalesofa::component::topology::container::dynamic::PointSetG",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html
Availability,down,down,"shTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord, CPos &maxCoord) const;  Returns the axis aligned bounding box. More...;  ; const Coord & getPointPosition (const PointID pointId) const;  ; const Coord & getPointRestPosition (const PointID pointId) const;  ; sofa::core::State< DataTypes > * getDOF () const;  Returns the object where the DOFs are stored. More...;  ; flo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html
Integrability,depend,dependent,":VecDerivId > &derivVecs) override;  Called by the state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ; virtual void initPointAdded (PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs);  Process the added point initialization according to the topology and local coordinates. More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html
Modifiability,inherit,inherited,"aTypes>; class sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; A class that can perform some geometric computation on a set of points. . Protected Attributes; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html
Performance,perform,perform,"﻿. SOFA API: sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes > Class Template Reference . #include <PointSetGeometryAlgorithms.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; A class that can perform some geometric computation on a set of points. . Protected Attributes; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  Li",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html
Deployability,update,updateInternal,"iangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~PointSetTopologyContainer() override=defaultsofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual; ~TopologyContainer() overridesofa::core::topology::TopologyContainerprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::PointSetTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::PointSetTopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(const TopologyChange *topologyChange)sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html
Performance,load,load,"nsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_pointTopologyDirtysofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; m_stateChangeListsofa::core::topology::TopologyContainer; m_topologyHandlerListPerElementsofa::core::topology::TopologyContainer; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(const TopologyChange *topologyChange)sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html
Usability,clear,clear,"ectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() const overridesofa::core::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html
Availability,down,down,"﻿. SOFA API: sofa::component::topology::container::dynamic::PointSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::PointSetTopologyContainer Class Reference . #include <PointSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetTopologyContainer:. [legend]; Detailed Description; The container class that stores a set of points and provides access to each point. This set of point may be a subset of the DOF of the mechanical model . Public Attributes; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Modifiability,inherit,inherited,"tTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::PointSetTopologyContainer Class Reference . #include <PointSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetTopologyContainer:. [legend]; Detailed Description; The container class that stores a set of points and provides access to each point. This set of point may be a subset of the DOF of the mechanical model . Public Attributes; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Performance,load,loader,"tmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Safety,avoid,avoids,"des names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  . Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; virtual Size getNumberOfElements () const;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::PointSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::PointSetTopologyContainer Class Reference . #include <PointSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetTopologyContainer:. [legend]; Detailed Description; The container class that stores a set of points and provides access to each point. This set of point may be a subset of the DOF of the mechanical model . Public Attributes; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Usability,clear,clear,"rackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  . Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; virtual Size getNumberOfElements () const;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html
Deployability,update,updateInternal,"td::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::topology::TopologyModifier::SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~TopologyModifier() overridesofa::core::topology::TopologyModifierinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::PointSetTopologyModifier Member List . This is the complete list of members for sofa::component::topology::container::dynamic::PointSetTopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotected; addPointsWarning(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::ve",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html
Performance,load,loader,"DOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotectedvirtual; renumberPointsWarning(const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotected; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::topology::TopologyModifier::SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifierprotected; addPointsWarning(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::ve",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html
Availability,down,down,"ng;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points renumbering. More...;  ; virtual void addPoints (const sofa::Size nPoints, const bool addDOF=true);  Add a set of points. More...;  ; virtual void addPoints (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Add a set of points. More...;  ; virtual void addPoints (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Add a set of points according to their ancestors topology elements. More...",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Integrability,message,messages,"or multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::PointSetTopologyModifier Class Reference . #include <PointSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetTopologyModifier:. [legend]; Detailed Description; A class that can apply basic topology transformations on a set of points. . Public Attributes; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::PointSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::PointSetTopologyModifier Class Reference . #include <PointSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetTopologyModifier:. [legend]; Detailed Description; A class that can apply basic topology transformations on a set of points. . Public Attributes; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void swapPoints (const Index i1, const Index i2)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Performance,load,loader,"lization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Security,access,access,"aseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class PointSetGeometryAlgorithms;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html
Deployability,update,updateInternal,"rithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >, including all inherited members. _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html
Performance,load,loader,"y::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; RIGHT enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; SeqEdges typedefsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; SeqQuads typedefsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showEdgeIndicessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; showQuadIndicessofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; SOFA_CLASS(SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes))sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html
Testability,log,logging," _drawColorsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; _drawQuadssofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; computeEdgeAABB(const EdgeID i, CPos &minCoord, CPos &maxCoord) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeEdgeBarycentricCoordinates(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html
Availability,down,down,"ofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection);  ; void computeLocalFrameEdgeWeights (type::vector< EdgeID > &numEdges, type::vector< Edge > &edges, type::vector< Vec3d > &weights) const;  ; void initPointAdded (PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs) override;  Process the added point initialization according to the topology and local coordinates. More...;  ; NumericalIntegrationDescriptor< Real, 1 > & getEdgeNumericalIntegrationDescriptor ();  ; bool computeEdgeSegmentIntersection (EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b, Real &baryCoef);  ; sofa::type::vector< SReal > compute2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; sofa::type::vector< SReal > computeRest2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord, CPos &maxCoord) const;  Returns the axis aligned bounding box. More...;  ; const Coord & getPointPosition (const PointID pointId) const; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html
Integrability,interface,interface,"butes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes));  ; void computeQuadAABB (const QuadID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeQuadCenter (const QuadID i) const;  ; void getQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; void getRestQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; Real computeQuadArea (const QuadID i) const;  Computes the area of quad no i and returns it. More...;  ; void computeQuadArea (BasicArrayInterface< Real > &ai) const;  Computes the quad area of all quads are store in the array interface. More...;  ; Real computeRestQuadArea (const QuadID i) const;  Computes the initial area of quad no i and returns it. More...;  ; type::Vec< 3, double > computeQuadNormal (const QuadID ind_q) const;  Computes the normal vector of a quad indexed by ind_q (not normed) More...;  ; bool isQuadInPlane (const QuadID ind_q, const PointID ind_p, const type::Vec< 3, Real > &plane_vect) const;  Tests if a quad indexed by ind_q (and incident to the vertex indexed by ind_p) is included or not in the plane defined by (ind_p, plane_vect) More...;  ; bool isPointInQuad (const QuadID ind_q, const sofa::type::Vec< 3, Real > &p) const;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html
Modifiability,inherit,inherited,". Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes > Class Template Reference . #include <QuadSetGeometryAlgorithms.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an QuadSet. . Protected Attributes; Data< bool > showQuadIndices;  Debug : view Quad indices. More...;  ; Data< bool > _drawQuads;  if true, draw the quads in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGB code color used to draw quads. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html
Performance,load,loader,"cal coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html
Deployability,update,updateInternal,"edefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecQuadID typedefsofa::component::topology::container::dynamic::QuadSetTopologyContainer; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyContainer() overridesofa::component::topology::container::dynamic::EdgeSetTopologyCont",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::QuadSetTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::QuadSetTopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html
Performance,load,load,"TrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isEdgeTopologyDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; isQuadTopologyDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_edgesInQuadsofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; m_edgeTopologyDirtysofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_pointTopologyDirtysofa::component::topology::containe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html
Usability,clear,clear,"l::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html
Availability,down,down,"::QuadSetTopologyContainer Class Reference . #include <QuadSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetTopologyContainer:. [legend]; Detailed Description; Object that stores a set of quads and provides access to each quad and its edges and vertices . Public Attributes; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad. More...;  ; sofa::type::vector< QuadsAroundVertex > m_quadsAroundVertex;  for each vertex provides the set of quads adjacent to that vertex. More...;  ; sofa::type::vector< QuadsAroundEdge > m_quadsAroundEdge;  for each edge provides the set of quads adjacent to that edge. More...;  ; bool m_quadTopologyDirty = false;  Boole",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::QuadSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::QuadSetTopologyContainer Class Reference . #include <QuadSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetTopologyContainer:. [legend]; Detailed Description; Object that stores a set of quads and provides access to each quad and its edges and vertices . Public Attributes; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Performance,load,loader,"tmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Safety,avoid,avoids,"m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (QuadSetTopologyContainer, EdgeSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNumberOfQuads () const;  Returns the number of quads in this topology. The difference to getNbQuads() is that this method does not generate the quad array if it does not exist. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; const sofa::type::vector< Quad > & getQuadArray ();  Returns the Quad array. More...;  ; const sofa::type::vector< EdgesInQuad > & getEdgesInQuadArray ();  Returns the EdgesInQuadArray array (i.e. provide the 4 edge indices for each quad) More...;  ; const sofa::type::vector< QuadsAroundVertex > & getQuadsAroundVertexArray ();  Returns the QuadsAroundVertex array (i.e. provide the quad indices adjacent to each vertex). More...;  ; const sofa::type::vector< QuadsAroundEdge > & getQuadsAroundEdgeArray ();  Returns the QuadsAroundEdge array (i.e. provide the quad indices adjacent to each edge). More...;  ; bool hasQuads () const;  ; bool hasEdgesInQuad () const;  ; bool hasQuadsAroundVertex () const;  ; bool hasQuadsAroundEdge () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::QuadSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::QuadSetTopologyContainer Class Reference . #include <QuadSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetTopologyContainer:. [legend]; Detailed Description; Object that stores a set of quads and provides access to each quad and its edges and vertices . Public Attributes; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Usability,clear,clear,"QuadArray array (i.e. provide the 4 edge indices for each quad) More...;  ; const sofa::type::vector< QuadsAroundVertex > & getQuadsAroundVertexArray ();  Returns the QuadsAroundVertex array (i.e. provide the quad indices adjacent to each vertex). More...;  ; const sofa::type::vector< QuadsAroundEdge > & getQuadsAroundEdgeArray ();  Returns the QuadsAroundEdge array (i.e. provide the quad indices adjacent to each edge). More...;  ; bool hasQuads () const;  ; bool hasEdgesInQuad () const;  ; bool hasQuadsAroundVertex () const;  ; bool hasQuadsAroundEdge () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  . const SeqQuads & getQuads () override;  Returns the quad array. More...;  ; const Quad getQuad (QuadID id) override;  Returns the quad corresponding to the QuadID i. More...;  ; QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  ; const EdgesInQuad & getEdgesInQuad (QuadID id) override;  Returns the set of edges adjacent to a given quad. More...;  ; const QuadsAroundVertex & getQuadsAroundVertex (PointID id) override;  Returns the set of quads adjacent to a given vertex. More...;  ; const QuadsAroundEdge & getQuadsAroundEdge (EdgeID id) override;  Returns the set of quads adjacent to a given edge. More...;  ; int getVertexIndexInQuad (const Quad &t, PointID vertexIndex) const override;  Returns the index (either 0, 1, 2, 3) of the vertex whose global index is vertexIndex. More...;  ; int getEdgeIndexInQuad (const EdgesInQuad &t, EdgeID edheIndex) const override;  Returns the index (either 0, 1, 2, 3) of the edge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html
Deployability,update,updateInternal,"er::dynamic::EdgeSetTopologyModifiervirtual; splitEdgesProcess(sofa::type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~QuadSetTopologyModifier() overridesofa::component::topology::container::dynamic::QuadSetTopologyModifie",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::QuadSetTopologyModifier Member List . This is the complete list of members for sofa::component::topology::container::dynamic::QuadSetTopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdgeProcess(Edge e)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; addEdges(const sofa::type::vector< Edge > &edges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdgesProcess(const sofa::type::vector< Edge > &edges) overridesofa::component::topology::container::dynamic::QuadSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html
Performance,load,loader," reset()sofa::core::objectmodel::BaseObjectvirtual; resortCuthillMckee(sofa::type::vector< int > &inverse_permutation)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; SeqQuads typedefsofa::component::topology::container::dynamic::QuadSetTopologyModifier; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(QuadSetTopologyModifier, EdgeSetTopologyModifier)sofa::component::topology::container::dynamic::QuadSetTopologyModifier; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::SOFA_CLASS(EdgeSetTopologyModifier, PointSetTopologyModifier)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; sofa::component::topology::container::dynamic::PointSetTopologyModifier::SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::topology::TopologyModifier::SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html
Testability,log,logging,"st sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::QuadSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bool addD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html
Availability,down,down,"﻿. SOFA API: sofa::component::topology::container::dynamic::QuadSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::QuadSetTopologyModifier Class Reference . #include <QuadSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing quads . Public Member Functions;  SOFA_CLASS (QuadSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads);  add a set of quads More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of quads More...;  ; void addQuadProcess (Quad e);  Effectively Add a quad. More...;  ; virtual void removeQuads (const sofa::type::vector< QuadID > &quadIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints);  Remove a set of quads. More...;  ; void removeItems (const sofa::type::vector< QuadID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  SOFA_CLASS (EdgeSetTopologyModifier, PointSetTopologyModifier);  ; virtual void addEdges (const sofa::type::vector< Edge > &edges);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of edge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Integrability,depend,dependent," Object component that points have been added or will be removed. More...;  ; void notifyEndingEvent () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyModifier;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Modifiability,inherit,inherited,"logyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads);  add a set of quads More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of quads More...;  ; void addQuadProcess (Quad e);  Effectively Add a quad. More...;  ; virtual void removeQuads (const sofa::type::vector< QuadID > &quadIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints);  Remove a set of quads. More...;  ; void removeItems (const sofa::type::vector< QuadID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  SOFA_CLASS (EdgeSetTopologyModifier, PointSetTopologyModifier);  ; virtual void addEdges (const sofa::type::vector< Edge > &edges);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  add a set of edges More...;  ; void addEdgeProcess (Edge e);  Effectively add an edge. More...;  ; virtual void swapEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs);  Swap the edges. More...;  ; virtual void fuseEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs, const bool removeIsolatedPoints=true);  Fuse the edges. More...;  ; virtual void splitEdgesProcess (sofa::type::vector< EdgeID > &indices, const boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Performance,load,loader,"lization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Safety,detect,detected,"fa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  Split an array of edges, replacing each edge (p1, p2) by two edges (p1, p3) and (p3, p2) where p3 is the new vertex On each edge, a vertex is created based on its barycentric coordinates. More...;  ; virtual void resortCuthillMckee (sofa::type::vector< int > &inverse_permutation);  Gives the optimal vertex permutation according to the Reverse CuthillMckee algorithm (use BOOST GRAPH LIBRARY) More...;  ; virtual bool removeConnectedComponents (EdgeID elemID);  Given an element indice, it will remove all the connected component in which this element belongs to. Warning: if there is only one connected component in the model. All the object will be removed. More...;  ; virtual bool removeConnectedElements (EdgeID elemID);  Given an element indice, it will remove all elements directly connected to the input one. More...;  ; virtual bool removeIsolatedElements ();  If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. More...;  ; virtual bool removeIsolatedElements (sofa::Size scaleElem);  If several connected components are detected, it will remove all connected component with less than a given number of elements. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points renumbering. More...;  ; virtual void addPoints (const sofa::Size nPoints, const bool addDOF=true);  Add a set of points. More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Security,access,access,"ributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html
Deployability,update,updateInternal,"ntainer::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; triangleNumericalIntegrationsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleSetGeometryAlgorithms()sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >inlineprotected; TrianglesInTetrahedron typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >inline;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >, including all inherited members. _drawsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawColorsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalLengthsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalssofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorith",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html
Performance,load,loader,"tSetGeometryAlgorithms< DataTypes >; SeqEdges typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; SeqTetrahedra typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; SeqTriangles typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showEdgeIndicessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; showTriangleIndicessofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; SnapAlongPath(sofa::type::vector< sofa::geometry::ElementType > &intersected_topoElements, sofa::type::vector< ElemID > &intersected_indices, sofa::type::vector< Vec3 > &intersected_barycoefs, sofa::type::vector< sofa::type::vector< Real > > &points2Snap, Real epsilonSnapPath)sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; SnapBorderPath(PointID pa, Coord &a, PointID pb, Coord &b, sofa::type::vector< sofa::geometry::ElementType > &intersected_topoElements, sofa::type::vector< ElemID > &intersected_indices, sofa::type::vecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html
Testability,log,logging,"drawsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawColorsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalLengthsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalssofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,"xt *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNodeSequence(const TetraID tetraId) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; checkNodeSequence(const Tetrahedron &tetra) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; checkTetrahedronDihedralAngles(const TetraID tetraId, SReal minAngle=20, SReal maxAngle=160) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; checkTetrahedronValidity(const TetraID tetraId, SReal minAngle=20, SReal maxAnglemaxAngle=160, SReal factorLength=10) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute3PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, PointID ind_p3, bool bRest=false) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBadTetrahedron(SReal minAngle=20, SReal maxAngle=160, SReal factorLength=10)sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(PointID p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html
Availability,down,down,"fa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(TriangleSetGeometryAlgorithms, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeTetrahedronAABB (const TetraID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTetrahedronCenter (const TetraID i) const;  ; Coord computeTetrahedronCircumcenter (const TetraID i) const;  ; bool isPointInTetrahedron (const TetraID i, const sofa::type::Vec< 3, Real > &p) const;  ; bool isPointInTetrahedron (const TetraID ind_t, const sofa::type::Vec< 3, Real > &pTest, sofa::type::Vec< 4, Real > &barycentricCoordinates) const;  return (if the point is in the tetrahedron) the barycentric coordinates of the point in the tetrahedron More...;  ; void getTetrahedronVertexCoordinates (const TetraID i, Coord[4]) const;  ; void getRestTetrahedronVertexCoordinates (const TetraID i, Coord[4]",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html
Integrability,interface,interface,";  Render internal data of this object, for debugging purposes. More...;  ; void computeTetrahedronAABB (const TetraID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTetrahedronCenter (const TetraID i) const;  ; Coord computeTetrahedronCircumcenter (const TetraID i) const;  ; bool isPointInTetrahedron (const TetraID i, const sofa::type::Vec< 3, Real > &p) const;  ; bool isPointInTetrahedron (const TetraID ind_t, const sofa::type::Vec< 3, Real > &pTest, sofa::type::Vec< 4, Real > &barycentricCoordinates) const;  return (if the point is in the tetrahedron) the barycentric coordinates of the point in the tetrahedron More...;  ; void getTetrahedronVertexCoordinates (const TetraID i, Coord[4]) const;  ; void getRestTetrahedronVertexCoordinates (const TetraID i, Coord[4]) const;  ; Real computeTetrahedronVolume (const TetraID i) const;  computes the volume of tetrahedron no i and returns it More...;  ; void computeTetrahedronVolume (BasicArrayInterface< Real > &ai) const;  computes the tetrahedron volume of all tetrahedra are store in the array interface More...;  ; Real computeRestTetrahedronVolume (const TetraID i) const;  computes the tetrahedron volume of tetrahedron no i and returns it More...;  ; Real computeRestTetrahedronVolume (const Tetrahedron &t) const;  ; Real computeDihedralAngle (const TetraID tetraId, const EdgeID edgeId) const;  ; void getTetraInBall (const TetraID ind_ta, const TetraID ind_tb, sofa::type::vector< TetrahedronID > &indices) const;  finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) More...;  ; void getTetraInBall (const TetraID ind_ta, Real r, sofa::type::vector< TetrahedronID > &indices) const;  finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) More...;  ; void getTetraInBall (const Coord &c, Real r, sofa::type::vector< TetrahedronID > &indices) const;  Finds the indices of all tetrahedra in the ball of center c and of radius r. ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html
Modifiability,inherit,inherited,"ataTypes>; class sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an TetrahedronSet. . Protected Attributes; bool initializedCubatureTables;  ; Data< bool > d_showTetrahedraIndices;  Debug : view Tetrahedrons indices. More...;  ; Data< bool > d_drawTetrahedra;  if true, draw the tetrahedra in the topology More...;  ; Data< float > d_drawScaleTetrahedra;  Scale of the terahedra (between 0 and 1; if <1.0, it produces gaps between the tetrahedra) More...;  ; Data< sofa::type::RGBAColor > d_drawColorTetrahedra;  ; NumericalIntegrationDescriptor< Real, 4 > tetrahedronNumericalIntegration;  include cubature points More...;  ; sofa::type::vector< TetraID > m_badTetraIds;  vector of Tetrahedron ID which do not respect More...;  ; TetrahedronSetTopologyContainer * m_container;  ; TetrahedronSetTopologyModifier * m_modifier;  ; unsigned int m_intialNbPoints;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; bool initializedCubatureTables;  ; Data< bool > showTriangleIndices;  Debug : view Triangle indices. More...;  ; Data< bool > _draw;  if true, draw the triangles in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGBA code color used to draw triangles. More...;  ; Data< bool > _drawNormals;  if true, draw the triangles in the topology More...;  ; Data< SReal > _drawNormalLength;  Fiber length visualisation. More...;  ; Data< bool > p_recomputeTrianglesOrientation;  if true, will recompute triangles orientation according to normals More...;  ; Data< bool > p_flipNormals;  ; NumericalIntegrationDescriptor< Real, 3 > triangleNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Ed",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html
Performance,load,loader,"cal coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html
Testability,test,test,"finds the intersection point between edge and plane More...;  ; bool checkNodeSequence (const TetraID tetraId) const;  Method to check if points stored inside the Tetrahedron, given by the tetrahedron id, are in the right order (by checking the cross products between edges). More...;  ; bool checkNodeSequence (const Tetrahedron &tetra) const;  Method to check if points stored inside the Tetrahedron, given as parameter, are in the right order (by checking the cross products between edges). More...;  ; bool checkTetrahedronDihedralAngles (const TetraID tetraId, SReal minAngle=20, SReal maxAngle=160) const;  Method to check if the dihedral angles of the tetrahedron have correct values (between 20 and 160 degrees). More...;  ; bool isTetrahedronElongated (const TetraID tetraId, SReal factorLength=10) const;  Method to check if Tetrahedron is elongated, meaning the longest edge > 10x min edge. More...;  ; bool checkTetrahedronValidity (const TetraID tetraId, SReal minAngle=20, SReal maxAnglemaxAngle=160, SReal factorLength=10) const;  Return false if one of the test method: More...;  ; const sofa::type::vector< TetraID > & computeBadTetrahedron (SReal minAngle=20, SReal maxAngle=160, SReal factorLength=10);  Will call. More...;  ; const sofa::type::vector< TetraID > & getBadTetrahedronIds ();  Return bad tetrahedron ID: More...;  ; NumericalIntegrationDescriptor< Real, 4 > & getTetrahedronNumericalIntegrationDescriptor ();  return a pointer to the container of cubature points More...;  ; void subDivideTetrahedronsWithPlane (sofa::type::vector< sofa::type::vector< SReal > > &coefs, sofa::type::vector< EdgeID > &intersectedEdgeID, Coord, Coord planeNormal);  ; void subDivideTetrahedronsWithPlane (sofa::type::vector< Coord > &intersectedPoints, sofa::type::vector< EdgeID > &intersectedEdgeID, Coord planePos, Coord planeNormal);  ; int subDivideTetrahedronWithPlane (TetraID tetraIdx, sofa::type::vector< EdgeID > &intersectedEdgeID, sofa::type::vector< PointID > &intersectedP",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html
Deployability,update,updateInternal,"tainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer; TriangleID typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TriangleSetTopologyContainer()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; TrianglesInTetrahedron typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetraID typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer; VecTriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index, Index) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlinevirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addRemovedTetraIndex(sofa::type::vector< TetrahedronID > &tetrahedra)sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html
Performance,load,load,"geTopologyDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; isTetrahedronTopologyDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerinlineprotected; isTriangleTopologyDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_edgesInTetrahedronsofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; m_edgesInTrianglesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; m_edgesOnBordersofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; m_edgeTopologyDirtysofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_instanciationSourceFileNamesofa::core::objectmodel::Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index, Index) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlinevirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addRemovedTetraIndex(sofa::type::vector< TetrahedronID > &tetrahedra)sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html
Usability,clear,clear,"eContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::Tetrahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html
Availability,down,down,"s . Public Attributes; Data< bool > d_createTriangleArray;  force the creation of triangles More...;  ; Data< sofa::type::vector< Tetrahedron > > d_tetrahedron;  provides the set of tetrahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInTetrahedron > m_edgesInTetrahedron;  provides the set of edges for each tetrahedron. More...;  ; sofa::type::vector< TrianglesInTetrahedron > m_trianglesInTetrahedron;  provides the set of triangles for each tetrahedron. More...;  ; sofa::type::vector< TetrahedraAroundVertex > m_tetrahedraAroundVertex;  for each vertex provides the set of tetrahedra adjacent to that vertex. More...",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer Class Reference . #include <TetrahedronSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of tetrahedra and provides access with adjacent triangles, edges and vertices . Public Attributes; Data< bool > d_createTriangleArray;  force the creation of triangles More...;  ; Data< sofa::type::vector< Tetrahedron > > d_tetrahedron;  provides the set of tetrahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Performance,load,loader,"tmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Safety,avoid,avoids,"cLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (TetrahedronSetTopologyContainer, TriangleSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addRemovedTetraIndex (sofa::type::vector< TetrahedronID > &tetrahedra);  ; sofa::type::vector< TetrahedronID > & getRemovedTetraIndex ();  ; Size getNumberOfTetrahedra () const;  Returns the number of tetrahedra in this topology. The difference to getNbTetrahedra() is that this method does not generate the tetra array if it does not exist. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; const sofa::type::vector< Tetrahedron > & getTetrahedronArray ();  Returns the Tetrahedron array. More...;  ; const sofa::type::vector< EdgesInTetrahedron > & getEdgesInTetrahedronArray ();  Returns the EdgesInTetrahedron array (i.e. provide the 6 edge indices for each tetrahedron). More...;  ; const sofa::type::vector< TrianglesInTetrahedron > & getTrianglesInTetrahedronArray ();  Returns the TrianglesInTetrahedron array (i.e. provide the 4 triangle indices for each tetrahedron). More...;  ; const sofa::type::vector< TetrahedraAroundVertex > & getTetrahedraAroundVertexArray ();  Returns the TetrahedraAroundVertex array (i.e. provide the tetrahedron indices adjacent to each vertex). More...;  ; const sofa::type::vector< TetrahedraAroundEdge > & getTetrahedraAroundEdgeArray ();  Returns the TetrahedraAroundEdge array (i.e. provide the tetrahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< TetrahedraAroundTriangle ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer Class Reference . #include <TetrahedronSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of tetrahedra and provides access with adjacent triangles, edges and vertices . Public Attributes; Data< bool > d_createTriangleArray;  force the creation of triangles More...;  ; Data< sofa::type::vector< Tetrahedron > > d_tetrahedron;  provides the set of tetrahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Usability,clear,clear,"dge array (i.e. provide the tetrahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< TetrahedraAroundTriangle > & getTetrahedraAroundTriangleArray ();  Returns the TetrahedraAroundTriangle array (i.e. provide the tetrahedron indices adjacent to each triangle). More...;  ; bool hasTetrahedra () const;  ; bool hasEdgesInTetrahedron () const;  ; bool hasTrianglesInTetrahedron () const;  ; bool hasTetrahedraAroundVertex () const;  ; bool hasTetrahedraAroundEdge () const;  ; bool hasTetrahedraAroundTriangle () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addTriangle (Index, Index, Index) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  . const SeqTetrahedra & getTetrahedra () override;  Returns the tetrahedra array. More...;  ; const Tetrahedron getTetrahedron (TetraID i) override;  Returns the tetrahedron corresponding to the TetraID i. More...;  ; TetrahedronID getTetrahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  Returns the indices of a tetrahedron given four vertex indices. More...;  ; const EdgesInTetrahedron & getEdgesInTetrahedron (TetraID id) override;  Returns the 6 edges adjacent to a given tetrahedron. More...;  ; const TrianglesInTetrahedron & getTrianglesInTetrahedron (TetraID id) override;  Returns the 4 triangles adjacent to a given tetrahedron. More...;  ; const TetrahedraAroundVertex & getTetrahedraAroundVertex (PointID id) override;  Returns the set of tetrahedra adjacent to a given vertex. More...;  ; const TetrahedraAroundEdge & getTetrahedraAroundEdge (EdgeID id) override;  Returns the set of tetrahed",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html
Deployability,update,updateInternal,"ronSetTopologyModifier()sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifierinlineprotected; TetraID typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TriangleSetTopologyModifier()sofa::component::topology::container::dynamic::TriangleSetTopologyModifierinlineprotected; TrianglesInTetrahedron typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~TetrahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic::TetrahedronSetT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier Member List . This is the complete list of members for sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdgeProcess(Edge e)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; addEdges(const sofa::type::vector< Edge > &edges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdgesProcess(const sofa::type::vector< Edge > &edges) overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) overridesofa::component::topology::container::dynamic::TriangleSetTopologyModifierinlineprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html
Performance,load,loader,"rmutation)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; SeqTetrahedra typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier; SeqTriangles typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(TetrahedronSetTopologyModifier, TriangleSetTopologyModifier)sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier; sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::SOFA_CLASS(TriangleSetTopologyModifier, EdgeSetTopologyModifier)sofa::component::topology::container::dynamic::TriangleSetTopologyModifier; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::SOFA_CLASS(EdgeSetTopologyModifier, PointSetTopologyModifier)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; sofa::component::topology::container::dynamic::PointSetTopologyModifier::SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::top",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html
Testability,log,logging,":container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"leSetTopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html
Availability,down,down,"ng;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (TetrahedronSetTopologyModifier, TriangleSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void addTetrahedra (const sofa::type::vector< Tetrahedron > &tetrahedra);  add a set of tetrahedra More...;  ; virtual void addTetrahedra (const sofa::type::vector< Tetrahedron > &tetrahedra, const sofa::type::vector< sofa::type::vector< TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of tetrahedra More...;  ; void addTetrahedronProcess (Tetrahedron e);  Add a tetrahedron. More...;  ; virtual void removeTetrahedra (const sofa::type::vector< TetrahedronID > &tetrahedraIds, const bool removeIsolatedItems=true);  Remove a set of tetrahedra. More...;  ; void removeItems (const sofa::type::vector< TetrahedronID > &items) override;  Generic method to remove a list of items. More...;  ; void Rem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Integrability,message,messages,"::TetrahedronSetTopologyModifier Class Reference . #include <TetrahedronSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing tetrahedra . Public Attributes; Data< bool > removeIsolated;  Remove isolated DOFs. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (TetrahedronSetTopologyModifier, TriangleSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void addTetrahedra (const sofa::type::vector< Tetrahedron > &tetrahedra);  add a se",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier Class Reference . #include <TetrahedronSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing tetrahedra . Public Attributes; Data< bool > removeIsolated;  Remove isolated DOFs. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (TetrahedronSetTopologyModifier, TriangleSetTopologyModifie",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Performance,load,loader,"lization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Safety,detect,detected,"fa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  Split an array of edges, replacing each edge (p1, p2) by two edges (p1, p3) and (p3, p2) where p3 is the new vertex On each edge, a vertex is created based on its barycentric coordinates. More...;  ; virtual void resortCuthillMckee (sofa::type::vector< int > &inverse_permutation);  Gives the optimal vertex permutation according to the Reverse CuthillMckee algorithm (use BOOST GRAPH LIBRARY) More...;  ; virtual bool removeConnectedComponents (EdgeID elemID);  Given an element indice, it will remove all the connected component in which this element belongs to. Warning: if there is only one connected component in the model. All the object will be removed. More...;  ; virtual bool removeConnectedElements (EdgeID elemID);  Given an element indice, it will remove all elements directly connected to the input one. More...;  ; virtual bool removeIsolatedElements ();  If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. More...;  ; virtual bool removeIsolatedElements (sofa::Size scaleElem);  If several connected components are detected, it will remove all connected component with less than a given number of elements. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points renumbering. More...;  ; virtual void addPoints (const sofa::Size nPoints, const bool addDOF=true);  Add a set of points. More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Security,access,access,"InitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class TetrahedronSetGeometryAlgorithms;  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyModifier; Data< sofa::type::vector< TriangleID > > list_Out;  triangles with at least one null values. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html
Deployability,update,updateInternal,"seObjectvirtual; Suture2Points(TriangleID ind_ta, TriangleID ind_tb, PointID &ind1, PointID &ind2)sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; triangleNumericalIntegrationsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleSetGeometryAlgorithms()sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >inlineprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >inline; ~Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes > Member List . This is the complete list of members for sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >, including all inherited members. _drawsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawColorsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalLengthsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalssofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html
Performance,load,loader,"::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; RIGHT enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; SeqEdges typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; SeqTriangles typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showEdgeIndicessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; showTriangleIndicessofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; SnapAlongPath(sofa::type::vector< sofa::geometry::ElementType > &intersected_topoElements, sofa::type::vector< ElemID > &intersected_indices, sofa::type::vector< Vec3 > &intersected_barycoefs, sofa::type::vector< sofa::type::vector< Real > > &points2Snap, Real epsilonSnapPath)sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; SnapBorderPath(PointID pa, Coord &a, PointID pb, Coord &b, sofa::type::vector< sofa::geometry::ElementType > &intersected_topoElements, sofa::type::vector< ElemID > &intersected_indices, sofa::type::vecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html
Testability,log,logging,"drawsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawColorsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalLengthsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalssofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute3PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, PointID ind_p3, bool bRest=false) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(PointID p0, PointID p1, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(Edge e, Real coord_p) constsofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html
Availability,down,down,"ted from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangleSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes));  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeTriangleAABB (const TriangleID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTriangleCenter (const TriangleID i) const;  ; Coord computeRestTriangleCenter (const TriangleID i) const;  ; void computeTriangleCircumcenterBaryCoefs (sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) const;  ; Coord computeTriangleCircumcenter (const TriangleID i) const;  ; void getTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; void getRestTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; Real computeTriangleArea (const TriangleID i) const;  Computes the area of triangle no i and returns it. More...;  ; void computeTriangleArea (BasicArrayInterface< Real > &ai) const;  Computes the triangle area of all triangles are store in the array interface. More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html
Integrability,interface,interface,"debugging purposes. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeTriangleAABB (const TriangleID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTriangleCenter (const TriangleID i) const;  ; Coord computeRestTriangleCenter (const TriangleID i) const;  ; void computeTriangleCircumcenterBaryCoefs (sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) const;  ; Coord computeTriangleCircumcenter (const TriangleID i) const;  ; void getTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; void getRestTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; Real computeTriangleArea (const TriangleID i) const;  Computes the area of triangle no i and returns it. More...;  ; void computeTriangleArea (BasicArrayInterface< Real > &ai) const;  Computes the triangle area of all triangles are store in the array interface. More...;  ; Real computeRestTriangleArea (const TriangleID i) const;  Computes the initial area of triangle no i and returns it. More...;  ; sofa::type::vector< SReal > computeTriangleBarycoefs (const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) const;  Computes barycentric coefficients of point p in triangle (a,b,c) indexed by ind_t. More...;  ; sofa::type::vector< SReal > computeRestTriangleBarycoefs (const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) const;  Computes barycentric coefficients of point p in initial triangle (a,b,c) indexed by ind_t. More...;  ; sofa::type::vector< SReal > compute3PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, PointID ind_p3, bool bRest=false) const;  Computes barycentric coefficients of point p in triangle whose vertices are indexed by (ind_p1,ind_p2,ind_p3) More...;  ; void computeClosestIndexPair (const TriangleID ind",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html
Modifiability,inherit,inherited," class sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an TriangleSet. . Protected Attributes; bool initializedCubatureTables;  ; Data< bool > showTriangleIndices;  Debug : view Triangle indices. More...;  ; Data< bool > _draw;  if true, draw the triangles in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGBA code color used to draw triangles. More...;  ; Data< bool > _drawNormals;  if true, draw the triangles in the topology More...;  ; Data< SReal > _drawNormalLength;  Fiber length visualisation. More...;  ; Data< bool > p_recomputeTrianglesOrientation;  if true, will recompute triangles orientation according to normals More...;  ; Data< bool > p_flipNormals;  ; NumericalIntegrationDescriptor< Real, 3 > triangleNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html
Performance,load,loader,"cal coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html
Testability,test,test,"  ; sofa::type::Vec< 3, Real > computeBaryTrianglePoint (Triangle &t, sofa::type::Vec< 3, Real > &coord_p) const;  ; sofa::type::Vec< 3, Real > computeTriangleNormal (const TriangleID ind_t) const;  Computes the normal vector of a triangle indexed by ind_t (not normed) More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p_q1, const typename DataTypes::Coord &p_q2, QuadID ind_q3, QuadID ind_q4);  Tests how to triangularize a quad whose vertices are defined by (p_q1, p_q2, ind_q3, ind_q4) according to the Delaunay criterion. More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p1, const typename DataTypes::Coord &p2, const typename DataTypes::Coord &p3, const typename DataTypes::Coord &p4);  Tests how to triangularize a quad whose vertices are defined by (p1, p2, p3, p4) according to the Delaunay criterion. More...;  ; bool isDiagonalsIntersectionInQuad (const typename DataTypes::Coord triangle1[3], const typename DataTypes::Coord triangle2[3]);  Given two triangles, test if the intersection of the diagonals of the quad composed by the triangles is inside the quad or not. (test if triangles form a quad) More...;  ; sofa::type::Vec< 3, Real > getOppositePoint (PointID ind_p, const Edge &indices, Real coord_p) const;  Computes the opposite point to ind_p. More...;  ; bool isTriangleInPlane (const TriangleID ind_t, const PointID ind_p, const sofa::type::Vec< 3, Real > &plane_vect) const;  Tests if a triangle indexed by ind_t (and incident to the vertex indexed by ind_p) is included or not in the plane defined by (ind_p, plane_vect) More...;  ; void prepareVertexDuplication (const PointID ind_p, const TriangleID ind_t_from, const TriangleID ind_t_to, const Edge &indices_from, const Real &coord_from, const Edge &indices_to, const Real &coord_to, sofa::type::vector< TriangleID > &triangles_list_1, sofa::type::vector< TriangleID > &triangles_list_2) const;  Prepares the duplication of a vertex. More...;  ; bool computeSegmentTrian",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html
Deployability,update,updateInternal,"ckInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TriangleSetTopologyContainer()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; TriangleSetTopologyModifier classsofa::component::topology::container::dynamic::TriangleSetTopologyContainerfriend; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyContainer() overridesofa::component::topology::container::dynamic::EdgeSetTopo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::TriangleSetTopologyContainer Member List . This is the complete list of members for sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index, Index) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlinevirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html
Performance,load,load,"etrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isEdgeTopologyDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; isPointTopologyDirty() constsofa::component::topology::container::dynamic::PointSetTopologyContainerinlineprotected; isTriangleTopologyDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlineprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_edgesInTrianglesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; m_edgesOnBordersofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; m_edgeTopologyDirtysofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Basepro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index, Index) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerinlinevirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; addPoint()sofa::component::topology::container::dynamic::PointSetTopologyContainer; addPoints(const Size nPoints)sofa::component::topology::container::dynamic::PointSetTopologyContainer; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html
Usability,clear,clear,"tual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html
Availability,down,down,"ess to each triangle and its edges and vertices ; More... Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyContainer:. [legend]; Detailed Description; : Object that stores a set of triangles and provides access to each triangle and its edges and vertices . Public Attributes; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Integrability,message,messages,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInTriangle > m_edgesInTriangle;  provides the 3 edges in each triangle. More...;  ; sofa::type::vector< TrianglesAroundVertex > m_trianglesAroundVertex;  for each vertex provides the set of triangles adjacent to that vertex. More...;  ; sofa::type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge. More...;  ; sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Modifiability,inherit,inherited,"gy::container::dynamic::TriangleSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TriangleSetTopologyContainer Class Reference . #include <TriangleSetTopologyContainer.h>; : Object that stores a set of triangles and provides access to each triangle and its edges and vertices ; More... Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyContainer:. [legend]; Detailed Description; : Object that stores a set of triangles and provides access to each triangle and its edges and vertices . Public Attributes; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Performance,load,loader,"tmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Safety,avoid,avoids,"texIndexInTriangle (const Triangle &t, PointID vertexIndex) const override;  Returns the index (either 0, 1 ,2) of the vertex whose global index is vertexIndex. More...;  ; int getEdgeIndexInTriangle (const EdgesInTriangle &t, EdgeID edgeIndex) const override;  Returns the index (either 0, 1 ,2) of the edge whose global index is edgeIndex. More...;  ; PointID getOtherPointInTriangle (const Triangle &t, PointID p1, PointID p2) const;  Returns the global point index of third point of a triangle given the 2 others. More...;  . void initTopology ();  ; bool checkTopology () const override;  Checks if the topology is coherent. More...;  ; Size getNumberOfTriangles () const;  Returns the number of triangles in this topology. The difference to getNbTriangles() is that this method does not generate the triangle array if it does not exist. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; const sofa::type::vector< Triangle > & getTriangleArray ();  Returns the Triangle array. More...;  ; const sofa::type::vector< EdgesInTriangle > & getEdgesInTriangleArray ();  Returns the EdgesInTriangle array (i.e. provide the 3 edge indices for each triangle). More...;  ; const sofa::type::vector< TrianglesAroundVertex > & getTrianglesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const sofa::type::vector< TrianglesAroundEdge > & getTrianglesAroundEdgeArray ();  Returns the TrianglesAroundEdge array (i.e. provide the triangles indices adjacent to each edge). More...;  ; const sofa::type::vector< TriangleID > & getTrianglesOnBorder () override;  : Return a list of TriangleID which are on a border. More...;  ; const sofa::type::vector< EdgeID > & getEdgesOnBorder () override;  : Return a list of EdgeID which are on a border. More...;  ; const sofa::ty",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::TriangleSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TriangleSetTopologyContainer Class Reference . #include <TriangleSetTopologyContainer.h>; : Object that stores a set of triangles and provides access to each triangle and its edges and vertices ; More... Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyContainer:. [legend]; Detailed Description; : Object that stores a set of triangles and provides access to each triangle and its edges and vertices . Public Attributes; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Usability,clear,clear,"op-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool hasTriangles () const;  ; bool hasEdgesInTriangle () const;  ; bool hasTrianglesAroundVertex () const;  ; bool hasTrianglesAroundEdge () const;  ; bool hasBorderElementLists () const;  ; void createElementsOnBorder ();  : Create element lists which are on topology border: More...;  ; void reOrientateTriangle (TriangleID id) override;  Will change order of vertices in triangle: t[1] <=> t[2]. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addEdge (Index, Index) override;  ; void addTriangle (Index a, Index b, Index c) override;  . const SeqTriangles & getTriangles () override;  Returns the quad array. More...;  ; const Triangle getTriangle (TriangleID i) override;  Returns the triangle corresponding to the TriangleID i. More...;  ; TriangleID getTriangleIndex (PointID v1, PointID v2, PointID v3) override;  Returns the index of the triangle given three vertex indices; returns InvalidID if no triangle exists. More...;  ; const EdgesInTriangle & getEdgesInTriangle (TriangleID id) override;  Returns the 3 edges adjacent to a given triangle. More...;  ; const TrianglesAroundVertex & getTrianglesAroundVertex (PointID id) override;  Returns the set of triangles adjacent to a given vertex. More...;  ; const TrianglesAroundEdge & getTrianglesAroundEdge (EdgeID id) override;  Returns the set of triangles adjacent to a given edge. More...;  ; int getVertexIndexInTriangle (const Triangle &t, PointID vertexIndex) const override;  Returns the index (either 0, 1 ,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html
Deployability,update,updateInternal,"rs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TriangleSetGeometryAlgorithms classsofa::component::topology::container::dynamic::TriangleSetTopologyModifierfriend; TriangleSetTopologyModifier()sofa::component::topology::container::dynamic::TriangleSetTopologyModifierinlineprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~TopologyModifier() overridesofa::core::topology::TopologyModifierinlineprotected; ~TriangleSetTopologyM",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Member List . This is the complete list of members for sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdgeProcess(Edge e)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; addEdges(const sofa::type::vector< Edge > &edges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdges(const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; addEdgesProcess(const sofa::type::vector< Edge > &edges) overridesofa::component::topology::container::dynamic::TriangleSetTopologyModifierprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) overridesofa::component::topology::container::dynamic::TriangleSetTopologyModifierinlineprotectedvirtual; addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancest",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html
Performance,load,loader,"sofa::core::objectmodel::BaseObjectvirtual; resortCuthillMckee(sofa::type::vector< int > &inverse_permutation)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; SeqTriangles typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(TriangleSetTopologyModifier, EdgeSetTopologyModifier)sofa::component::topology::container::dynamic::TriangleSetTopologyModifier; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::SOFA_CLASS(EdgeSetTopologyModifier, PointSetTopologyModifier)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; sofa::component::topology::container::dynamic::PointSetTopologyModifier::SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::topology::TopologyModifier::SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html
Testability,log,logging,":container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning(const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems)sofa::component::topology::container::dynamic::EdgeSetTopologyModifierprotectedvirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::TriangleSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const bool ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"leSetTopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html
Availability,down,down,"fa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void addTriangles (const sofa::type::vector< Triangle > &triangles);  add a set of triangles More...;  ; virtual void addTriangles (const sofa::type::vector< Triangle > &triangles, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of triangles More...;  ; void addTriangleProcess (Triangle t);  Effectively add a triangle to the topology. More...;  ; void removeItems (const sofa::type::vector< TriangleID > &items) override;  Generic method to remove a list of items. More...;  ; virtual void removeTriangles (const sofa::type::vector< TriangleID > &triangleIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints);  Remove a set of triangles. M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Deployability,update,updateInternal,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Integrability,depend,depends,"﻿. SOFA API: sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference . #include <TriangleSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing triangles . Protected Attributes; Data< sofa::type::vector< TriangleID > > list_Out;  triangles with at least one null values. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference . #include <TriangleSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing triangles . Protected Attributes; Data< sofa::type::vector< TriangleID > > list_Out;  triangles with at least one null values. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Performance,load,loader,"lization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Safety,detect,detected,"fa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  Split an array of edges, replacing each edge (p1, p2) by two edges (p1, p3) and (p3, p2) where p3 is the new vertex On each edge, a vertex is created based on its barycentric coordinates. More...;  ; virtual void resortCuthillMckee (sofa::type::vector< int > &inverse_permutation);  Gives the optimal vertex permutation according to the Reverse CuthillMckee algorithm (use BOOST GRAPH LIBRARY) More...;  ; virtual bool removeConnectedComponents (EdgeID elemID);  Given an element indice, it will remove all the connected component in which this element belongs to. Warning: if there is only one connected component in the model. All the object will be removed. More...;  ; virtual bool removeConnectedElements (EdgeID elemID);  Given an element indice, it will remove all elements directly connected to the input one. More...;  ; virtual bool removeIsolatedElements ();  If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. More...;  ; virtual bool removeIsolatedElements (sofa::Size scaleElem);  If several connected components are detected, it will remove all connected component with less than a given number of elements. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Generic method for points renumbering. More...;  ; virtual void addPoints (const sofa::Size nPoints, const bool addDOF=true);  Add a set of points. More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Security,access,access,"﻿. SOFA API: sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference . #include <TriangleSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing triangles . Protected Attributes; Data< sofa::type::vector< TriangleID > > list_Out;  triangles with at least one null values. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html
Deployability,update,updateHexahedra," storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; TextCoords2D typedefsofa::component::topology::container::grid::GridTopology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::grid::CylinderGridTopology Member List . This is the complete list of members for sofa::component::topology::container::grid::CylinderGridTopology, including all inherited members. _drawEdgessofa::component::topology::container::constant::MeshTopology; _drawHexasofa::component::topology::container::constant::MeshTopology; _drawQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html
Performance,load,load,lidQuadsofa::core::topology::Topologystatic; InvalidQuadsInHexahedronsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isLines()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isSurface()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; isVolume()sofa::component::topology::container::constant::MeshTopologyinlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_edgesAroundVertexsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInHexahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTetrahedronsofa::component::topology::container::constant::MeshTopologyprotected; m_edgesInTrianglesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundEdgesofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundQuadsofa::component::topology::container::constant::MeshTopologyprotected; m_hexahedraAroundVertexsofa::component::topology::container::constant::MeshTopologyprote,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html
Testability,log,logging,"wQuadssofa::component::topology::container::constant::MeshTopology; _drawTetrasofa::component::topology::container::constant::MeshTopology; _drawTrianglessofa::component::topology::container::constant::MeshTopology; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addTriangle(Index a, Index b, Index c) overridesofa::component::topology::container::constant::MeshTopologyvirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html
Usability,clear,clear,"el::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess()sofa::component::topology::container::grid::GridTopologyinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::log",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html
Availability,down,down,"i.e. provide the hexahedron indices adjacent to each quad). More...;  ; bool checkConnexity () override;  Checks if the topology has only one connected component. More...;  ; Size getNumberOfConnectedComponent () override;  Returns the number of connected component. More...;  ; virtual const type::vector< Index > getConnectedElement (Index elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; virtual const type::vector< Index > getElementAroundElement (Index elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const type::vector< Index > getElementAroundElements (type::vector< Index > elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseMeshTopology;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual Triangle getLocalTrianglesInTetrahedron (const PointID i) const;  Returns for each index (between 0 and 3) the three local vertices indices that are adjacent to that triangle. More...;  ; virtual Quad getLocalQuadsInHexahedron (const PointID i) const;  Returns for each index (between 0 and 6) the four vertices indices that are adjacent to that quad. More...;  ; virtual const sofa::type::vector< TriangleID > & getTrianglesOnBorder ();  Returns the set of triangles on the border of the triangulation. More...;  ; virtual const sofa::type::vector< EdgeID > & getEdgesOnBorder ();  Returns the set of edges on the border of the triangulation. More...;  ; virtual const sofa::type::vector< PointID > & getPointsOnBorder ();  Returns the set of points on ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html
Deployability,update,updateTetrahedra,"ndex is vertexIndex. Returns -1 if none. More...;  ; int getEdgeIndexInHexahedron (const EdgesInHexahedron &t, EdgeID edgeIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5, 6, 7, 8, 9, 10, 11) of the edge whose global index is edgeIndex. Returns -1 if none. More...;  ; int getQuadIndexInHexahedron (const QuadsInHexahedron &t, QuadID quadIndex) const override;  Returns the index (either 0, 1 ,2 ,3, 4, 5) of the quad whose global index is quadIndex. Returns -1 if none. More...;  ; Edge getLocalEdgesInTetrahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 5) the two vertex indices that are adjacent to that edge. More...;  ; Edge getLocalEdgesInHexahedron (const HexahedronID i) const override;  Returns for each index (between 0 and 12) the two vertex indices that are adjacent to that edge. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  ; void invalidate ();  ; virtual void updateTetrahedra ();  ; virtual void updateHexahedra ();  ; const EdgesAroundVertex & getEdgesAroundVertex (PointID i) override;  Returns the set of edges adjacent to a given vertex. More...;  ; const type::vector< EdgesAroundVertex > & getEdgesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const TrianglesAroundVertex & getTrianglesAroundVertex (PointID i) override;  Returns the set of triangles adjacent to a given vertex. More...;  ; const type::vector< TrianglesAroundVertex > & getTrianglesAroundVertexArray ();  Returns the TrianglesAroundVertex array (i.e. provide the triangles indices adjacent to each vertex). More...;  ; const EdgesInTriangle & getEdgesInTriangle (TriangleID i) override;  Returns the set of 3 edge indices of a given triangle. More...;  ; const type::vector< EdgesInTriangle > & getEdgesInTriangleArray ();  Returns the EdgesInTriangle array (i.e. provide the 3 edge indices for each triangle). More...;  ; const Tria",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html
Integrability,message,messages,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CylinderGridTopology, GridTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; Vec3 getPointInGrid (int i, int j, int k) const override;  Overload method of. More...;  ; void setCenter (SReal x, SReal y, SReal z);  Set Cylinder grid center by. More...;  ; void setAxis (SReal x, SReal y, SReal z);  Set Cylinder axis center by. More...;  ; void setRadius (SReal rad",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html
Modifiability,inherit,inherited,for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::grid::CylinderGridTopology Class Reference . #include <CylinderGridTopology.h>; Define a cylinder grid topology Parameters are its. ; More... Inheritance diagram for sofa::component::topology::container::grid::CylinderGridTopology:. [legend]; Detailed Description; Define a cylinder grid topology Parameters are its. ; See alsod_radius and . d_length . Position and direction are set by . d_center and . d_axis nz discretisation is along the cylinder axis . Public Attributes; Data< Vec3 > d_center;  Data storing the center position. More...;  ; Data< Vec3 > d_axis;  Data storing the axis direction. More...;  ; Data< SReal > d_radius;  Data storing the radius value. More...;  ; Data< SReal > d_length;  Data storing the length value. More...;  ;  Public Attributes inherited from sofa::component::topology::container::grid::GridTopology; Data< type::Vec3i > d_n;  Data storing the size of the grid in the 3 directions. More...;  ; Data< bool > d_computeHexaList;  Data bool to set option to compute topological elements. More...;  ; Data< bool > d_computeQuadList;  put true if the list of Quad is needed during init (default=true) More...;  ; Data< bool > d_computeTriangleList;  put true if the list of Triangles is needed during init (default=true) More...;  ; Data< bool > d_computeEdgeList;  put true if the list of Lines is needed during init (default=true) More...;  ; Data< bool > d_computePointList;  ; Data< bool > d_createTexCoords;  Data bool to set option to compute texcoords. More...;  ;  Public Attributes inherited from sofa::component::topology::container::constant::MeshTopology; sofa::core::objectmodel::RenamedData< SeqPoints > seqPoints;  ; sofa::core::objectmodel::RenamedData< SeqEdges > seqEdges;  ; sofa::core::objectmodel::RenamedData< SeqTriangles > seqTriangles;  ; sofa::core::objectmodel::RenamedDat,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html
Performance,load,load,"tual const type::vector< Index > getConnectedElement (Index elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; virtual const type::vector< Index > getElementAroundElement (Index elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const type::vector< Index > getElementAroundElements (type::vector< Index > elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseMeshTopology;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual Triangle getLocalTrianglesInTetrahedron (const PointID i) const;  Returns for each index (between 0 and 3) the three local vertices indices that are adjacent to that triangle. More...;  ; virtual Quad getLocalQuadsInHexahedron (const PointID i) const;  Returns for each index (between 0 and 6) the four vertices indices that are adjacent to that quad. More...;  ; virtual const sofa::type::vector< TriangleID > & getTrianglesOnBorder ();  Returns the set of triangles on the border of the triangulation. More...;  ; virtual const sofa::type::vector< EdgeID > & getEdgesOnBorder ();  Returns the set of edges on the border of the triangulation. More...;  ; virtual const sofa::type::vector< PointID > & getPointsOnBorder ();  Returns the set of points on the border of the triangulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbTetras ();  ; virtual Size getNbHexas ();  ; virtual Tetra getTetra (TetraID i);  ; virtual Hexa ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html
Safety,detect,detect," More...;  ; Index cube (int x, int y, int z) const;  Get Cube index, similar to. More...;  ; Grid_dimension getDimensions () const;  Get the actual dimension of this grid using Enum. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::constant::MeshTopology;  SOFA_CLASS (MeshTopology, core::topology::BaseMeshTopology);  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; virtual bool has",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html
