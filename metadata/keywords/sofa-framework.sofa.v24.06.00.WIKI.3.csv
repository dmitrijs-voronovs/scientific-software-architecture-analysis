id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10663,Safety,detect,detection,10663,"tion::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10910,Safety,detect,detection,10910,"llision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinP",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11194,Safety,detect,detection,11194,"::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11414,Safety,detect,detection,11414,"geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11692,Safety,detect,detection,11692,"on ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. templ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11916,Safety,detect,detection,11916,"ection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testInter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12219,Safety,detect,detection,12219,"ection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofaco",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12471,Safety,detect,detection,12471,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12781,Safety,detect,detection,12781,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:13030,Safety,detect,detection,13030,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:620,Testability,test,testIntersection,620," Public Member Functions;  MeshMinProximityIntersection (MinProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:786,Testability,test,testIntersection,786," Public Member Functions;  MeshMinProximityIntersection (MinProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:938,Testability,test,testIntersection,938," Public Member Functions;  MeshMinProximityIntersection (MinProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:1103,Testability,test,testIntersection,1103," Public Member Functions;  MeshMinProximityIntersection (MinProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:1254,Testability,test,testIntersection,1254," Public Member Functions;  MeshMinProximityIntersection (MinProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:1397,Testability,test,testIntersection,1397," Public Member Functions;  MeshMinProximityIntersection (MinProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:1566,Testability,test,testIntersection,1566,"on *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:2948,Testability,test,testIntersection,2948," > &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeInterse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:3063,Testability,test,testIntersection,3063,"nt computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:3164,Testability,test,testIntersection,3164,"nst core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:3278,Testability,test,testIntersection,3278,"n::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:3378,Testability,test,testIntersection,3378,"ersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:3470,Testability,test,testIntersection,3470,"llision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:3588,Testability,test,testIntersection,3588,"tersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ;  Public Member Functions inherited from ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:9592,Testability,test,testIntersection,9592,"tVector * ;  . ). delete . ◆ computeIntersection() [12/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:9707,Testability,test,testIntersection,9707,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::Me",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:9810,Testability,test,testIntersection,9810,"ngle & ; e2, . collision::geometry::TSphere< T > & ; e1, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). dele",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:9925,Testability,test,testIntersection,9925,"const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10086,Testability,test,testIntersection,10086,"mityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10201,Testability,test,testIntersection,10201,"llision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10305,Testability,test,testIntersection,10305,"ponent::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10420,Testability,test,testIntersection,10420,"ction ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10582,Testability,test,testIntersection,10582,"estIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Inters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10718,Testability,test,testIntersection,10718,"tion::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10829,Testability,test,testIntersection,10829,"l sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10965,Testability,test,testIntersection,10965,"llision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinP",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11134,Testability,test,testIntersection,11134,":detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testInter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11249,Testability,test,testIntersection,11249,"::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11354,Testability,test,testIntersection,11354,"detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11469,Testability,test,testIntersection,11469,"geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11632,Testability,test,testIntersection,11632,"mponent::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11747,Testability,test,testIntersection,11747,"on ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. templ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11855,Testability,test,testIntersection,11855,"ass T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11971,Testability,test,testIntersection,11971,"ection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testInter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12137,Testability,test,testIntersection,12137,"n() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12274,Testability,test,testIntersection,12274,"ection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofaco",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12389,Testability,test,testIntersection,12389,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12526,Testability,test,testIntersection,12526,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12699,Testability,test,testIntersection,12699,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12836,Testability,test,testIntersection,12836,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12948,Testability,test,testIntersection,12948,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:13085,Testability,test,testIntersection,13085,"fa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:334,Modifiability,inherit,inherited,334,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::MeshNewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::MeshNewProximityIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::MeshNewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::MeshNewProximityIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:265,Safety,detect,detection,265,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::MeshNewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::MeshNewProximityIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:736,Safety,detect,detection,736," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:971,Safety,detect,detection,971," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:1205,Safety,detect,detection,1205," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:1444,Safety,detect,detection,1444,"lisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::Mes",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:1682,Safety,detect,detection,1682,"*currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:1924,Safety,detect,detection,1924,"tIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:2172,Safety,detect,detection,2172,"sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, Ou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:2421,Safety,detect,detection,2421,"onent::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:2673,Safety,detect,detection,2673,"on::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:2858,Safety,detect,detection,2858,"ntersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:3042,Safety,detect,detection,3042,"n::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; comp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:3225,Safety,detect,detection,3225,"puteIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityInt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:3413,Safety,detect,detection,3413,"n::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:3600,Safety,detect,detection,3600,"sion::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:3791,Safety,detect,detection,3791,"y::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:3988,Safety,detect,detection,3988,"utputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionLinePoint(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:4186,Safety,detect,detection,4186,"deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionLinePoint(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:4387,Safety,detect,detection,4387,"omponent::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionLinePoint(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityInters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:4765,Safety,detect,detection,4765,"omponent::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionLinePoint(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:5015,Safety,detect,detection,5015,"ProximityIntersection; computeIntersection(collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; computeIntersection(collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionLinePoint(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:5345,Safety,detect,detection,5345,"*)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; doIntersectionLineLine(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionLinePoint(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:5654,Safety,detect,detection,5654,"tor *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionLinePoint(SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geom",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6110,Safety,detect,detection,6110," dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6327,Safety,detect,detection,6327,"::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6543,Safety,detect,detection,6543,"&n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geome",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6758,Safety,detect,detection,6758," *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6978,Safety,detect,detection,6978,"ctorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7197,Safety,detect,detection,7197,":Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7420,Safety,detect,detection,7420,"&, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7649,Safety,detect,detection,7649,":geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7872,Safety,detect,detection,7872,"metry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8099,Safety,detect,detection,8099,"Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8265,Safety,detect,detection,8265,"ollision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8430,Safety,detect,detection,8430,"rsection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::comp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8594,Safety,detect,detection,8594," *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=dele",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8763,Safety,detect,detection,8763," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8931,Safety,detect,detection,8931," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:9103,Safety,detect,detection,9103," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:9281,Safety,detect,detection,9281," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:9453,Safety,detect,detection,9453," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:9629,Safety,detect,detection,9629," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6165,Testability,test,testIntersection,6165,"&p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6382,Testability,test,testIntersection,6382,"rsectioninlinestatic; doIntersectionTrianglePoint2(SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6598,Testability,test,testIntersection,6598,"ool swapElems=false)sofa::component::collision::detection::intersection::MeshNewProximityIntersectioninlinestatic; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *curren",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6813,Testability,test,testIntersection,6813,"e::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7033,Testability,test,testIntersection,7033,"section *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Inter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7252,Testability,test,testIntersection,7252,"ion::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7475,Testability,test,testIntersection,7475,"tersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7704,Testability,test,testIntersection,7704,"rrentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:7927,Testability,test,testIntersection,7927,"ntIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8154,Testability,test,testIntersection,8154,"ection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8320,Testability,test,testIntersection,8320,"gle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityInterse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8485,Testability,test,testIntersection,8485,"ollision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximity",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8649,Testability,test,testIntersection,8649,"n::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::Mesh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8818,Testability,test,testIntersection,8818," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8986,Testability,test,testIntersection,8986," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:9158,Testability,test,testIntersection,9158," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:9336,Testability,test,testIntersection,9336," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:9508,Testability,test,testIntersection,9508," &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:5722,Modifiability,inherit,inherited,5722,"ry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::intersection::MeshNewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::MeshNewProximityIntersection Class Reference . #include <MeshNewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::MeshNewProximityIntersection:. [legend]. Public Member Functions;  MeshNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:297,Safety,detect,detection,297,"﻿. SOFA API: sofa::component::collision::detection::intersection::MeshNewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::MeshNewProximityIntersection Class Reference . #include <MeshNewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::MeshNewProximityIntersection:. [legend]. Public Member Functions;  MeshNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:464,Safety,detect,detection,464,"﻿. SOFA API: sofa::component::collision::detection::intersection::MeshNewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::MeshNewProximityIntersection Class Reference . #include <MeshNewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::MeshNewProximityIntersection:. [legend]. Public Member Functions;  MeshNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:7383,Safety,detect,detection,7383,"sectionLineLine (SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q1, const type::Vec3 &q2, OutputVector *contacts, int id, const type::Vec3 &n=type::Vec3(), bool useNormal=false);  ; static int doIntersectionLinePoint (SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false);  ; static int doIntersectionTrianglePoint (SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false);  ; static int doIntersectionTrianglePoint2 (SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false);  . Constructor details. ◆ MeshNewProximityIntersection(). sofa::component::collision::detection::intersection::MeshNewProximityIntersection::MeshNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/18]. int sofa::component::collision::detection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:7626,Safety,detect,detection,7626,"tionLinePoint (SReal dist2, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false);  ; static int doIntersectionTrianglePoint (SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false);  ; static int doIntersectionTrianglePoint2 (SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false);  . Constructor details. ◆ MeshNewProximityIntersection(). sofa::component::collision::detection::intersection::MeshNewProximityIntersection::MeshNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:7870,Safety,detect,detection,7870,"pe::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false, bool useNormal=false);  ; static int doIntersectionTrianglePoint2 (SReal dist2, int flags, const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &n, const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false);  . Constructor details. ◆ MeshNewProximityIntersection(). sofa::component::collision::detection::intersection::MeshNewProximityIntersection::MeshNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [5/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:8180,Safety,detect,detection,8180," const type::Vec3 &q, OutputVector *contacts, int id, bool swapElems=false);  . Constructor details. ◆ MeshNewProximityIntersection(). sofa::component::collision::detection::intersection::MeshNewProximityIntersection::MeshNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [5/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [6/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:8425,Safety,detect,detection,8425," ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [5/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [6/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [7/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:8757,Safety,detect,detection,8757,"lete . ◆ computeIntersection() [2/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [5/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [6/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [7/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [8/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:9037,Safety,detect,detection,9037,"section * ; currentIntersection . ). ◆ computeIntersection() [3/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [5/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [6/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [7/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [8/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [9/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . OutputVecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:9358,Safety,detect,detection,9358,"ofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [5/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [6/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [7/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [8/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [9/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [10/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:9604,Safety,detect,detection,9604,"; currentIntersection . ). ◆ computeIntersection() [5/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [6/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [7/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [8/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [9/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [10/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [11/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ; , . OutputVector ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:9916,Safety,detect,detection,9916,"uteIntersection() [6/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [7/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [8/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [9/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [10/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [11/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [12/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; cu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:10165,Safety,detect,detection,10165,"ctor * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [7/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [8/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [9/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [10/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [11/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [12/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ; , . Output",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:10480,Safety,detect,detection,10480," ;  . ). delete . ◆ computeIntersection() [8/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [9/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [10/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [11/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [12/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersectio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:10730,Safety,detect,detection,10730,"; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [9/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [10/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [11/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [12/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [15/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:11046,Safety,detect,detection,11046,"). delete . ◆ computeIntersection() [10/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Line & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [11/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [12/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [15/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [16/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:11299,Safety,detect,detection,11299,"acts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [11/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [12/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [15/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [16/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [17/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersectio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:11639,Safety,detect,detection,11639,"tion() [12/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [15/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [16/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [17/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ;  . ). delete . ◆ computeIntersection() [18/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:11923,Safety,detect,detection,11923,"ersection . ). ◆ computeIntersection() [13/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/18]. int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [15/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [16/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [17/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ;  . ). delete . ◆ computeIntersection() [18/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionLineLine(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLineLine ; (; SReal ; dist2, . co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:12269,Safety,detect,detection,12269,"rsection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [15/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [16/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [17/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ;  . ). delete . ◆ computeIntersection() [18/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionLineLine(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLineLine ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q1, . const type::Vec3 & ; q2, . OutputVector * ; contacts, . int ; id, . const type::Vec3 & ; n = type::Vec3(), . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionLinePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:12549,Safety,detect,detection,12549,"<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ;  . ). delete . ◆ computeIntersection() [16/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [17/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ;  . ). delete . ◆ computeIntersection() [18/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionLineLine(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLineLine ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q1, . const type::Vec3 & ; q2, . OutputVector * ; contacts, . int ; id, . const type::Vec3 & ; n = type::Vec3(), . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionLinePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLinePoint ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:12865,Safety,detect,detection,12865,"a::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::TSphere< T > & ; sph, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [17/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ;  . ). delete . ◆ computeIntersection() [18/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionLineLine(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLineLine ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q1, . const type::Vec3 & ; q2, . OutputVector * ; contacts, . int ; id, . const type::Vec3 & ; n = type::Vec3(), . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionLinePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLinePoint ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swap",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:13261,Safety,detect,detection,13261,"MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ;  . ). delete . ◆ computeIntersection() [18/18]. template<class T > . int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionLineLine(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLineLine ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q1, . const type::Vec3 & ; q2, . OutputVector * ; contacts, . int ; id, . const type::Vec3 & ; n = type::Vec3(), . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionLinePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLinePoint ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:13593,Safety,detect,detection,13593," collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionLineLine(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLineLine ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q1, . const type::Vec3 & ; q2, . OutputVector * ; contacts, . int ; id, . const type::Vec3 & ; n = type::Vec3(), . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionLinePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLinePoint ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14026,Safety,detect,detection,14026," & ; q2, . OutputVector * ; contacts, . int ; id, . const type::Vec3 & ; n = type::Vec3(), . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionLinePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionLinePoint ; (; SReal ; dist2, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Po",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14428,Safety,detect,detection,14428,"s, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14646,Safety,detect,detection,14646," ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::coll",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14928,Safety,detect,detection,14928,"tersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15147,Safety,detect,detection,15147,"ec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15447,Safety,detect,detection,15447,"stIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15694,Safety,detect,detection,15694,":geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNew",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15978,Safety,detect,detection,15978,"geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNew",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16198,Safety,detect,detection,16198,"metry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::Mesh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16478,Safety,detect,detection,16478," ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16701,Safety,detect,detection,16701,"ction::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16985,Safety,detect,detection,16985,"ection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17209,Safety,detect,detection,17209,"n::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17492,Safety,detect,detection,17492,":testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17719,Safety,detect,detection,17719,"ntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18029,Safety,detect,detection,18029,"on::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18281,Safety,detect,detection,18281,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18591,Safety,detect,detection,18591,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18845,Safety,detect,detection,18845,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:654,Testability,test,testIntersection,654," Public Member Functions;  MeshNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:962,Testability,test,testIntersection,962," Public Member Functions;  MeshNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:1268,Testability,test,testIntersection,1268," Public Member Functions;  MeshNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:1572,Testability,test,testIntersection,1572,"tion (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:1886,Testability,test,testIntersection,1886," const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:2198,Testability,test,testIntersection,2198," core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:2539,Testability,test,testIntersection,2539,"ntIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:2913,Testability,test,testIntersection,2913,"ry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:3282,Testability,test,testIntersection,3282,"re::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Tri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:3637,Testability,test,testIntersection,3637,"ision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputV",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:3843,Testability,test,testIntersection,3843,"ersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4047,Testability,test,testIntersection,4047,"  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4249,Testability,test,testIntersection,4249,"emplate<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4461,Testability,test,testIntersection,4461,"section (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4671,Testability,test,testIntersection,4671,"nt &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4910,Testability,test,testIntersection,4910,")=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:5182,Testability,test,testIntersection,5182,"llision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:5449,Testability,test,testIntersection,5449,"ry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14368,Testability,test,testIntersection,14368,"& ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14483,Testability,test,testIntersection,14483,"s, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ doIntersectionTrianglePoint(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14586,Testability,test,testIntersection,14586,"ction::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14701,Testability,test,testIntersection,14701," ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::coll",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14868,Testability,test,testIntersection,14868,"; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Inters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14983,Testability,test,testIntersection,14983,"tersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15087,Testability,test,testIntersection,15087,"anglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15202,Testability,test,testIntersection,15202,"ec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15366,Testability,test,testIntersection,15366,"section() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Inte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15502,Testability,test,testIntersection,15502,"stIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15613,Testability,test,testIntersection,15613,"component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15749,Testability,test,testIntersection,15749,":geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNew",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15918,Testability,test,testIntersection,15918,"etection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16033,Testability,test,testIntersection,16033,"geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNew",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16138,Testability,test,testIntersection,16138,"tection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ te",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16253,Testability,test,testIntersection,16253,"metry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::Mesh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16418,Testability,test,testIntersection,16418,"onent::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16533,Testability,test,testIntersection,16533," ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16640,Testability,test,testIntersection,16640,"ss T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16756,Testability,test,testIntersection,16756,"ction::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16924,Testability,test,testIntersection,16924," [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17040,Testability,test,testIntersection,17040,"ection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17148,Testability,test,testIntersection,17148,"18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geome",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17264,Testability,test,testIntersection,17264,"n::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17431,Testability,test,testIntersection,17431,". bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17547,Testability,test,testIntersection,17547,":testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17658,Testability,test,testIntersection,17658,"ol sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17774,Testability,test,testIntersection,17774,"ntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17947,Testability,test,testIntersection,17947,"fa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18084,Testability,test,testIntersection,18084,"on::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18199,Testability,test,testIntersection,18199,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18336,Testability,test,testIntersection,18336,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18509,Testability,test,testIntersection,18509,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18646,Testability,test,testIntersection,18646,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18763,Testability,test,testIntersection,18763,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:18900,Testability,test,testIntersection,18900,"ion::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [16/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt . ). delete . ◆ testIntersection() [18/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; sph, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionMeshNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16833,Deployability,update,updateInternal,16833,"ersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16886,Deployability,update,updateLinks,16886,"rsection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::strin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:326,Modifiability,inherit,inherited,326,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::MinProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::MinProximityIntersection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:14181,Performance,load,loader,14181,"BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setContactDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::MinProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::MinProximityIntersection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:261,Safety,detect,detection,261,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::MinProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::MinProximityIntersection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:1378,Safety,detect,detection,1378,"alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:1652,Safety,detect,detection,1652,"precatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObject",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:2878,Safety,detect,detection,2878,"re::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:3103,Safety,detect,detection,3103,"ntext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:3306,Safety,detect,detection,3306,"(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:3480,Safety,detect,detection,3480,"jectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:3559,Safety,detect,detection,3559,"l::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:3805,Safety,detect,detection,3805,"ersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:3887,Safety,detect,detection,3887,"ersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityInterse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4074,Safety,detect,detection,4074,"::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4313,Safety,detect,detection,4313,"ntersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4418,Safety,detect,detection,4418,"utputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4847,Safety,detect,detection,4847,"rtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4991,Safety,detect,detection,4991,"on::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:5139,Safety,detect,detection,5139,"ionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:5232,Safety,detect,detection,5232," const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:5326,Safety,detect,detection,5326,"ction::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:5424,Safety,detect,detection,5424,"intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:5522,Safety,detect,detection,5522,"et t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:5623,Safety,detect,detection,5623,"ntext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:6667,Safety,detect,detection,6667,"ected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) overridesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getAlarmDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:7172,Safety,detect,detection,7172,"el::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) overridesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getAlarmDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:7533,Safety,detect,detection,7533,"dIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) overridesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getAlarmDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:9226,Safety,detect,detection,9226,"ore::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getUseSurfaceNormals() constsofa::component::collision::detection::intersection::MinProximityIntersection; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:9763,Safety,detect,detection,9763,"verridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getUseSurfaceNormals() constsofa::component::collision::detection::intersection::MinProximityIntersection; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:11050,Safety,detect,detection,11050," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Intersection()sofa::core::collision::Intersectioninlineprotected; IntersectorFactory typedefsofa::component::collision::detection::intersection::MinProximityIntersection; intersectorssofa::component::collision::detection::intersection::DiscreteIntersection; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isSupported(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2)sofa::core::collision::Intersectionvirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:11141,Safety,detect,detection,11141,"ne; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Intersection()sofa::core::collision::Intersectioninlineprotected; IntersectorFactory typedefsofa::component::collision::detection::intersection::MinProximityIntersection; intersectorssofa::component::collision::detection::intersection::DiscreteIntersection; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isSupported(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2)sofa::core::collision::Intersectionvirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:12283,Safety,detect,detection,12283,"Iterator elem1, core::CollisionElementIterator elem2)sofa::core::collision::Intersectionvirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MinProximityIntersection()sofa::component::collision::detection::intersection::MinProximityIntersectionprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; OutputVector typedefsofa::core::collision::BaseIntersector; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:13363,Safety,detect,detection,13363,"::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; OutputVector typedefsofa::core::collision::BaseIntersector; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setContactDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:13492,Safety,detect,detection,13492,"sofa::core::collision::BaseIntersector; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setContactDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::interse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:14479,Safety,detect,detection,14479,"lision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProx",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:14559,Safety,detect,detection,14559,"nitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:14792,Safety,detect,detection,14792,"jectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:14871,Safety,detect,detection,14871,"l::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionv",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15020,Safety,detect,detection,15020,"const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15452,Safety,detect,detection,15452,"component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15650,Safety,detect,detection,15650,"seObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15826,Safety,detect,detection,15826,"tersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15973,Safety,detect,detection,15973,":Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() consts",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16052,Safety,detect,detection,16052,"rsection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16271,Safety,detect,detection,16271,"tIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::Mi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16353,Safety,detect,detection,16353,"const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16521,Safety,detect,detection,16521,"(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16686,Safety,detect,detection,16686,"rsectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:17066,Safety,detect,detection,17066,"tion::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:17157,Safety,detect,detection,17157,"geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overrid",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:17249,Safety,detect,detection,17249,"nent::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:17357,Safety,detect,detection,17357,"::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:17467,Safety,detect,detection,17467,"h1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:17563,Safety,detect,detection,17563,"h1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:18191,Safety,detect,detection,18191,"h1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:18318,Safety,detect,detection,18318,"h1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:794,Testability,log,logging,794," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4504,Testability,log,logging,4504,"ProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4546,Testability,log,logging,4546,"llision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::component::collision::detection::intersection::Min",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:8295,Testability,log,logging,8295,") constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getUseSurfaceNormals() constsofa::component::collision::detection::intersection::MinProximityIntersection; handleEvent(Event *)so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:8337,Testability,log,logging,8337,"virtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getUseSurfaceNormals() constsofa::component::collision::detection::intersection::MinProximityIntersection; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15273,Testability,test,testIntersection,15273,"Name(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15510,Testability,test,testIntersection,15510,"ntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15707,Testability,test,testIntersection,15707,"ProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::Discr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15884,Testability,test,testIntersection,15884,"on::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16099,Testability,test,testIntersection,16099,"A_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityInter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16400,Testability,test,testIntersection,16400,"ection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectionin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16575,Testability,test,testIntersectionSphere,16575,"::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16903,Testability,log,logErrors,16903,"ype1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; useSurfaceNormalssofa::component::collision::detection::intersection::MinProximityIntersection; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" """,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:2515,Usability,clear,clearLoggedMessages,2515,"sectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:4251,Availability,down,down,4251,"tening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MinProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:25983,Availability,down,down,25983,"ion::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::dete",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:9064,Deployability,continuous,continuous,9064,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:11468,Deployability,update,updateInternal,11468,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:15963,Deployability,update,updateLinks,15963,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:19727,Deployability,update,update,19727,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2788,Energy Efficiency,reduce,reduce,2788,"; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:3505,Integrability,message,messages,3505,"ore::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MinProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersector",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:10037,Integrability,depend,dependent,10037,"ator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:687,Modifiability,extend,extended,687,"﻿. SOFA API: sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference . #include <MinProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::MinProximityIntersection:. [legend]; Detailed Description; Basic intersection methods using proximities It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for additional types of intersection.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point (if d_usePointPoint is true); Line/Point (if d_useLinePoint is true); Line/Line (if d_useLineLine is true); Triangle/Point; Sphere/Point (if d_useSphereTriangle is true); RigidSphere/Point (if d_useSphereTriangle is true); Triangle/Sphere (if d_useSphereTriangle is true); Triangle/RigidSphere (if d_useSphereTriangle is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_useP",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2387,Modifiability,inherit,inherited,2387,", etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2932,Modifiability,inherit,inherited,2932,"< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:3090,Modifiability,inherit,inherited,3090,"< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:3256,Modifiability,inherit,inherited,3256,"ntersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MinProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:5645,Modifiability,inherit,inherited,5645,"ph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:6478,Modifiability,inherit,inherited,6478,"onent::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) More...;  ; void setContactDistance (SReal v) override;  Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) More...;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  SOFA_CLASS (DiscreteIntersection, sofa::core::collision::Intersection);  ; core::collision::ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) override;  Return the intersector class handling the given pair of collision models, or nullptr if not supported. More...;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:8772,Modifiability,inherit,inherited,8772,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:9618,Modifiability,inherit,inherited,9618,"dSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:11404,Modifiability,variab,variables,11404," virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:11514,Modifiability,variab,variables,11514,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:11556,Modifiability,variab,variables,11556,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:11801,Modifiability,inherit,inherited,11801," ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:17927,Modifiability,inherit,inherited,17927,"..;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:18679,Modifiability,inherit,inherited,18679,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:18880,Modifiability,inherit,inherited,18880,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:19429,Modifiability,inherit,inherited,19429,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:19561,Modifiability,inherit,inherited,19561,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:20284,Modifiability,inherit,inherited,20284,";  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:21018,Modifiability,inherit,inherited,21018,"now if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<cl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:21272,Modifiability,inherit,inherited,21272,"now if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<cl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:21711,Modifiability,inherit,inherited,21711,"ame Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Po",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22111,Modifiability,inherit,inherited,22111,"bject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by consideri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:10118,Performance,load,loader,10118,"tual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference . #include <MinProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::MinProximityIntersection:. [legend]; Detailed Description; Basic intersection methods using proximities It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for additional types of intersection.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point (if d_usePointPoint is true); Line/Point (if d_useLinePoint is true); Line/Line (if d_useLineLine is true); Triangle/Point; Sphere/Point (if d_useSphereTriangle is true); RigidSphere/Point (if d_useSphereTriangle is true); Triangle/Sphere (if d_useSphereTriangle is true); Triangle/RigidSphere (if d_useSphereTriangle is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_useP",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:310,Safety,detect,detection,310,"﻿. SOFA API: sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference . #include <MinProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::MinProximityIntersection:. [legend]; Detailed Description; Basic intersection methods using proximities It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for additional types of intersection.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point (if d_usePointPoint is true); Line/Point (if d_useLinePoint is true); Line/Line (if d_useLineLine is true); Triangle/Point; Sphere/Point (if d_useSphereTriangle is true); RigidSphere/Point (if d_useSphereTriangle is true); Triangle/Sphere (if d_useSphereTriangle is true); Triangle/RigidSphere (if d_useSphereTriangle is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_useP",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:469,Safety,detect,detection,469,"﻿. SOFA API: sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::MinProximityIntersection Class Reference . #include <MinProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::MinProximityIntersection:. [legend]; Detailed Description; Basic intersection methods using proximities It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for additional types of intersection.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point (if d_usePointPoint is true); Line/Point (if d_useLinePoint is true); Line/Line (if d_useLineLine is true); Triangle/Point; Sphere/Point (if d_useSphereTriangle is true); RigidSphere/Point (if d_useSphereTriangle is true); Triangle/Sphere (if d_useSphereTriangle is true); Triangle/RigidSphere (if d_useSphereTriangle is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_useP",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2430,Safety,detect,detection,2430,", etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2975,Safety,detect,detection,2975,"< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:5688,Safety,detect,detection,5688,"ph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:6521,Safety,detect,detection,6521,"onent::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) More...;  ; void setContactDistance (SReal v) override;  Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) More...;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  SOFA_CLASS (DiscreteIntersection, sofa::core::collision::Intersection);  ; core::collision::ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) override;  Return the intersector class handling the given pair of collision models, or nullptr if not supported. More...;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:9075,Safety,detect,detection,9075,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:18722,Safety,detect,detection,18722,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:18923,Safety,detect,detection,18923,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22383,Safety,detect,detection,22383," VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22546,Safety,detect,detection,22546,"Link;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22712,Safety,detect,detection,22712," sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22884,Safety,detect,detection,22884,"tFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::Re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:23064,Safety,detect,detection,23064," Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:23320,Safety,detect,detection,23320,te details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersect,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:23471,Safety,detect,detection,23471," intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:23624,Safety,detect,detection,23624,"e Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:23782,Safety,detect,detection,23782,"activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cub",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:23944,Safety,detect,detection,23944,"hereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:24093,Safety,detect,detection,24093,"SurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:24270,Safety,detect,detection,24270,"ollision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:24518,Safety,detect,detection,24518,"n::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:24633,Safety,detect,detection,24633,"::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:24946,Safety,detect,detection,24946,"ection::intersection::MinProximityIntersection::useSurfaceNormals. Constructor details. ◆ MinProximityIntersection(). sofa::component::collision::detection::intersection::MinProximityIntersection::MinProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph cre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:25118,Safety,detect,detection,25118,"imityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:25402,Safety,detect,detection,25402,"r * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:25688,Safety,detect,detection,25688,"sion::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:25818,Safety,detect,detection,25818,"n::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26101,Safety,detect,detection,26101,"ection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::inters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26294,Safety,detect,detection,26294,"phereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26510,Safety,detect,detection,26510,"e2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26623,Safety,detect,detection,26623,"ofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 0",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26948,Safety,detect,detection,26948,"ion::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:27118,Safety,detect,detection,27118,"ion::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:27368,Safety,detect,detection,27368,"ion::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:1964,Testability,test,tests,1964,"or additional types of intersection.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point (if d_usePointPoint is true); Line/Point (if d_useLinePoint is true); Line/Line (if d_useLineLine is true); Triangle/Point; Sphere/Point (if d_useSphereTriangle is true); RigidSphere/Point (if d_useSphereTriangle is true); Triangle/Sphere (if d_useSphereTriangle is true); Triangle/RigidSphere (if d_useSphereTriangle is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2047,Testability,test,tests,2047,"eLine is true); Triangle/Point; Sphere/Point (if d_useSphereTriangle is true); RigidSphere/Point (if d_useSphereTriangle is true); Triangle/Sphere (if d_useSphereTriangle is true); Triangle/RigidSphere (if d_useSphereTriangle is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2271,Testability,test,tests,2271," is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2350,Testability,test,tests,2350,"useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:4323,Testability,test,testIntersection,4323," ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MinProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:4782,Testability,test,testIntersection,4782,"ph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:5111,Testability,test,testIntersection,5111,"ph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:5398,Testability,test,testIntersection,5398,"ph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:6918,Testability,test,testIntersection,6918,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:7270,Testability,test,testIntersection,7270,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:7642,Testability,test,testIntersection,7642,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:8004,Testability,test,testIntersection,8004,"core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:8246,Testability,test,testIntersection,8246,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:8508,Testability,test,testIntersection,8508,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:13819,Testability,log,logging,13819," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:13892,Testability,log,logging,13892," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:13934,Testability,log,logging,13934," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:14004,Testability,log,logging,14004," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:14115,Testability,log,logging,14115," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:14157,Testability,log,logging,14157," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:15981,Testability,log,logErrors,15981,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:19094,Testability,test,testIntersectionSphere,19094,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22481,Testability,test,tests,22481,"m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22646,Testability,test,tests,22646,"i-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22814,Testability,test,tests,22814,"reate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::interse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:22994,Testability,test,tests,22994,"ext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLineLine. activate Line-Line intersection tests . ◆ d_useLinePoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useLinePoint. activate Line-Point intersection tests . ◆ d_usePointPoint. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_usePointPoint. activate Point-Point intersection tests . ◆ d_useSphereTriangle. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSphereTriangle. activate Sphere-Triangle intersection tests . ◆ d_useSurfaceNormals. Data<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::d_useSurfaceNormals. Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLineLine. ◆ useLinePoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useLinePoint. ◆ usePointPoint. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::usePointPoint. ◆ useSphereTriangle. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProximityIntersection::useSphereTriangle. ◆ useSurfaceNormals. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::MinProxim",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26235,Testability,test,testIntersection,26235,"utVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26345,Testability,test,testIntersection,26345,"phereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::MinProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26564,Testability,test,testIntersection,26564,"n::Intersection * ; currentIntersection . ). inline . ◆ getUseSurfaceNormals(). bool sofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:26674,Testability,test,testIntersection,26674,"ofa::component::collision::detection::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 0",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:27002,Testability,test,testIntersection,27002,"ion::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:27169,Testability,test,testIntersection,27169,"ion::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:27252,Testability,test,testIntersection,27252,"ion::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:27419,Testability,test,testIntersection,27419,"ion::intersection::MinProximityIntersection::getUseSurfaceNormals ; (; ); const. ◆ init(). void sofa::component::collision::detection::intersection::MinProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::MinProximityIntersection::SOFA_CLASS ; (; MinProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::MinProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). inline . sofacomponentcollisiondetectionintersectionMinProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:14200,Usability,clear,clearLoggedMessages,14200," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16533,Deployability,update,updateInternal,16533,"ersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16586,Deployability,update,updateLinks,16586,"rsection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~Discrete",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:326,Modifiability,inherit,inherited,326,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::NewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::NewProximityIntersection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:13887,Performance,load,loader,13887,"BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setContactDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::NewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::NewProximityIntersection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:261,Safety,detect,detection,261,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::NewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::NewProximityIntersection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:1378,Safety,detect,detection,1378,"alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:1652,Safety,detect,detection,1652,"precatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObject",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:2878,Safety,detect,detection,2878,"re::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:3103,Safety,detect,detection,3103,"ntext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteInterse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:3300,Safety,detect,detection,3300,"esLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:3474,Safety,detect,detection,3474,"re::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:3553,Safety,detect,detection,3553,"ctmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:3799,Safety,detect,detection,3799,"n::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:3881,Safety,detect,detection,3881,"n::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityInterse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4068,Safety,detect,detection,4068,"n)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4307,Safety,detect,detection,4307,"ntersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4412,Safety,detect,detection,4412,"utputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4841,Safety,detect,detection,4841,"rtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4985,Safety,detect,detection,4985,"on::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:5133,Safety,detect,detection,5133,"ionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:5234,Safety,detect,detection,5234,"Real alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:5429,Safety,detect,detection,5429,"n::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &sw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:6480,Safety,detect,detection,6480,"tatic; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) overridesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getAlarmDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:6985,Safety,detect,detection,6985,"el::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) overridesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getAlarmDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:7346,Safety,detect,detection,7346,"dIntersector(core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) overridesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getAlarmDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:9469,Safety,detect,detection,9469,"lision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:10756,Safety,detect,detection,10756," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Intersection()sofa::core::collision::Intersectioninlineprotected; IntersectorFactory typedefsofa::component::collision::detection::intersection::NewProximityIntersection; intersectorssofa::component::collision::detection::intersection::DiscreteIntersection; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isSupported(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2)sofa::core::collision::Intersectionvirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:10847,Safety,detect,detection,10847,"ne; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Intersection()sofa::core::collision::Intersectioninlineprotected; IntersectorFactory typedefsofa::component::collision::detection::intersection::NewProximityIntersection; intersectorssofa::component::collision::detection::intersection::DiscreteIntersection; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isSupported(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2)sofa::core::collision::Intersectionvirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:12070,Safety,detect,detection,12070,"sectionvirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NewProximityIntersection()sofa::component::collision::detection::intersection::NewProximityIntersectionprotected; notMuted() constsofa::core::objectmodel::Baseinline; OutputVector typedefsofa::core::collision::BaseIntersector; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal v) overridesofa::component::collision::detect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:13069,Safety,detect,detection,13069,"ction::intersection::NewProximityIntersectionprotected; notMuted() constsofa::core::objectmodel::Baseinline; OutputVector typedefsofa::core::collision::BaseIntersector; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setContactDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:13198,Safety,detect,detection,13198,"sofa::core::collision::BaseIntersector; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setContactDistance(SReal v) overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::interse",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:14185,Safety,detect,detection,14185,"lision::detection::intersection::BaseProximityIntersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProx",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:14265,Safety,detect,detection,14265,"nitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:14498,Safety,detect,detection,14498,"jectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:14577,Safety,detect,detection,14577,"l::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:14726,Safety,detect,detection,14726,"const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15158,Safety,detect,detection,15158,"component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15356,Safety,detect,detection,15356,"seObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15526,Safety,detect,detection,15526,"mityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15673,Safety,detect,detection,15673,"ision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() consts",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15752,Safety,detect,detection,15752,"teIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15971,Safety,detect,detection,15971,"l; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16053,Safety,detect,detection,16053,"ube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16221,Safety,detect,detection,16221,"ection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16386,Safety,detect,detection,16386,"tyIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16766,Safety,detect,detection,16766,"tion::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16874,Safety,detect,detection,16874,"on::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:17516,Safety,detect,detection,17516,"on::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:17643,Safety,detect,detection,17643,"on::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() overridesofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:794,Testability,log,logging,794," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4498,Testability,log,logging,4498,"ProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateIn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4540,Testability,log,logging,4540,"llision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateInternal()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:8108,Testability,log,logging,8108,"tClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:8150,Testability,log,logging,8150,"estatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContactDistance() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:14979,Testability,test,testIntersection,14979,"Name(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::inters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15216,Testability,test,testIntersection,15216,"ntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::dete",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15407,Testability,test,testIntersection,15407,"SS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::Discr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15584,Testability,test,testIntersection,15584,"rsection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15799,Testability,test,testIntersection,15799,"n::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityInter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16100,Testability,test,testIntersection,16100,"Intersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16275,Testability,test,testIntersectionSphere,16275,"lision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16603,Testability,log,logErrors,16603,"ype1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteIntersection() o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:2515,Usability,clear,clearLoggedMessages,2515,"sectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:3131,Availability,down,down,3131,"tening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (NewProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=del",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:23725,Availability,down,down,23725,"me SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::dete",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:7905,Deployability,continuous,continuous,7905,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:10309,Deployability,update,updateInternal,10309,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:14804,Deployability,update,updateLinks,14804,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:19357,Deployability,update,update,19357,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1668,Energy Efficiency,reduce,reduce,1668,"rs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:2385,Integrability,message,messages,2385,"ore::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (NewProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:8878,Integrability,depend,dependent,8878,"ator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:676,Modifiability,extend,extended,676,"﻿. SOFA API: sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference . #include <NewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::NewProximityIntersection:. [legend]; Detailed Description; It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1267,Modifiability,inherit,inherited,1267,"NewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::NewProximityIntersection:. [legend]; Detailed Description; It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1812,Modifiability,inherit,inherited,1812," Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1970,Modifiability,inherit,inherited,1970," Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:2136,Modifiability,inherit,inherited,2136,"etection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (NewProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:4486,Modifiability,inherit,inherited,4486,"e;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:5319,Modifiability,inherit,inherited,5319,"onent::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) More...;  ; void setContactDistance (SReal v) override;  Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) More...;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  SOFA_CLASS (DiscreteIntersection, sofa::core::collision::Intersection);  ; core::collision::ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) override;  Return the intersector class handling the given pair of collision models, or nullptr if not supported. More...;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:7613,Modifiability,inherit,inherited,7613,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:8459,Modifiability,inherit,inherited,8459,"dSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:10245,Modifiability,variab,variables,10245," virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:10355,Modifiability,variab,variables,10355,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:10397,Modifiability,variab,variables,10397,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:10642,Modifiability,inherit,inherited,10642," ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:16768,Modifiability,inherit,inherited,16768,"..;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Static Public Member Functions; static int doIntersectionPointPoint (SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:17623,Modifiability,inherit,inherited,17623,"seLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Static Public Member Functions; static int doIntersectionPointPoint (SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:18023,Modifiability,inherit,inherited,18023,"tVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Static Public Member Functions; static int doIntersectionPointPoint (SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Inters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:18309,Modifiability,inherit,inherited,18309,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:18510,Modifiability,inherit,inherited,18510,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:19059,Modifiability,inherit,inherited,19059,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:19191,Modifiability,inherit,inherited,19191,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:19914,Modifiability,inherit,inherited,19914,";  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:20648,Modifiability,inherit,inherited,20648,"now if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:20902,Modifiability,inherit,inherited,20902,"now if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:8959,Performance,load,loader,8959,"tual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference . #include <NewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::NewProximityIntersection:. [legend]; Detailed Description; It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:344,Safety,detect,detection,344,"﻿. SOFA API: sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference . #include <NewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::NewProximityIntersection:. [legend]; Detailed Description; It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:503,Safety,detect,detection,503,"﻿. SOFA API: sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference . #include <NewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::NewProximityIntersection:. [legend]; Detailed Description; It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1217,Safety,detect,detection,1217,"i-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::NewProximityIntersection Class Reference . #include <NewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::NewProximityIntersection:. [legend]; Detailed Description; It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1310,Safety,detect,detection,1310,"NewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::NewProximityIntersection:. [legend]; Detailed Description; It uses proximities on cubes and spheres, but supported pairs of collision models can be extended. For example, see MeshMinProximityIntersection which adds support for Point/Point, Line/Point, etc.; Supported by default:; Cube/Cube; Sphere/Sphere (rigid or vec3) MeshMinProximityIntersection adds support for:; Point/Point; Line/Point; Line/Line; Triangle/Point; Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1855,Safety,detect,detection,1855," Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:4529,Safety,detect,detection,4529,"e;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:5362,Safety,detect,detection,5362,"onent::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) More...;  ; void setContactDistance (SReal v) override;  Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) More...;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  SOFA_CLASS (DiscreteIntersection, sofa::core::collision::Intersection);  ; core::collision::ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) override;  Return the intersector class handling the given pair of collision models, or nullptr if not supported. More...;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:7916,Safety,detect,detection,7916,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:18352,Safety,detect,detection,18352,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:18553,Safety,detect,detection,18553,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:21384,Safety,detect,detection,21384," (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::C",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:21470,Safety,detect,detection,21470,"onst char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:21577,Safety,detect,detection,21577," initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:21720,Safety,detect,detection,21720,"FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:21897,Safety,detect,detection,21897,"del::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:22145,Safety,detect,detection,22145,"ames and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:22260,Safety,detect,detection,22260,"e...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:22573,Safety,detect,detection,22573,"n::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::inte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:22745,Safety,detect,detection,22745,"imityIntersection ; (; ). protected . Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:23029,Safety,detect,detection,23029,"r * ; contacts . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::N",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:23309,Safety,detect,detection,23309,"sion::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:23560,Safety,detect,detection,23560,"tion::intersection::BaseProximityIntersection. ◆ computeIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:23843,Safety,detect,detection,23843,"ctor * ; contacts . ). delete . ◆ computeIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::inters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24036,Safety,detect,detection,24036,"tion::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24252,Safety,detect,detection,24252,"tersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24365,Safety,detect,detection,24365,", . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24690,Safety,detect,detection,24690," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24860,Safety,detect,detection,24860," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:25110,Safety,detect,detection,25110," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:3164,Testability,test,testIntersection,3164,"d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (NewProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:3623,Testability,test,testIntersection,3623,"e;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:3952,Testability,test,testIntersection,3952,"e;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:4239,Testability,test,testIntersection,4239,"e;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:5759,Testability,test,testIntersection,5759,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:6111,Testability,test,testIntersection,6111,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:6483,Testability,test,testIntersection,6483,,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:6845,Testability,test,testIntersection,6845,"core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:7087,Testability,test,testIntersection,7087,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:7349,Testability,test,testIntersection,7349,"tersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:12660,Testability,log,logging,12660," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:12733,Testability,log,logging,12733," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:12775,Testability,log,logging,12775," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:12845,Testability,log,logging,12845," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:12956,Testability,log,logging,12956," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:12998,Testability,log,logging,12998," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:14822,Testability,log,logErrors,14822,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:18724,Testability,test,testIntersectionSphere,18724,"thod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  NewProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:23977,Testability,test,testIntersection,23977,"ype2 > . int sofa::component::collision::detection::intersection::NewProximityIntersection::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24087,Testability,test,testIntersection,24087,"tion::computeIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ doIntersectionPointPoint(). int sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24306,Testability,test,testIntersection,24306,"n::intersection::NewProximityIntersection::doIntersectionPointPoint ; (; SReal ; dist2, . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24416,Testability,test,testIntersection,24416,", . const type::Vec3 & ; p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24744,Testability,test,testIntersection,24744," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24911,Testability,test,testIntersection,24911," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:24994,Testability,test,testIntersection,24994," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:25161,Testability,test,testIntersection,25161," p, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id . ). inlinestatic . ◆ init(). void sofa::component::collision::detection::intersection::NewProximityIntersection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::NewProximityIntersection::SOFA_CLASS ; (; NewProximityIntersection ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [3/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2 . ). delete . ◆ testIntersection() [4/4]. template<typename SphereType1 , typename SphereType2 > . bool sofa::component::collision::detection::intersection::NewProximityIntersection::testIntersection ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:13041,Usability,clear,clearLoggedMessages,13041," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:324,Modifiability,inherit,inherited,324,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::RayDiscreteIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::RayDiscreteIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::RayDiscreteIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::RayDiscreteIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:260,Safety,detect,detection,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::RayDiscreteIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::RayDiscreteIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:731,Safety,detect,detection,731," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:963,Safety,detect,detection,963," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:1148,Safety,detect,detection,1148," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:1329,Safety,detect,detection,1329," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:1843,Safety,detect,detection,1843,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:2060,Safety,detect,detection,2060,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:2273,Safety,detect,detection,2273,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:2439,Safety,detect,detection,2439,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:2601,Safety,detect,detection,2601,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:1893,Testability,test,testIntersection,1893,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:2110,Testability,test,testIntersection,2110,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:2323,Testability,test,testIntersection,2323,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html:2489,Testability,test,testIntersection,2489,"onent::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayDiscreteIntersection(DiscreteIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::TSphere< T > &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::RayDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:1747,Modifiability,inherit,inherited,1747,"yDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::intersection::RayDiscreteIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::RayDiscreteIntersection Class Reference . #include <RayDiscreteIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::RayDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:258,Safety,detect,detection,258,"﻿. SOFA API: sofa::component::collision::detection::intersection::RayDiscreteIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::RayDiscreteIntersection Class Reference . #include <RayDiscreteIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::RayDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:415,Safety,detect,detection,415,"﻿. SOFA API: sofa::component::collision::detection::intersection::RayDiscreteIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::RayDiscreteIntersection Class Reference . #include <RayDiscreteIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::RayDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:2488,Safety,detect,detection,2488,"try::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscreteIntersection(). sofa::component::collision::detection::intersection::RayDiscreteIntersection::RayDiscreteIntersection ; (; DiscreteIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::comp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:2716,Safety,detect,detection,2716,"ted from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscreteIntersection(). sofa::component::collision::detection::intersection::RayDiscreteIntersection::RayDiscreteIntersection ; (; DiscreteIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:2957,Safety,detect,detection,2957,"*);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscreteIntersection(). sofa::component::collision::detection::intersection::RayDiscreteIntersection::RayDiscreteIntersection ; (; DiscreteIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Trian",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:3285,Safety,detect,detection,3285,"ection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscreteIntersection(). sofa::component::collision::detection::intersection::RayDiscreteIntersection::RayDiscreteIntersection ; (; DiscreteIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. templat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:3551,Safety,detect,detection,3551,"; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:3864,Safety,detect,detection,3864,"puteIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4079,Safety,detect,detection,4079,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4369,Safety,detect,detection,4369,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4609,Safety,detect,detection,4609,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:612,Testability,test,testIntersection,612,"yDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:762,Testability,test,testIntersection,762,"yDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:1282,Testability,test,testIntersection,1282,"yDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:1381,Testability,test,testIntersection,1381,"yDiscreteIntersection:. [legend]. Public Member Functions;  RayDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Ray &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayDiscre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:3805,Testability,test,testIntersection,3805,"& ; , . collision::geometry::Triangle & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentInter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:3914,Testability,test,testIntersection,3914,"puteIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4020,Testability,test,testIntersection,4020,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4129,Testability,test,testIntersection,4129,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4289,Testability,test,testIntersection,4289,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4419,Testability,test,testIntersection,4419,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4529,Testability,test,testIntersection,4529,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html:4659,Testability,test,testIntersection,4659,"tection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Triangle & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. template<class T > . int sofa::component::collision::detection::intersection::RayDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [4/4]. template<class T > . bool sofa::component::collision::detection::intersection::RayDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::TSphere< T > & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:332,Modifiability,inherit,inherited,332,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::RayNewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::RayNewProximityIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::RayNewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::RayNewProximityIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:264,Safety,detect,detection,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::RayNewProximityIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::RayNewProximityIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:739,Safety,detect,detection,739," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:989,Safety,detect,detection,989," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:1178,Safety,detect,detection,1178," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:1377,Safety,detect,detection,1377,"llision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::Ra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:1903,Safety,detect,detection,1903,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:2124,Safety,detect,detection,2124,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:2355,Safety,detect,detection,2355,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:2525,Safety,detect,detection,2525,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:2705,Safety,detect,detection,2705,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:1957,Testability,test,testIntersection,1957,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:2178,Testability,test,testIntersection,2178,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:2409,Testability,test,testIntersection,2409,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html:2579,Testability,test,testIntersection,2579,"n::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; computeIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; RayNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; testIntersection(collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=deletesofa::component::collision::detection::intersection::RayNewProximityIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:1743,Modifiability,inherit,inherited,1743,"on::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::intersection::RayNewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::RayNewProximityIntersection Class Reference . #include <RayNewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; tem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:262,Safety,detect,detection,262,"﻿. SOFA API: sofa::component::collision::detection::intersection::RayNewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::RayNewProximityIntersection Class Reference . #include <RayNewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; tem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:427,Safety,detect,detection,427,"﻿. SOFA API: sofa::component::collision::detection::intersection::RayNewProximityIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::RayNewProximityIntersection Class Reference . #include <RayNewProximityIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; tem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:2488,Safety,detect,detection,2488,"llision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityIntersection(). sofa::component::collision::detection::intersection::RayNewProximityIntersection::RayNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::comp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:2728,Safety,detect,detection,2728,":collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityIntersection(). sofa::component::collision::detection::intersection::RayNewProximityIntersection::RayNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Inters",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:2987,Safety,detect,detection,2987,"Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityIntersection(). sofa::component::collision::detection::intersection::RayNewProximityIntersection::RayNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ).",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:3308,Safety,detect,detection,3308,"odel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityIntersection(). sofa::component::collision::detection::intersection::RayNewProximityIntersection::RayNewProximityIntersection ; (; NewProximityIntersection * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:3557,Safety,detect,detection,3557,"on * ; intersection, . bool ; addSelf = true . ). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:3866,Safety,detect,detection,3866,"* ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generate",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4099,Safety,detect,detection,4099,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4386,Safety,detect,detection,4386,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4609,Safety,detect,detection,4609,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:615,Testability,test,testIntersection,615,"on::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:933,Testability,test,testIntersection,933,"on::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:1271,Testability,test,testIntersection,1271,"on::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:1487,Testability,test,testIntersection,1487,"on::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:3807,Testability,test,testIntersection,3807,"geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersectio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:3920,Testability,test,testIntersection,3920,"* ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generate",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4040,Testability,test,testIntersection,4040,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4153,Testability,test,testIntersection,4153,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4327,Testability,test,testIntersection,4327,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4440,Testability,test,testIntersection,4440,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4550,Testability,test,testIntersection,4550,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:4663,Testability,test,testIntersection,4663,"sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::RayNewProximityIntersection::computeIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; rRay, . collision::geometry::RigidSphere & ; rSphere, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2 . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::RayNewProximityIntersection::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionRayNewProximityIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:340,Modifiability,inherit,inherited,340,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDisc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDisc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:268,Safety,detect,detection,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Member List . This is the complete list of members for sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection, including all inherited members. BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDisc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:748,Safety,detect,detection,748," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDisc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:991,Safety,detect,detection,991," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDisc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:1185,Safety,detect,detection,1185," BaseIntersector()sofa::core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDisc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:1377,Safety,detect,detection,1377,"core::collision::BaseIntersectorinline; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersectio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:1961,Safety,detect,detection,1961,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2185,Safety,detect,detection,2185,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2360,Safety,detect,detection,2360,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2533,Safety,detect,detection,2533,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2686,Safety,detect,detection,2686,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:1793,Testability,test,testIntersection,1793,"ion; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2019,Testability,test,testIntersection,2019,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2243,Testability,test,testIntersection,2243,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2418,Testability,test,testIntersection,2418,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:1700,Modifiability,inherit,inherited,1700,"ion::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Class Reference . #include <TetrahedronDiscreteIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:266,Safety,detect,detection,266,"﻿. SOFA API: sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Class Reference . #include <TetrahedronDiscreteIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:439,Safety,detect,detection,439,"﻿. SOFA API: sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection Class Reference . #include <TetrahedronDiscreteIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:2449,Safety,detect,detection,2449," collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::TetrahedronDiscreteIntersection ; (; DiscreteIntersection * ; intersection). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:2665,Safety,detect,detection,2665,"ted from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::TetrahedronDiscreteIntersection ; (; DiscreteIntersection * ; intersection). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::In",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:2917,Safety,detect,detection,2917,"late<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::TetrahedronDiscreteIntersection ; (; DiscreteIntersection * ; intersection). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:3235,Safety,detect,detection,3235,"n (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::TetrahedronDiscreteIntersection ; (; DiscreteIntersection * ; intersection). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:3489,Safety,detect,detection,3489,"ion ; (; DiscreteIntersection * ; intersection). Function details. ◆ computeIntersection() [1/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:3807,Safety,detect,detection,3807,"elete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generate",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4033,Safety,detect,detection,4033,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4313,Safety,detect,detection,4313,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4541,Safety,detect,detection,4541,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:612,Testability,test,testIntersection,612,"ion::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:763,Testability,test,testIntersection,763,"ion::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:1248,Testability,test,testIntersection,1248,"ion::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:1348,Testability,test,testIntersection,1348,"ion::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:3748,Testability,test,testIntersection,3748,"geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:3865,Testability,test,testIntersection,3865,"elete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generate",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:3974,Testability,test,testIntersection,3974,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4091,Testability,test,testIntersection,4091,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4254,Testability,test,testIntersection,4254,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4371,Testability,test,testIntersection,4371,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4482,Testability,test,testIntersection,4482,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:4599,Testability,test,testIntersection,4599,"nent::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::Cube Member List . This is the complete list of members for sofa::component::collision::geometry::Cube, including all inherited members. BaseCollisionElementIterator(Index index=0)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(Index index, VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; canCollideWith(const TCollisionElementIterator< Model > &elem) constsofa::core::TCollisionElementIterator< CubeCollisionModel >inline; Cube(CubeCollisionModel *model=nullptr, sofa::Index index=0)sofa::component::collision::geometry::Cubeinline; Cube(const core::CollisionElementIterator &i)sofa::component::collision::geometry::Cubeinlineexplicit; draw(const core::visual::VisualParams *vparams)sofa::core::TCollisionElementIterator< CubeCollisionModel >inline; emptyVectorsofa::core::BaseCollisionElementIteratorprotectedstatic; getCollisionModel() constsofa::core::TCollisionElementIterator< CubeCollisionModel >inline; getConeAngle() constsofa::component::collision::geometry::Cubeinline; getConeAxis() constsofa::component::collision::geometry::Cubeinline; getContactFriction() constsofa::core::TCollisionElementIterator< CubeCollisionModel >inline; getContactStiffness() constsofa::core::TCollisionElementIterator< CubeCollisionModel >inline; getExternalChildren() constsofa::core::TCollisionElementIterator< CubeCollisionModel >; getIndex() constsofa::core::BaseCollisionElementIteratorinline; getInternalChildren() constsofa::core::TCollisionElementIterator< CubeCollisionModel >; getProximity() constsofa::core::TCollisionElementIterator< CubeCollisionModel >inline; getVIterator() constsofa::core::BaseCollisionElementIteratorinline; getVIteratorEnd() constsofa::core::BaseCollisionElementIteratorin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html:757,Modifiability,inherit,inherited,757,"﻿. SOFA API: sofa::component::collision::geometry::Cube Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::geometry::Cube Class Reference . #include <CubeModel.h>. Inheritance diagram for sofa::component::collision::geometry::Cube:. [legend]. Public Member Functions;  Cube (CubeCollisionModel *model=nullptr, sofa::Index index=0);  ;  Cube (const core::CollisionElementIterator &i);  ; const sofa::type::Vec3 & minVect () const;  ; const sofa::type::Vec3 & maxVect () const;  ; const std::pair< Cube, Cube > & subcells () const;  ; SReal getConeAngle () const;  ; const sofa::type::Vec3 & getConeAxis () const;  ;  Public Member Functions inherited from sofa::core::TCollisionElementIterator< CubeCollisionModel >;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, VIterator it, VIterator itend);  ; bool isActive (core::CollisionModel *cm=nullptr) const;  ; bool operator== (const TCollisionElementIterator< Model2 > &i) const;  ; bool operator!= (const TCollisionElementIterator< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html:2133,Modifiability,inherit,inherited,2133,"< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (damping) coefficient. More...;  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::BaseCollisionElementIterator;  BaseCollisionElementIterator (Index index=0);  ;  BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html:3196,Modifiability,inherit,inherited,3196,"BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< CubeCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Cube() [1/2]. sofa::component::collision::geometry::Cube::Cube ; (; CubeCollisionModel * ; model = nullptr, . sofa::Index ; index = 0 . ). inline . ◆ Cube() [2/2]. sofa::component::collision::geometry::Cube::Cube ; (; const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html:3372,Modifiability,inherit,inherited,3372," to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< CubeCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Cube() [1/2]. sofa::component::collision::geometry::Cube::Cube ; (; CubeCollisionModel * ; model = nullptr, . sofa::Index ; index = 0 . ). inline . ◆ Cube() [2/2]. sofa::component::collision::geometry::Cube::Cube ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ getConeAngle(). SReal sofa::component::collision::geometry::Cube::getConeAngle ; (; ); const. inline . ◆ ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html:3804,Modifiability,inherit,inherited,3804,"r () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< CubeCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Cube() [1/2]. sofa::component::collision::geometry::Cube::Cube ; (; CubeCollisionModel * ; model = nullptr, . sofa::Index ; index = 0 . ). inline . ◆ Cube() [2/2]. sofa::component::collision::geometry::Cube::Cube ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ getConeAngle(). SReal sofa::component::collision::geometry::Cube::getConeAngle ; (; ); const. inline . ◆ getConeAxis(). const sofa::type::Vec3 & sofa::component::collision::geometry::Cube::getConeAxis ; (; ); const. inline . ◆ maxVect(). const sofa::type::Vec3 & sofa::component::collision::geometry::Cube::maxVect ; (; ); const. inline . ◆ minVect(). const sofa::type::Vec3 & sofa::component::collision::geometry::Cube::minVect ; (; ); const. inline . ◆ subcells(). const std::pair< Cube, Cube > & sofa::component::collision::geometry::Cube::subcells ; (; ); c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:16722,Deployability,update,updateCube,16722,"ctor< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(CubeCollisionModel, sofa::core::CollisionModel)sofa::component::collision::geometry::CubeCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateCube(sofa::Index index)sofa::component::collision::geometry::CubeCollisionModel; updateCubes()sofa::component::collision::geometry::CubeCollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:16809,Deployability,update,updateCubes,16809,"ctor< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(CubeCollisionModel, sofa::core::CollisionModel)sofa::component::collision::geometry::CubeCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateCube(sofa::Index index)sofa::component::collision::geometry::CubeCollisionModel; updateCubes()sofa::component::collision::geometry::CubeCollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:16880,Deployability,update,updateInternal,16880,"ctor< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(CubeCollisionModel, sofa::core::CollisionModel)sofa::component::collision::geometry::CubeCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateCube(sofa::Index index)sofa::component::collision::geometry::CubeCollisionModel; updateCubes()sofa::component::collision::geometry::CubeCollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:16933,Deployability,update,updateLinks,16933,"ctor< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(CubeCollisionModel, sofa::core::CollisionModel)sofa::component::collision::geometry::CubeCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateCube(sofa::Index index)sofa::component::collision::geometry::CubeCollisionModel; updateCubes()sofa::component::collision::geometry::CubeCollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::CubeCollisionModel Member List . This is the complete list of members for sofa::component::collision::geometry::CubeCollisionModel, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCube(Cube subcellsBegin, Cube subcellsEnd)sofa::component::collision::geometry::CubeCollisionModel; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:15690,Performance,load,loader,15690,"odelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setParentOf(sofa::Index childIndex, const sofa::type::Vec3 &min, const sofa::type::Vec3 &max)sofa::component::collision::geometry::CubeCollisionModel; setParentOf(sofa::Index childIndex, const sofa::type::Vec3 &min, const sofa::type::Vec3 &max, const sofa::type::Vec3 &normal, const SReal angle=0)sofa::component::collision::geometry::CubeCollisionModel; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(CubeCollisionModel, sofa::core::CollisionModel)sofa::component::collision::geometry::CubeCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum value",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:964,Testability,log,logging,964," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCube(Cube subcellsBegin, Cube subcellsEnd)sofa::component::collision::geometry::CubeCollisionModel; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:3362,Testability,log,logging,3362,"ngeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; ChildIterator typedefsofa::component::collision::geometry::CubeCollisionModel; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CubeCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; Cube classsofa::component::collision::geometry::CubeCollisionModelfriend; CubeCollisionModel()sofa::component::collision::geometry::CubeCollisionModelprotected; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::CubeCollisionModel; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::CubeCollisionModelvirtual; sofa::core::CollisionModel::draw(const core::visual::VisualParams *, Index)sofa::core::CollisionModel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:3404,Testability,log,logging,3404,"ize_t, bool add)sofa::core::objectmodel::BaseObjectprotected; ChildIterator typedefsofa::component::collision::geometry::CubeCollisionModel; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CubeCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; Cube classsofa::component::collision::geometry::CubeCollisionModelfriend; CubeCollisionModel()sofa::component::collision::geometry::CubeCollisionModelprotected; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::CubeCollisionModel; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::CubeCollisionModelvirtual; sofa::core::CollisionModel::draw(const core::visual::VisualParams *, Index)sofa::core::CollisionModelinlinevirtual; Element typedefsofa::compon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:7761,Testability,log,logging,7761,sofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(sofa::Index index) const overridesofa::component::collision::geometry::CubeCollisionModelvirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(sofa::Index index) const overridesofa::component::collision::geometry::CubeCollisionModelvirtual; getLast()sofa::core::CollisionModel; getLeafEndIndex(sofa::Index index) constsofa::component::collision::geometry::CubeCollisionModelinline; getLeafIndex(sofa::Index index) constsofa::component::collision::geometry::CubeCollisionModelinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberCells() constsofa::component::collision::geometry::CubeCollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::co,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:7803,Testability,log,logging,7803,() constsofa::core::CollisionModelinline; getExternalChildren(sofa::Index index) const overridesofa::component::collision::geometry::CubeCollisionModelvirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(sofa::Index index) const overridesofa::component::collision::geometry::CubeCollisionModelvirtual; getLast()sofa::core::CollisionModel; getLeafEndIndex(sofa::Index index) constsofa::component::collision::geometry::CubeCollisionModelinline; getLeafIndex(sofa::Index index) constsofa::component::collision::geometry::CubeCollisionModelinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberCells() constsofa::component::collision::geometry::CubeCollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() co,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:16950,Testability,log,logErrors,16950,"ctor< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(CubeCollisionModel, sofa::core::CollisionModel)sofa::component::collision::geometry::CubeCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateCube(sofa::Index index)sofa::component::collision::geometry::CubeCollisionModel; updateCubes()sofa::component::collision::geometry::CubeCollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:2662,Usability,clear,clearLoggedMessages,2662,"ofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; ChildIterator typedefsofa::component::collision::geometry::CubeCollisionModel; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CubeCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; Cube classsofa::component::collision::geomet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:8378,Availability,avail,available,8378,"CollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; virtual void draw (const core::visual::VisualParams *, Index);  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ();  Return the first (i.e. root) CollisionModel in the hierarchy. More...;  ; CollisionModel * getLast ();  Return the last (i.e. leaf) CollisionModel in the hierarchy. More...;  ; template<class DerivedModel > ; DerivedModel * createPrevious ();  Helper method to get or create the previous model in the hierarchy. More...;  ; virtual sofa::core::topology::BaseMeshTopology * getCollisionTopology ();  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; const float * getColor4f ();  Get a color that can be used to display this CollisionModel. More...;  ; void setColor4f (const float *c);  Set a color that can be used to display this CollisionModel. More...;  ; void setProximity (const SReal a);  Set of differents parameters. More...;  ; void setContactResponse (const std::string &a);  ; int getEnumType () const;  ; void SetUserData (void *pUserData);  Set user data. More...;  ; void * GetUserData ();  Get user data. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; SReal getProximity () const;  Get distance to the actual (visual) surface. More...;  ; SReal getContactStiffness (Index) const;  Get contact stiffness. More...;  ; void setContactStiffness (SReal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:11583,Availability,down,down,11583,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:4968,Deployability,update,updateCube,4968,"Data (sofa::Index index) const;  ; void computeBoundingTree (int maxDepth=0) override;  ; std::pair< core::CollisionElementIterator, core::CollisionElementIterator > getInternalChildren (sofa::Index index) const override;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; std::pair< core::CollisionElementIterator, core::CollisionElementIterator > getExternalChildren (sofa::Index index) const override;  Return the list (as a pair of iterators) of external children of an element. More...;  ; bool isLeaf (sofa::Index index) const override;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; sofa::Index addCube (Cube subcellsBegin, Cube subcellsEnd);  ; void updateCube (sofa::Index index);  ; void updateCubes ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hiera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:5008,Deployability,update,updateCubes,5008,"Data (sofa::Index index) const;  ; void computeBoundingTree (int maxDepth=0) override;  ; std::pair< core::CollisionElementIterator, core::CollisionElementIterator > getInternalChildren (sofa::Index index) const override;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; std::pair< core::CollisionElementIterator, core::CollisionElementIterator > getExternalChildren (sofa::Index index) const override;  Return the list (as a pair of iterators) of external children of an element. More...;  ; bool isLeaf (sofa::Index index) const override;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; sofa::Index addCube (Cube subcellsBegin, Cube subcellsEnd);  ; void updateCube (sofa::Index index);  ; void updateCubes ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hiera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:7250,Deployability,update,update,7250,"ous (CollisionModel::SPtr val);  Set the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; virtual bool isActive () const;  Return true if this CollisionModel should be used for collisions. More...;  ; virtual void setActive (bool val=true);  Set true if this CollisionModel should be used for collisions. More...;  ; virtual bool isMoving () const;  Return true if this CollisionModel is changing position between iterations. More...;  ; virtual void setMoving (bool val=true);  Set true if this CollisionModel is changing position between iterations. More...;  ; virtual bool isSimulated () const;  Return true if this CollisionModel is attached to a simulation. It is false for immobile or procedurally animated objects that don't use contact forces. More...;  ; virtual void setSimulated (bool val=true);  Set true if this CollisionModel is attached to a simulation. More...;  ; virtual void computeContinuousBoundingTree (SReal, int maxDepth=0);  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; virtual void draw (const core::visual::VisualParams *, Index);  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ();  Return the first (i.e. root) CollisionModel in the hierarchy. More...;  ; CollisionModel * getLast ();  Return the last (i.e. leaf) CollisionModel in the hierarchy. More...;  ; template<class DerivedModel > ; DerivedModel * createPrevious ();  Helper method to get or create the previous model in the hierarchy. More...;  ; virtual sofa::core::topology::BaseMeshTopology * getCollisionTopology ();  BaseMeshTopolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:11726,Deployability,update,updateInternal,11726,"ent time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:16221,Deployability,update,updateLinks,16221,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:18581,Deployability,update,update,18581,"More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CubeCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:27201,Deployability,update,updateCube,27201,"ubeCollisionModel::isLeaf ; (; sofa::Index ; ); const. overridevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented from sofa::core::CollisionModel. ◆ resize(). void sofa::component::collision::geometry::CubeCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ setLeafCube() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . sofa::Index ; childIndex . ). ◆ setLeafCube() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . std::pair< core::CollisionElementIterator, core::CollisionElementIterator > ; children, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max, . const sofa::type::Vec3 & ; normal, . const SReal ; angle = 0 . ). ◆ SOFA_CLASS(). sofa::component::collision::geometry::CubeCollisionModel::SOFA_CLASS ; (; CubeCollisionModel ; , . sofa::core::CollisionModel ;  . ). ◆ updateCube(). void sofa::component::collision::geometry::CubeCollisionModel::updateCube ; (; sofa::Index ; index). ◆ updateCubes(). void sofa::component::collision::geometry::CubeCollisionModel::updateCubes ; (; ). Related details. ◆ Cube. friend class Cube. friend . sofacomponentcollisiongeometryCubeCollisionModel; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:27278,Deployability,update,updateCube,27278,"ubeCollisionModel::isLeaf ; (; sofa::Index ; ); const. overridevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented from sofa::core::CollisionModel. ◆ resize(). void sofa::component::collision::geometry::CubeCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ setLeafCube() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . sofa::Index ; childIndex . ). ◆ setLeafCube() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . std::pair< core::CollisionElementIterator, core::CollisionElementIterator > ; children, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max, . const sofa::type::Vec3 & ; normal, . const SReal ; angle = 0 . ). ◆ SOFA_CLASS(). sofa::component::collision::geometry::CubeCollisionModel::SOFA_CLASS ; (; CubeCollisionModel ; , . sofa::core::CollisionModel ;  . ). ◆ updateCube(). void sofa::component::collision::geometry::CubeCollisionModel::updateCube ; (; sofa::Index ; index). ◆ updateCubes(). void sofa::component::collision::geometry::CubeCollisionModel::updateCubes ; (; ). Related details. ◆ Cube. friend class Cube. friend . sofacomponentcollisiongeometryCubeCollisionModel; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:27318,Deployability,update,updateCubes,27318,"ubeCollisionModel::isLeaf ; (; sofa::Index ; ); const. overridevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented from sofa::core::CollisionModel. ◆ resize(). void sofa::component::collision::geometry::CubeCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ setLeafCube() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . sofa::Index ; childIndex . ). ◆ setLeafCube() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . std::pair< core::CollisionElementIterator, core::CollisionElementIterator > ; children, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max, . const sofa::type::Vec3 & ; normal, . const SReal ; angle = 0 . ). ◆ SOFA_CLASS(). sofa::component::collision::geometry::CubeCollisionModel::SOFA_CLASS ; (; CubeCollisionModel ; , . sofa::core::CollisionModel ;  . ). ◆ updateCube(). void sofa::component::collision::geometry::CubeCollisionModel::updateCube ; (; sofa::Index ; index). ◆ updateCubes(). void sofa::component::collision::geometry::CubeCollisionModel::updateCubes ; (; ). Related details. ◆ Cube. friend class Cube. friend . sofacomponentcollisiongeometryCubeCollisionModel; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:27396,Deployability,update,updateCubes,27396,"ubeCollisionModel::isLeaf ; (; sofa::Index ; ); const. overridevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented from sofa::core::CollisionModel. ◆ resize(). void sofa::component::collision::geometry::CubeCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ setLeafCube() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . sofa::Index ; childIndex . ). ◆ setLeafCube() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setLeafCube ; (; sofa::Index ; cubeIndex, . std::pair< core::CollisionElementIterator, core::CollisionElementIterator > ; children, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [1/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max . ). ◆ setParentOf() [2/2]. void sofa::component::collision::geometry::CubeCollisionModel::setParentOf ; (; sofa::Index ; childIndex, . const sofa::type::Vec3 & ; min, . const sofa::type::Vec3 & ; max, . const sofa::type::Vec3 & ; normal, . const SReal ; angle = 0 . ). ◆ SOFA_CLASS(). sofa::component::collision::geometry::CubeCollisionModel::SOFA_CLASS ; (; CubeCollisionModel ; , . sofa::core::CollisionModel ;  . ). ◆ updateCube(). void sofa::component::collision::geometry::CubeCollisionModel::updateCube ; (; sofa::Index ; index). ◆ updateCubes(). void sofa::component::collision::geometry::CubeCollisionModel::updateCubes ; (; ). Related details. ◆ Cube. friend class Cube. friend . sofacomponentcollisiongeometryCubeCollisionModel; Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:10385,Integrability,depend,dependent,10385,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:20516,Integrability,message,messages,20516,"*help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Cube;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:756,Modifiability,inherit,inherited,756,"﻿. SOFA API: sofa::component::collision::geometry::CubeCollisionModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::CubeCollisionModel Class Reference . #include <CubeModel.h>. Inheritance diagram for sofa::component::collision::geometry::CubeCollisionModel:. [legend]. Classes; struct  CubeData;  ; class  CubeSortPredicate;  . Protected Attributes; sofa::type::vector< CubeData > elems;  ; sofa::type::vector< sofa::Index > parentOf;  Given the index of a child leaf element, store the index of the parent cube. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:2454,Modifiability,inherit,inherited,2454,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CubeCollisionModel, sofa::core::CollisionModel);  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void setParentOf (sofa::Index childIndex, const sofa::type::Vec3 &min, const sofa::type::Vec3 &max);  ; void setParentOf (sofa::Index childIndex, const sofa::type::Vec3 &min, const sofa::type::Vec3 &max, const sofa::type::Vec3 &normal, const SReal angle=0);  ; void setLeafCube (sofa::Index cubeIndex, sofa::Index childIndex);  ; void setLeafCube (sofa::Index cubeIndex, s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:2708,Modifiability,inherit,inherited,2708,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CubeCollisionModel, sofa::core::CollisionModel);  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void setParentOf (sofa::Index childIndex, const sofa::type::Vec3 &min, const sofa::type::Vec3 &max);  ; void setParentOf (sofa::Index childIndex, const sofa::type::Vec3 &min, const sofa::type::Vec3 &max, const sofa::type::Vec3 &normal, const SReal angle=0);  ; void setLeafCube (sofa::Index cubeIndex, sofa::Index childIndex);  ; void setLeafCube (sofa::Index cubeIndex, s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:5052,Modifiability,inherit,inherited,5052,"Data (sofa::Index index) const;  ; void computeBoundingTree (int maxDepth=0) override;  ; std::pair< core::CollisionElementIterator, core::CollisionElementIterator > getInternalChildren (sofa::Index index) const override;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; std::pair< core::CollisionElementIterator, core::CollisionElementIterator > getExternalChildren (sofa::Index index) const override;  Return the list (as a pair of iterators) of external children of an element. More...;  ; bool isLeaf (sofa::Index index) const override;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; sofa::Index addCube (Cube subcellsBegin, Cube subcellsEnd);  ; void updateCube (sofa::Index index);  ; void updateCubes ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hiera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:10096,Modifiability,inherit,inherited,10096,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:11662,Modifiability,variab,variables,11662,"ring getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:11772,Modifiability,variab,variables,11772,"ent time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:11814,Modifiability,variab,variables,11814,"ent time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:12059,Modifiability,inherit,inherited,12059,"t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:18243,Modifiability,inherit,inherited,18243,"e a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CubeCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:18415,Modifiability,inherit,inherited,18415,"More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CubeCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:19138,Modifiability,inherit,inherited,19138,"from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Cube;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:19893,Modifiability,inherit,inherited,19893,"track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Cube;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:20101,Modifiability,inherit,inherited,20101,"core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Cube;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:20267,Modifiability,inherit,inherited,20267,"dOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Cube;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr creat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:21099,Modifiability,inherit,inherited,21099," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ elems. sofa::type::vector<CubeData> sofa::component::collision::geometry::CubeCollisionModel::elems. protected . ◆ parentOf. sofa::type::vector<sofa::Index> sofa::component::collision::geometry::CubeCollisionModel::parentOf. protected . Given the index of a child leaf element, store the index of the parent cube. . Constructor details. ◆ CubeCollisionModel(). sofa::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:21499,Modifiability,inherit,inherited,21499,"::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ elems. sofa::type::vector<CubeData> sofa::component::collision::geometry::CubeCollisionModel::elems. protected . ◆ parentOf. sofa::type::vector<sofa::Index> sofa::component::collision::geometry::CubeCollisionModel::parentOf. protected . Given the index of a child leaf element, store the index of the parent cube. . Constructor details. ◆ CubeCollisionModel(). sofa::component::collision::geometry::CubeCollisionModel::CubeCollisionModel ; (; ). protected . Function details. ◆ addCube(). Index sofa::component::collision::geometry::CubeCollisionModel::addCube ; (; Cube ; subcellsBegin, . Cube ; subcellsEnd . ). ◆ computeBoundingTree(). void sofa::component::collision::geometry::CubeCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Here we make up the hierarchy (a tree) of bounding boxes which contain final CollisionElements l",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:22862,Modifiability,inherit,inherit,22862," sofa::component::collision::geometry::CubeCollisionModel::parentOf. protected . Given the index of a child leaf element, store the index of the parent cube. . Constructor details. ◆ CubeCollisionModel(). sofa::component::collision::geometry::CubeCollisionModel::CubeCollisionModel ; (; ). protected . Function details. ◆ addCube(). Index sofa::component::collision::geometry::CubeCollisionModel::addCube ; (; Cube ; subcellsBegin, . Cube ; subcellsEnd . ). ◆ computeBoundingTree(). void sofa::component::collision::geometry::CubeCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Here we make up the hierarchy (a tree) of bounding boxes which contain final CollisionElements like Spheres or Triangles. The leafs of the tree contain final CollisionElements. This hierarchy is made up from the top to the bottom, i.e., we begin to compute a bounding box containing all CollisionElements, then we divide this big bounding box into two boxes. These new two boxes inherit from the root box and have depth 1. Then we can do the same operation for the new boxes. The division is done only if the box contains more than 4 final CollisionElements and if the depth doesn't exceed the max depth. The division is made along an axis. This axis corresponds to the biggest dimension of the current bounding box. Note : a bounding box is a Cube here. ; Implements sofa::core::CollisionModel. ◆ draw(). void sofa::component::collision::geometry::CubeCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBoundingTree(). void sofa::component::collision::geometry::CubeCollisionModel::getBoundingTree ; (; sofa::type::vector< std::pair< sofa::type::Vec3, sofa::type::Vec3 > > & ; bounding). inline . ◆ getCubeData(). const CubeData& sofa::component::collision::geometry::CubeCollisionModel::getCubeData ; (; sofa::Index ; index); const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:10466,Performance,load,loader,10466,"tact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:24855,Performance,optimiz,optimize,24855,"air< core::CollisionElementIterator, core::CollisionElementIterator > sofa::component::collision::geometry::CubeCollisionModel::getExternalChildren ; (; sofa::Index ; ); const. overridevirtual . Return the list (as a pair of iterators) of external children of an element. ; External children are child elements of a different type than their parent (often corresponding to the final elements).; Default to empty (i.e. two identical iterators) ; Reimplemented from sofa::core::CollisionModel. ◆ getInternalChildren(). std::pair< core::CollisionElementIterator, core::CollisionElementIterator > sofa::component::collision::geometry::CubeCollisionModel::getInternalChildren ; (; sofa::Index ; ); const. overridevirtual . Return the list (as a pair of iterators) of internal children of an element. ; Internal children are child elements of the same type as their parent (often corresponding to non-final elements). This distinction is used to optimize the intersection tests inside the hierarchy, as internal children can be processed without dynamically retrieving a new intersection method.; Default to empty (i.e. two identical iterators) ; Reimplemented from sofa::core::CollisionModel. ◆ getLeafEndIndex(). sofa::Index sofa::component::collision::geometry::CubeCollisionModel::getLeafEndIndex ; (; sofa::Index ; index); const. inline . ◆ getLeafIndex(). sofa::Index sofa::component::collision::geometry::CubeCollisionModel::getLeafIndex ; (; sofa::Index ; index); const. inline . ◆ getNumberCells(). sofa::Size sofa::component::collision::geometry::CubeCollisionModel::getNumberCells ; (; ); const. inline . ◆ isLeaf(). bool sofa::component::collision::geometry::CubeCollisionModel::isLeaf ; (; sofa::Index ; ); const. overridevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented from sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:14077,Testability,log,logging,14077," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:14150,Testability,log,logging,14150," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:14192,Testability,log,logging,14192," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:14262,Testability,log,logging,14262," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:14373,Testability,log,logging,14373," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:14415,Testability,log,logging,14415," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:16239,Testability,log,logErrors,16239,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:24881,Testability,test,tests,24881,"air< core::CollisionElementIterator, core::CollisionElementIterator > sofa::component::collision::geometry::CubeCollisionModel::getExternalChildren ; (; sofa::Index ; ); const. overridevirtual . Return the list (as a pair of iterators) of external children of an element. ; External children are child elements of a different type than their parent (often corresponding to the final elements).; Default to empty (i.e. two identical iterators) ; Reimplemented from sofa::core::CollisionModel. ◆ getInternalChildren(). std::pair< core::CollisionElementIterator, core::CollisionElementIterator > sofa::component::collision::geometry::CubeCollisionModel::getInternalChildren ; (; sofa::Index ; ); const. overridevirtual . Return the list (as a pair of iterators) of internal children of an element. ; Internal children are child elements of the same type as their parent (often corresponding to non-final elements). This distinction is used to optimize the intersection tests inside the hierarchy, as internal children can be processed without dynamically retrieving a new intersection method.; Default to empty (i.e. two identical iterators) ; Reimplemented from sofa::core::CollisionModel. ◆ getLeafEndIndex(). sofa::Index sofa::component::collision::geometry::CubeCollisionModel::getLeafEndIndex ; (; sofa::Index ; index); const. inline . ◆ getLeafIndex(). sofa::Index sofa::component::collision::geometry::CubeCollisionModel::getLeafIndex ; (; sofa::Index ; index); const. inline . ◆ getNumberCells(). sofa::Size sofa::component::collision::geometry::CubeCollisionModel::getNumberCells ; (; ); const. inline . ◆ isLeaf(). bool sofa::component::collision::geometry::CubeCollisionModel::isLeaf ; (; sofa::Index ; ); const. overridevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented from sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:14458,Usability,clear,clearLoggedMessages,14458," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_sort_predicate-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::CubeCollisionModel::CubeSortPredicate Member List . This is the complete list of members for sofa::component::collision::geometry::CubeCollisionModel::CubeSortPredicate, including all inherited members. CubeSortPredicate(int axis)sofa::component::collision::geometry::CubeCollisionModel::CubeSortPredicateinline; operator()(const CubeData &c1, const CubeData &c2) constsofa::component::collision::geometry::CubeCollisionModel::CubeSortPredicateinline. Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_sort_predicate-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_sort_predicate-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:17505,Deployability,update,updateInternal,17505,"eObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TCylinder< DataTypes > classsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >friend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecAxisCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeHeights()sofa::component::col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:17558,Deployability,update,updateLinks,17558,"::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TCylinder< DataTypes > classsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >friend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecAxisCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeHeights()sofa::component::collision::geometry::CylinderCollisionModel< TDataType",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:320,Modifiability,inherit,inherited,320,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes > Member List . This is the complete list of members for sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; axis(sofa::Index index) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionM",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:16320,Performance,load,loader,16320,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroups(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TCylinder< DataTypes > classsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >friend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:897,Testability,log,logging,897," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; axis(sofa::Index index) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionM",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:3531,Testability,log,logging,3531,"tr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; CylinderCollisionModel()sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >protected; CylinderCollisionModel(core::behavior::MechanicalState< DataTypes > *mstate)sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_cylinder_heightssofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; d_cylinder_local_axessofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; d_cylinder_radiisofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; d_default_heightsofa::component::collision::geometry::CylinderCollisionModel< TDataTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:3573,Testability,log,logging,3573,"objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; CylinderCollisionModel()sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >protected; CylinderCollisionModel(core::behavior::MechanicalState< DataTypes > *mstate)sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_cylinder_heightssofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; d_cylinder_local_axessofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; d_cylinder_radiisofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; d_default_heightsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; d_default_local_axissofa::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:8257,Testability,log,logging,8257,re::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() con,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:8299,Testability,log,logging,8299,ofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtu,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:17575,Testability,log,logErrors,17575,"ic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TCylinder< DataTypes > classsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >friend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecAxisCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeHeights()sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; writeLocalA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:2724,Usability,clear,clearLoggedMessages,2724,"Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; center(sofa::Index i) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:5102,Availability,down,down,5102,"el, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *vparams, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Real radius (sofa::Index index) const;  ; const Coord & center (sofa::Index i) const;  ; Coord axis (sofa::Index index) const;  ; Coord local_axis (sofa::Index index) const;  ; const sofa::type::Quat< SReal > orientation (sofa::Index index) const;  ; Real height (sofa::Index index) const;  ; Coord point1 (sofa::Index i) const;  ; Coord poin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:10002,Availability,avail,available,10002,"ecks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ();  Return the first (i.e. root) CollisionModel in the hierarchy. More...;  ; CollisionModel * getLast ();  Return the last (i.e. leaf) CollisionModel in the hierarchy. More...;  ; template<class DerivedModel > ; DerivedModel * createPrevious ();  Helper method to get or create the previous model in the hierarchy. More...;  ; virtual sofa::core::topology::BaseMeshTopology * getCollisionTopology ();  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; const float * getColor4f ();  Get a color that can be used to display this CollisionModel. More...;  ; void setColor4f (const float *c);  Set a color that can be used to display this CollisionModel. More...;  ; void setProximity (const SReal a);  Set of differents parameters. More...;  ; void setContactResponse (const std::string &a);  ; int getEnumType () const;  ; void SetUserData (void *pUserData);  Set user data. More...;  ; void * GetUserData ();  Get user data. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; SReal getProximity () const;  Get distance to the actual (visual) surface. More...;  ; SReal getContactStiffness (Index) const;  Get contact stiffness. More...;  ; void setContactStiffness (SReal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:25985,Availability,down,down,25985,"f this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ height(). template<class DataTypes > . CylinderCollisionModel< DataTypes >::Real sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::height ; (; sofa::Index ; index); const. ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ local_axis(). template<class DataTypes > . CylinderCollisionModel< DataTypes >::Coord sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::local_axis ; (; sofa::Index ; index); const. ◆ orientation(). template<class DataTypes > . const sofa::type::Quat< SReal > sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::orientation ; (; sofa::Index ; index); const. ◆ point1(). template<class DataTypes > . CylinderCollisionModel< DataTypes >::Coord sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::point1 ; (; sofa::Index ; i); const. ◆ point2(). template<class DataTypes > . CylinderCollisionModel< DataTypes >::Coord sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::point2 ; (; sofa::Index ; i); const. ◆ radius(). template<class DataTypes > . CylinderCollisionModel< DataTypes >::Real sofa::compone",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:5274,Deployability,update,update,5274,"tmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *vparams, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Real radius (sofa::Index index) const;  ; const Coord & center (sofa::Index i) const;  ; Coord axis (sofa::Index index) const;  ; Coord local_axis (sofa::Index index) const;  ; const sofa::type::Quat< SReal > orientation (sofa::Index index) const;  ; Real height (sofa::Index index) const;  ; Coord point1 (sofa::Index i) const;  ; Coord point2 (sofa::Index i) const;  ; Real defaultRadius () const;  ; const Coord & velocity (sofa::Index index) const;  ; Data< VecReal > & writeRadii ();  ; Data< VecReal > & writeHeights ();  ; Data< VecAxisCoord > & writeLocalAxes ();  ;  Public Member Functions",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:8458,Deployability,update,update,8458,"ous (CollisionModel::SPtr val);  Set the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; virtual bool isActive () const;  Return true if this CollisionModel should be used for collisions. More...;  ; virtual void setActive (bool val=true);  Set true if this CollisionModel should be used for collisions. More...;  ; virtual bool isMoving () const;  Return true if this CollisionModel is changing position between iterations. More...;  ; virtual void setMoving (bool val=true);  Set true if this CollisionModel is changing position between iterations. More...;  ; virtual bool isSimulated () const;  Return true if this CollisionModel is attached to a simulation. It is false for immobile or procedurally animated objects that don't use contact forces. More...;  ; virtual void setSimulated (bool val=true);  Set true if this CollisionModel is attached to a simulation. More...;  ; virtual void computeContinuousBoundingTree (SReal, int maxDepth=0);  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren (Index) const;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren (Index) const;  Return the list (as a pair of iterators) of external children of an element. More...;  ; virtual bool isLeaf (Index) const;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:13223,Deployability,update,updateInternal,13223,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:17718,Deployability,update,updateLinks,17718,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:20165,Deployability,update,update,20165,"all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CylinderCollisionModel ();  ;  CylinderCollisionModel (core::behavior::MechanicalState< DataTypes > *mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:24480,Deployability,update,update,24480,"DataTypes > . sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::CylinderCollisionModel. protected . ◆ CylinderCollisionModel() [2/2]. template<class DataTypes > . sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::CylinderCollisionModel ; (; core::behavior::MechanicalState< DataTypes > * ; mstate). protected . Function details. ◆ axis(). template<class DataTypes > . CylinderCollisionModel< DataTypes >::Coord sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::axis ; (; sofa::Index ; index); const. ◆ center(). template<class DataTypes > . const CylinderCollisionModel< DataTypes >::Coord & sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::center ; (; sofa::Index ; i); const. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ defaultRadius(). template<class DataTypes > . CylinderCollisionModel< DataTypes >::Real sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::defaultRadius. ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::CylinderCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::CylinderCollis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:1873,Integrability,message,messages,1873," each cylinder. More...;  ; Data< VecReal > d_cylinder_heights;  The cylinder heights. More...;  ; Data< VecAxisCoord > d_cylinder_local_axes;  ; Data< Real > d_default_radius;  The default radius. More...;  ; Data< Real > d_default_height;  The default height. More...;  ; Data< Coord > d_default_local_axis;  The default local axis cylinder is modeled around. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * m_mstate;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:12009,Integrability,depend,dependent,12009,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:1250,Modifiability,inherit,inherited,1250,"a::component::collision::geometry::CylinderCollisionModel< TDataTypes > Class Template Reference . #include <CylinderModel.h>. Inheritance diagram for sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; CylinderModel templated by RigidTypes (frames), direction is given by Y direction of the frame. . Public Attributes; Data< VecReal > d_cylinder_radii;  Radius of each cylinder. More...;  ; Data< VecReal > d_cylinder_heights;  The cylinder heights. More...;  ; Data< VecAxisCoord > d_cylinder_local_axes;  ; Data< Real > d_default_radius;  The default radius. More...;  ; Data< Real > d_default_height;  The default height. More...;  ; Data< Coord > d_default_local_axis;  The default local axis cylinder is modeled around. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1}",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:1458,Modifiability,inherit,inherited,1458,"ylinderCollisionModel< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; CylinderModel templated by RigidTypes (frames), direction is given by Y direction of the frame. . Public Attributes; Data< VecReal > d_cylinder_radii;  Radius of each cylinder. More...;  ; Data< VecReal > d_cylinder_heights;  The cylinder heights. More...;  ; Data< VecAxisCoord > d_cylinder_local_axes;  ; Data< Real > d_default_radius;  The default radius. More...;  ; Data< Real > d_default_height;  The default height. More...;  ; Data< Coord > d_default_local_axis;  The default local axis cylinder is modeled around. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * m_mstate;  ;  Protected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:1624,Modifiability,inherit,inherited,1624,"del templated by RigidTypes (frames), direction is given by Y direction of the frame. . Public Attributes; Data< VecReal > d_cylinder_radii;  Radius of each cylinder. More...;  ; Data< VecReal > d_cylinder_heights;  The cylinder heights. More...;  ; Data< VecAxisCoord > d_cylinder_local_axes;  ; Data< Real > d_default_radius;  The default radius. More...;  ; Data< Real > d_default_height;  The default height. More...;  ; Data< Coord > d_default_local_axis;  The default local axis cylinder is modeled around. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * m_mstate;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:2528,Modifiability,inherit,inherited,2528,"ents, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * m_mstate;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; Singl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:4226,Modifiability,inherit,inherited,4226,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *vparams, sofa::Index index) override;  Render an collision el",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:4480,Modifiability,inherit,inherited,4480,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *vparams, sofa::Index index) override;  Render an collision el",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:6260,Modifiability,inherit,inherited,6260,"ation method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *vparams, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Real radius (sofa::Index index) const;  ; const Coord & center (sofa::Index i) const;  ; Coord axis (sofa::Index index) const;  ; Coord local_axis (sofa::Index index) const;  ; const sofa::type::Quat< SReal > orientation (sofa::Index index) const;  ; Real height (sofa::Index index) const;  ; Coord point1 (sofa::Index i) const;  ; Coord point2 (sofa::Index i) const;  ; Real defaultRadius () const;  ; const Coord & velocity (sofa::Index index) const;  ; Data< VecReal > & writeRadii ();  ; Data< VecReal > & writeHeights ();  ; Data< VecAxisCoord > & writeLocalAxes ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:11720,Modifiability,inherit,inherited,11720,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:13159,Modifiability,variab,variables,13159,"ase * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:13269,Modifiability,variab,variables,13269,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:13311,Modifiability,variab,variables,13311,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:13556,Modifiability,inherit,inherited,13556,"le an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:19827,Modifiability,inherit,inherited,19827,"BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CylinderCollisionModel ();  ;  CylinderCollisionModel (core::behavior::MechanicalState< DataTypes > *mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:19999,Modifiability,inherit,inherited,19999,"all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CylinderCollisionModel ();  ;  CylinderCollisionModel (core::behavior::MechanicalState< DataTypes > *mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:20722,Modifiability,inherit,inherited,20722,"from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TCylinder< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:21508,Modifiability,inherit,inherited,21508,"r ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TCylinder< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_cylinder_heights. template<class TDataTypes > . Data<VecReal> sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::d_cylinder_heights. The cylinder heights. . ◆ d_cylinder_local_axes. template<class TDataTypes > . Data<VecAxisCoord> sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::d_cylinder_local_axes. ◆ d_cylinder_radii. template<class TDataTypes > . Data<VecReal> sofa::component::collision::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:21908,Modifiability,inherit,inherited,21908,".;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TCylinder< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_cylinder_heights. template<class TDataTypes > . Data<VecReal> sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::d_cylinder_heights. The cylinder heights. . ◆ d_cylinder_local_axes. template<class TDataTypes > . Data<VecAxisCoord> sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::d_cylinder_local_axes. ◆ d_cylinder_radii. template<class TDataTypes > . Data<VecReal> sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::d_cylinder_radii. Radius of each cylinder. . ◆ d_default_height. template<class TDataTypes > . Data<Real> sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::d_default_height. The default height. . ◆ d_default_local_axis. template<class TDataTypes > . Data<Coord> sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >::d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:12090,Performance,load,loader,12090,"tact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:15574,Testability,log,logging,15574," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:15647,Testability,log,logging,15647," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:15689,Testability,log,logging,15689," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:15759,Testability,log,logging,15759," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:15870,Testability,log,logging,15870," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:15912,Testability,log,logging,15912," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:17736,Testability,log,logErrors,17736,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html:15955,Usability,clear,clearLoggedMessages,15955," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:18015,Deployability,update,updateFromTopology,18015,"esofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TLine< DataTypes > classsofa::component::collision::geometry::LineCollisionModel< TDataTypes >friend; topologysofa::component::collision::geometry::LineCollisionModel< TDataTypes >protected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::LineCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::LineCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:18123,Deployability,update,updateInternal,18123,"onModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TLine< DataTypes > classsofa::component::collision::geometry::LineCollisionModel< TDataTypes >friend; topologysofa::component::collision::geometry::LineCollisionModel< TDataTypes >protected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::LineCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::LineCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:18176,Deployability,update,updateLinks,18176,"onModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TLine< DataTypes > classsofa::component::collision::geometry::LineCollisionModel< TDataTypes >friend; topologysofa::component::collision::geometry::LineCollisionModel< TDataTypes >protected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::LineCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::LineCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:312,Modifiability,inherit,inherited,312,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::LineCollisionModel< TDataTypes > Member List . This is the complete list of members for sofa::component::collision::geometry::LineCollisionModel< TDataTypes >, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bothSidesofa::component::collision::geometry::LineCollisionModel< TDataTypes >; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::Collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:16757,Performance,load,loader,16757,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroups(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TLine< DataTypes > classsofa::component::collision::geometry::LineCollisionModel< TDataTypes >friend; topologysofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:889,Testability,log,logging,889," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bothSidesofa::component::collision::geometry::LineCollisionModel< TDataTypes >; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::Collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:3783,Testability,log,logging,3783,"fa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_displayFreePositionsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::LineCollisionMo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:3825,Testability,log,logging,3825,"; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_displayFreePositionsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; sofa::core::Coll",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:8611,Testability,log,logging,8611,constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElemEdgeIndex(sofa::Index index) constsofa::component::collision::geometry::LineCollisionModel< TDataTypes >inlinevirtual; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLineFlags(sofa::Index i)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::LineCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const f,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:8653,Testability,log,logging,8653,initionSourceFilePos() constsofa::core::objectmodel::Base; getElemEdgeIndex(sofa::Index index) constsofa::component::collision::geometry::LineCollisionModel< TDataTypes >inlinevirtual; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLineFlags(sofa::Index i)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::LineCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:18193,Testability,log,logErrors,18193,"onModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TLine< DataTypes > classsofa::component::collision::geometry::LineCollisionModel< TDataTypes >friend; topologysofa::component::collision::geometry::LineCollisionModel< TDataTypes >protected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::LineCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::LineCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:2884,Usability,clear,clearLoggedMessages,2884,"nit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; creat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:5279,Availability,down,down,5279,"odel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void handleTopologyChange () override;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv velocity (sofa::Index index) const;  ; virtual sofa::Index getElemEdgeInde",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:6466,Availability,avail,available,6466,"ate the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void handleTopologyChange () override;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv velocity (sofa::Index index) const;  ; virtual sofa::Index getElemEdgeIndex (sofa::Index index) const;  ; int getLineFlags (sofa::Index i);  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:26973,Availability,avail,available,26973," void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ draw(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getElemEdgeIndex(). template<class TDataTypes > . virtual sofa::Index sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getElemEdgeIndex ; (; sofa::Index ; index); const. inlinevirtual . ◆ getLineFlags(). template<class DataTypes > . int sofa::component::collision::geometry::LineCollisionModel< DataTypes >::getLineFlags ; (; sofa::Index ; i). ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ handleTopologyChange(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::handleTopologyChange. overridevirtual . Handle topological Changes ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionMod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:28093,Availability,down,down,28093,"e<class TDataTypes > . virtual sofa::Index sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getElemEdgeIndex ; (; sofa::Index ; index); const. inlinevirtual . ◆ getLineFlags(). template<class DataTypes > . int sofa::component::collision::geometry::LineCollisionModel< DataTypes >::getLineFlags ; (; sofa::Index ; i). ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ handleTopologyChange(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::handleTopologyChange. overridevirtual . Handle topological Changes ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(LineCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::updateFromTopology. protectedvirtual . ◆ velocity(). template<class DataTypes > . LineCollisionModel< DataTypes >::Deriv sofa::component::collision::geometry::LineCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Enum details. ◆ LineFlag. template<class TDataTypes ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:5451,Deployability,update,update,5451,"bjectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void handleTopologyChange () override;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv velocity (sofa::Index index) const;  ; virtual sofa::Index getElemEdgeIndex (sofa::Index index) const;  ; int getLineFlags (sofa::Index i);  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:5584,Deployability,update,update,5584,"t, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void handleTopologyChange () override;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv velocity (sofa::Index index) const;  ; virtual sofa::Index getElemEdgeIndex (sofa::Index index) const;  ; int getLineFlags (sofa::Index i);  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ;  Public Member",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:13005,Deployability,update,updateInternal,13005,"nst BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:17500,Deployability,update,updateLinks,17500,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:20286,Deployability,update,updateFromTopology,20286,"late<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; virtual void updateFromTopology ();  ;  LineCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:20705,Deployability,update,update,20705,"g);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; virtual void updateFromTopology ();  ;  LineCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:25819,Deployability,update,update,25819,"ls can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ draw(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:26137,Deployability,update,update,26137," inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ draw(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getElemEdgeIndex(). template<class TDataTypes > . virtual sofa::Index sofa::component::collision::geometry::LineCollisionModel< TDataTypes >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:28639,Deployability,update,updateFromTopology,28639,"eTopologyChange(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::handleTopologyChange. overridevirtual . Handle topological Changes ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(LineCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::updateFromTopology. protectedvirtual . ◆ velocity(). template<class DataTypes > . LineCollisionModel< DataTypes >::Deriv sofa::component::collision::geometry::LineCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Enum details. ◆ LineFlag. template<class TDataTypes > . enum sofa::component::collision::geometry::LineCollisionModel::LineFlag. EnumeratorFLAG_P1 Point 1 is attached to this line. . FLAG_P2 Point 2 is attached to this line. . FLAG_BP1 Point 1 is attached to this line and is a boundary. . FLAG_BP2 Point 2 is attached to this line and is a boundary. . FLAG_POINTS ; FLAG_BPOINTS . Related details. ◆ TLine< DataTypes >. template<class TDataTypes > . friend class TLine< DataTypes >. friend . sofacomponentcollisiongeometryLineCollisionModel; Generated on Mon Nov 11 2024 02:23:57 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:28766,Deployability,update,updateFromTopology,28766,"eTopologyChange(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::handleTopologyChange. overridevirtual . Handle topological Changes ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(LineCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::updateFromTopology. protectedvirtual . ◆ velocity(). template<class DataTypes > . LineCollisionModel< DataTypes >::Deriv sofa::component::collision::geometry::LineCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Enum details. ◆ LineFlag. template<class TDataTypes > . enum sofa::component::collision::geometry::LineCollisionModel::LineFlag. EnumeratorFLAG_P1 Point 1 is attached to this line. . FLAG_P2 Point 2 is attached to this line. . FLAG_BP1 Point 1 is attached to this line and is a boundary. . FLAG_BP2 Point 2 is attached to this line and is a boundary. . FLAG_POINTS ; FLAG_BPOINTS . Related details. ◆ TLine< DataTypes >. template<class TDataTypes > . friend class TLine< DataTypes >. friend . sofacomponentcollisiongeometryLineCollisionModel; Generated on Mon Nov 11 2024 02:23:57 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:994,Energy Efficiency,green,green,994,"﻿. SOFA API: sofa::component::collision::geometry::LineCollisionModel< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::LineCollisionModel< TDataTypes > Class Template Reference . #include <LineModel.h>. Inheritance diagram for sofa::component::collision::geometry::LineCollisionModel< TDataTypes >:. [legend]. Classes; struct  LineData;  . Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the line model (when surface normals are defined on these lines) More...;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< LineCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:22618,Energy Efficiency,green,green,22618,"nst char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TLine< DataTypes >;  . Attribute details. ◆ bothSide. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::bothSide. ◆ d_bothSide. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::d_bothSide. activate collision on both side of the line model (when surface normals are defined on these lines) . ◆ d_displayFreePosition. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::d_displayFreePosition. Display Collision Model Points free position(in green) . ◆ elems. template<class TDataTypes > . sofa::type::vector<LineData> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::elems. protected . ◆ l_topology. template<class TDataTypes > . SingleLink<LineCollisionModel<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::l_topology. Link to be set to the topology container in the component graph. . ◆ m_displayFreePosition. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::m_displayFreePosition. ◆ meshRevision. template<class TDataTypes > . int sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::meshRevision. protected . ◆ mpoints. template<class TDataTypes > . PointCollisionModel<sofa::defaulttype::Vec3Types>* sofa::component::collision::geometry::LineCollis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:1883,Integrability,message,messages,1883,"medData< bool > m_displayFreePosition;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< LineCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< LineData > elems;  ; bool needsUpdate;  ; core::behavior::MechanicalState< DataTypes > * mstate;  ; Topology * topology;  ; PointCollisionModel< sofa::defaulttype::Vec3Types > * mpoints;  ; int meshRevision;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:11832,Integrability,depend,dependent,11832,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topolog",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:1260,Modifiability,inherit,inherited,1260,"ds |; List of all members . sofa::component::collision::geometry::LineCollisionModel< TDataTypes > Class Template Reference . #include <LineModel.h>. Inheritance diagram for sofa::component::collision::geometry::LineCollisionModel< TDataTypes >:. [legend]. Classes; struct  LineData;  . Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the line model (when surface normals are defined on these lines) More...;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< LineCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1}",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:1468,Modifiability,inherit,inherited,1468,":collision::geometry::LineCollisionModel< TDataTypes >:. [legend]. Classes; struct  LineData;  . Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the line model (when surface normals are defined on these lines) More...;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< LineCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< LineData > elems;  ; bool needsUpdate;  ; core::be",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:1634,Modifiability,inherit,inherited,1634,"othSide;  activate collision on both side of the line model (when surface normals are defined on these lines) More...;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< LineCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< LineData > elems;  ; bool needsUpdate;  ; core::behavior::MechanicalState< DataTypes > * mstate;  ; Topology * topology;  ; PointCollisionModel< sofa::defaulttype::Vec3Types > * mpoints;  ; int meshRevision;  ;  Protected Attributes inherite",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:2709,Modifiability,inherit,inherited,2709,":core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< LineData > elems;  ; bool needsUpdate;  ; core::behavior::MechanicalState< DataTypes > * mstate;  ; Topology * topology;  ; PointCollisionModel< sofa::defaulttype::Vec3Types > * mpoints;  ; int meshRevision;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_nu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:4407,Modifiability,inherit,inherited,4407,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:4661,Modifiability,inherit,inherited,4661,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:6595,Modifiability,inherit,inherited,6595,"e given timestep. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void handleTopologyChange () override;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv velocity (sofa::Index index) const;  ; virtual sofa::Index getElemEdgeIndex (sofa::Index index) const;  ; int getLineFlags (sofa::Index i);  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; Colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:11611,Modifiability,inherit,inherited,11611,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topolog",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:12941,Modifiability,variab,variables,12941,"d::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:13051,Modifiability,variab,variables,13051,"nst BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:13093,Modifiability,variab,variables,13093,"nst BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:13338,Modifiability,inherit,inherited,13338,"virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:19648,Modifiability,inherit,inherited,19648,"ddLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; virtual void updateFromTopology ();  ;  LineCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:20048,Modifiability,inherit,inherited,20048,"st MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; virtual void updateFromTopology ();  ;  LineCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:20367,Modifiability,inherit,inherited,20367,"late<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; virtual void updateFromTopology ();  ;  LineCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:20539,Modifiability,inherit,inherited,20539,"g);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; virtual void updateFromTopology ();  ;  LineCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:21262,Modifiability,inherit,inherited,21262,"from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TLine< DataTypes >;  . Attribute details. ◆ bothSide. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::bothSide. ◆ d_bothSide. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::d_bothSide. activate collision on both side of the line model (when surface normals",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:11913,Performance,load,loader,11913,"ent. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:15356,Testability,log,logging,15356," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:15429,Testability,log,logging,15429," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:15471,Testability,log,logging,15471," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:15541,Testability,log,logging,15541," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:15652,Testability,log,logging,15652," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:15694,Testability,log,logging,15694," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:17518,Testability,log,logErrors,17518,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:24677,Testability,test,tests,24677,". template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::mstate. protected . ◆ needsUpdate. template<class TDataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::needsUpdate. protected . ◆ topology. template<class TDataTypes > . Topology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::topology. protected . Constructor details. ◆ LineCollisionModel(). template<class DataTypes > . sofa::component::collision::geometry::LineCollisionModel< DataTypes >::LineCollisionModel. protected . Function details. ◆ canCollideWithElement(). template<class DataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< DataTypes >::canCollideWithElement ; (; sofa::Index ; , . CollisionModel * ; , . sofa::Index ;  . ). overridevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<cla",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:24806,Testability,test,test,24806,"ataTypes >::mstate. protected . ◆ needsUpdate. template<class TDataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::needsUpdate. protected . ◆ topology. template<class TDataTypes > . Topology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::topology. protected . Constructor details. ◆ LineCollisionModel(). template<class DataTypes > . sofa::component::collision::geometry::LineCollisionModel< DataTypes >::LineCollisionModel. protected . Function details. ◆ canCollideWithElement(). template<class DataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< DataTypes >::canCollideWithElement ; (; sofa::Index ; , . CollisionModel * ; , . sofa::Index ;  . ). overridevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:15737,Usability,clear,clearLoggedMessages,15737," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:17114,Deployability,update,updateInternal,17114,"nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; TPoint< DataTypes > classsofa::component::collision::geometry::PointCollisionModel< TDataTypes >friend; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecIndex typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:17167,Deployability,update,updateLinks,17167,":objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; TPoint< DataTypes > classsofa::component::collision::geometry::PointCollisionModel< TDataTypes >friend; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecIndex typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:17237,Deployability,update,updateNormals,17237,"; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; TPoint< DataTypes > classsofa::component::collision::geometry::PointCollisionModel< TDataTypes >friend; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecIndex typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::Collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:314,Modifiability,inherit,inherited,314,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::PointCollisionModel< TDataTypes > Member List . This is the complete list of members for sofa::component::collision::geometry::PointCollisionModel< TDataTypes >, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bothSidesofa::component::collision::geometry::PointCollisionModel< TDataTypes >; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::Collis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:15941,Performance,load,loader,15941,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroups(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; TPoint< DataTypes > classsofa::component::collision::geometry::PointColl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:891,Testability,log,logging,891," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bothSidesofa::component::collision::geometry::PointCollisionModel< TDataTypes >; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::Collis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:3888,Testability,log,logging,3888,"arLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::PointCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; d_displayFreePositionsofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:3930,Testability,log,logging,3930,"model::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::PointCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; d_displayFreePositionsofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:8000,Testability,log,logging,8000,re::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNormal(sofa::Index index)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:8042,Testability,log,logging,8042,ofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNormal(sofa::Index index)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() c,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:17184,Testability,log,logErrors,17184,"seinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; TPoint< DataTypes > classsofa::component::collision::geometry::PointCollisionModel< TDataTypes >friend; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecIndex typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:2889,Usability,clear,clearLoggedMessages,2889,"t() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Me",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:5292,Availability,down,down,5292,"del, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Der",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:6606,Availability,avail,available,6606,"or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv getNormal (sofa::Index index);  ; const Deriv & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void updateNormals ();  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; Collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:27088,Availability,avail,available,27088,"). ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ getNormal(). template<class TDataTypes > . Deriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getNormal ; (; sofa::Index ; index). inline . ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:27755,Availability,down,down,27755,". ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ getNormal(). template<class TDataTypes > . Deriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getNormal ; (; sofa::Index ; index). inline . ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PointCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateNormals(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::updateNormals. ◆ velocity(). template<class DataTypes > . const DataTypes::Deriv & sofa::component::collision::geometry::PointCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Related details. ◆ TPoint< DataTypes >. template<class TDataTypes > . friend class TPoint<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:5464,Deployability,update,update,5464,"jectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv getNormal (sofa::Index index);  ; const Deriv & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void updateNormals ();  ; sofa::core::topology::BaseMeshTopology * getCollisionTopolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:5597,Deployability,update,update,5597,", BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv getNormal (sofa::Index index);  ; const Deriv & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void updateNormals ();  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:6369,Deployability,update,updateNormals,6369,".;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv getNormal (sofa::Index index);  ; const Deriv & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void updateNormals ();  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. Mor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:13000,Deployability,update,updateInternal,13000,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:17495,Deployability,update,updateLinks,17495,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:20662,Deployability,update,update,20662,"objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PointCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:25636,Deployability,update,update,25636,"can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:25955,Deployability,update,update,25955,"linestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:28304,Deployability,update,updateNormals,28304,"PointCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ getNormal(). template<class TDataTypes > . Deriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getNormal ; (; sofa::Index ; index). inline . ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PointCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateNormals(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::updateNormals. ◆ velocity(). template<class DataTypes > . const DataTypes::Deriv & sofa::component::collision::geometry::PointCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Related details. ◆ TPoint< DataTypes >. template<class TDataTypes > . friend class TPoint< DataTypes >. friend . sofacomponentcollisiongeometryPointCollisionModel; Generated on Mon Nov 11 2024 02:23:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:28427,Deployability,update,updateNormals,28427,"PointCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ getNormal(). template<class TDataTypes > . Deriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::getNormal ; (; sofa::Index ; index). inline . ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PointCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateNormals(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::updateNormals. ◆ velocity(). template<class DataTypes > . const DataTypes::Deriv & sofa::component::collision::geometry::PointCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Related details. ◆ TPoint< DataTypes >. template<class TDataTypes > . friend class TPoint< DataTypes >. friend . sofacomponentcollisiongeometryPointCollisionModel; Generated on Mon Nov 11 2024 02:23:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:2451,Energy Efficiency,green,green,2451,"a< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; sofa::core::objectmodel::RenamedData< bool > computeNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_computeNormals;  activate computation of normal vectors (required for some collision detection algorithms) More...;  ; VecDeriv normals;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< PointCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitutio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:23041,Energy Efficiency,green,green,23041,"odel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::bothSide. ◆ computeNormals. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::computeNormals. protected . ◆ d_bothSide. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::d_bothSide. activate collision on both side of the point model (when surface normals are defined on these points) . ◆ d_computeNormals. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::d_computeNormals. protected . activate computation of normal vectors (required for some collision detection algorithms) . ◆ d_displayFreePosition. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::d_displayFreePosition. protected . Display Collision Model Points free position(in green) . ◆ l_topology. template<class TDataTypes > . SingleLink<PointCollisionModel<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::l_topology. protected . Link to be set to the topology container in the component graph. . ◆ m_displayFreePosition. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::m_displayFreePosition. protected . ◆ mstate. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::mstate. protected . ◆ normals. template<class TDataTypes > . VecDeriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::normals. protected . Constructor details. ◆ PointCollisionModel(). template<class DataTypes > . sofa::component::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:1445,Integrability,message,messages,1445,"ss Template Reference . #include <PointModel.h>. Inheritance diagram for sofa::component::collision::geometry::PointCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the point model (when surface normals are defined on these points) More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; sofa::core::objectmodel::RenamedData< bool > computeNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_computeNormals;  activate computation of normal vectors (required for some collision detection algorithms) More...;  ; VecDeriv normals;  ; Data< bool > d_displayFreePosition;  Display Collision Model Po",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:11786,Integrability,depend,dependent,11786,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void hand",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:822,Modifiability,inherit,inherited,822,"﻿. SOFA API: sofa::component::collision::geometry::PointCollisionModel< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::PointCollisionModel< TDataTypes > Class Template Reference . #include <PointModel.h>. Inheritance diagram for sofa::component::collision::geometry::PointCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the point model (when surface normals are defined on these points) More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Prote",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:1030,Modifiability,inherit,inherited,1030,"ss Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::PointCollisionModel< TDataTypes > Class Template Reference . #include <PointModel.h>. Inheritance diagram for sofa::component::collision::geometry::PointCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the point model (when surface normals are defined on these points) More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; sofa::core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:1196,Modifiability,inherit,inherited,1196,"Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::PointCollisionModel< TDataTypes > Class Template Reference . #include <PointModel.h>. Inheritance diagram for sofa::component::collision::geometry::PointCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the point model (when surface normals are defined on these points) More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; sofa::core::objectmodel::RenamedData< bool > computeNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_computeNormals;  activate computation of normal vecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:2721,Modifiability,inherit,inherited,2721,"g, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; sofa::core::objectmodel::RenamedData< bool > computeNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_computeNormals;  activate computation of normal vectors (required for some collision detection algorithms) More...;  ; VecDeriv normals;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< PointCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:4419,Modifiability,inherit,inherited,4419,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:4673,Modifiability,inherit,inherited,4673,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:6654,Modifiability,inherit,inherited,6654,"ex index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv getNormal (sofa::Index index);  ; const Deriv & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void updateNormals ();  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; CollisionModel * getPrevious ();  Return the p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:11565,Modifiability,inherit,inherited,11565,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void hand",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:12936,Modifiability,variab,variables,12936,"ase * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:13046,Modifiability,variab,variables,13046,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:13088,Modifiability,variab,variables,13088,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:13333,Modifiability,inherit,inherited,13333,"le an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:19643,Modifiability,inherit,inherited,19643,"ddLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PointCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:20043,Modifiability,inherit,inherited,20043,"st MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PointCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:20324,Modifiability,inherit,inherited,20324,"ink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PointCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:20496,Modifiability,inherit,inherited,20496,"objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PointCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:21219,Modifiability,inherit,inherited,21219,"from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TPoint< DataTypes >;  . Attribute details. ◆ bothSide. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::bothSide. ◆ computeNormals. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::computeNormals. protected . ◆ d_bothSide. te",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:11867,Performance,load,loader,11867,"ent. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:2311,Safety,detect,detection,2311,"ore...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; sofa::core::objectmodel::RenamedData< bool > computeNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_computeNormals;  activate computation of normal vectors (required for some collision detection algorithms) More...;  ; VecDeriv normals;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< PointCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:22795,Safety,detect,detection,22795,"const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TPoint< DataTypes >;  . Attribute details. ◆ bothSide. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::bothSide. ◆ computeNormals. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::computeNormals. protected . ◆ d_bothSide. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::d_bothSide. activate collision on both side of the point model (when surface normals are defined on these points) . ◆ d_computeNormals. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::d_computeNormals. protected . activate computation of normal vectors (required for some collision detection algorithms) . ◆ d_displayFreePosition. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::d_displayFreePosition. protected . Display Collision Model Points free position(in green) . ◆ l_topology. template<class TDataTypes > . SingleLink<PointCollisionModel<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::l_topology. protected . Link to be set to the topology container in the component graph. . ◆ m_displayFreePosition. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::m_displayFreePosition. protected . ◆ mstate. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::mstate. protec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:15351,Testability,log,logging,15351," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:15424,Testability,log,logging,15424," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:15466,Testability,log,logging,15466," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:15536,Testability,log,logging,15536," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:15647,Testability,log,logging,15647," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:15689,Testability,log,logging,15689," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:17513,Testability,log,logErrors,17513,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:24491,Testability,test,tests,24491,"ectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::m_displayFreePosition. protected . ◆ mstate. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::mstate. protected . ◆ normals. template<class TDataTypes > . VecDeriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::normals. protected . Constructor details. ◆ PointCollisionModel(). template<class DataTypes > . sofa::component::collision::geometry::PointCollisionModel< DataTypes >::PointCollisionModel. protected . Function details. ◆ canCollideWithElement(). template<class DataTypes > . bool sofa::component::collision::geometry::PointCollisionModel< DataTypes >::canCollideWithElement ; (; sofa::Index ; , . CollisionModel * ; , . sofa::Index ;  . ). overridevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:24620,Testability,test,test,24620,"◆ mstate. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::mstate. protected . ◆ normals. template<class TDataTypes > . VecDeriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::normals. protected . Constructor details. ◆ PointCollisionModel(). template<class DataTypes > . sofa::component::collision::geometry::PointCollisionModel< DataTypes >::PointCollisionModel. protected . Function details. ◆ canCollideWithElement(). template<class DataTypes > . bool sofa::component::collision::geometry::PointCollisionModel< DataTypes >::canCollideWithElement ; (; sofa::Index ; , . CollisionModel * ; , . sofa::Index ;  . ). overridevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:15732,Usability,clear,clearLoggedMessages,15732," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::Ray Member List . This is the complete list of members for sofa::component::collision::geometry::Ray, including all inherited members. BaseCollisionElementIterator(Index index=0)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(Index index, VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; canCollideWith(const TCollisionElementIterator< Model > &elem) constsofa::core::TCollisionElementIterator< RayCollisionModel >inline; direction() constsofa::component::collision::geometry::Ray; draw(const core::visual::VisualParams *vparams)sofa::core::TCollisionElementIterator< RayCollisionModel >inline; emptyVectorsofa::core::BaseCollisionElementIteratorprotectedstatic; getCollisionModel() constsofa::core::TCollisionElementIterator< RayCollisionModel >inline; getContactFriction() constsofa::core::TCollisionElementIterator< RayCollisionModel >inline; getContactStiffness() constsofa::core::TCollisionElementIterator< RayCollisionModel >inline; getExternalChildren() constsofa::core::TCollisionElementIterator< RayCollisionModel >; getIndex() constsofa::core::BaseCollisionElementIteratorinline; getInternalChildren() constsofa::core::TCollisionElementIterator< RayCollisionModel >; getProximity() constsofa::core::TCollisionElementIterator< RayCollisionModel >inline; getVIterator() constsofa::core::BaseCollisionElementIteratorinline; getVIteratorEnd() constsofa::core::BaseCollisionElementIteratorinline; indexsofa::core::BaseCollisionElementIteratorprotected; Index typedefsofa::core::BaseCollisionElementIterator; isActive(core::CollisionModel *cm=nullptr) constsofa::core::TCollisionElementIterator< RayCollisionModel >inline; isLeaf() constsofa::core::TCollisionElementIterator< RayCollisionModel ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html:737,Modifiability,inherit,inherited,737,"﻿. SOFA API: sofa::component::collision::geometry::Ray Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::geometry::Ray Class Reference . #include <RayModel.h>. Inheritance diagram for sofa::component::collision::geometry::Ray:. [legend]. Public Member Functions;  Ray (RayCollisionModel *model, int index);  ;  Ray (const core::CollisionElementIterator &i);  ; const type::Vec3 & origin () const;  ; const type::Vec3 & direction () const;  ; SReal l () const;  ; void setOrigin (const type::Vec3 &newOrigin);  ; void setDirection (const type::Vec3 &newDirection);  ; void setL (SReal newL);  ;  Public Member Functions inherited from sofa::core::TCollisionElementIterator< RayCollisionModel >;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, VIterator it, VIterator itend);  ; bool isActive (core::CollisionModel *cm=nullptr) const;  ; bool operator== (const TCollisionElementIterator< Model2 > &i) const;  ; bool operator!= (const TCollisionElementIterator< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (dampin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html:2112,Modifiability,inherit,inherited,2112,"< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (damping) coefficient. More...;  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::BaseCollisionElementIterator;  BaseCollisionElementIterator (Index index=0);  ;  BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html:3175,Modifiability,inherit,inherited,3175,"BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< RayCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Ray() [1/2]. sofa::component::collision::geometry::Ray::Ray ; (; RayCollisionModel * ; model, . int ; index . ). inline . ◆ Ray() [2/2]. sofa::component::collision::geometry::Ray::Ray ; (; const core::CollisionElementIterato",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html:3350,Modifiability,inherit,inherited,3350,"r to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< RayCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Ray() [1/2]. sofa::component::collision::geometry::Ray::Ray ; (; RayCollisionModel * ; model, . int ; index . ). inline . ◆ Ray() [2/2]. sofa::component::collision::geometry::Ray::Ray ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ direction(). const type::Vec3 & sofa::component::collision::geometry::Ray::direction ; (; ); const. ◆ l(). SReal sofa::component::coll",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html:3782,Modifiability,inherit,inherited,3782,"or () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< RayCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Ray() [1/2]. sofa::component::collision::geometry::Ray::Ray ; (; RayCollisionModel * ; model, . int ; index . ). inline . ◆ Ray() [2/2]. sofa::component::collision::geometry::Ray::Ray ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ direction(). const type::Vec3 & sofa::component::collision::geometry::Ray::direction ; (; ); const. ◆ l(). SReal sofa::component::collision::geometry::Ray::l ; (; ); const. ◆ origin(). const type::Vec3 & sofa::component::collision::geometry::Ray::origin ; (; ); const. ◆ setDirection(). void sofa::component::collision::geometry::Ray::setDirection ; (; const type::Vec3 & ; newDirection). inline . ◆ setL(). void sofa::component::collision::geometry::Ray::setL ; (; SReal ; newL). inline . ◆ setOrigin(). void sofa::component::collision::geometry::Ray::setOrigin ; (; const type::Vec3 & ; n",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:16490,Deployability,update,updateInternal,16490,"lision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(RayCollisionModel, core::CollisionModel)sofa::component::collision::geometry::RayCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:16543,Deployability,update,updateLinks,16543,"lision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(RayCollisionModel, core::CollisionModel)sofa::component::collision::geometry::RayCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::RayCollisionModel Member List . This is the complete list of members for sofa::component::collision::geometry::RayCollisionModel, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addContact(response::contact::BaseRayContact *contact)sofa::component::collision::geometry::RayCollisionModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addRay(const type::Vec3 &origin, const type::Vec3 &direction, SReal length)sofa::component::collision::geometry::RayCollisionModel; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTranslation(const double dx, const double dy, const double dz)sofa::component::collision::geometry::RayCollisionModel; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::Colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:15466,Performance,load,loader,15466,"ps(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbRay(int n)sofa::component::collision::geometry::RayCollisionModelinline; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(RayCollisionModel, core::CollisionModel)sofa::component::collision::geometry::RayCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:983,Testability,log,logging,983," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addContact(response::contact::BaseRayContact *contact)sofa::component::collision::geometry::RayCollisionModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addRay(const type::Vec3 &origin, const type::Vec3 &direction, SReal length)sofa::component::collision::geometry::RayCollisionModel; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTranslation(const double dx, const double dy, const double dz)sofa::component::collision::geometry::RayCollisionModel; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::Colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:3629,Testability,log,logging,3629,"ted; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth) overridesofa::component::collision::geometry::RayCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactssofa::component::collision::geometry::RayCollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_defaultLengthsofa::component::collision::geometry::RayCollisionModelprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::RayCollisionModel; defaultLengthsofa::component::collision::geometry::RayCollisionModelprotected; directionsofa::component::collision::geometry::RayCollisionModelprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Index index) overridesofa::component::collision::geometry::RayCollisionModelvirtual; draw(const core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:3671,Testability,log,logging,3671,", std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth) overridesofa::component::collision::geometry::RayCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactssofa::component::collision::geometry::RayCollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_defaultLengthsofa::component::collision::geometry::RayCollisionModelprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::RayCollisionModel; defaultLengthsofa::component::collision::geometry::RayCollisionModelprotected; directionsofa::component::collision::geometry::RayCollisionModelprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Index index) overridesofa::component::collision::geometry::RayCollisionModelvirtual; draw(const core::visual::VisualParams *vparams) overridesof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:7577,Testability,log,logging,7577,re::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::RayCollisionModelinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbRay() constsofa::component::collision::geometry::RayCollisionModelinline; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getRay(int index)sofa::component::collision::geometry::RayCollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel:,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:7619,Testability,log,logging,7619,ofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::RayCollisionModelinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbRay() constsofa::component::collision::geometry::RayCollisionModelinline; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getRay(int index)sofa::component::collision::geometry::RayCollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:16560,Testability,log,logErrors,16560,"lision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(RayCollisionModel, core::CollisionModel)sofa::component::collision::geometry::RayCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:2858,Usability,clear,clearLoggedMessages,2858,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth) overridesofa::component::collision::geometry::RayCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactssofa::component::collision::geometry::RayCollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:3432,Availability,down,down,3432,"nk< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RayCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ; int addRay (const type::Vec3 &origin, const type::Vec3 &direction, SReal length);  ; Ray getRay (int index);  ; int getNbRay () const;  ; void setNbRay (int n);  ; void applyTranslation (const double dx, const double dy, const double dz);  ; virtual void addContact (response::contact::BaseRayContact *contact);  ; virtual void removeContact (response::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:8241,Availability,avail,available,8241,"ecks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ();  Return the first (i.e. root) CollisionModel in the hierarchy. More...;  ; CollisionModel * getLast ();  Return the last (i.e. leaf) CollisionModel in the hierarchy. More...;  ; template<class DerivedModel > ; DerivedModel * createPrevious ();  Helper method to get or create the previous model in the hierarchy. More...;  ; virtual sofa::core::topology::BaseMeshTopology * getCollisionTopology ();  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; const float * getColor4f ();  Get a color that can be used to display this CollisionModel. More...;  ; void setColor4f (const float *c);  Set a color that can be used to display this CollisionModel. More...;  ; void setProximity (const SReal a);  Set of differents parameters. More...;  ; void setContactResponse (const std::string &a);  ; int getEnumType () const;  ; void SetUserData (void *pUserData);  Set user data. More...;  ; void * GetUserData ();  Get user data. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; SReal getProximity () const;  Get distance to the actual (visual) surface. More...;  ; SReal getContactStiffness (Index) const;  Get contact stiffness. More...;  ; void setContactStiffness (SReal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:24496,Availability,down,down,24496," * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. void sofa::component::collision::geometry::RayCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getContacts(). virtual const std::set<response::contact::BaseRayContact*>& sofa::component::collision::geometry::RayCollisionModel::getContacts ; (; ); const. inlinevirtual . ◆ getMechanicalState(). core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::RayCollisionModel::getMechanicalState ; (; ). inline . ◆ getNbRay(). int sofa::component::collision::geometry::RayCollisionModel::getNbRay ; (; ); const. inline . ◆ getRay(). Ray sofa::component::collision::geometry::RayCollisionModel::getRay ; (; int ; index). inline . ◆ init(). void sofa::component::collision::geometry::RayCollisionModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeContact(). virtual void sofa::component::collision::geometry::RayCollisionModel::removeContact ; (; response::contact::BaseRayContact * ; contact). inlinevirtual . ◆ resize(). void sofa::component::collision::geometry::RayCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ setNbRay(). void sofa::component::collision::geometry::RayCollisionModel::setNbRay ; (; int ; n). inline . ◆ SOFA_CLASS(). sofa::component::collision::geometry::RayCollisionModel::SOFA_CLASS ; (; RayCollisionModel ; , . core::CollisionModel ;  . ). Related details. ◆ Ray. friend class Ray. friend . sofacomponentcollisiongeometryRayCollisionModel; Generated on Mon Nov 11 2024 02:24:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:3602,Deployability,update,update,3602," inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RayCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ; int addRay (const type::Vec3 &origin, const type::Vec3 &direction, SReal length);  ; Ray getRay (int index);  ; int getNbRay () const;  ; void setNbRay (int n);  ; void applyTranslation (const double dx, const double dy, const double dz);  ; virtual void addContact (response::contact::BaseRayContact *contact);  ; virtual void removeContact (response::contact::BaseRayContact *contact);  ; virtual const std::set< response::contact::BaseRayContact * > & getContacts () const;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:6697,Deployability,update,update,6697,"ous (CollisionModel::SPtr val);  Set the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; virtual bool isActive () const;  Return true if this CollisionModel should be used for collisions. More...;  ; virtual void setActive (bool val=true);  Set true if this CollisionModel should be used for collisions. More...;  ; virtual bool isMoving () const;  Return true if this CollisionModel is changing position between iterations. More...;  ; virtual void setMoving (bool val=true);  Set true if this CollisionModel is changing position between iterations. More...;  ; virtual bool isSimulated () const;  Return true if this CollisionModel is attached to a simulation. It is false for immobile or procedurally animated objects that don't use contact forces. More...;  ; virtual void setSimulated (bool val=true);  Set true if this CollisionModel is attached to a simulation. More...;  ; virtual void computeContinuousBoundingTree (SReal, int maxDepth=0);  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren (Index) const;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren (Index) const;  Return the list (as a pair of iterators) of external children of an element. More...;  ; virtual bool isLeaf (Index) const;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:11462,Deployability,update,updateInternal,11462,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:15957,Deployability,update,updateLinks,15957,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:18337,Deployability,update,update,18337,"cData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RayCollisionModel (SReal defaultLength=1);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:23154,Deployability,update,update,23154,"state. core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::RayCollisionModel::mstate. protected . Constructor details. ◆ RayCollisionModel(). sofa::component::collision::geometry::RayCollisionModel::RayCollisionModel ; (; SReal ; defaultLength = 1). protected . Function details. ◆ addContact(). virtual void sofa::component::collision::geometry::RayCollisionModel::addContact ; (; response::contact::BaseRayContact * ; contact). inlinevirtual . ◆ addRay(). int sofa::component::collision::geometry::RayCollisionModel::addRay ; (; const type::Vec3 & ; origin, . const type::Vec3 & ; direction, . SReal ; length . ). ◆ applyTranslation(). void sofa::component::collision::geometry::RayCollisionModel::applyTranslation ; (; const double ; dx, . const double ; dy, . const double ; dz . ). ◆ computeBoundingTree(). void sofa::component::collision::geometry::RayCollisionModel::computeBoundingTree ; (; int ; maxDepth). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ draw() [1/2]. void sofa::component::collision::geometry::RayCollisionModel::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. void sofa::component::collision::geometry::RayCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getContacts(). virtual const std::set<response::contact::BaseRayContact*>& sofa::component::collision::geometry::RayCollisionModel::getContacts ; (; ); const. inlinevirtual . ◆ getMechanicalState(). core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::RayCollisionModel::getMechanicalState ; (; ). inline . ◆ getNbRay(). int sofa::component::collision::geometry::RayCollisionModel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:10248,Integrability,depend,dependent,10248,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:20271,Integrability,message,messages,20271," *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Ray;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:890,Modifiability,inherit,inherited,890,"﻿. SOFA API: sofa::component::collision::geometry::RayCollisionModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::RayCollisionModel Class Reference . #include <RayModel.h>. Inheritance diagram for sofa::component::collision::geometry::RayCollisionModel:. [legend]. Protected Attributes; sofa::type::vector< SReal > length;  ; sofa::type::vector< type::Vec3 > direction;  ; sofa::core::objectmodel::RenamedData< SReal > defaultLength;  ; Data< SReal > d_defaultLength;  The default length for all rays in this collision model. More...;  ; std::set< response::contact::BaseRayContact * > contacts;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * mstate;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:2588,Modifiability,inherit,inherited,2588,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RayCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:2842,Modifiability,inherit,inherited,2842,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RayCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:4499,Modifiability,inherit,inherited,4499,"lisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ; int addRay (const type::Vec3 &origin, const type::Vec3 &direction, SReal length);  ; Ray getRay (int index);  ; int getNbRay () const;  ; void setNbRay (int n);  ; void applyTranslation (const double dx, const double dy, const double dz);  ; virtual void addContact (response::contact::BaseRayContact *contact);  ; virtual void removeContact (response::contact::BaseRayContact *contact);  ; virtual const std::set< response::contact::BaseRayContact * > & getContacts () const;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:9959,Modifiability,inherit,inherited,9959,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:11398,Modifiability,variab,variables,11398,"ase * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:11508,Modifiability,variab,variables,11508,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:11550,Modifiability,variab,variables,11550,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:11795,Modifiability,inherit,inherited,11795,"le an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:17999,Modifiability,inherit,inherited,17999,"ield. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RayCollisionModel (SReal defaultLength=1);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:18171,Modifiability,inherit,inherited,18171,"cData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RayCollisionModel (SReal defaultLength=1);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:18894,Modifiability,inherit,inherited,18894,"from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Ray;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:19648,Modifiability,inherit,inherited,19648," track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Ray;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:19856,Modifiability,inherit,inherited,19856,":core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Ray;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:20022,Modifiability,inherit,inherited,20022,"adOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Ray;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr creat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:20854,Modifiability,inherit,inherited,20854," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. std::set<response::contact::BaseRayContact*> sofa::component::collision::geometry::RayCollisionModel::contacts. protected . ◆ d_defaultLength. Data<SReal> sofa::component::collision::geometry::RayCollisionModel::d_defaultLength. protected . The default length for all rays in this collision model. . ◆ defaultLength. sofa::core::objectmodel::RenamedData<SReal> s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:21254,Modifiability,inherit,inherited,21254,"::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. std::set<response::contact::BaseRayContact*> sofa::component::collision::geometry::RayCollisionModel::contacts. protected . ◆ d_defaultLength. Data<SReal> sofa::component::collision::geometry::RayCollisionModel::d_defaultLength. protected . The default length for all rays in this collision model. . ◆ defaultLength. sofa::core::objectmodel::RenamedData<SReal> sofa::component::collision::geometry::RayCollisionModel::defaultLength. protected . ◆ direction. sofa::type::vector<type::Vec3> sofa::component::collision::geometry::RayCollisionModel::direction. protected . ◆ length. sofa::type::vector<SReal> sofa::component::collision::geometry::RayCollisionModel::length. protected . ◆ mstate. core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::RayCollisionModel::mstate. protected . Constructor details. ◆ Ray",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:10329,Performance,load,loader,10329,"tact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:13813,Testability,log,logging,13813," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:13886,Testability,log,logging,13886," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:13928,Testability,log,logging,13928," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:13998,Testability,log,logging,13998," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:14109,Testability,log,logging,14109," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:14151,Testability,log,logging,14151," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:15975,Testability,log,logErrors,15975,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:14194,Usability,clear,clearLoggedMessages,14194," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:16981,Deployability,update,updateInternal,16981,"e::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SphereCollisionModel()sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SphereCollisionModel(core::behavior::MechanicalState< TDataTypes > *_mstate)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TSphere< DataTypes > classsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >friend; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:17034,Deployability,update,updateLinks,17034,"e::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SphereCollisionModel()sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SphereCollisionModel(core::behavior::MechanicalState< TDataTypes > *_mstate)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TSphere< DataTypes > classsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >friend; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::SphereCollisionModel< TDataTypes > Member List . This is the complete list of members for sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:15540,Performance,load,loader,15540,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroups(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SphereCollisionModel()sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SphereCollisionModel(core::behavior::MechanicalState< TDataTypes > *_mstate)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SPtr type",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:893,Testability,log,logging,893," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:3645,Testability,log,logging,3645,"ctmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_radiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_showImpostorssofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; doUpdateInternal",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:3687,Testability,log,logging,3687,"a::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_radiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_showImpostorssofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprote",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:7759,Testability,log,logging,7759,re::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getR() constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; getRadius(const sofa::Index i) constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; get,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:7801,Testability,log,logging,7801,ofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getR() constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; getRadius(const sofa::Index i) constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:17051,Testability,log,logErrors,17051,"e::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SphereCollisionModel()sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SphereCollisionModel(core::behavior::MechanicalState< TDataTypes > *_mstate)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TSphere< DataTypes > classsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >friend; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:2732,Usability,clear,clearLoggedMessages,2732,"CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:4972,Availability,down,down,4972,"del, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const VecReal & getR () const;  ; Real getRadius (const sofa::Index i) const;  ; const Coord & velocity (sofa::Index index) const;  ; void computeBBox (const core::Exe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:9515,Availability,avail,available,9515,"ecks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ();  Return the first (i.e. root) CollisionModel in the hierarchy. More...;  ; CollisionModel * getLast ();  Return the last (i.e. leaf) CollisionModel in the hierarchy. More...;  ; template<class DerivedModel > ; DerivedModel * createPrevious ();  Helper method to get or create the previous model in the hierarchy. More...;  ; virtual sofa::core::topology::BaseMeshTopology * getCollisionTopology ();  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; const float * getColor4f ();  Get a color that can be used to display this CollisionModel. More...;  ; void setColor4f (const float *c);  Set a color that can be used to display this CollisionModel. More...;  ; void setProximity (const SReal a);  Set of differents parameters. More...;  ; void setContactResponse (const std::string &a);  ; int getEnumType () const;  ; void SetUserData (void *pUserData);  Set user data. More...;  ; void * GetUserData ();  Get user data. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; SReal getProximity () const;  Get distance to the actual (visual) surface. More...;  ; SReal getContactStiffness (Index) const;  Get contact stiffness. More...;  ; void setContactStiffness (SReal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:26764,Availability,down,down,26764,"eometry::SphereCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getMechanicalState(). template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ getR(). template<class TDataTypes > . const VecReal& sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::getR ; (; ); const. inline . ◆ getRadius(). template<class DataTypes > . SphereCollisionModel< DataTypes >::Real sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::getRadius ; (; const sofa::Index ; i); const. ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(SphereCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ velocity(). template<class DataTypes > . const SphereCollisionModel< DataTypes >::Coord & sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Related details. ◆ TSphere< DataTypes >. template<class TDataTypes > . friend class TSphere< DataTypes >. friend . sofacomponentcollisiongeometrySphereCollisionModel; Generated on Mon Nov 11 2024 02:20:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:5144,Deployability,update,update,5144,"ectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const VecReal & getR () const;  ; Real getRadius (const sofa::Index i) const;  ; const Coord & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph cr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:5277,Deployability,update,update,5277," BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const VecReal & getR () const;  ; Real getRadius (const sofa::Index i) const;  ; const Coord & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSiz",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:12668,Deployability,update,updateInternal,12668,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:17163,Deployability,update,updateLinks,17163,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:20555,Deployability,update,update,20555,"ed from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SphereCollisionModel ();  ;  SphereCollisionModel (core::behavior::MechanicalState< TDataTypes > *_mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:24582,Deployability,update,update,24582,"Types > * ; _mstate). protected . Function details. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ; = false . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ create(). template<class TDataTypes > . template<class T > . static T::SPtr sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::create ; (; T * ; , . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:24902,Deployability,update,update,24902," . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ; = false . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ create(). template<class TDataTypes > . template<class T > . static T::SPtr sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::create ; (; T * ; , . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:1592,Integrability,message,messages,1592,">:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecReal > radius;  ; sofa::core::objectmodel::RenamedData< SReal > defaultRadius;  ; Data< VecReal > d_radius;  Radius of each sphere. More...;  ; Data< SReal > d_defaultRadius;  Default radius. More...;  ; Data< bool > d_showImpostors;  Draw spheres as impostors instead of ""real"" spheres. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; SingleLink< SphereCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:11454,Integrability,depend,dependent,11454,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void hand",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:969,Modifiability,inherit,inherited,969,"etry::SphereCollisionModel< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::SphereCollisionModel< TDataTypes > Class Template Reference . #include <SphereModel.h>. Inheritance diagram for sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecReal > radius;  ; sofa::core::objectmodel::RenamedData< SReal > defaultRadius;  ; Data< VecReal > d_radius;  Radius of each sphere. More...;  ; Data< SReal > d_defaultRadius;  Default radius. More...;  ; Data< bool > d_showImpostors;  Draw spheres as impostors instead of ""real"" spheres. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1}",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:1177,Modifiability,inherit,inherited,1177,"ic Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::SphereCollisionModel< TDataTypes > Class Template Reference . #include <SphereModel.h>. Inheritance diagram for sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecReal > radius;  ; sofa::core::objectmodel::RenamedData< SReal > defaultRadius;  ; Data< VecReal > d_radius;  Radius of each sphere. More...;  ; Data< SReal > d_defaultRadius;  Default radius. More...;  ; Data< bool > d_showImpostors;  Draw spheres as impostors instead of ""real"" spheres. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; SingleLink< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:1343,Modifiability,inherit,inherited,1343," > Class Template Reference . #include <SphereModel.h>. Inheritance diagram for sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecReal > radius;  ; sofa::core::objectmodel::RenamedData< SReal > defaultRadius;  ; Data< VecReal > d_radius;  Radius of each sphere. More...;  ; Data< SReal > d_defaultRadius;  Default radius. More...;  ; Data< bool > d_showImpostors;  Draw spheres as impostors instead of ""real"" spheres. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; SingleLink< SphereCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Protected Attributes inherited from sofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:2400,Modifiability,inherit,inherited,2400,"rom sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; SingleLink< SphereCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_numberOfCon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:4098,Modifiability,inherit,inherited,4098,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:4352,Modifiability,inherit,inherited,4352,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:5952,Modifiability,inherit,inherited,5952,"zation method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const VecReal & getR () const;  ; Real getRadius (const sofa::Index i) const;  ; const Coord & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * get",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:11233,Modifiability,inherit,inherited,11233,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void hand",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:12604,Modifiability,variab,variables,12604,"ase * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:12714,Modifiability,variab,variables,12714,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:12756,Modifiability,variab,variables,12756,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:13001,Modifiability,inherit,inherited,13001,"le an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:19452,Modifiability,inherit,inherited,19452,"*link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SphereCollisionModel ();  ;  SphereCollisionModel (core::behavior::MechanicalState< TDataTypes > *_mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Mem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:19852,Modifiability,inherit,inherited,19852,"st (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SphereCollisionModel ();  ;  SphereCollisionModel (core::behavior::MechanicalState< TDataTypes > *_mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to tr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:20217,Modifiability,inherit,inherited,20217,"Create (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SphereCollisionModel ();  ;  SphereCollisionModel (core::behavior::MechanicalState< TDataTypes > *_mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:20389,Modifiability,inherit,inherited,20389,"ed from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SphereCollisionModel ();  ;  SphereCollisionModel (core::behavior::MechanicalState< TDataTypes > *_mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:21112,Modifiability,inherit,inherited,21112,"from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TSphere< DataTypes >;  . Attribute details. ◆ d_defaultRadius. template<class TDataTypes > . Data< SReal > sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::d_defaultRadius. Default radius. . ◆ d_radius. template<class TDataTypes > . Data< VecReal > sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::d_radius. Radius of each sphere. . ◆ d_showImpostors. template<class TD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:11535,Performance,load,loader,11535,"ent. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:15019,Testability,log,logging,15019," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:15092,Testability,log,logging,15092," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:15134,Testability,log,logging,15134," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:15204,Testability,log,logging,15204," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:15315,Testability,log,logging,15315," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:15357,Testability,log,logging,15357," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:17181,Testability,log,logErrors,17181,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:15400,Usability,clear,clearLoggedMessages,15400," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::Tetrahedron Member List . This is the complete list of members for sofa::component::collision::geometry::Tetrahedron, including all inherited members. BaseCollisionElementIterator(Index index=0)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(Index index, VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; canCollideWith(const TCollisionElementIterator< Model > &elem) constsofa::core::TCollisionElementIterator< TetrahedronCollisionModel >inline; draw(const core::visual::VisualParams *vparams)sofa::core::TCollisionElementIterator< TetrahedronCollisionModel >inline; emptyVectorsofa::core::BaseCollisionElementIteratorprotectedstatic; getBary(const type::Vec3 &p) constsofa::component::collision::geometry::Tetrahedroninline; getCollisionModel() constsofa::core::TCollisionElementIterator< TetrahedronCollisionModel >inline; getContactFriction() constsofa::core::TCollisionElementIterator< TetrahedronCollisionModel >inline; getContactStiffness() constsofa::core::TCollisionElementIterator< TetrahedronCollisionModel >inline; getCoord(const type::Vec3 &b) constsofa::component::collision::geometry::Tetrahedroninline; getDBary(const type::Vec3 &v) constsofa::component::collision::geometry::Tetrahedroninline; getDCoord(const type::Vec3 &b) constsofa::component::collision::geometry::Tetrahedroninline; getExternalChildren() constsofa::core::TCollisionElementIterator< TetrahedronCollisionModel >; getIndex() constsofa::core::BaseCollisionElementIteratorinline; getInternalChildren() constsofa::core::TCollisionElementIterator< TetrahedronCollisionModel >; getProximity() constsofa::core::TCollisionElementIterator< TetrahedronCollisionModel >inline; getVIterator() constsofa::core::BaseCollisionEl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html:1326,Modifiability,inherit,inherited,1326,"geometry::Tetrahedron Class Reference . #include <TetrahedronModel.h>. Inheritance diagram for sofa::component::collision::geometry::Tetrahedron:. [legend]. Public Member Functions;  Tetrahedron (TetrahedronCollisionModel *model, Index index);  ;  Tetrahedron ();  ;  Tetrahedron (const core::CollisionElementIterator &i);  ; const type::Vec3 & p1 () const;  ; const type::Vec3 & p2 () const;  ; const type::Vec3 & p3 () const;  ; const type::Vec3 & p4 () const;  ; int p1Index () const;  ; int p2Index () const;  ; int p3Index () const;  ; int p4Index () const;  ; const type::Vec3 & p1Free () const;  ; const type::Vec3 & p2Free () const;  ; const type::Vec3 & p3Free () const;  ; const type::Vec3 & p4Free () const;  ; const type::Vec3 & v1 () const;  ; const type::Vec3 & v2 () const;  ; const type::Vec3 & v3 () const;  ; const type::Vec3 & v4 () const;  ; type::Vec3 getBary (const type::Vec3 &p) const;  ; type::Vec3 getDBary (const type::Vec3 &v) const;  ; type::Vec3 getCoord (const type::Vec3 &b) const;  ; type::Vec3 getDCoord (const type::Vec3 &b) const;  ;  Public Member Functions inherited from sofa::core::TCollisionElementIterator< TetrahedronCollisionModel >;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, VIterator it, VIterator itend);  ; bool isActive (core::CollisionModel *cm=nullptr) const;  ; bool operator== (const TCollisionElementIterator< Model2 > &i) const;  ; bool operator!= (const TCollisionElementIterator< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, Collision",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html:2709,Modifiability,inherit,inherited,2709,"< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (damping) coefficient. More...;  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::BaseCollisionElementIterator;  BaseCollisionElementIterator (Index index=0);  ;  BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html:3772,Modifiability,inherit,inherited,3772,"CollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< TetrahedronCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Tetrahedron() [1/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; TetrahedronCollisionModel * ; model, . Index ; index . ). inline . ◆ Tetrahedron() [2/3]. sofa::component::collision::geometry::Tet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html:3955,Modifiability,inherit,inherited,3955,"erence the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< TetrahedronCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Tetrahedron() [1/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; TetrahedronCollisionModel * ; model, . Index ; index . ). inline . ◆ Tetrahedron() [2/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; ). inline . ◆ Tetrahedron() [3/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; const core::CollisionElementIterator & ; i). inlineexpl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html:4387,Modifiability,inherit,inherited,4387,"nst;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< TetrahedronCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Tetrahedron() [1/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; TetrahedronCollisionModel * ; model, . Index ; index . ). inline . ◆ Tetrahedron() [2/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; ). inline . ◆ Tetrahedron() [3/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ getBary(). type::Vec3 sofa::component::collision::geometry::Tetrahedron::getBary ; (; const type::Vec3 & ; p); const. inline . ◆ getCoord(). type::Vec3 sofa::component::collision::geometry::Tetrahedron::getCoord ; (; const type::Vec3 & ; b); const. inline . ◆ getDBary(). type::Vec3 sofa::component::collision::geometry::Tetrahedron::getDBary ; (; const type::Vec3 & ; v); const. inline . ◆ getDCoord(). type::Vec3 sofa::componen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:16173,Deployability,update,updateFromTopology,16173,"nestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(TetrahedronCollisionModel, core::CollisionModel)sofa::component::collision::geometry::TetrahedronCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetrasofa::component::collision::geometry::TetrahedronCollisionModelprotected; Tetrahedron classsofa::component::collision::geometry::TetrahedronCollisionModelfriend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TetrahedronCollisionModel()sofa::component::collision::geometry::TetrahedronCollisionModelprotected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::TetrahedronCollisionModelprotectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:16274,Deployability,update,updateInternal,16274,"nestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(TetrahedronCollisionModel, core::CollisionModel)sofa::component::collision::geometry::TetrahedronCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetrasofa::component::collision::geometry::TetrahedronCollisionModelprotected; Tetrahedron classsofa::component::collision::geometry::TetrahedronCollisionModelfriend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TetrahedronCollisionModel()sofa::component::collision::geometry::TetrahedronCollisionModelprotected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::TetrahedronCollisionModelprotectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:16327,Deployability,update,updateLinks,16327,"nestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(TetrahedronCollisionModel, core::CollisionModel)sofa::component::collision::geometry::TetrahedronCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetrasofa::component::collision::geometry::TetrahedronCollisionModelprotected; Tetrahedron classsofa::component::collision::geometry::TetrahedronCollisionModelfriend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TetrahedronCollisionModel()sofa::component::collision::geometry::TetrahedronCollisionModelprotected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::TetrahedronCollisionModelprotectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::TetrahedronCollisionModel Member List . This is the complete list of members for sofa::component::collision::geometry::TetrahedronCollisionModel, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetraToDraw(const Tetrahedron &t, std::vector< sofa::type::Vec3 > &tetraVertices, std::vector< sofa::type::Vec3 > &normalVertices)sofa::component::collision::geometry::TetrahedronCollisionModelprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:14865,Performance,load,loader,14865,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroups(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(TetrahedronCollisionModel, core::CollisionModel)sofa::component::collision::geometry::TetrahedronCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetrasofa::component::collision::geometry::TetrahedronCollisionModelprotected; Tetrahedron classsofa::component::collision::geometry::TetrahedronCollisionModelfriend; TETRAHEDRON_TYPE enum valuesofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:875,Testability,log,logging,875," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetraToDraw(const Tetrahedron &t, std::vector< sofa::type::Vec3 > &tetraVertices, std::vector< sofa::type::Vec3 > &normalVertices)sofa::component::collision::geometry::TetrahedronCollisionModelprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:3486,Testability,log,logging,3486,"vesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::TetrahedronCollisionModel; Deriv typedefsofa::component::collision::geometry::TetrahedronCollisionModel; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Index index) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; Element typedefsofa::component",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:3528,Testability,log,logging,3528," bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::TetrahedronCollisionModel; Deriv typedefsofa::component::collision::geometry::TetrahedronCollisionModel; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Index index) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; Element typedefsofa::component::collision::geometry::TetrahedronCollisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:7299,Testability,log,logging,7299,re::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::TetrahedronCollisionModelinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:7341,Testability,log,logging,7341,ofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::TetrahedronCollisionModelinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:16344,Testability,log,logErrors,16344,"nestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(TetrahedronCollisionModel, core::CollisionModel)sofa::component::collision::geometry::TetrahedronCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetrasofa::component::collision::geometry::TetrahedronCollisionModelprotected; Tetrahedron classsofa::component::collision::geometry::TetrahedronCollisionModelfriend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; TetrahedronCollisionModel()sofa::component::collision::geometry::TetrahedronCollisionModelprotected; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateFromTopology()sofa::component::collision::geometry::TetrahedronCollisionModelprotectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TetrahedronCollisionModel; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:2701,Usability,clear,clearLoggedMessages,2701,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:4935,Availability,down,down,4935,"CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TetrahedronCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:9266,Availability,avail,available,9266,"ecks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ();  Return the first (i.e. root) CollisionModel in the hierarchy. More...;  ; CollisionModel * getLast ();  Return the last (i.e. leaf) CollisionModel in the hierarchy. More...;  ; template<class DerivedModel > ; DerivedModel * createPrevious ();  Helper method to get or create the previous model in the hierarchy. More...;  ; virtual sofa::core::topology::BaseMeshTopology * getCollisionTopology ();  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; const float * getColor4f ();  Get a color that can be used to display this CollisionModel. More...;  ; void setColor4f (const float *c);  Set a color that can be used to display this CollisionModel. More...;  ; void setProximity (const SReal a);  Set of differents parameters. More...;  ; void setContactResponse (const std::string &a);  ; int getEnumType () const;  ; void SetUserData (void *pUserData);  Set user data. More...;  ; void * GetUserData ();  Get user data. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; SReal getProximity () const;  Get distance to the actual (visual) surface. More...;  ; SReal getContactStiffness (Index) const;  Get contact stiffness. More...;  ; void setContactStiffness (SReal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:24121,Availability,down,down,24121," tetraVertices, . std::vector< sofa::type::Vec3 > & ; normalVertices . ). protected . ◆ computeBoundingTree(). void sofa::component::collision::geometry::TetrahedronCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ draw() [1/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getMechanicalState(). core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TetrahedronCollisionModel::getMechanicalState ; (; ). inline . ◆ init(). void sofa::component::collision::geometry::TetrahedronCollisionModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). void sofa::component::collision::geometry::TetrahedronCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). sofa::component::collision::geometry::TetrahedronCollisionModel::SOFA_CLASS ; (; TetrahedronCollisionModel ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). void sofa::component::collision::geometry::TetrahedronCollisionModel::updateFromTopology ; (; ). protectedvirtual . Related details. ◆ Tetrahedron. friend class Tetrahedron. friend . sofacomponentcollisiongeometryTetrahedronCollisionModel; Generated on Mon Nov 11 2024 02:24:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:5107,Deployability,update,update,5107,"d from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TetrahedronCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size g",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:7722,Deployability,update,update,7722,"ous (CollisionModel::SPtr val);  Set the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; virtual bool isActive () const;  Return true if this CollisionModel should be used for collisions. More...;  ; virtual void setActive (bool val=true);  Set true if this CollisionModel should be used for collisions. More...;  ; virtual bool isMoving () const;  Return true if this CollisionModel is changing position between iterations. More...;  ; virtual void setMoving (bool val=true);  Set true if this CollisionModel is changing position between iterations. More...;  ; virtual bool isSimulated () const;  Return true if this CollisionModel is attached to a simulation. It is false for immobile or procedurally animated objects that don't use contact forces. More...;  ; virtual void setSimulated (bool val=true);  Set true if this CollisionModel is attached to a simulation. More...;  ; virtual void computeContinuousBoundingTree (SReal, int maxDepth=0);  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren (Index) const;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren (Index) const;  Return the list (as a pair of iterators) of external children of an element. More...;  ; virtual bool isLeaf (Index) const;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:12487,Deployability,update,updateInternal,12487,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:16982,Deployability,update,updateLinks,16982,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:18996,Deployability,update,updateFromTopology,18996,"o a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TetrahedronCollisionModel ();  ; virtual void updateFromTopology ();  ; void addTetraToDraw (const Tetrahedron &t, std::vector< sofa::type::Vec3 > &tetraVertices, std::vector< sofa::type::Vec3 > &normalVertices);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inheri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:19532,Deployability,update,update,19532,"p containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TetrahedronCollisionModel ();  ; virtual void updateFromTopology ();  ; void addTetraToDraw (const Tetrahedron &t, std::vector< sofa::type::Vec3 > &tetraVertices, std::vector< sofa::type::Vec3 > &normalVertices);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:23140,Deployability,update,update,23140,"protected . internal revision number to check if topology has changed. . ◆ mstate. core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TetrahedronCollisionModel::mstate. protected . ◆ tetra. const sofa::core::topology::BaseMeshTopology::SeqTetrahedra* sofa::component::collision::geometry::TetrahedronCollisionModel::tetra. protected . Constructor details. ◆ TetrahedronCollisionModel(). sofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronCollisionModel ; (; ). protected . Function details. ◆ addTetraToDraw(). void sofa::component::collision::geometry::TetrahedronCollisionModel::addTetraToDraw ; (; const Tetrahedron & ; t, . std::vector< sofa::type::Vec3 > & ; tetraVertices, . std::vector< sofa::type::Vec3 > & ; normalVertices . ). protected . ◆ computeBoundingTree(). void sofa::component::collision::geometry::TetrahedronCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ draw() [1/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getMechanicalState(). core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TetrahedronCollisionModel::getMechanicalState ; (; ). inline . ◆ init(). void sofa::component::collision::geometry::TetrahedronCollisionModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:24561,Deployability,update,updateFromTopology,24561," tetraVertices, . std::vector< sofa::type::Vec3 > & ; normalVertices . ). protected . ◆ computeBoundingTree(). void sofa::component::collision::geometry::TetrahedronCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ draw() [1/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getMechanicalState(). core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TetrahedronCollisionModel::getMechanicalState ; (; ). inline . ◆ init(). void sofa::component::collision::geometry::TetrahedronCollisionModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). void sofa::component::collision::geometry::TetrahedronCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). sofa::component::collision::geometry::TetrahedronCollisionModel::SOFA_CLASS ; (; TetrahedronCollisionModel ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). void sofa::component::collision::geometry::TetrahedronCollisionModel::updateFromTopology ; (; ). protectedvirtual . Related details. ◆ Tetrahedron. friend class Tetrahedron. friend . sofacomponentcollisiongeometryTetrahedronCollisionModel; Generated on Mon Nov 11 2024 02:24:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:24653,Deployability,update,updateFromTopology,24653," tetraVertices, . std::vector< sofa::type::Vec3 > & ; normalVertices . ). protected . ◆ computeBoundingTree(). void sofa::component::collision::geometry::TetrahedronCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ draw() [1/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getMechanicalState(). core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TetrahedronCollisionModel::getMechanicalState ; (; ). inline . ◆ init(). void sofa::component::collision::geometry::TetrahedronCollisionModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). void sofa::component::collision::geometry::TetrahedronCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). sofa::component::collision::geometry::TetrahedronCollisionModel::SOFA_CLASS ; (; TetrahedronCollisionModel ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). void sofa::component::collision::geometry::TetrahedronCollisionModel::updateFromTopology ; (; ). protectedvirtual . Related details. ◆ Tetrahedron. friend class Tetrahedron. friend . sofacomponentcollisiongeometryTetrahedronCollisionModel; Generated on Mon Nov 11 2024 02:24:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:1447,Integrability,message,messages,1447,"ritance diagram for sofa::component::collision::geometry::TetrahedronCollisionModel:. [legend]. Classes; struct  TetrahedronInfo;  . Public Attributes; SingleLink< TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< TetrahedronInfo > elems;  ; const sofa::core::topology::BaseMeshTopology::SeqTetrahedra * tetra;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * mstate;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; int m_topologyRevision;  internal revision number to check if topology has changed. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Dat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:11273,Integrability,depend,dependent,11273,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:824,Modifiability,inherit,inherited,824,"﻿. SOFA API: sofa::component::collision::geometry::TetrahedronCollisionModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::TetrahedronCollisionModel Class Reference . #include <TetrahedronModel.h>. Inheritance diagram for sofa::component::collision::geometry::TetrahedronCollisionModel:. [legend]. Classes; struct  TetrahedronInfo;  . Public Attributes; SingleLink< TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Pro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:1032,Modifiability,inherit,inherited,1032,"ce. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::TetrahedronCollisionModel Class Reference . #include <TetrahedronModel.h>. Inheritance diagram for sofa::component::collision::geometry::TetrahedronCollisionModel:. [legend]. Classes; struct  TetrahedronInfo;  . Public Attributes; SingleLink< TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< TetrahedronInfo > elems;  ; const sofa::core::topo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:1198,Modifiability,inherit,inherited,1198," Friends |; List of all members . sofa::component::collision::geometry::TetrahedronCollisionModel Class Reference . #include <TetrahedronModel.h>. Inheritance diagram for sofa::component::collision::geometry::TetrahedronCollisionModel:. [legend]. Classes; struct  TetrahedronInfo;  . Public Attributes; SingleLink< TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< TetrahedronInfo > elems;  ; const sofa::core::topology::BaseMeshTopology::SeqTetrahedra * tetra;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * mstate;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; int m_topology",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:2385,Modifiability,inherit,inherited,2385," at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< TetrahedronInfo > elems;  ; const sofa::core::topology::BaseMeshTopology::SeqTetrahedra * tetra;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * mstate;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; int m_topologyRevision;  internal revision number to check if topology has changed. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:4083,Modifiability,inherit,inherited,4083,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TetrahedronCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:4337,Modifiability,inherit,inherited,4337,"sion elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > previous;  Pointer to the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; SingleLink< CollisionModel, CollisionModel, BaseLink::FLAG_DOUBLELINK > next;  Pointer to the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; int enum_type;  ; void * userData;  ; SingleLink< CollisionModel, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TetrahedronCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:5524,Modifiability,inherit,inherited,5524,"names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TetrahedronCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; Col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:10984,Modifiability,inherit,inherited,10984,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:12423,Modifiability,variab,variables,12423,"ase * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:12533,Modifiability,variab,variables,12533,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:12575,Modifiability,variab,variables,12575,"std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:12820,Modifiability,inherit,inherited,12820,"le an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:19194,Modifiability,inherit,inherited,19194,"o a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TetrahedronCollisionModel ();  ; virtual void updateFromTopology ();  ; void addTetraToDraw (const Tetrahedron &t, std::vector< sofa::type::Vec3 > &tetraVertices, std::vector< sofa::type::Vec3 > &normalVertices);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inheri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:19366,Modifiability,inherit,inherited,19366,"p containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TetrahedronCollisionModel ();  ; virtual void updateFromTopology ();  ; void addTetraToDraw (const Tetrahedron &t, std::vector< sofa::type::Vec3 > &tetraVertices, std::vector< sofa::type::Vec3 > &normalVertices);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:20089,Modifiability,inherit,inherited,20089,"from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Tetrahedron;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:20864,Modifiability,inherit,inherited,20864,"cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Tetrahedron;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ elems. sofa::type::vector<TetrahedronInfo> sofa::component::collision::geometry::TetrahedronCollisionModel::elems. protected . ◆ l_topology. SingleLink<TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::collision::geometry::TetrahedronCollisionModel::l_topology. Link to be set to the topology container in the component graph. . ◆ m_topology. sofa::core::topolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:21264,Modifiability,inherit,inherited,21264,"ta() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Tetrahedron;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ elems. sofa::type::vector<TetrahedronInfo> sofa::component::collision::geometry::TetrahedronCollisionModel::elems. protected . ◆ l_topology. SingleLink<TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::collision::geometry::TetrahedronCollisionModel::l_topology. Link to be set to the topology container in the component graph. . ◆ m_topology. sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::TetrahedronCollisionModel::m_topology. protected . ◆ m_topologyRevision. int sofa::component::collision::geometry::TetrahedronCollisionModel::m_topologyRevision. protected . internal revision number to check if topology has changed. . ◆ mstate. core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TetrahedronCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:11354,Performance,load,loader,11354,"tact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:14838,Testability,log,logging,14838," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:14911,Testability,log,logging,14911," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:14953,Testability,log,logging,14953," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:15023,Testability,log,logging,15023," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:15134,Testability,log,logging,15134," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:15176,Testability,log,logging,15176," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:17000,Testability,log,logErrors,17000,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:15219,Usability,clear,clearLoggedMessages,15219," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:19183,Deployability,update,updateFromTopology,19183,"ect)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(TriangleCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; TTriangle< DataTypes > classsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >friend; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:19295,Deployability,update,updateInternal,19295,"odel)sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; TTriangle< DataTypes > classsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >friend; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:19348,Deployability,update,updateLinks,19348,"ollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; TTriangle< DataTypes > classsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >friend; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:19418,Deployability,update,updateNormals,19418,"ofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; TTriangle< DataTypes > classsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >friend; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:320,Modifiability,inherit,inherited,320,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes > Member List . This is the complete list of members for sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:17791,Performance,load,loader,17791,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroups(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(TriangleCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:897,Testability,log,logging,897," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:3741,Testability,log,logging,3741,":BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:3783,Testability,log,logging,3783,":objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, sofa::Ind",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:9003,Testability,log,logging,9003,re::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; getMechanicalState() constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNormals() constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinl,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:9045,Testability,log,logging,9045,ofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; getMechanicalState() constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNormals() constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) con,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:19365,Testability,log,logErrors,19365,"DataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; TTriangle< DataTypes > classsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >friend; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModeli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:2820,Usability,clear,clearLoggedMessages,2820,"erridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:6199,Availability,down,down,6199,"el, sofa::core::objectmodel::BaseObject, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_collElemActiver;  Pointer to the Controller component heritating from CollisionElementActiver. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangleCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:7773,Availability,avail,available,7773,"rams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const core::behavior::MechanicalState< DataTypes > * getMechanicalState () const;  ; const VecCoord & getX () const;  ; const sofa::core::topology::BaseMeshTopology::SeqTriangles & getTriangles () const;  ; const VecDeriv & getNormals () const;  ; int getTriangleFlags (sofa::core::topology::BaseMeshTopology::TriangleID i);  ; Deriv velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; Collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:29433,Availability,avail,available,29433,"plemented from sofa::core::CollisionModel. ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState() [1/2]. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ getMechanicalState() [2/2]. template<class TDataTypes > . const core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getMechanicalState ; (; ); const. inline . ◆ getNormals(). template<class TDataTypes > . const VecDeriv& sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getNormals ; (; ); const. inline . ◆ getTriangleFlags(). template<class DataTypes > . int sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::getTriangleFlags ; (; sofa::core::topology::BaseMeshTopology::TriangleID ; i). ◆ getTriangles(). template<class TDataTypes > . const sofa::core::topology::BaseMeshTopology::SeqTrian",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html
