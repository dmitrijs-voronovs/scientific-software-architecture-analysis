quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0:478,error,error,478,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0,1,['error'],['error']
Deployability,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0:30,release,release,30,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0,1,['release'],['release']
Modifiability,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0:453,flexible,flexible,453,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0,1,['flexible'],['flexible']
Performance,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0:292,load,loaded,292,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0,1,['load'],['loaded']
Security,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0:676,hash,hash,676,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0,2,"['access', 'hash']","['accessible', 'hash']"
Usability,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0:84,simpl,simplifying,84,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0,1,['simpl'],['simplifying']
