quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"It is now possible to ON/OFF SofaPython3 since https://github.com/sofa-framework/SofaPython3/pull/62; So let's make it fetchable again in SOFA :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1574:693,failure,failures,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1574,2,['failure'],['failures']
Availability,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2141:759,failure,failures,759,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141,2,['failure'],['failures']
Availability,"It is preferable to force the `constexpr` context:. ```cpp; static constexpr ResolutionMethod NonsmoothNonlinearConjugateGradient(""NonsmoothNonlinearConjugateGradient"");; if (d_resolutionMethod.getValue() != NonsmoothNonlinearConjugateGradient); {; ```. The compiler may not choose to use `constexpr` in:. ```cpp; if (d_resolutionMethod.getValue() != ResolutionMethod(""NonsmoothNonlinearConjugateGradient"")); {; ```. Therefore, no `constexpr` check if `NonsmoothNonlinearConjugateGradient` is not in the list. There is a runtime check though. The type allows to deprecate a key if desired (I am thinking about the Data `method` in the FEM force fields). There is also a description of each key. And the whole list (key + description) can be added easily in the description of the Data, hence in the documentation. The major problem is about the GUI. More particularly, when a Data is read to be displayed in the GUI. Here, each of the `SelectableItem` is a new strong type. So there is no `DataTypeName`, `DataTypeInfo` etc for the new type. I tried to factorize with a common base class (`BaseSelectableItem`) but without success. I tried to define `DataTypeName`, `DataTypeInfo` etc for `SelectedItem` but without success. The consequence is that I cannot specialize a widget for this type of Data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5062:3796,failure,failures,3796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5062,2,['failure'],['failures']
Availability,"It is required in case of multiple inheritance of BaseObject in a BaseLinearSolver . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2799:629,failure,failures,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2799,2,['failure'],['failures']
Availability,"It is useful to be able to load shaders directly from a std::string as it allows us to not need filesystem management. Consequently ""fixed"" shaders like shadows (or normal rendering when OpenGL Core profile will come) will be directly integrated into the libs (no more share/shaders directory to locate/find/read). [needed to solve #142 ]. Checklist to merge this PR: ; - [x] succeed on each compilation setup on the CI ; - [x] does not generates new warnings or test failure ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] cleans stuff; - [x] have tests on the introduced features. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158:468,failure,failure,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158,1,['failure'],['failure']
Availability,"It is very useful to store and be able to retieve, for each object/node ; where it is implemented and where it was instanciated. This PR implements that. Having this allows to implement cool feature like in to jump from the selected object/node in scene graph straight in the scene file (python or xml) or to the implementation file (cpp or python). . We have such a feature in SofaQtQuick. We will backport this feature in a second PR soon. . The change in dmsg_* are a ""passager clandestin"" but a small one :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1012:769,failure,failures,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1012,2,['failure'],['failures']
Availability,"It is.; The error `File size mismatch` appears because in `WriteState_test::createScene` exported files ""particleGravityX.data"" and ""particleGravityY.data"" are different from reference files """"particleGravityX-reference.data"" and ""particleGravityY-reference.data"".; This is due to the change in MechanicalObject adding `std::scientific << std::setprecision(18)`.; Exported files should be like; ```; T= 0; X= 0 0 0; ...; ```; and are now like; ```; T= 0; X= 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00; ...; ```. Solution 1: regenerate the references located in `modules/SofaExporter/SofaExporter_test/files`.; Solution 2: revert MechanicalObject change.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/841#issuecomment-441711724:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/841#issuecomment-441711724,1,['error'],['error']
Availability,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2059:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059,2,['failure'],['failures']
Availability,"It makes no sense to have a drawSize set to zero by default given that the; drawing is activated by an additional drawPoints/drawBox boolean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3045:686,failure,failures,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3045,2,['failure'],['failures']
Availability,"It might not break anything, except if SReal == float. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2808:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2808,2,['failure'],['failures']
Availability,"It results in this structure:. ![image](https://user-images.githubusercontent.com/10572752/213701188-d0b43e3a-7123-4de5-a92f-be2f6ff3c8ce.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3598:688,failure,failures,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3598,2,['failure'],['failures']
Availability,"It seems it didn't need any fixing, there is a math error but compensated by a roundabout use of the CSC format.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191496072:52,error,error,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191496072,1,['error'],['error']
Availability,"It seems it introduced a big decrease in performance.; I suppose we should freeze/unfreeze periodically (every second or so) instead of doing it every time step. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2479:706,failure,failures,706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2479,2,['failure'],['failures']
Availability,"It seems msvc is quite (much!) less clever than gcc. 2 optimizations (only useful when not building in Release mode); - add and use a NOINIT RigidDeriv constructor (avoiding to init a deriv which is filled afterwards); - default ctor directly call the identity of its components (which is their default ctor by the way). and 1 ridiculous optimization; - avoid calling getPositionIntegrationFactor() in the nested loop; ; This optimization brings a whooping 30% speedup on my setup (VC2022, Release/LTO enabled); Test scene: 3instruments_collis.scn from BeamAdapter, 2000 iterations in batch mode; - before: 16.5669 s ( 120.723 FPS); - after: 12.829 s ( 155.897 FPS). GCC was doing the same by the way with or without these optims (and is faster than msvc, even in a VM 🤔). NOTE: do not forget to enable the LTO option for Windows when deploying, it brings full inlining & stuff and it is really useful for perf; (w/o LTO, before the optims it is 21.9883 s ( 90.9575 FPS) ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135:1518,failure,failures,1518,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135,2,['failure'],['failures']
Availability,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4264:709,failure,failures,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264,2,['failure'],['failures']
Availability,"It seems that `serr` was outputed as WARNING in the test and thus not making it fail. See pre-merge output [here](https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options/267/consoleText) and search for ""Vertex2Frame : no vertices or normals found...""; Replacing it with `msg_error` create a ""real"" error so the test fails.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331837341:299,error,error,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331837341,1,['error'],['error']
Availability,"It seems that the dependency of SofaPhysicsAPI to SceneCreator needs to be fixed.; `; SofaPhysicsSimulation.cpp:49:10: fatal error: '../plugins/SceneCreator/SceneCreator.h' file not found; #include ""../plugins/SceneCreator/SceneCreator.h""`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1109#issuecomment-514504731:125,error,error,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1109#issuecomment-514504731,1,['error'],['error']
Availability,"It seems that there was an error in the code of the SparseLDLSolver in the assembling of the constraint matrix.; I tried to see the execution of this function in the scene InextensiblePendulum.scn and it produced a wrong result at the first step (with the current master branch).; After this fix, it starts with a coherent behaviour but then it still fails. By submitting this pull request, I acknowledge that; I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco). Reviewers will merge this pull-request only if. it builds with SUCCESS for all platforms on the CI.; it does not generate new warnings.; it does not generate new unit test failures.; it does not generate new scene test failures.; it does not break API compatibility.; it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010,3,"['error', 'failure']","['error', 'failures']"
Availability,It seems to add one failure on SoftRobots @alxbilger,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4901#issuecomment-2276586436:20,failure,failure,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4901#issuecomment-2276586436,1,['failure'],['failure']
Availability,"It seems to be coming from a setup/system/configuration error than something related to SOFA itself, as the error is coming from the Windows SDK itself.; Which version of MS Visual Studio are you using ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410:56,error,error,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410,2,['error'],['error']
Availability,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4251:737,failure,failures,737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251,2,['failure'],['failures']
Availability,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1985:1048,failure,failures,1048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985,2,['failure'],['failures']
Availability,"It started from the case where SparseGrid could not open .OBJ files (because it is upper case 🐶 ); Now SparseGrid relies on the FactoryMesh mechanism for its extension management. BUT MeshOBJ is super deprecated, and the legacy helper::io::MeshLoader (not the one in sofa::core::loader) should be not used anymore.; BUT SparseGrid does not really handle src=""@loader"" syntax very well now, and it will be upgraded in the future. . I added some tests anyway 💛 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1231:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1231,2,['failure'],['failures']
Availability,"It was agreed that runSofa is on its dying...but I see so much people that still use it so here is a set of patches to may make their live easier. I tried to spend as few time as possible so it is not super clean. . This PR contains: ; 1) Extend the live coding support. Before this PR only python script controller where concerned. Now any xml, pyscn and other is concerned when runSofa is started with the -i option. This is very usefull to make live demonstration, explaining scenes to an audiance or practice on small scene. It has no impact on user that don't start runSofa without -i. . 2) Currently Object that have messages in their logs exhibits small signs (green/yellow/red). This PR extends this behavior to the Node so it is more consistant and easy to locate the messages. . 3) Adds an openInEditor function in the pop menu in the scene graph to open the current scene in an external editor (It is nothing but I use that all the time in qtcreator and I wanted the same in sofa). Enjoy/. CHANGELOG for @hugtalbot & @guparan :; - [runSofa] ; - when using runSofa with the -i option adds live coding support for xml & pyscn scenes.; - adds icons (green, red, yellow) on nodes when their is message (before only the object have the icons). ; - in the scene graph pop-up menu adds an entry that open the current scene into an external editor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337:1610,failure,failures,1610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337,2,['failure'],['failures']
Availability,"It was already marked deprecated but only in the documentation (comment).; It must be deprecated because it duplicates the functionality of two other visitors. It is clearer to call the two other visitors. In GenericConstraintSolver, `buildSystem_matrixAssembly` is divided into `parallelBuildSystem_matrixAssembly` and `sequentialBuildSystem_matrixAssembly` depending on the value of `d_multithreading`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3393:949,failure,failures,949,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393,2,['failure'],['failures']
Availability,"It was commented in CMakeLists.txt, so never compiled. * cylinder_TLEDTetraSolution.scn: must not be in SOFA examples because it contains CudaTetrahedronTLEDForceField. Deleted; * CudaTetrahedronTLEDForceField.scn: it mentioned meshes that are not in the repository. Therefore the content of cylinder_TLEDTetraSolution.scn has been taken instead. However, the simulation compared the TLED solution to a reference solution and they are not matching. The reference solution is removed. It may indicate a problem, or not... Note that there is no CPU version of this force field. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2865:1120,failure,failures,1120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2865,2,['failure'],['failures']
Availability,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1946:822,failure,failures,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946,2,['failure'],['failures']
Availability,"It was first signalled [here](https://www.sofa-framework.org/community/forum/topic/error-configure-sofa-in-cmake-gui-about-lpthreads/#post-11140). The compilation of the master branch fails with GCC v8.1, which is the default version in fedora 28. The compilation passed with GCC v.7.3 (default in fedora 27). I did not checked at which GCC version between those two this starts to happen. ```; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp: In instantiation of ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponseT(const sofa::core::MechanicalParams*, DataDeriv&) [with DataDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >; DataTypes = sofa::defaulttype::StdRigidTypes<3, double>]’:; /home/vm-fedora-28/sofa/SofaGeneral/../modules/SofaBoundaryCondition/FixedPlaneConstraint.inl:173:31: required from ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponse(const sofa::core::MechanicalParams*, sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv&) [with DataTypes = sofa::defaulttype::StdRigidTypes<3, double>; sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv = sofa::core::objectmodel::Data<sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > > >; typename DataTypes::VecDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >]’; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:58:44: required from here; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:74:100: internal compiler error: in type_dependent_expression_p, at cp/pt.c:25100; ed int > ::const_iterator it = this",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/673:83,error,error-configure-sofa-in-cmake-gui-about-lpthreads,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/673,1,['error'],['error-configure-sofa-in-cmake-gui-about-lpthreads']
Availability,"It was initially defined in the same files than DistanceMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3707:609,failure,failures,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3707,2,['failure'],['failures']
Availability,"It was not possible to compile runSofa without activating SofaGuiQt, because GuiDataRepository was instantiated in SofaGuiQt library.; As GuiDataRepository seems to be rather generic and not tied to Qt, GuiDataRepository has been moved to SofaGuiCommon ; and allows runSofa to be compiled without enabling SOFA_GUI_QT. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/599:575,failure,failures,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/599,2,['failure'],['failures']
Availability,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4350:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350,2,['failure'],['failures']
Availability,"It was pointed by @EulalieCoevoet that the callbacks update are only called when the modified data is accessed for reading. This has a consequence in the UX, when a data field value is changed in the inspector, the callback is only executed when data is accessed... but not when we click on the ""update"" or ""ok"" button. . It was thus suggested to trigger the callback by accessing the component state.; All other change are just cleaning and refactoring of the function. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3713:1017,failure,failures,1017,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3713,2,['failure'],['failures']
Availability,"It was reported that include_guard(GLOBAL) is problematic with third-party plugins so let's go back to the ""normal"" version. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1467:444,failure,failures,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1467,2,['failure'],['failures']
Availability,It worked. Note that test failures and crashes are not due to this PR :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780069074:26,failure,failures,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780069074,1,['failure'],['failures']
Availability,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2161:847,failure,failures,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161,2,['failure'],['failures']
Availability,"It would be better to have gtest as an external lib... but in the meantime before such a PR arrive here is a gtest update to the latest official version (1.10). . It contains nice features to make abstract tests (to validate an abstract class properties on all its implementation). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1705:828,failure,failures,828,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1705,2,['failure'],['failures']
Availability,"It's probably due to the version of CUDA. You can try to downgrade to cuda 11. But you can also upgrade SOFA (v23.12), as it is now compatible with CUDA 12.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902:57,down,downgrade,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902,1,['down'],['downgrade']
Availability,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2061:657,failure,failures,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061,2,['failure'],['failures']
Availability,"Just a minor fix, as the `VecXTypes` are not visible without the explicit namespace. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1188:341,failure,failures,341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1188,2,['failure'],['failures']
Availability,"Just a small observation: shouln't the error be printed by the gui instead of the simulation? Since the bbox is only useful when rendering the scene. Right now, it seems that launching a simulation in batch mode will output an error about the missing bbox. In fact, I guess the error should be printed by a camera since we could be writing our own gui, but I guess this could wait until we have a valid InteractiveCamera :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/524#issuecomment-346577878:39,error,error,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/524#issuecomment-346577878,3,['error'],['error']
Availability,Just adding a small helper function I'm using in [PR #33](https://github.com/sofa-framework/SofaPython3/pull/33). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1436:370,failure,failures,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1436,2,['failure'],['failures']
Availability,Just backporting small changes made on our dev branch... Plz merge quickly :D. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1169:335,failure,failures,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1169,2,['failure'],['failures']
Availability,"Just call getValue once and use the const ref afterwards. This is particularly showing for the function getIndex() which is called a lot of times (really a lot). Release mode (full optim), MSVC and scene from Components/topology/RegularGridTopology.scn:; before: `5000 iterations done in 22.5747 s ( 221.487 FPS).`; after : `5000 iterations done in 20.7355 s ( 241.132 FPS).`; so 10% speedup. But the optimization is more effective the more complex the mesh is; (I changed the mesh in the previous scene with a liver with 500K triangles and the speed up was like around 30%). In any case, it shows that `getValue()` is not really ""free"" and must be called only once if the value is needed more than one time, especially in the ""hot"" functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3348:1288,failure,failures,1288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348,2,['failure'],['failures']
Availability,"Just changing launcher.py to use the library SofaPython3 instead of SofaPython. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2968:624,failure,failures,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2968,2,['failure'],['failures']
Availability,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4325:891,failure,failures,891,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325,2,['failure'],['failures']
Availability,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4474:610,failure,failures,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474,2,['failure'],['failures']
Availability,"Just happened to compile without the Compat option, and these 3 files were still using compat files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2574:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2574,2,['failure'],['failures']
Availability,"Just my 2 cents, on macOS 10.14.5, Xcode 10.2.1 , Cmake 3.15.0 and Sofa sync with master, I don't have any error with the configuration.; **BUT** Cmake 3.15.0 wants to link the OpenGL framework from a non-existing /Applications/Xcode-beta.app (I dont have any beta version of XCode), and obviously breaks the make process.; So I suppose there are some bugs in the 3.15.0 version of cmake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931:107,error,error,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931,1,['error'],['error']
Availability,Just not 100% sure for LCPcalc.h and OglModelPolicy.h ; Else we should get back to original warning number. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1421:364,failure,failures,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1421,2,['failure'],['failures']
Availability,"Just observed an error that occurs, when contacts ""disengage"".; No collision -> number of contacts 0; Following collision -> number of contacts 25 (for example); No collision (the first step, after collisions ""disengage"") -> number of contacts 431914097 (or other giant number). Any ideas?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1678#issuecomment-748638560:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1678#issuecomment-748638560,1,['error'],['error']
Availability,"Just passing by, I do not want to raise a flame war but actuall asin method has some documentation,; espcially when it comes to domain error:; http://www.cplusplus.com/reference/cmath/asin/; Just quoting; . > If a domain error occurs:; > - And math_errhandling has MATH_ERRNO set: the global variable errno is set to EDOM.; > - And math_errhandling has MATH_ERREXCEPT set: FE_INVALID is raised. Then looking at ; http://www.cplusplus.com/reference/cmath/math_errhandling/; The default behavior for math_errhandling is MATH_ERRNO, so as the doc suggest you can just check for the errno (thread-local) global variable value, and if it is set to EDOM after asin is called, then you can throw whatever error message you want. This is probably not relevant here, since I presume the checks are there because in theory when a quaternion is normalized the value of ; `Real(2.)*(q[3]*q[1] - q[2]*q[0])` ; should always belong to the range [-1;1]. The only reason it might not be is for some numerical drifting issues (?); Provided this assumption is correct you are indeed totally allowed to clamp the values there.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343094942:135,error,error,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343094942,3,['error'],['error']
Availability,Just realized that the error this PR was supposed to fix is still there: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_default_amd64/767/warnings2Result/category.96784904/; The original change (exporting the defines and re-defining them in subprojects) did fix this error though.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/595#issuecomment-376212670:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/595#issuecomment-376212670,2,['error'],['error']
Availability,Just removing unnecessary headers include inside header in sofa::core; No forward class or intelligent refactoring. any suggestion/remark is welcomed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/638:409,failure,failures,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/638,2,['failure'],['failures']
Availability,"Just set all data defined by the loader as read-only since it makes no sense any user modifies them directly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1660:654,failure,failures,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1660,2,['failure'],['failures']
Availability,"Just some cleaning while debugging the gui. All code are under #ifdef never define. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4025:628,failure,failures,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4025,2,['failure'],['failures']
Availability,"Just to add a little bit to this, I remember having seg fault due to this mask while doing topological changes. I just looked very quickly to the mask source code, maybe the mask vector doesn't scale with the dof state when changes occurs?. In any way, keeping a mask vector activated and used automatically while it was not asked explicitly by the user doesn't seem to be very safe. Or maybe I'm missing something.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/532#issuecomment-347520800:56,fault,fault,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/532#issuecomment-347520800,5,"['fault', 'mask']","['fault', 'mask']"
Availability,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1835:571,failure,failures,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835,2,['failure'],['failures']
Availability,"Just to start identifying the first compilation errors on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5056:48,error,errors,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5056,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Just update the 3 examples for components: `WriteState`, `ReadState` and `CompareState` to be more useful. Here is the screenshot of CompareState.scn with in blue the simulated beam, in green the result of readState from a record of a heavier beam and in purple the drawing from `CompareState` showing distance between the simulated dof and the expected position from the state file. ![image](https://github.com/sofa-framework/sofa/assets/21199245/4164a242-4462-45fa-a366-e77ab11e0076). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4745:1031,failure,failures,1031,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4745,2,['failure'],['failures']
Availability,Just wanted to see how we could clean Quater. There is obviously a lot to do. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/842:336,failure,failures,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/842,2,['failure'],['failures']
Availability,"K version 10.0.19041.0 to target Windows 10.0.19043.; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; CMakeLists.txt:45 (cmake_dependent_option); This warning is for project developers. Use -Wno-dev to suppress it. -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: J:/GitHub/sofa/build/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:74 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). CMake Error at extlibs/CMakeLists.txt:28 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. CMake Error at extlibs/CMakeLists.txt:29 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. Using legacy headers is enabled.; Headers from v20.12 are usable, but it is advised to change your code to use the new headers introduced in v21.06.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") ; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: filesystem thread chrono atomic ; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin Sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:1085,Error,Error,1085,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['Error'],['Error']
Availability,Keep track of check/errors in Mat,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1856:20,error,errors,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1856,1,['error'],['errors']
Availability,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2187:430,error,error,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187,3,"['error', 'failure']","['error', 'failures']"
Availability,"Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2457,ERROR,ERROR,2457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2168:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168,2,['failure'],['failures']
Availability,"Last big one. #1527 . based on:; - #2790 . and needs :; - #2766 . Deprecates **_SofaBaseCollision_**, **_SofaMeshCollision_**, **_SofaGeneralMeshCollision_**, **_SofaObjectInteraction_**; Deprecates partially **_SofaConstraint_**, **_SofaUserInteraction_**. Split Collision-related components into 3 categories:; - ~~**Model**~~ **Geometry**: with all the collision models (sphere model, point model, triangle model....); - **Detection**: subdivided in 2 other categories: ; - **Algorithm**: narrow, broad phases implementation; - **Intersection**: how to compute intersections between models; - **Response**: subdivided in 2 other categories: ; - **Mapper**: how to map a contact between 2 objects (rigid, bary, etc); - **Contact**: how to handle a contact itself (create spring, constraint, etc). EDIT:; ~~[ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/239 ]~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2813:1427,failure,failures,1427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2813,2,['failure'],['failures']
Availability,Last but not least PR on SPH plugin to restore ParticleSink component.; - Move all code inside inl file; - Fix the extern template; - Add prefix d_ to data; - Fix global behavior; - Update the existing basic example scene ; - Add 2 others scenes using Topology changes and OglFluid rendering done in previous PR. ![ezgif com-crop](https://user-images.githubusercontent.com/21199245/67562701-8b063f00-f71f-11e9-9e0b-d72e2a0f347a.gif). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1195:690,failure,failures,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1195,2,['failure'],['failures']
Availability,"Last lifecycle before the release. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4760:581,failure,failures,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4760,2,['failure'],['failures']
Availability,"Last one in SofaGeneral !. A priori not breaking. Usual cleaning (namespaces, pragma),. Forgot the reference to the issue 😅 #1529 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1595:676,failure,failures,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1595,2,['failure'],['failures']
Availability,"Last regression test failing will disappear as soon as PR #4494 is merged as the new version of isquadDelaunay method is not using this method intersectionWithEdge anymore. ; And for the note, the error is a false positive. The regression should be regenerated at one point.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1937719127:197,error,error,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1937719127,1,['error'],['error']
Availability,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1928:1015,failure,failures,1015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928,2,['failure'],['failures']
Availability,"Last step to complete the task to unify the image importing process. Now that CImgPlugin is integrated, ImageBMP/ImagePNG and ImageQt can be removed from the trunk of Sofa. ; It lets all the responsibility of reading images to CImgPlugin (or any user custom plugin). (closes finally #9 and #51 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424:553,failure,failures,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424,2,['failure'],['failures']
Availability,Last uses of variable manually defined 3.14... ( for #799 ); Now uniformly using M_PI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1264:343,failure,failures,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1264,2,['failure'],['failures']
Availability,LeapMotion Plugin compilation errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1120:30,error,errors,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1120,1,['error'],['errors']
Availability,Let's fix them all !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/773:278,failure,failures,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/773,2,['failure'],['failures']
Availability,"Let's make is sexier . Before: ; ![TetrahedronFEMForceField_00000000](https://github.com/user-attachments/assets/1a69a1f7-4799-4db0-8fe9-e6d4b4c4a7d8). After:; ![TetrahedronFEMForceField_00000001](https://github.com/user-attachments/assets/3b34d328-af75-41fa-8e26-c91fb8d309ce). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4922:823,failure,failures,823,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4922,2,['failure'],['failures']
Availability,"Let's not pollute the `plugins` directory of SOFA install with all the old modules like SofaBaseMechanics that are now collections.; I created a new `collections` directory for them, working the same way as `plugins`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3196:762,failure,failures,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3196,2,['failure'],['failures']
Availability,"Let's start from the begining. . By default the msg_ api does not stores the messages because in some context of use it is not needed while in some other it is (in a non graphical sofa vs in a sofa GUI). . Thanks to the MessageHandler class it is easy to add custom message storage that fits the application's needs.; ; Currently the existing LoggingMessageHandler can be used to store in a single storage queue the messages. The queue can be queried to get the messages for whatever the application developer want to do with them (displaying them in GUI or showing a long history, ...). In serr/sout API a different scheme is used as the history is stored at the Base object level in a (size increasing) string. This behavior is now possible with the PerComponentLoggingMessageHandler.; This behavior is closer to the existing serr/sout but it also have several improved properties:; - the message are really stored (not just the 'text' description);; - no text concatenation (memory resize, memory copy) at each message, ; - the queue size of each component can be controlled with a data field as well as the message type to store or to ignore in the queue. ; - when the handler is not installed...there is not recording of the message...so there is a computation & memory zero cost. . NB: The d_msgLevel and d_logLevel in Base* are only there for discussion but they are currently unused now. . There PR also contains several new tests. . Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106:1553,failure,failure,1553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106,1,['failure'],['failure']
Availability,"Let's try this small scene; ```xml; <?xml version=""1.0"" ?>; <Node name=""root"" >; <MergeVectors template=""tartempion"" name=""merge"" nbInputs=""2""/>; </Node>; ```; No error is triggered on the console, and obviously ""tartempion"" is not a valid template; However in debug, I can follow up to the line where a message is sent to object->serr in ObjectFactory.cpp around line 174; if (!usertemplatename.empty() && object->getTemplateName() != userresolved) {; object->serr << ""template <"" << usertemplatename << ""> incorrect, used <""; << object->getTemplateName() + "">"";; }. maybe s.t. related to logging not initialized in the object at that time ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378:163,error,error,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378,1,['error'],['error']
Availability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:426,failure,failures,426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,2,['failure'],['failures']
Availability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/298:426,failure,failures,426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/298,2,['failure'],['failures']
Availability,"Like the port salut, everything is in the title. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/764:307,failure,failures,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/764,2,['failure'],['failures']
Availability,"Like you, I guess runSofa will stay alive (albeit half-undead) for few months more so I totally approve these commits (especially the cleaning ;) ); As soon it compiles/runs successfully, lets merge it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337#issuecomment-319605824:36,alive,alive,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337#issuecomment-319605824,1,['alive'],['alive']
Availability,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2229:194,Error,Errors,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229,3,"['Error', 'failure']","['Errors', 'failures']"
Availability,"Link with issue #2457. ~~The solution here is quite straight-forward (and a bit ugly IMO): encase 2d & 3d cases with `if constexpr (dimensions == X)`; Not ideal for the moment but hard to come by with the current design.~~ now the methods are not compiled if the dimension is wrong,; The merge of those two masses should this into account. (mentioned here #2452). Plus remove ""static_warning"" if the call was wrong and replace it with a real static_assert. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2514:1001,failure,failures,1001,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2514,2,['failure'],['failures']
Availability,Linker Error while compiling SOFA with LLVM 16,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4402:7,Error,Error,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402,1,['Error'],['Error']
Availability,"LocalMinDistance is printing a msg_warning when the lines are parallel.; This is a legitimate case that is properly handled in the rest of the code; so I and @EulalieCoevoet removed the message and document a bit the code while I was trying; to understand it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2976:804,failure,failures,804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2976,2,['failure'],['failures']
Availability,Look like the same error as this thread: https://github.com/sofa-framework/sofa/discussions/4383,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-2439639280:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-2439639280,1,['error'],['error']
Availability,"Looking at the source code I just find a good example. . It is from https://github.com/sofa-framework/sofa/blob/8410f29a80093f44fb0b224c91867bb7f65ee328/modules/SofaGeneralTopology/SofaGeneralTopology_test/SphereGridTopology_test.cpp; In the SphereGridCreation test. Erik wanted to test both valid and invalid code path, and he is right to do so,...but as Sofa has no way to report error to the caller's he cannot detect that (I assume this is probably what he wanted to test and why he commented out line); ```cpp; // EXPECT_EQ(sphereGrid2, nullptr);; ```. With explicit message specification improve the situation as he can now write things like that:; ```cpp; bool SphereGridTopology_test::SphereGridCreation(); {; // Creating a good Grid; {; //// This is valid code so a warning or an error is probably a regression leading to test failure; ; WarningAndErrorAsTestFailure err(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid = sofa::core::objectmodel::New<SphereGridTopology>(5, 5, 5);; EXPECT_NE(sphereGrid, nullptr);; EXPECT_EQ(sphereGrid->d_radius.getValue(), 1.0);; }. // Creating a bad Grid; {; /// must send warn a warning message to the caller indicating something goes wrong; /// mustn't send an error ; ErrorAsTestFailure err(SOURCE_LOCATION) ;; ExpectWarning warn(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid2 = sofa::core::objectmodel::New<SphereGridTopology>(-1, 0, 1);; }. return true;; }. EDIT: It just appear to me that the message rising failures are very similar in EXPECT_ /ASSERT things from gtest...nothing more, nothing less ...and similarly to EXPECT_ they are very verbose because it is what tests do :) ; Maybe I should make a macro to emphasize the similarities and showing this is part of the test framework ? ; ```cpp; EXPECT_MESSAGE( Error ) ;; EXPECT_MESSAGE( Warning ) ;; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168:382,error,error,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168,7,"['Error', 'error', 'failure']","['Error', 'ErrorAsTestFailure', 'error', 'failure', 'failures']"
Availability,Looks like the error is fixed. Let's merge?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-466045293:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-466045293,1,['error'],['error']
Availability,Looks ok to me. EDIT: @alxbilger want to remove the new errors.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285150452:56,error,errors,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285150452,1,['error'],['errors']
Availability,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:3924,failure,failures,3924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,2,['failure'],['failures']
Availability,"METIS and CSPARSE are used for sparse solvers. However, they can be better integrated. # METIS; - it could be useful to isolate METIS. Currently, it is an extlib in SofaSparseSolver. So, it is necessary to `find_package` SofaSparseSolver in order to link with METIS.; - The developer has the choice to use its own METIS library if it is in his PATH, or to use the one in extlib. For consistency between users, only one option could be considered.; - METIS library can be updated: a newer version of METIS is available on https://github.com/KarypisLab/METIS. # CSPARSE. - it could be useful to isolate CSPARSE. Currently, it is an extlib in SofaSparseSolver. So, it is necessary to `find_package` SofaSparseSolver in order to link with CSPARSE.; - CPARSE has been modified for our purpose. What are the changes? It prevents to update the lib. Would it be possible to keep the original CSPARSE library and isolate our modifications?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2767:508,avail,available,508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2767,1,['avail'],['available']
Availability,"MSVC got recently a flag ""/fpermissive-"" to have a strict conformance with C++ standard (and is enabled by default if c++20 is specified). -> https://docs.microsoft.com/en-us/cpp/build/reference/permissive-standards-conformance?view=msvc-170. It would force the code made with msvc to be more similar to the one made with gcc/clang. By curiosity, I tried to enable it on SOFA master and got some errors:; - some initData not recognized (and the SOFA_CLASS and its `using Base::initData` does not work ??); - a fwd declaration of a Link was not possible anymore (because Node is not known at that time); - lastly a symbol was made twice, due to both the specialization in cpp, and the {} in the header file. To discuss:; - should we add an option to make the compilation with MSVC on strict conformance (add the flag ""/fpermissive-"" to CXX_FLAGS); - should we even make it by default ? (this could be quite breaking). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3290:396,error,errors,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3290,3,"['error', 'failure']","['errors', 'failures']"
Availability,MacOS : 3D viewport is blank (had to downgrade Qt version to fix it),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028:37,down,downgrade,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028,1,['down'],['downgrade']
Availability,MacOS crashes in batch mode were due to FrameBufferObject constructor calls during simulation construction.; Fixed by moving those constructor calls to `initVisual()` using `std::unique_ptr`. WARNING: I changed VisualManagerPass::getFBO(). [See here](https://github.com/sofa-framework/sofa/commit/e910ec1e91e667ce213caeece639120598881940#diff-74e00cdcc25741750d2ed4f6b53398a7R93). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/646:637,failure,failures,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/646,2,['failure'],['failures']
Availability,"MacOS failure is due to an error in SofaPython3, not related to this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3073#issuecomment-1167318499:6,failure,failure,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3073#issuecomment-1167318499,2,"['error', 'failure']","['error', 'failure']"
Availability,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2309:728,failure,failures,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309,2,['failure'],['failures']
Availability,"Magic numbers (200 and 50) were introduced when centering the window. This is to anticipate the change of viewer resolution that happens later. Instead, I suggest to remove the magic numbers to keep a nice regular formula of centering, and call the center function just after the viewer has been resized. This is compatible with #2416 without changing another value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2466:911,failure,failures,911,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2466,2,['failure'],['failures']
Availability,"Mainly add error messages when calling currentGUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4967:11,error,error,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4967,3,"['error', 'failure']","['error', 'failures']"
Availability,"Mainly for:; - MechanicalObject::position; - SparseGridRamificationTopology::hexahedra; - SparseGridRamificationTopology::position. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356:676,failure,failures,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356,2,['failure'],['failures']
Availability,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2194:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194,2,['failure'],['failures']
Availability,"Make `RGBAColor` constexpr and turn all `RGBAColor` to constexpr when it's possible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2630:629,failure,failures,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2630,2,['failure'],['failures']
Availability,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4581:669,failure,failures,669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581,2,['failure'],['failures']
Availability,"Make sense that this error does not appear on the CI, as the assert() is not processed by the compiler in other mode than Debug (and I suppose the CI compiles in Release mode with MSVC); and the ambiguity comes from the fact there are two invalidID things, one defined in the sofa namespace and one other defined in the defaulttype namespace for compatibility.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958,1,['error'],['error']
Availability,Make sure data defined as required generate errors if not,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2426:44,error,errors,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2426,1,['error'],['errors']
Availability,"Make sure the API `isComponentValid` is used instead of direct access to the data `d_componentState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4921:646,failure,failures,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4921,2,['failure'],['failures']
Availability,"Make sure the data defined as required (`d_myData.setRequired(true);`) generates an error if it is not indeed defined. To do so, the call to super init() must be done since this check is done in `BaseObject::init()`. Initiated in #2419",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2426:84,error,error,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2426,1,['error'],['error']
Availability,"Makes more sense. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4837:562,failure,failures,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4837,2,['failure'],['failures']
Availability,"Manager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Please suggest. Thanks; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2148,ERROR,ERROR,2148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['ERROR'],['ERROR']
Availability,"Manual merge to close PR #218 ; Only one commit was not integrated: (MechanicalMatrixVisitor and MechanicalOperations) fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node. -- Notes:. This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:378,Error,Error,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['Error'],['Error']
Availability,Many scenes were still using the deprecated: Rigid template/; Now use Rigid3d. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1295:335,failure,failures,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1295,2,['failure'],['failures']
Availability,Many thanks Matthieu for the time you spend on carefully reviewing this PR I appreciate. . For the movement of function in a file...my mistake I should have clean that...I tried other changes (like extern template specialization) that I finally not took into consideration in this PR but forgot to clean the file so they seems to have moved more than what they actually did. . You are right about performance issues and your suggestion for checking the first non-empty char in getUnsignedInteger looks ok so I will make the change. . Now about the getInteger vs atoi aspect my first impression is that there will be a small performance difference at the cost of scarifying correctness and code security so I really advocate for using getInteger/getUnisgnedInteger and not atoi. . To go further we probably have to measure the performance but I wouldn't be surprised to be less than a 10% speed difference so it is not worth the loss of good error reporting to user. If high performance is really an issue I prefer to put energy to implement a raw binary storage of indices because this would make things like 10x or more faster speedup as well as have less memory consumption.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856:941,error,error,941,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856,1,['error'],['error']
Availability,"Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2913,ERROR,ERROR,2913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2006:633,failure,failures,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006,2,['failure'],['failures']
Availability,"Matrix assembly can be accelerated if CRS matrices are defined using blocks of 3x3.; This PR makes LU solver compatible with 3x3 blocks. Benchmark https://github.com/alxbilger/SofaBenchmark/pull/22:. Before. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 368 ms 370 ms 10 FPS=135.021/s MBKBuild=1.82966m MBKSolve=5.34694m frame=7.40625ms; ```. After. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 371 ms 367 ms 10 FPS=136.17/s MBKBuild=1.81682m MBKSolve=5.41681m frame=7.34375ms; BM_SparseLUSolverMat3x3/50/iterations:10 308 ms 311 ms 10 FPS=160.804/s MBKBuild=529.916u MBKSolve=5.4368m frame=6.21875ms; ```. We can observe that the time stays the same for `CompressedRowSparseMatrixd` (no performance loss), and it is faster (MBKBuild timer) for `CompressedRowSparseMatrixd`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2862:1806,failure,failures,1806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2862,2,['failure'],['failures']
Availability,"May I ask, when compiling Sofa v21.12 and previous versions, there was an issue where plugins could not be used, but after Sofa v22 version, this problem no longer exists. Currently, I need to use the Optimus plugin (compatible with Sofa v21.12), so how can I solve this problem for all the experts?. cmake_minimum_required(VERSION 2.8.12); find_package(SofaFramework); sofa_add_subdirectory(plugin STLIB/ STLIB VERSION 3.0). CMake Error at //path/to/SOFA/ext_plugin_repo/CMakeLists.txt:5 (sofa_add_subdirectory):; sofa_add_subdirectory Macro invoked with incorrect arguments for macro named: sofa_add_subdirectory. Before Sofa v21.12, it seems that Sofa_add_Subdirectory cannot be recognized. Could you please modify it to something that can recognize it??. Thank you all!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4941:432,Error,Error,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4941,1,['Error'],['Error']
Availability,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1901:697,failure,failures,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901,2,['failure'],['failures']
Availability,Maybe warning and deprecated messages should not be seen as failure by default?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291901215:60,failure,failure,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291901215,1,['failure'],['failure']
Availability,MechanicalObject output an error on the position state vector's size when debug is enabled,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/344:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/344,1,['error'],['error']
Availability,"Merged too quickly, there was a link error on Windows :disappointed:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1272#issuecomment-601113212:37,error,error,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1272#issuecomment-601113212,1,['error'],['error']
Availability,"MeshTetraStuffing was the only component in SofaMiscExtra, and was simply a BaseObject.; This PR converts it as an engine (which it was already by its behavior) and move it in S.C.Engine.Generate.; \+ compat. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2917:753,failure,failures,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2917,2,['failure'],['failures']
Availability,MeshTopology doesn't load the topology from the mesh loader implicitely anymore. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1273:337,failure,failures,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1273,2,['failure'],['failures']
Availability,"Message before was:; ```[INFO]    [TopologyHandler] Topology: lines is not dynamic, topology engine on Data 'indices' won't be registered.```. Now looks like:; ```[INFO]    [TopologyHandler] The TopologyDataHandler( FixedConstraint ) managing the TopologyData 'indices' won't be registered because linked topology 'lines' is not dynamic. Topological changes won't be supported by this Data.```. Also this message only pop up if component owner is not muted (printLog == true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3142:1021,failure,failures,1021,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3142,2,['failure'],['failures']
Availability,"Message before:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro. Use 'sofa_add_subdirectory(plugin ...)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. Message after:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro 'sofa_add_plugin'. Use 'sofa_add_subdirectory(plugin caribou caribou)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3611:1179,failure,failures,1179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3611,2,['failure'],['failures']
Availability,"Message refers AsyncMatrixLinearSolver, but it's MatrixLinearSolver. And specifying the class name is not necessary with the msg_* API. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2781:680,failure,failures,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2781,2,['failure'],['failures']
Availability,"Message was always saying that Sofa.GL was not found as the find_package() was done later; Set a STATUS/WARNING level in the same time. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3549:680,failure,failures,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3549,2,['failure'],['failures']
Availability,MessageDispatcher creates a segfault on OSX when an error is dispatched on static call,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/636:52,error,error,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/636,1,['error'],['error']
Availability,"Method LoadFromMemory to load an XML as a string is taking a parameter size which is unused and generate conversion warnings in tests. - Add method depreciation; - Update all tests compiled in my setup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3376:747,failure,failures,747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376,2,['failure'],['failures']
Availability,Method doCarve in CarcingManager should be called at AnimateEndEvent and not at CollisionEndEvent to avoid any topology synchronization error during step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1532:136,error,error,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1532,3,"['error', 'failure']","['error', 'failures']"
Availability,"Method initTopology was not called if the topology is empty at start. For example if we start with a cloud of points. . And initTopology methods are chained called to initialize topology from lower level. For example Tetrahedron initTopology will call triangle version, then edge and finally pointTpology. Each initTopology is used to initialize buffers and cross buffer only if the topology is not empty. Therefore in this special case the number of points was not well init for an empty topology. This fix #3211 . [ci-depends-on https://github.com/sofa-framework/Regression/pull/34]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216:1130,failure,failures,1130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216,2,['failure'],['failures']
Availability,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494:456,error,error,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494,4,"['error', 'failure']","['error', 'failures']"
Availability,"Metis and CSparse are always required by SofaSparseSolver, no need have their find_package in if blocks. Thanks @AlbanOdot for spotting the issue :beers: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1437:412,failure,failures,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1437,2,['failure'],['failures']
Availability,"Metis is an external library producing a few hundreds of compilation warnings (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3459/FullBuildWarnings-MSBuild/). ![image](https://user-images.githubusercontent.com/10572752/163556296-5c153462-6e47-4e57-94c0-d06a36c6d299.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2874:892,failure,failures,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2874,2,['failure'],['failures']
Availability,"Metis is installed only in the folder of the first plugin fetching it. Making the other one fail to find it. Moving it into the main folder with CMake is not really meaningful. The plugin should not fix something that is at higher level in the CMake hierarchy as itself (aka, fix install issue when another target depends on one of its dependency)... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767:897,failure,failures,897,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767,2,['failure'],['failures']
Availability,"Mine, according to cmake:; ```; Windows SDK version 10.0.19041.0 to target Windows 10.0.22631; MSVC 19.38.33130.0; ```; Weird that our numbers are mismatched. Anyway you may try to downgrade the Windows SDK ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835561211:181,down,downgrade,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835561211,1,['down'],['downgrade']
Availability,Minor PR fixing some warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/739:287,failure,failures,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/739,2,['failure'],['failures']
Availability,"Minor PR just allowing the messages (msg_info) of **VTKExporter** of being indeed outputed; To do this, I just activated the _printLog_ flag for msg_info. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/553:411,failure,failures,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/553,2,['failure'],['failures']
Availability,Minor changes in RestShapeSpringsForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1431:301,failure,failures,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1431,2,['failure'],['failures']
Availability,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1899:769,failure,failures,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899,2,['failure'],['failures']
Availability,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1926:144,error,error,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926,6,"['error', 'failure']","['error', 'failures']"
Availability,"Minor commit to improve messaging when image cannot be loaded.; Before : no error, no message, no hints for available extensions to use. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503:76,error,error,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503,4,"['avail', 'error', 'failure']","['available', 'error', 'failures']"
Availability,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1850:617,failure,failures,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850,2,['failure'],['failures']
Availability,"Minor refactoring to simplify the reading (it avoids the call to many `for` loops), and to match https://github.com/sofa-framework/sofa/pull/3981. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3983:691,failure,failures,691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3983,2,['failure'],['failures']
Availability,Minor warning fixes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1388:277,failure,failures,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1388,2,['failure'],['failures']
Availability,"Missing minus signs. Introduced in #2777.; Problem identified thanks to #4010. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4012:623,failure,failures,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4012,2,['failure'],['failures']
Availability,Modify the mapper in tetra barycentric mapping in order to listen for topological changes and only compute the added points. Previously the behaviour was to call reinit and recompute all the barycentric coordinates for the entire mesh at each topological modification. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1203:525,failure,failures,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1203,2,['failure'],['failures']
Availability,Module are systematically compiled which have a sensible impact to Sofa. ; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they ; don't need. In this PR I'm moving SofaMiscCollision & SofaSphFluid. ; I made the two because there is a dependency between them. ; There should be no big problem with this PR. ; But in the main CMakeList.txt I change the order of subdirectories so that plugins are before scenecreator. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/407:716,failure,failures,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/407,2,['failure'],['failures']
Availability,"Modules for pluginization contain a dot (Sofa.GL, Sofa.Types, etc),; and custom macro (sofa_create_package_with_targets) generates preprocessor definitions according to the name.; So with the new modules name, the macro creates a preprocessor definition with a dot '.' , but this is not permitted by the C preprocessor. So this PR replaces a '.' with a '_' for the generated definitions.; Fix #1695 (and seems to remove a warning generated by clang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1701:995,failure,failures,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1701,2,['failure'],['failures']
Availability,"More or less trial-and-error works to make the SofaPython3 plugin compilable out-of-tree (and obviously others one too). Various stuff:; - out-of-date cmake vars; - need to reference old modules in the cmake.in (i dont really understand this issue); - remove completely SofaSimulationCore (was supposed to be deleted for v21.12) and add an error if used. I dont know if it is useful though. There were some f*ckey with the project/module called Sofa.SimulationCore but the folder SofaSimulationCore in any case. I put fast-merge because this is quite urging but some cmake-specialized eyes are needed 👀 . By the way, with this branch, I can compile SofaPython3 out-of-tree on Windows/MSCV2022. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3031:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3031,4,"['error', 'failure']","['error', 'failures']"
Availability,"More post-NG cleaning.; Follows #2958. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2980:583,failure,failures,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2980,2,['failure'],['failures']
Availability,"Most likely a typo, as using ref to shared_ptr is weird. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3620:601,failure,failures,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3620,2,['failure'],['failures']
Availability,"Most of ForceFields relying on FEM need to access the topology. In SOFA, the codes often access the topology through the context (which hides the user the dependency). As in the PR #973 the link to the topology should be more explicit (through a Data available to the user), not only through the context. Should we need a intermediate layer ForceFieldOnTopology or ForceFieldFEM implementing this API ?; Let's discuss it. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/979:251,avail,available,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/979,1,['avail'],['available']
Availability,"Most technical PR EVER. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2547:568,failure,failures,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2547,2,['failure'],['failures']
Availability,"Mostly because it bothered me when i was doing `git status`... But also because it does not really make sense that a file is created in the source directory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2537:702,failure,failures,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2537,2,['failure'],['failures']
Availability,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2058:860,failure,failures,860,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058,2,['failure'],['failures']
Availability,"Mostly in MeshSTEP plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4067:571,failure,failures,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4067,2,['failure'],['failures']
Availability,"Move CGALPlugin and its history to its own repository : https://github.com/sofa-framework/CGALPlugin. CI is not building CGALPlugin by the way. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2500:705,failure,failures,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2500,2,['failure'],['failures']
Availability,"Move FEM. Follows. - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/219430901-2dfd90df-c077-4570-bb7a-6103cc148e47.png). I did not touch TLED files to avoid conflicts with another PR. They will be moved later.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3660:870,failure,failures,870,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3660,2,['failure'],['failures']
Availability,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1873:895,failure,failures,895,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873,2,['failure'],['failures']
Availability,"Move ManifoldTopologies and its history to its own repository : https://github.com/sofa-framework/ManifoldTopologies . the configure script on the CI has already been updated. It has its own CI too (and releases). (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2623:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2623,2,['failure'],['failures']
Availability,"Move Material.h and PrimitiveGroup from SofaCore to SofaHelper. ; This move was needed as it was causing a backward dependency (ie. SofaHelper depending on SofaCore) ; I also removed the SofaDefaultType/Vector3Types... which was flagged for deprecation after 2018 :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1686:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1686,2,['failure'],['failures']
Availability,"Move OpenCTMPlugin and its history to its own repository : https://github.com/sofa-framework/OpenCTMPlugin . Not compiled by the CI, and was even not present in the CMakelists of the plugins directory by the way. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2564:774,failure,failures,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2564,2,['failure'],['failures']
Availability,"Move OptitrackNatNet and its history to its own repository : https://github.com/sofa-framework/OptitrackNatNet. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2548:730,failure,failures,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2548,2,['failure'],['failures']
Availability,"Move PluginExample and its history to its own repository : https://github.com/sofa-framework/PluginExample (with brand-new github actions 😎). the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2519:760,failure,failures,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2519,2,['failure'],['failures']
Availability,"Move Registration and its history to its own repository : https://github.com/sofa-framework/Registration. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2552:724,failure,failures,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2552,2,['failure'],['failures']
Availability,"Move SofaCUDA and its history to its own repository : https://github.com/sofa-framework/SofaCUDA. CI is building SofaCUDA on Windows so the configure script has been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2502:736,failure,failures,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2502,2,['failure'],['failures']
Availability,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2224:835,failure,failures,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224,2,['failure'],['failures']
Availability,"Move THMPGSpatialHashing and its history to its own repository : https://github.com/sofa-framework/THMPGSpatialHashing . the configure script on the CI has already been updated. It has its own CI too (and releaases). (#1527 , #1442). It just introduces one new component, THMPGSpatialHashing which is a colllision pipeline (i.e implements broad and narrow phases detection). ; After some tests it is slower than the standard bvh one, so it does not seem really important to maintain IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:1032,failure,failures,1032,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,2,['failure'],['failures']
Availability,Move TaskScheduler files from Multithreading plugin to Sofa Kernel. This change allows any plugins to use the TaskScheduler without adding the dependency on the MultiThreading plugin. The MultiThreading plugin will be a collection of components using the TaskScheduler to parallelize some computation. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/805:560,failure,failures,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/805,2,['failure'],['failures']
Availability,"Move a few more components. Follows. - https://github.com/sofa-framework/sofa/pull/3760; - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3785:893,failure,failures,893,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3785,2,['failure'],['failures']
Availability,"Move collision components. Follows. - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3760:840,failure,failures,840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3760,2,['failure'],['failures']
Availability,"Move components with only a cpp file. They don't need a compatibility layer. Follows. - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/228577598-3ded4d63-eeed-4082-b5ee-716365c27988.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3758:951,failure,failures,951,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3758,2,['failure'],['failures']
Availability,"Move of CImgData was not done in CGAL plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2345:590,failure,failures,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2345,2,['failure'],['failures']
Availability,"Move projective constraints. Follows. - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/222710672-f34d0aba-75d4-4476-aad4-396543e08b54.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3701:851,failure,failures,851,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3701,2,['failure'],['failures']
Availability,"Move some force fields and MechanicalObject. Follows. - https://github.com/sofa-framework/sofa/pull/3785; - https://github.com/sofa-framework/sofa/pull/3760; - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. The last components are the TLED force fields. But they don't have a CPU equivalent. I suggest to move them into `solidmechanics/fem/elastic`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3795:1105,failure,failures,1105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3795,2,['failure'],['failures']
Availability,"Move some forward declaration in sofa/core/fwd.h; Use pragma once & one line namespace. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3303:634,failure,failures,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3303,2,['failure'],['failures']
Availability,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4504:174,down,download,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504,3,"['down', 'failure']","['download', 'failures']"
Availability,Moved function definitions from .h to .inl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907:300,failure,failures,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907,2,['failure'],['failures']
Availability,"Moved in https://github.com/sofa-framework/SofaValidation/pull/1. ![](https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExODV4ZTN0czYwbm02bXAycDYyc3lnY2x6MXE3MDA5NWZqYmd5ZDJ6ZiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/AhAysobj49aqQ/giphy.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4985:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4985,2,['failure'],['failures']
Availability,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1863:9,error,errors,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863,3,"['error', 'failure']","['errors', 'failures']"
Availability,Multiple users complained about errors that actually are not errors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/607:32,error,errors,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/607,4,"['error', 'failure']","['errors', 'failures']"
Availability,"Multithread/image: *Config.cmake.in were still using deprecated packages; Sofacuda: add dep (missing from a deprecated package). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3209:673,failure,failures,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3209,2,['failure'],['failures']
Availability,"My IDE found that some variables could be made `constexpr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2472:604,failure,failures,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2472,2,['failure'],['failures']
Availability,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4238:596,failure,failures,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238,2,['failure'],['failures']
Availability,"My bad for Windows error, the dependency pack was updated too soon. #566 needs to be merged. In the meantime I restart your build with the old dependency pack ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900,1,['error'],['error']
Availability,My biggest contrib' so far!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1475:285,failure,failures,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1475,2,['failure'],['failures']
Availability,"My example: ; Open ""test.scn"" in my application, the content is as follows:; ```; <?xml version=""1.0"" ?>; <Node name=""root"" dt=""0.005"" gravity=""0 0 0"" >; 	<AddResourceRepository path="".""/>; 	<RequiredPlugin pluginName='SofaOpenglVisual'/>; 	<RequiredPlugin pluginName='MyTestFlugin'/>; <VisualStyle displayFlags=""hideBehaviorModels showVisual hideForceFields"" />; 	; <CollisionPipeline verbose=""0"" />; <BruteForceDetection name=""N2"" />; 	<CollisionResponse response=""MultiFrictionContact"" />; <FreeMotionAnimationLoop/>; <!--LCPConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/-->; 	<GenericConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/>; 	<MyTestController name=""body"" modelName=""patient.scn"" />; </Node>; ```. I dynamically load ""patient.scn"" in the MyTestController component, the code is as follows:. ```; sofa::simulation::SceneLoader *loader = sofa::simulation::SceneLoaderFactory::getInstance()->getEntryFileName(modelPath);; if (loader); {; 	m_node = loader->load(modelPath.c_str());; 	m_node->init(sofa::core::ExecParams::defaultInstance());; }; ```; The content of ""patient.scn"" is as follows:; ```; <?xml version=""1.0""?>; <Node name=""root"" gravity=""0 0 0"" dt=""0.005"" >. 	<RequiredPlugin name=""MeshFbxLoader"" />; 	<Node name=""Patient"">; 		<MechanicalObject name=""Articulations"" template=""Vec1d"" size=""1"" />; 		<Node name=""PatientBone"">; 			<MeshFbxLoader name=""fbxloader"" filename=""Body-Bone.FBX"" />		; 			<MechanicalObject name=""Bones"" template=""Rigid3d"" position=""@fbxloader.bonePos"" showObject=""0"" />; 			<Node name=""skinning"">; 				<OglModel name=""body"" src=""@../fbxloader"" />; 				<SkinningMapping name=""skinMap"" template=""Rigid3d,ExtVec3d"" input =""@../Bones"" output =""@body"" nbRef =""@../fbxloader.nbref"" indices =""@../fbxloader.boneIds"" weight=""@../fbxloader.boneWeights""/>; 			</Node>	; 			<ArticulatedSystemMapping input1=""@../Articulations"" output=""@Bones""/>; 		</Node>; 		<ArticulatedHierarchyContainer/>; 		<Node name=""articulationCenters"">; 			<Node name=""art",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696:555,toler,tolerance,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696,2,['toler'],['tolerance']
Availability,My heart is bleeding when I hear about downgrading the code-base to support compilers with incomplete c++x11 support ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/98#issuecomment-266730219:39,down,downgrading,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/98#issuecomment-266730219,1,['down'],['downgrading']
Availability,My most important PR so-far. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1519:285,failure,failures,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1519,2,['failure'],['failures']
Availability,"NOTE: the **template=""NewMat""** for both CGLinearSolver CholeskyLinearSolver will now NEED the package SofaDenseSolver. #1298 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1299:384,failure,failures,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1299,2,['failure'],['failures']
Availability,Name / link change : ; - from https://github.com/sofa-framework/plugin.HighOrder; - to https://github.com/sofa-framework/SofaHighOrder. More info: https://github.com/sofa-framework/plugin.HighOrder/issues/5. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1430:464,failure,failures,464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1430,2,['failure'],['failures']
Availability,"Namely BoxROI, SphereROI and MeshROI, sharing a common codebase (BaseROI). Massive refactoring. Lots of similar data, features, code across these components, lots of inconsistencies as well; - some filters quads, hexas, some not;; - some are doing the inverse selection, some not,; - some implements strict mode (aka the whole element is inside in the ROI, contrary to the normal mode where it is the center which is tested). Draw functions were copy-pasted ; lots of copy instead of reference as well.; The init procedure was very similar as well (if no one gives me X, I will search for mechanicalOjbect or a meshloader); Some classes use singular (quadIndices) some plural (quadsIndices)... ---; So this PR does gather everything with a common base with all the features (draw, strict mode, all the element types) and try to be quite generic.; Code could be even more generic and it could be very easy to add a new element type but it is not done for the moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4839:1510,failure,failures,1510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4839,2,['failure'],['failures']
Availability,"Namespace was wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2923:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2923,2,['failure'],['failures']
Availability,"Naming components was not consistent:. - XML used a 'load-time' helper to name the components: the class name of the component + a counter for a unique name; - Python used the class name only; - C++ instantiations: either the class name or a hard-coded value. This is now unified using the singleton `sofa::core::NameHelper`. It applies the XML method: the class name + a counter. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/228]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631:997,failure,failures,997,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631,2,['failure'],['failures']
Availability,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1892:49,error,error,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892,3,"['error', 'failure']","['error', 'failures']"
Availability,"Necessitate to update the CI: see https://github.com/sofa-framework/ci/pull/19. [ci-depends-on https://github.com/SofaDefrost/STLIB/pull/106]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/354]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/222]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882:827,failure,failures,827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882,2,['failure'],['failures']
Availability,"Need deeper investigation to remove handleState visitor. SOFA is not ready for that!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2867:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2867,2,['failure'],['failures']
Availability,"Needed for binaries dependency management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1720:587,failure,failures,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1720,2,['failure'],['failures']
Availability,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4247:611,failure,failures,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247,2,['failure'],['failures']
Availability,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760,2,['failure'],['failures']
Availability,"Needed to build Flexible out-of-tree (yes, I tried to do that).; Surely needed to build other plugins too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2444:651,failure,failures,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2444,2,['failure'],['failures']
Availability,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2226:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226,2,['failure'],['failures']
Availability,"Needs #1408 ; OglModel recomputes its internal data on topology change. There's 2 things I need review for here:; 1. which initialization methods should be called to properly update an OglModel? Currently, I'm calling more or less the whole thing: delete buffers, then init / reinit / initVisual & updateBuffers. Not sure all of them are necessary; 2. Which datafields should be taken into consideration for a total reinit:; Ideally I'd like to trigger the full update of the OglModel only when a change in the loader triggers the recomputation: positions can vary during simulation and shouldn't trigger a reload of the component.; Edges / triangles & other topological info change when the loader changes geometry, but could also change during a topological change for instance, and in that 2nd case shouldn't trigger a reload from the loader, whose topology isn't up-to-date anymore. This component needs heavy restructuring I believe if we want to handle proper data update using callbacks, and might be a good example for other components if we do it right. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423:1319,failure,failures,1319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423,2,['failure'],['failures']
Availability,"Needs https://github.com/sofa-framework/sofa/pull/4917 to make all tests pass successfully. In the spirit of #3900 and following #3924, this PR applies the change on the MeshMatrixMass. To be noted:; - the `componentState` must be added to trigger the callback (done in `addMDx()`, `addMToMatrix`, `accFromF` and `buildMassMatrix`); - this PR does not solve the problem of circular dependency referred in #2173. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3928:956,failure,failures,956,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928,2,['failure'],['failures']
Availability,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4386:639,failure,failures,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386,2,['failure'],['failures']
Availability,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4250:753,failure,failures,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250,2,['failure'],['failures']
Availability,"New methods:; - Edge: method ```pointBaryCoefs``` which, given a point, will return the 2 barycoefs of the edge describing the relative position.; - Edge: method ```intersectionWithPlane```, given and edge and a plan position + normal, return if there is an intersection and at which point.; - Triangle: method ```normal``` to compute the normal of the triangle. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2587:907,failure,failures,907,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2587,2,['failure'],['failures']
Availability,"Nice and easy. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2898:559,failure,failures,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2898,2,['failure'],['failures']
Availability,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:761,error,error,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008,1,['error'],['error']
Availability,"Nice!; The binaries that you can download from the website are built with python3.8, so they will also only work with python3.8.; My best advice would be to build sofa from source with a python version of your choosing. I am currently using python3.10.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757868093:33,down,download,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757868093,1,['down'],['download']
Availability,"No change of code. Just applying guidelines for a clean code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3476:606,failure,failures,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3476,2,['failure'],['failures']
Availability,No idea if this header is really needed with OCC < 7.4. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1310:312,failure,failures,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1310,2,['failure'],['failures']
Availability,"No information is given when the initExternalModule entry point is called.; For 99.999% of the plugins, there is nothing special in it but some (SofaPython3, I am looking at you) is doing a lot of ""failable"" things when it is called.; This PR is a potential solution to this problem, by adding a (optional) entry point to check if the plugin reports by itself that it was loaded successfully. This allows SOFA to not crash if a problem arises in SofaPython3 when calling PythonEnvironment::Init() . It is not really necessary for the ""ci depends on"" as the two PR can compile without needing the other one; but it makes sense to merge them in the same time I think. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/210]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425:1282,failure,failures,1282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425,2,['failure'],['failures']
Availability,"No more yellow background using this mapping :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4881:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4881,2,['failure'],['failures']
Availability,"No need for SofaBaseLinearSolver if SofaCore is available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2768:48,avail,available,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2768,3,"['avail', 'failure']","['available', 'failures']"
Availability,"No need for more than 1 iteration to test an export. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2328:597,failure,failures,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2328,2,['failure'],['failures']
Availability,"No problem, I'll do my best to rebase my fixes here in a PR. As for the buffer overflow, it's definitely not a serious one (read-only, static size) but it aborts execution when compiled with address sanitizer, which prevents further bug discovery. Another show-stopper in SofaCUDA, `CudaBarycentricMappingRigid.cpp:50`, ODR violation:. ```; ==13885==ERROR: AddressSanitizer: odr-violation (0x7f474c739640):; [1] size=4 'class_BarycentricMappingRigid' ../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaBarycentricMappingRigid.cpp:47:1; [2] size=4 'class_BarycentricMappingRigid' ../modules/SofaMiscMapping/BarycentricMappingRigid.cpp:42:18; ```. Fix is simple: remove the `SOFA_DECL` as it's defined already somewhere else. After that, it's a world of memleaks! ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347130851:350,ERROR,ERROR,350,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347130851,1,['ERROR'],['ERROR']
Availability,No support of thread local vars in mac_Clang 3.5 compiler.; This looks like a mac_Clang 3.5 compiler limitation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727:369,failure,failures,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727,2,['failure'],['failures']
Availability,"None of these scenes are meaningful, they are deprecated and worse : they bother my dear #3927; Some .xs3 file is given as input for the UniformMass which does not support it.. :broom: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5035:731,failure,failures,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5035,2,['failure'],['failures']
Availability,"Not needed anymore as SofaPython has been discontinued. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2533:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2533,2,['failure'],['failures']
Availability,"Not possible to compile because I don't have opencascade, only rely on visual intellisense.... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/705:351,failure,failures,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/705,2,['failure'],['failures']
Availability,"Not significant, but towards a clean CI :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1206:300,failure,failures,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1206,2,['failure'],['failures']
Availability,Not sure about the UINT_MAX used for error handling. How about something like `BaseTopologyObject::INDEX_NOT_FOUND` (secretly equals to UINT_MAX)? Or an exception (cleaner)?. EDIT: There is already a `Topology::InvalidID` :wink:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/866#issuecomment-448616851:37,error,error,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/866#issuecomment-448616851,1,['error'],['error']
Availability,"Note for @sofa-framework/reviewers ; The PR now builds and tests run.; This PR might be really breaking, and your careful review and feedback is more than welcome. I am available for any question.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-391685881:169,avail,available,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-391685881,2,['avail'],['available']
Availability,"Note that `Point` does not pass the test. The introduced tests don't pass on non-Windows OS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4732:637,failure,failures,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4732,2,['failure'],['failures']
Availability,"Note that it confused Rider. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3140:573,failure,failures,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3140,2,['failure'],['failures']
Availability,"Note to my future dummy-me: ; Dependency is present in CMakeLists but having it in Config.cmake.in propagates this dependency to downstream modules, unable to find tinyXML since it's linked privately :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4555#issuecomment-1976565138:129,down,downstream,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555#issuecomment-1976565138,1,['down'],['downstream']
Availability,"Nothing else to say :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1638:568,failure,failures,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1638,2,['failure'],['failures']
Availability,"Nothing important, just switch char* with std::string in the component BaseObjectDescription. @damienmarchal @guparan . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/980:376,failure,failures,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/980,2,['failure'],['failures']
Availability,Noticed those files hanging around after the merge of #834. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/851:316,failure,failures,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/851,2,['failure'],['failures']
Availability,Now 255 is merged I can write the CHANGELOG for @hugtalbot (thank for the reminder:)). CHANGELOG: ; Batch replacement of std::cout with msg_info or dmsg_info and some delete of commented lines in the following module:; [SofaBaseMechanic]; [SofaBaseTopology]; [SofaBoundaryCondition]; [SceneCreator] ; [SofaGeneralSimpleFEM]; [SofaConstraint]; [SofaGeneralVisual]; [SofaMisc]; [SofaMiscCollision]; [SofaMiscEngine]; [SofaMiscFEM]; [SofaMiscMapping]; [SofaMiscTopology]; [SofaOpenGLVisual] ; [SofaPrecontionner]; [SofaSparseSolver]; [SofaVolumetricData]; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/261:785,failure,failures,785,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/261,1,['failure'],['failures']
Availability,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4573:4,avail,available,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Now callback handles the check for the draw vonMises value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2407:604,failure,failures,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2407,2,['failure'],['failures']
Availability,"Now checks in all Modifiers if the pointer towards the TopologyContainer is valid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3434:627,failure,failures,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3434,2,['failure'],['failures']
Availability,Now it's ok.; I just added the ability to call createObject function without Argument.; This will only be available for NoArgument template.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/385#issuecomment-328070969:106,avail,available,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/385#issuecomment-328070969,1,['avail'],['available']
Availability,"Now pretty much all overridden 'canCreate' found in the kernel or the modules behave as they should, which is, **always specify why a component with the given template cannot be created in the given context**. This is the continuation of the PR #1266. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1294:508,failure,failures,508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1294,2,['failure'],['failures']
Availability,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4532:1078,failure,failures,1078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532,2,['failure'],['failures']
Availability,"Now the messaging when required data is not set by the user:. - either a warning is sent if a default value is available in the associated class constructor; - or an error is sent no a default value exists. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2527:111,avail,available,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2527,4,"['avail', 'error', 'failure']","['available', 'error', 'failures']"
Availability,"Now the only way to create a TopologyHandler is to create it internally through the TopologyData using the method createTopologyHandler.; The handler is created and handle only by the TopologyData as a unique_ptr. This PR need to be rebased after PR #2384 #2388 #2389 #2390 #2391 have been merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2393:842,failure,failures,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2393,2,['failure'],['failures']
Availability,"Now the user will be clearly warned :exclamation: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4059:596,failure,failures,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4059,2,['failure'],['failures']
Availability,"Now we check that the time is indeed 8:30 to properly announce the meeting, to please our gentle(wo)men . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4877:650,failure,failures,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4877,2,['failure'],['failures']
Availability,"Now we have a tool to list the deprecated components, we can build with `SOFA_WITH_DEPRECATED_COMPONENTS=OFF` + `APPLICATION_GETDEPRECATEDCOMPONENTS=ON` and ignore scenes using deprecated components during scene tests. I also added a function to ignore scenes using non-existent (because disabled) plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/611:563,failure,failures,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/611,2,['failure'],['failures']
Availability,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1801:686,failure,failures,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801,2,['failure'],['failures']
Availability,"Now, each class has its own file. A unit test has been added. The error message is managed by a `Data<DisplayFlags>` (only if you include `Data[DisplayFlags].h`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721:66,error,error,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721,1,['error'],['error']
Availability,"Now, each data field with a filename alias will show ""filename"" in the GUI.; The old names are now the aliases and are just keept for backward compatibility management. . I didn't do the change for data related to dumping/output filenames. Because I found that ambigious. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1024:530,failure,failures,530,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1024,2,['failure'],['failures']
Availability,"Now, this action checks and make sure that sufficiently descriptive labels are set.; Among the 8 possible labels:; - enhancement; - deprecated; - refactoring; - pr: breaking; - pr: clean; - pr: fix; - pr: new feature; - pr: test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4079:774,failure,failures,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4079,2,['failure'],['failures']
Availability,"Number of tetra at beginning is 44; Previous file was attempting to remove 60 of them. Worked with warnings but made the understanding harder for newcomers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3121:701,failure,failures,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3121,2,['failure'],['failures']
Availability,"OK I agree that this allows to compile Flexible without the SOFA-HighOrder. Before moving SOFA-HighOrder to the gitHub repo, do any of you know if ; there are plans to move those plugins outside of github ?. My understanding is that at some point SOFA was going to be cut into ; several pieces that could be optionally compiled. Is this still on the radar ?. Hervé. Le 05/10/2016 à 15:27, thomas-lemaire a écrit :. > yet an other option is to conditionnaly compile HighOrderTopology code ; > in Flexible based on whether the HighOrderTopology plugin is existing ; > or not (in cmakelists package_require(HighOrderTopology) if ; > (HighOrderTopology_FOUND) ... ):; > - each plugin can live in its own repository; > - no need for a third plugin; > - should work whether all the plugins are compiled in the same cmake ; > build project or are compiled/installed separately (well ; > HighOrderTopology must be available when compiling Flexible); > ; > thomas; > ; > ----- Mail original -----; > ; > > De: ""Matthieu Nesme"" notifications@github.com; > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > ; > > Hi Hervé,; > > ; > > In general, I think it is a good idea to have a repo per plugin, ; > > even if it; > > becomes more difficult to update them when the sofa core is modified.; > > But in this specific case, it would be great to add this plugin to this; > > github repo, so Flexible can still benefit from your code.; > > ; > > Another solution, could be to add a third plugin in your independent; > > repository, that would link with both SOFA-HighOrderTopology and ; > > Flexible,; > > and that would contain the high order shape functions.; > > ; > > What do you think?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub , or mute the thread .; > ; > —; > You are receiving this because ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233:906,avail,available,906,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233,1,['avail'],['available']
Availability,"OK,; I updated the PR with a few things:; 1 / the test now checks the content of the generated files for error; 2 / Monitor has an additional data field ""fileName"" through which one can override the default path to the generated files; 3 / Monitor now respects basic coding guidelines; Looks a bit better now",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828:105,error,error,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828,2,['error'],['error']
Availability,"ObjectFactory] Module name cannot be found when registering DeprecatedComponent<> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamAdapterActionController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering InterventionalRadiologyController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering SutureController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamForceFieldAndMass<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveInflatableBeamForceField<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Vec3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamLengtthMapping<Rigid3d,Vec1d> into the object factory. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725:2129,failure,failures,2129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725,2,['failure'],['failures']
Availability,"OglModel was : ; - converting some data (vertices, normals) from (default) double to float, 'cause it was set to float for OpenGL; - textures was hard-set on float (and set as float for Ogl); - tangents on double (and set double for OGL). so a weird mix of conversion or not. So now everything is in `SReal` type (so double by default) and set as GL_DOUBLE for the GPU. This should not have any consequence for the performance, as OpenGL will still use single float-point for calculations _a priori_; And some cleanings here and there as usual. Based on; - #2855 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856:1109,failure,failures,1109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856,2,['failure'],['failures']
Availability,"Ok I didn't take the time to run the tests myself so I wanted to see the Dashboard. Is it actually possible to have more than 1 failure in a test ? Both ""ATLEAST_ONE"" and ""ATLEAST_TWO"" seem useless there.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370723402:128,failure,failure,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370723402,1,['failure'],['failure']
Availability,Ok found it: the scene-tests are not performing in default mode (100 iterations with a timeout of 60s for a Debug build) because FastTetrahedronCorotationalForceField.scn is listed with custom values in examples/.scene-tests config file.; Renaming the scene according to b061a51606f9dbe6a8bb9305eb6a95af0aad6bf5 should calm down the CI ;-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442:324,down,down,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442,1,['down'],['down']
Availability,Ok it's fixed now. Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/ :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391:117,down,download,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391,1,['down'],['download']
Availability,"Ok now it works, but I also need to gil-protect any module initialization that does python stuff, otherwise we get the (righteous) following error:. `Fatal Python error: PyThreadState_Get: no current thread`. and a segfault ensues. . On a related note, there really should be no naked (as in ""not wrapped in a proper `PythonEnvironment` method"") python call apart from bindings methods.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313618145:141,error,error,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313618145,2,['error'],['error']
Availability,"Ok so I see still a lot of change to do before to have a clean PR to merge. ; The first change is probably to make the code available in an independant plugin. ; I wonder if this could be an opportunity to make the whole VolumetricData a plugin ....this could be a kind of gentle test for sofa core pluginiization, . @guparan , @hugtalbot , @fredroy any opinion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354#issuecomment-325373316:124,avail,available,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354#issuecomment-325373316,1,['avail'],['available']
Availability,"Ok so after a quick look at the [code](https://github.com/sofa-framework/sofa/blob/master/SofaKernel/framework/sofa/helper/ArgumentParser.cpp#L128), there is already a path that handles `--` in a non-standard way. Any argument following `--` is added to the files list, and all but the first files are ignored in the main `runSofa` executable. I don't really know if there are other binaries relying on this behavior, so what we could do is:; - either handle `--` properly, i.e. all arguments after `--` are ignored by SOFA and made available for further use, in this case by forwarding them to python.; - or add an `--extra` or `--argv` special argument that will do the same without interfering with current behaviour.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-323685597:533,avail,available,533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-323685597,1,['avail'],['available']
Availability,"Ok so, hopefully the end of this PR. I reverted some commit and double/both should be back to normal. In the case of float only the DilateEngine is not available and its test deactivated. So basically it should compile fine, but some components would be limited.; I quickly tried to fix it but I encountered some difficulties. I would prefer open a new issue regarding float compliance of remaining components. To sum up, it should be back to the original goal: fix compilation, not necessarily the components with type limitation",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305318209:152,avail,available,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305318209,1,['avail'],['available']
Availability,Ok thank for the extra details. After a quick glance this line is changing the way CImg is handling error. ; The problem is that it tries to lock mutex which somehow cause the crash. ; My current guess is that if it could be related to the fact that there is either image & CImage plugin which are both using CImg...which have static initialized structure...just a guess... EDIT: mmm I'm deeply thinking...in CImg; ```cpp; #if defined(cimg_module); Mutex_info& Mutex_attr();; #elif defined(cimg_main); Mutex_info& Mutex_attr() { static Mutex_info val; return val; }; #else; inline Mutex_info& Mutex_attr() { static Mutex_info val; return val; }; #endif; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356095077:100,error,error,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356095077,1,['error'],['error']
Availability,"Ok the PR' works, I looked at each build on jenkins...no failure...but the formatter is not launched but I think we can ignore the formatting stuff to move forward the release. @guparan @bcarrez do you agree ?. PS: the sofa dashboard doesn't like PR with weird name & symbols :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976:57,failure,failure,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976,1,['failure'],['failure']
Availability,"Ok the following works: . ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }; ; if( PySequence_Check(object) ) {; std::stringstream ss;. for(Py_ssize_t i = 0, n = PySequence_Length(object); i < n; ++i) {; if(i > 0) ss << ' ';; ss << convert_string(PySequence_GetItem(object, i));; }; ; return ss.str();; }. // fallback to python string conversion; PyObject* str = PyObject_Str(object);; std::string res = PyString_AsString(str);; Py_DECREF(str);; ; return res;; }; ```. `Binding_BaseObject.cpp:`. ```c++; SP_CLASS_METHODS_END;. static struct patch {; patch() {; // set __str__ slot for BaseObject; SP_SOFAPYTYPEOBJECT(BaseObject).tp_str = [](PyObject* self) {; return BaseObject_getLinkPath(self, nullptr);; };; }; } patcher;. SP_CLASS_TYPE_SPTR(BaseObject, BaseObject, Base); ```; It does breaks some python tests in Compliant, but this is due to errors there. I can push code to another PR that does the whole thing if needed (I don't think I have push access to this one).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648:957,error,errors,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648,1,['error'],['errors']
Availability,"Ok, great! I will check out the examples and give you feedback next week. Regarding the naming: This could end up being a lengthy discussion. My reasoning is that names like ""DataEngine"" have their origin in how things are implemented. I think from a user perspective it is easier to understand names like ""PyScriptableComponent"" or even ""PyComponent"", because that is what they are: components, just like any other in Sofa, with Datas, Inputs and Outputs and a certain behavior, which can be implemented in python. Of course there's the disadvantage of breaking the name consistency. If we keep the ""DataEngine"" name somehow, I vote for PythonDataEngine. Saying it is also ""Script"" is redundant.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406602449:686,redundant,redundant,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406602449,2,['redundant'],['redundant']
Availability,"Old version using a specific TopologyHandler overriding callbacks will be totally remove in future PR. ; Use specific callbacks inside the TopologySubsetData. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2868:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2868,2,['failure'],['failures']
Availability,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028:166,error,error,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028,2,"['Down', 'error']","['Downgrading', 'error']"
Availability,"On clang/g++ the visibility is not set (left blank). . This means that a sofa code using SOFA_EXPORT_DYNAMIC_LIBRARY but compiled with a command line setting the unspecified visibility to ""hidden"" will have linkage problems. . This fix the issue so now public code...are really public in clang/g++ . I'm not sure if there is non win32 compiler that does not understand this attribute. If this is the case,it is possible to add extra #ifdef GCC & CLANG & xxx. DM. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1410:719,failure,failures,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1410,2,['failure'],['failures']
Availability,On desktop with multiple screen the existing code to dimmension the; windows is wrong as it report the largest size. This FIX the problem; by using the correct way to get he screen geometry associated with a; widget. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1010:473,failure,failures,473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1010,2,['failure'],['failures']
Availability,"On my end, never used, because never really worked this BarycentricStickContact response!; Now it is, and an example scene is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2509:680,failure,failures,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2509,2,['failure'],['failures']
Availability,On my way to fix this issue https://github.com/sofa-framework/sofa/issues/895; I found that the Xsp code was duplicated with a C and a C++ version. . So I refactored the two and I added some tests to the files. ; On of the added test in ReadState_loadFailure is currently failing...wich is expected as it shows an existing problem for which fixing is outside the scope of the PR. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918:638,failure,failures,638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918,2,['failure'],['failures']
Availability,On running the command: bin/runSofa -g batch -n infinite; infinite iterations will start and time computed after every 1000 iterations will be echoed.; Solving the issue #552 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613:143,echo,echoed,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613,3,"['echo', 'failure']","['echoed', 'failures']"
Availability,"On the BFM it compile perfectly!; There are just some errors related to update & doUpdate function that will need to be fixed but this doesn't come from this MR. (@EulalieCoevoet); I also test some examples and still no error for me, so it should be ok.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131:54,error,errors,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131,2,['error'],"['error', 'errors']"
Availability,"On the dash ; http://www.sofa-framework.org/dash/index.php?limit=10&pg=1&user=&branch=pr%2Ffix_filerepository&platform= . I do not see an information to be able to fix any compilation pb, I might not be looking in the right place ? Can you point me the correct dash url ? . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Author""; > <author@noreply.github.com>; > Envoyé: Jeudi 19 Janvier 2017 10:46:13; > Objet: Re: [sofa-framework/sofa] [SofaKernel] Fix FileRepository should not; > be optional (#122). > This PR:. > * succeed on all compilations setup on the CI.; > * does not generates new warnings or test failure.; > * does not break existing scenes.; > * does not break API compatibility.; > * is now 1 week old. > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274104510:755,failure,failure,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274104510,1,['failure'],['failure']
Availability,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603:1618,failure,failures,1618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603,2,['failure'],['failures']
Availability,One (new) scene is failing: `SceneTests.applications/plugins/LMConstraint/examples.DOFBlockerLMConstraint.scn`; The error message is: ` [ERROR] [UncoupledConstraintCorrection(default67)] Cannot remove the requested constraint solver` ; It is possible that the scene itself was wrong but it is highlighted here because you add a msg_error(),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-934166940:116,error,error,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-934166940,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1870:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870,2,['failure'],['failures']
Availability,One good point about ignoring scenes with unmet `RequiredPlugin` dependencies is that we can see what scenes need some `RequiredPlugin`: they are the only left to crash trying to create unknown components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/628:462,failure,failures,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/628,2,['failure'],['failures']
Availability,"One memory leak was identified, use of size_t is added and fix in the init of cube; Fix #804 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/815:351,failure,failures,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/815,2,['failure'],['failures']
Availability,One more plugin in Sofa. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/477:283,failure,failures,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/477,2,['failure'],['failures']
Availability,One more plugin in Sofa. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/486:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/486,2,['failure'],['failures']
Availability,"One of the constructor of type::Vec takes a raw pointer and fill itself from this pointer, using its **own size**.; But the ctor does not know the size of the given array so this can contribute to unsafe behavior.; E.g ; ```; SReal array[2] = {1.0, 1.0};; sofa::type::Vec<3, SReal> vec(array);; ```; is valid and will compile; but it will lead to unexpected result (in the best case, a crash); GCC detected this case while compiling SpringForcefield with the bbox function on 2d and 1d datatypes.; And this leads to an other problem, with the case of TBoundingBox, which relies fully on this mechanism.; This PR removes as much as possible the usage of the unsafe ctor (effectuvely removing TBoundingBox usage) but does not deprecate TBoundingBox by itself (I suppose it should be). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3124:1327,failure,failures,1327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3124,2,['failure'],['failures']
Availability,"One package was missing in the SofaMeshCollisionConfig.cmake.in, so out-of-tree projects using sofameshcollision are throwing error while doing the cmake config. (allows to compile the plugin beamadapter out-of-tree). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2400:126,error,error,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2400,3,"['error', 'failure']","['error', 'failures']"
Availability,"One simple solution, it to add [Base::checkDataValidity()](url). Its call would be let to the application.; For example, runSofa would call it right before `init` and `reinit`, but a more specific application could chose not to call it not to add over-cost. Note that high level checkers could be implemented (such as `check_it_is_a_valid_vector_of_indices`, ...). The downside is how to perform the check on a single Data rather than at the component level? But maybe it would be way sufficient for what we attend to do?; To perform the test at the Data level, we need to differentiate Data modification coming from a user vs coming from a computation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603:369,down,downside,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603,2,['down'],['downside']
Availability,"One small thing, should we mark this PR as breaking? ; From my experience (🥱), a lot of people don't really include what they use, so it could happen that a seemingly useless include in one could be useful further, in their plugin or whatever. I know this is really a bad practice from their part but still, people complain even if it is their fault 🤪.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-986582757:344,fault,fault,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-986582757,1,['fault'],['fault']
Availability,"One step towards continuous delivery in SOFA :tada: . This PR reworks/cleans CPack usage for release packaging and adds a new generator : [Qt Installer Framework](http://doc.qt.io/qtinstallerframework/ifw-overview.html). Very useful to unify packaging methods, it will be at first used to generate nice installers for Linux. This means no more .zip package for Linux binaries, unless you want to keep them?. Note: This PR also adds the opening of an URL after installation to ask the user to consider donating to the SOFA project. Do not hesitate to comment if you disagree with this idea. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/796:846,failure,failures,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/796,2,['failure'],['failures']
Availability,"One type to rule them all... ©. Bigger than expected PR; made to harmonize index type for templated Vector/Mat type.; (some had int as index type, other unsigned int, or std::size_t, etc); ~Surprisingly not very breaking with MSVC, but GCC (and clang?) does break when templates declared as int.; (flexible/compliant was a PIA to fix)~ After a fuckton of commits, I regret this sentence 🙃. MAIN BREAKING POINT: VisualModelImpl needs indices to be int and not long (like std::size_t) so it cannot take directly the topology types (Triangle, Quad, etc) for its buffers. Thats why there are now VisualEdge, VisualTriangle, VisualQuad which still takes index as int.; (main reason is that graphical systems (OpenGL, etc) only can manage integers). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1453:1000,failure,failures,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1453,2,['failure'],['failures']
Availability,"Only ArticulatedHierarchyContainer is using BVH (file format describing articulations system); + cleanup while moving. (And BVHContainer has OpenGL code, messing with a future PR moving all OpenGL-related code from Helper to an independent package #1645 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1644:801,failure,failures,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1644,2,['failure'],['failures']
Availability,Only an optimal version based on the initial values of the; stiffness vector was implemented. Need to have updated stiffnesses. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/579:384,failure,failures,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/579,2,['failure'],['failures']
Availability,Only did some base classes that were generating multiple warnings.; And also the topology containers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/729:358,failure,failures,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/729,2,['failure'],['failures']
Availability,"Only implicit type conversions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3545:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3545,2,['failure'],['failures']
Availability,Only minor typos etc in investigating the collision of SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1411:317,failure,failures,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1411,2,['failure'],['failures']
Availability,"Only one component inside ... #1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1572:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1572,2,['failure'],['failures']
Availability,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2321:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321,2,['failure'],['failures']
Availability,Only small bug fixes according to release notes so it should not be breaking.... source taken from: https://sourceforge.net/projects/qwt/files/qwt/6.1.4/; release notes: https://sourceforge.net/p/qwt/news/. Fix #1134; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1136:474,failure,failures,474,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1136,2,['failure'],['failures']
Availability,Only some cleaning in:; - Class define macro; - Data and member prefix; - Move code from header to inl or cpp files. Update several plugin demo scenes. ![SpatialGridContainer_00000001](https://user-images.githubusercontent.com/21199245/66745709-13632500-ee80-11e9-9cfe-94e1a9e4d27c.png); ![SPHFluidForceField_benchmarks_00000001](https://user-images.githubusercontent.com/21199245/66745711-13632500-ee80-11e9-8382-738a86b68c3c.png); ![SPHFluidSurfaceMapping_00000001](https://user-images.githubusercontent.com/21199245/66745713-13fbbb80-ee80-11e9-98a1-ea1386f91c19.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186:827,failure,failures,827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186,2,['failure'],['failures']
Availability,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1840:356,redundant,redundant,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840,3,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"Only the new callback mechanism should be used:. ```; TopologyData::setCreationCallback; TopologyData::setDestructionCallback; ```. PR #2867 and #2868 need to be merged first as they removed last uses of this old mechanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2869:768,failure,failures,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2869,2,['failure'],['failures']
Availability,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1795:647,failure,failures,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795,2,['failure'],['failures']
Availability,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2167:822,failure,failures,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167,2,['failure'],['failures']
Availability,"Option to add the SOFA scene as a project in the build solution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2327:609,failure,failures,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2327,2,['failure'],['failures']
Availability,"Originally it was to get rid of the std::cout (and its associated tests) in the partial_solve functions, but I ended up renaming the Data because it was bothering me.; (and remove one because it is not used at all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3226:760,failure,failures,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3226,2,['failure'],['failures']
Availability,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471:1256,failure,failures,1256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471,2,['failure'],['failures']
Availability,"Otherwise the component cannot be drawn due to changes in https://github.com/sofa-framework/sofa/pull/2478. EDIT: about HexahedronFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2499:689,failure,failures,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2499,2,['failure'],['failures']
Availability,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2200:662,failure,failures,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200,2,['failure'],['failures']
Availability,"Oups sorry @hugtalbot , I didn't see the notification that you ping me in this thread. I don't know why the triangles were oriented this way. For the breaking part, if someone was using them for BC or collisions, it will definitely break. The next thing I can see is, you are not only changing the orientation of the triangle, but also the ordering of these triangles inside the tetrahedron. If I do `TetrahedronSetTopologyContainer::getLocalTrianglesInTetrahedron (const TriangleID i)`, I no longer have the same triangle as before. That might also break something, although I can't find anything with a quick search in Sofa using it. ~~Finally, these indices are hardcoded in the cpp, and not accessible from the outside. So if someone is using them, it means he copy/pasted them in his source file. They will no longer match the one of the tetra container. This might have weird effects. It could be a good idea to make them available either directly from the header or inside a get function so that in the future, anyone using them will be in sync with the tetra container.~~ They have `getLocalTrianglesInTetrahedron` for this, I'm a little bit tired !. I guess it is ok to go forward with this, but have this PR in mind if you got ""my pressure FF doesn't work anymore, what are you guys doing????"" on the forum :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/878#issuecomment-454860278:63,ping,ping,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/878#issuecomment-454860278,2,"['avail', 'ping']","['available', 'ping']"
Availability,"PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2162,ERROR,ERROR,2162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,"PR #1028 added a getter for the records of the advanced timer that automatically assigns the string version of the record's **id** to a new field called **label**. There was a small problem with this, records can have different types of ids (IdTimer, IdStep, IdVal or IdObj). Casting a record id to a wrong type causes the wrong string version of the id to be assigned to the label. This PR fixes this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1244:659,failure,failures,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1244,2,['failure'],['failures']
Availability,PR #139 moved licence.txt into license.LGPL.txt. This changed has not been propagated in the cpack config. I didn't create a branch as only one line is modified. Hope it doesn't break the CI... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194:424,failure,failures,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194,1,['failure'],['failures']
Availability,PR #158 broke livecoding of shader. This PR restore it. @guparan and @hugtalbot Could this PR be treated in fast-path please ? . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/415:385,failure,failures,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/415,2,['failure'],['failures']
Availability,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1805:1035,failure,failures,1035,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805,2,['failure'],['failures']
Availability,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2087:1307,failure,failures,1307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087,2,['failure'],['failures']
Availability,PR #213 breaks api compatibility because it misspelled MessageAsTestFailure; by MesssageAsTestFailure (with three 's'). This commit fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/269:372,failure,failures,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/269,1,['failure'],['failures']
Availability,"PR #3821 introduce new rendering features which breaks the default rendering mode of TetrahedronFEMForceField (it is rendered pure white instead of our classical bluish tetra rendering). . In current PR I restore the default rendering to use the blueish mode still preserving the features added in 3821. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3971:848,failure,failures,848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3971,2,['failure'],['failures']
Availability,"PR 2419 restores the correct behavior of CGLinearSolver regarding the call-super-init; https://github.com/sofa-framework/sofa/pull/2419. But as some of its data are tagged as Required, this rise an error message when the value; is not set by the user. I'm not sure it is wise to set the required flag when data provides meaningful and usable default values. I recommand removing it and more generally keep the isRequired only for data field that really have no possibility to have a default value (eg: the filename for a loader). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2498:198,error,error,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2498,3,"['error', 'failure']","['error', 'failures']"
Availability,"PR adds a first implementation of the augmented lagrangian collision (see [A Surface-to-Surface Finite Element Algorithm for Large Deformation Frictional Contact](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6056201/pdf/bio-17-1579_081013.pdf)). . To do so, because it is very close to the classical Unilateral constraint, I've tried to factorize code by adding a virtualization layer for both the constraints and the associated contact responses (see added class BaseContactLagrangianConstraint and BaseUnilateralContactResponse). It rely on a contact param template which is the only thing that differs in term of data and of course the type of ConstraintResolution used. . An example scene is introduced in the Demo folder, simply copying the falling beam example and replacing the response by the augmented lagrangian one. . There are still one todo for the future, even if this PR is already working on its own : adding the per-contact-point penalty modulation. This should be done by going back to the collision element using the DetectionOutput.elem attribute. This allows to go back to the topology. The only unknown is how to compute the element volume when the colliding topology is mapped to the simulated one. . [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/142]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003:1850,failure,failures,1850,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003,2,['failure'],['failures']
Availability,"PR on topologyGrid:. - Add new component: SphereGridTopology to create sphere topo. using grid (similar to CylinderGridTopology) with an example: SphereGridTopology.scn; - Clean the API GridTopology and its children: RegularGridTopology/SphereGridTopology/CylinderGridTopology, move several methods into mother class GridTopology.; - Add doxygen doc for the 4 classes; - Add tests for Cylinder and SphereGridTopology; - Add method addSphere/addRigidSphere in sceneCreator + tests + example. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/164:665,failure,failures,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/164,1,['failure'],['failures']
Availability,PR: first version of the integration of assimp Importer to Sofa loader structure. - Only support single mesh creation for the moment: see discussion: https://github.com/sofa-framework/sofa/issues/602; - Change all loader logs to use msg_error/warning/info; - Change in SofaKernel :; - loader that failed at init is now set to componentState Invalide.; - Add extension field in Datafilename. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:647,failure,failures,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,2,['failure'],['failures']
Availability,Paper submitted yesterday => perfect time to blow off some steam and kill some warnings. Before:; ![image](https://user-images.githubusercontent.com/6951981/75091097-02cb6580-556a-11ea-8e30-c2fe6ef641c4.png). After:; ![image](https://user-images.githubusercontent.com/6951981/75091104-0eb72780-556a-11ea-92df-437ec225f34b.png). P.S.: Let's wait for the CI before merging :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1258:632,failure,failures,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1258,2,['failure'],['failures']
Availability,"Parent modules must always interface the same libraries.; e.g. Sofa.Component.dll must always be the same. Thus, if some of its child modules are disabled, parent module will not generate a library. This PR creates and uses a new macro `sofa_add_subdirectory_modules`.; This macro is meant for parent modules to easily add their child modules and sets a variable with all added targets.; If a child module is missing or disabled, a message will be shown (not an error) and the library will not be created. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3225:462,error,error,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3225,3,"['error', 'failure']","['error', 'failures']"
Availability,Part 1 of #629 This PR creates more Sofa Types in the PSDEFactory and uses a cpp-style typename convention . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/740:365,failure,failures,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/740,2,['failure'],['failures']
Availability,"Partial revert of #3822 where the usage of glBufferSubData is reinstated; because glMapBufferRange is a OpenGL3 function and it does not behave well with macos and ogl compat mode (reports of crashes). `1000 iterations done in 11.859 s ( 84.3241 FPS)`. A bit worse than with glMapBufferRange but still better than before #3822. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3841:872,failure,failures,872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3841,2,['failure'],['failures']
Availability,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2026:841,failure,failures,841,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026,2,['failure'],['failures']
Availability,"Pass extra command-line arguments for python scenes loading in a more high-level function call. Knowing that SofaQtQuick uses a different argument parser, the underlying objective of this commit is to be able to pass command-line extra args using QCommandLineParser. This feature is ready on the side of SofaQtQuick and it works (i.e. attached patch). Note that the added input parameter 'sceneArgs' in the 'load' functions is an optional parameter. [patch_pyargs_support.txt](https://github.com/sofa-framework/sofa/files/3073394/patch_pyargs_support.txt). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992:813,failure,failures,813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992,2,['failure'],['failures']
Availability,Ping @untereiner,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/290#issuecomment-310087786:0,Ping,Ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/290#issuecomment-310087786,1,['Ping'],['Ping']
Availability,"Playing with ClangBuildAnalyzer, I noticed that BoundingBox was in the top ten of the most expensive include.; Indeed BBox was included in Base.h so everybody is including it. (and consequently Vec.h too). ```; 423823 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 511 ms), ; 362330 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 778 times, avg 465 ms),:; ```. Fortunately, It was painless to do a forward declaration with it.; After this update, BBox.h (and Vec.h) is much less expensive in the whole compilation process. ```; 84215 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 101 ms),; 22233 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 779 times, avg 28 ms)`; ```. Weirdly, it is still included a lot (because of DataTypeInfo_BoundingBox.h) but it is nevertheless much less expensive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728:1447,failure,failures,1447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728,2,['failure'],['failures']
Availability,"Playing with UndefinedBehaviorSanitizer and came across UBs at the very start... This first one is triggered because of misaligned adress when reinterpret_cast a a pointer of char to a a pointer of uintr32_t. ```; Sofa/framework/Core/src/sofa/core/objectmodel/Base.cpp:149:35: runtime error: load of misaligned address 0x7f5e01822917 for type 'const uint32_t', which requires 4 byte alignment; 0x7f5e01822917: note: pointer points here; 6c 2e 68 00 64 72 61 77 00 73 68 6f 77 00 56 69 73 75 61 6c 69 7a 61 74 69 6f 6e 00 22 20 00 4c; ```. This is easily fixed by removing this `questionnable` (sic 😅) ""optimized"" test for comparing strings, and convert to a more readable (and modern) code; I dont really see the need to optimize (and in this way...) this part . For those curious about the optimization, it comes from; https://github.com/sofa-framework/sofa/blame/b3fdf7e4619536941e9cfdd6d4bc6f3e7169af0b/framework/sofa/core/objectmodel/Base.cpp#L96; and; https://learn.microsoft.com/en-us/windows/win32/directshow/fourcc-codes; apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3664:285,error,error,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3664,3,"['error', 'failure']","['error', 'failures']"
Availability,"Playing with [SofaBenchmarks](https://github.com/alxbilger/SofaBenchmark), stumbled on the constructor of sofa::type::vec:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.6 us 13.2 us 74667; BM_FixedArray_construct<sofatypefixedarray3f>/8192 13.0 us 14.2 us 112000; BM_FixedArray_construct<sofa::type::Vec3f>/8192 26.7 us 24.2 us 21333; ```; (trying to construct 8192 std::array<float, 3> vs sofa::fixed_array<float,3> vs sofa::type::vec3f); Unexpectedly, the vec3f is almost twice slower that the other, which is weird as type::vec3f inherits fixed_array<float,3>; By using the constructor of fixed_array (instead of calling set()), we can achieve closer results:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.9 us 12.2 us 64000; BM_FixedArray_construct<sofatypefixedarray3f>/8192 12.7 us 10.6 us 89600; BM_FixedArray_construct<sofa::type::Vec3f>/8192 15.0 us 17.4 us 42165; ```. I did my tests on Windows/MSVC2019 so maybe results are different with different compilers/systems though... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2439:1540,failure,failures,1540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2439,2,['failure'],['failures']
Availability,"Please gently welcome this first NG pull-request :blush: . The base idea was to remove the SofaComponent* packages from modules and to put them in their own place instead.; Doing this, I realized that SofaComponentBase contains actual components (it's not only a basic package as it should be).; Thus, it permitted me to introduce the first NG module Sofa.Component.Utils and fill it with SofaComponentBase intruders (MakeAliasComponent, MakeDataAliasComponent, MessageHandlerComponent, InfoComponent). NG architecture is based on the discussions in #543.; Transition headers are also provided (in deprecated_layout folder) to ensure old includes. I am also working with @damienmarchal on a way to cleanly automatize this kind of NG refactoring with python: see https://github.com/guparan/sofa2ng. Feedback is more than welcome!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/620:1086,failure,failures,1086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/620,2,['failure'],['failures']
Availability,"Please review carefully, this PR could be breaking (but should not). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/782:325,failure,failures,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/782,2,['failure'],['failures']
Availability,Please try it on the CI before merging ;) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/431:300,failure,failures,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/431,2,['failure'],['failures']
Availability,Plugin = to be loaded by PluginManager (via `<RequiredPlugin/>` or plugin_list.conf).; Classic library = does not contain any Component. sofa2ng has been modified accordingly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/872:432,failure,failures,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/872,2,['failure'],['failures']
Availability,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4484:23,Error,Error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484,3,"['Error', 'failure']","['Error', 'failures']"
Availability,"PluginFinder : https://github.com/alxbilger/PluginFinder. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2860:602,failure,failures,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2860,2,['failure'],['failures']
Availability,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1823:914,failure,failures,914,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823,2,['failure'],['failures']
Availability,"PoC removing a piece of code which seems to be useless.. ; I guess it was aimed at supporting topo changes but in fact it isn't used!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3230:679,failure,failures,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3230,2,['failure'],['failures']
Availability,"PointConstraint is removed.; serr/sout/sendl are removed.; A lot of headers will now trigger the SOFA_DISABLED_HEADER error if included. Please review, I may have done bad/brutal things. [ci-depends-on https://github.com/sofa-framework/Registration/pull/3]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/268]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090:118,error,error,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090,3,"['error', 'failure']","['error', 'failures']"
Availability,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2268:174,redundant,redundant,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268,3,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"Poisson's ratio should be in [0,0.5[. This PR adds an error message if it's not the case. ; A value outside [0,0.5[ just leads to an odd behavior. . **EDIT**: a warning message (not error). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2908:54,error,error,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2908,4,"['error', 'failure']","['error', 'failures']"
Availability,Port the headless recoder to use helper/gl/VideoRecorderFFMPEG.h instead of its own implementation of it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/919:362,failure,failures,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/919,2,['failure'],['failures']
Availability,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4269:709,failure,failures,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269,2,['failure'],['failures']
Availability,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1756:996,failure,failures,996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756,2,['failure'],['failures']
Availability,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1797:1411,failure,failures,1411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797,2,['failure'],['failures']
Availability,"Preparation for sofang. ComponentChange does not handle the case where a component is still creatable/invokable from a (deprecated) plugin but the ""real"" component has been moved into an other plugin (typically from a current Sofa Module to a planned new SofaNG module); This PR add this case into ComponentChange. The current ""Moved"" class handles the case where a component has been *really* moved from two plugins (i.e not creatable anymore if the original plugin is still used. + some cleanups coming from suggestions from SonarLint. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2565:1082,failure,failures,1082,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2565,2,['failure'],['failures']
Availability,"Prepare outsourcing of the LMConstraint plugin; New plugin is now available at :arrow_right: https://github.com/sofa-framework/LMConstraint. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2508:66,avail,available,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2508,3,"['avail', 'failure']","['available', 'failures']"
Availability,Previous PR #1034 deprecating the naming in scenes and in C++ of XxxxxModel into XxxxxCollisionModel for clarity. This PR fixes all generated warnings in the code related to this deprecation. All scenes in SOFA were already updated in #1292. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301:498,failure,failures,498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301,2,['failure'],['failures']
Availability,Previous build was affected by master errors. Let's [ci-build] again.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-317358404:38,error,errors,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-317358404,1,['error'],['errors']
Availability,"Previous version of libQGLViewer was not compatible with Qt6, but a recent update was released and should be OK. ; (at least it is with my setup, MSVC/Qt6.4.0); So I updated the version of libQGLViewer present in the source (good or bad, I dont know....); and restore the choice in the CMakeLists.txt of Sofa.Gui.Qt. I also removed the version in the folder name. Note that we cannot take the source as it is, as there is not CMakefile, and there were some errors with MSVC about std::min/std::max (need to remove std::, and seems it was already done with the source already in the repo). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3454:457,error,errors,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Previously, the default mode was NOTICE, which print the message in red. The doc says ""Important message printed to stderr to attract user's attention."". The consequence was that almost all the CMake log was written in red, and it was difficult to find the true important messages. This commit change the type of message so it is written in black. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3381:892,failure,failures,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3381,2,['failure'],['failures']
Availability,"Pro:; - type and signature consistancy at compile time.; - ease the refactoring as the signal/slots are noww real method; - make explicit the type conversion between different signature. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2943:731,failure,failures,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2943,2,['failure'],['failures']
Availability,Probably because of the removal of the DataRepository intialization in https://github.com/sofa-framework/sofa/commit/5dad27f7bc374c190042959bc55367532008b25a#diff-876fc7003912f34d0dac92bb413d70a0 ; The tests are failling but as they were not in-heriting from BaseTest/SofaTest this was not reported as test failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440205222:307,failure,failure,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440205222,1,['failure'],['failure']
Availability,"Probably because:; [ERROR][PluginManager] Plugin not found: ""SceneCreator_d""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342440057:20,ERROR,ERROR,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342440057,1,['ERROR'],['ERROR']
Availability,"Probably not related, but there is a compilation error on Windows (@guparan)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1149987605:49,error,error,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1149987605,1,['error'],['error']
Availability,Probably the best way to see where this operator overloads are used is to remove them from StdVectorTypes (Vec3Types and family) and see where we get the compile errors.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1525#issuecomment-706554627:162,error,errors,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1525#issuecomment-706554627,1,['error'],['errors']
Availability,"Problem detected while using the install distribution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2705:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2705,2,['failure'],['failures']
Availability,Problem including SofaCUDA plugin - compilation errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579:48,error,errors,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579,1,['error'],['errors']
Availability,Problem of convergence of the StandardTetrahedralFEMForceField. Quick solution = decrease force applied and highlight the data of the new version of StaticSolver; But we should check since when / due to which commit this error occured (check #950 ). NOT to merge before answering below points; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1207:221,error,error,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1207,3,"['error', 'failure']","['error', 'failures']"
Availability,"Problem statement:; Historically a lot of tests were implemented with the assumption that warning or error messages were tests failure. This assumption was problematic as it favor the testing of code paths that does not generate warning or errors instead of testing all the possible paths. To favor both valid and invalid paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:101,error,error,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,8,"['error', 'failure']","['error', 'errors', 'failure', 'failures']"
Availability,Problem: build errors in libQGLViewer with MSVC 2015. See https://github.com/sofa-framework/sofa/pull/461; Solution (TODO): update libQGLViewer to the latest version (2.7.0).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/464:15,error,errors,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/464,1,['error'],['errors']
Availability,"Problem:; It is common that people write scene in which they used components from specific plugins but forgot the corresponding ; ```xml ; <RequiredPlugin name=''>; ```; because they, in a way or an other, preload the plugin. . This is problematic because, when the environment change (you compile sofa in a different way, your preload different plugin, it is a different person on a different computer,... ) and the preload is not done anymore it makes the component/plugin tracking very hard if it is not a trivial component in a trivial plugin. . To solve this problem, I implemented a SceneCheckerVistitor that scans the scene and detects which components are from a plugin and warn the user if there is no RequiredPlugin in there scene with this component and explaine how his scene should be fixed for the good of all. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/306:1083,failure,failures,1083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/306,2,['failure'],['failures']
Availability,Problem:; MessageDispatcher is not thread safe as showned with the failing test named ; testThreading_OpenIssue. This PR:; - the MessageDispatcher is now thread safe so we can emit messages from different threads. ; - the test is not an OpenIssue anymore and its future failure should be considered as regression. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/257:270,failure,failure,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/257,2,['failure'],"['failure', 'failures']"
Availability,Problem:; The implementation of getRelativePath is broken as it returns the current; value which can be either a relative or an absolute path. Solution:; The new implementation is building a real relative path against the path contained; in the DataRepository. I also added few test for DataFileName to valide the different behaviors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/250:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/250,1,['failure'],['failures']
Availability,"Project SparseMatrices, Mapping & Mask : general discussion",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26:34,Mask,Mask,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26,1,['Mask'],['Mask']
Availability,"Propagation of positions through mappings is required in Newton loop, otherwise the initial position (the one before the Newton loop) is used when computing forces. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2584:709,failure,failures,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2584,2,['failure'],['failures']
Availability,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2102:570,failure,failures,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102,2,['failure'],['failures']
Availability,Python 2.7 is not compatible with C++17 and later. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284:307,failure,failures,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284,2,['failure'],['failures']
Availability,"Qt6 did not handle QtCharts and QtWebEngine until 6.2 (I think). This PR restores the two features, and fix the code : some deprecated/changed functions here and there and QtCharts code is no longer in its own namespace. This PR + #3454 allow us to have the same feature between Qt5 and Qt6 (and maybe giving up on Qt5 soon). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3456:870,failure,failures,870,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3456,2,['failure'],['failures']
Availability,Quick PR to fix the SofaPhysicsApi project; - Remove deprecated code regarding OpenGL tetrahedron. ; - FIX some bad path in cpack installation; - Change some class declaration to allow inheritance. . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/167:374,failure,failures,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/167,1,['failure'],['failures']
Availability,"Quick and clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1707:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1707,2,['failure'],['failures']
Availability,Quick and simple!; Will fix Base_test.testComponentState. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1204:314,failure,failures,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1204,2,['failure'],['failures']
Availability,"Quick clean based on Boost+CMake `/include` error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3067:44,error,error,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3067,3,"['error', 'failure']","['error', 'failures']"
Availability,"Quick clean before next work step. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3250:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3250,2,['failure'],['failures']
Availability,Quick commit to fix [build error](https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/325/console) after #370 merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/380:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/380,3,"['error', 'failure']","['error', 'failures']"
Availability,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2206:627,failure,failures,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206,2,['failure'],['failures']
Availability,Quick fix as glut has been removed from Sofa.; remove the glutInit which has nothing to be there. Moreover I don't think someone is using this project with useGui ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/659:422,failure,failures,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/659,2,['failure'],['failures']
Availability,"Quick fix of compile error, quite self-explanatory I guess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/680:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/680,3,"['error', 'failure']","['error', 'failures']"
Availability,"Quick fix: to allow Regression to dump only last step as before. Right now it will always dump all dofs at each timestep. WriteState init method check if d_period is set. ; Therfor If d_period is set to 0.0 it will activate a section of the code what will overwrite the period to the current timestep. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4919:848,failure,failures,848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4919,2,['failure'],['failures']
Availability,"Quick summary:; Problem 1: ; Quaternion (when unnormalized) can be used to encode more than juste R3 orientation so we shouldn't force the normalization in the Quaternion operator>>().; We should have normalization detection and renormalization done only on object that we know for sure are R3 orientation. So to me the proper fix should be done in the operator>> of Rigid3Type. Problem 2:; About reporting warning to the users. This cannot be done in the Quater::normalize function. Because normalization is a perfectly valid operation to apply on an un-normalized quaternion and thus there is no meaning to report a warning. Actually it is like printing a warning when we are doing exactly what the function is supposed to do. . Now, the problem goes far beyond this PR as reporting error/exception is a complex issue in Sofa as we rely on 'message' instead of exception and C-style error handling vs exception vs printing (as in sofa) is an as old problem as c++ and in our code base all the approaches have been used.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/790#issuecomment-430591085:785,error,error,785,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/790#issuecomment-430591085,2,['error'],['error']
Availability,"Quick test on what could be a direction to fix issue: https://github.com/sofa-framework/SofaPython3/issues/346. I'm now wonder:; - how to generalize that find more comprehensible names for all that. ; - is there room for small refactoring in TypeInfo related to the exisitng containers. . If some of you have suggestion, it is more than welcome. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3851:892,failure,failures,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851,2,['failure'],['failures']
Availability,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964:1583,failure,failures,1583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964,2,['failure'],['failures']
Availability,"Quick update of the MechanicalMatrixMapper so that when the user interacts on the simulated object with the mouse, the StiffSpringForceField that is dynamically added to the scene graph gets included in the forcefield link list of the MMMApper. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/772:501,failure,failures,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/772,2,['failure'],['failures']
Availability,"Quite intrusive in SOFA but I don't see another way to define it without an overwrite each time CMake runs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3313:652,failure,failures,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3313,2,['failure'],['failures']
Availability,"Quite verbose indeed (100 steps generates around 800KB of logs). May generate timeouts as well. WIP for the moment to see the difference on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4184:692,failure,failures,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4184,2,['failure'],['failures']
Availability,"R https://github.com/sofa-framework/sofa/pull/106 taking into account all the feedback and discussion in https://github.com/sofa-framework/sofa/issues/179. This PR contains: ; - a PerComponentLoggingMessageHandler to stores the messages in components in a much cleaner way compared to the existing code in Sofa.; - the old history code is removed but a compatibility layer on top of the new one is provided to ; provide backward compatibility (eg in third party code like qtSofaQuick). ; - the runSofa GUI is slighly updated and improved to make use of the new component. ; - the msg_api is extended to facilitate its use and coherency; - I fixed all around in the code base the mis-usages of printLog eg: if(f_printLog) cout << .... ; - I didn't replaced the f_printLog data field because it would have broken the API too much ; (maybe one day if someone care). Now a bried summary of the new functions in the msg_* API; ```cpp; msg_info() << ""This is a message sended by the this component"" ;; msg_info(other) << ""This is a message sended by the 'other' component"" ;; msg_info(""A String"") << ""This message is not sended by a component"";; ```; Each version also exist in a conditional form eg:; ```cpp ; msg_info_when(!file.valid()) << ""File is not valid"" ; ```. In the previous examples you can also replace 'info' with the type of message you want to emit among:; 'info', 'advice', 'deprecated', 'warning', 'error', 'fatal'. ; ; 'warning', 'error' and 'fatal' and 'deprecated' message cannot be muted with the printLog parameter while 'info','advice',' can. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190:1434,error,error,1434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190,3,"['error', 'failure']","['error', 'failures']"
Availability,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:4013,failure,failures,4013,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,2,['failure'],['failures']
Availability,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2212:725,failure,failures,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212,2,['failure'],['failures']
Availability,"RayTriangleIntersection is a weird class, used to only compute the intersection of a ray and a triangle (with even a version with TriangleCollisionModel?).; So ;; - I moved the useful function directly in Sofa.Geometry::Triangle (+a version w/o barycoeff ); - replace the usage where RayTriangleIntersection was used; - inline it (no compilation unit anymore for it); - and deprecate it for people still using it ; - write a small unittest as well. I took the liberty to generalize the normal() function in geometry::Triangle, as it would provoke a compilation error if used with something else than Vec3 (and extend the unittest with array type as well). Diff: https://github.com/fredroy/sofa/compare/remove_triplane_intersection_file...move_triangleoctree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2763:561,error,error,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2763,3,"['error', 'failure']","['error', 'failures']"
Availability,"ReadState was only reading the file and making the changes after the first time step (or later). ; This PR allows to load the state at init. . Edit: I forgot to mention that it shouldn't change the behavior of existing scenes. ; The file loaded by ReadState has time values that define at which time steps of the simulation each different state should be applied. Currently T=0 is not working, this PR simply allows that. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1654:968,failure,failures,968,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1654,2,['failure'],['failures']
Availability,"Reading a JPEG file is implemented by ImageQt, which obviously depends on Qt.; It means that Qt is needed to load any JPEG image (actually, also gif, and other exotic formats). 1) I think we should be able to read JPEG files without Qt ; perhaps using libjpeg ?; 2) Moreover, we need to have a Qt Gui to activate ImageQt ; then it could be an idea to move this class to a plugin ? Which will be able to read all image formats the Qt library can read ?; 3) (BUG) JPEG files read by ImageQt seem to be upside-down, if we compare it with the same image converted in the PNG format (I will write a test to confirm that)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51:507,down,down,507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51,1,['down'],['down']
Availability,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4507:602,failure,failures,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507,2,['failure'],['failures']
Availability,Really not sure about the change in Distances. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1441:303,failure,failures,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1441,2,['failure'],['failures']
Availability,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1889:970,failure,failures,970,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889,2,['failure'],['failures']
Availability,"Recently pluginized modules do not have the relocatable property set.; Here is the fix 🤫. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1604:634,failure,failures,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1604,2,['failure'],['failures']
Availability,"Recorder feature has been disabled for at least 10y (not even sure it would compile with the current state of Qt); and the feature itself seems to be broken anyway; Apparently it was supposed to allow a user to record and play back simulations . Commit to focus on:˙https://github.com/sofa-framework/sofa/pull/4041/commits/02f9cb7f14f72b7c71a8ec686ee47213c481f429. Based on ; - #4025. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4041:929,failure,failures,929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4041,2,['failure'],['failures']
Availability,Recover a commit in is_sofa_multithreading branch (3da9e50752d6aead487f0b5f8897bfc4249f9404) to allow OdeSolver concurrent execution:. A new data<bool> is added (d_threadsafevisitor) to disable allocation and writing in the mechanical object component used by the OdeSolver ; The same change is applied to all the OdeSolver derived class and it doesn't affect the default behavior and the scenes.; EulerSolver; EulerImplicitSolver; StaticSolver; CentralDifferenceSolver; VariationalSymplecticSolver; NewmarkImplicitSolver. Task Scheduler refactoring;; - improve task stealing between worker threads.; - add worker thread name to make the debugging and profiling easier.; - group and move the initialization tasks in a dedicated file. New component and scene to show off the performance improvement of multithreading execution.; - MeanComputation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/745:0,Recover,Recover,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/745,3,"['Recover', 'failure']","['Recover', 'failures']"
Availability,"Recovering changes made by @olivier-roussel in his [patch](https://github.com/sofa-framework/conda-ci/blob/master/conda/recipes/sofa/patches/allow-compilation-out-of-SOFA.patch). To be noted @fredroy : in _Sofa/GUI/Qt/CMakeLists.txt_, Sofa.GL is only found in a QUIET way and it was not linked explicitely (no where `target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)`). Could you let me know whether the proposed change seems reasonable to you. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4844:0,Recover,Recovering,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4844,3,"['Recover', 'failure']","['Recovering', 'failures']"
Availability,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004:578,failure,failures,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004,2,['failure'],['failures']
Availability,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1990:869,error,error,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990,3,"['error', 'failure']","['error', 'failures']"
Availability,"Refactor CImg & CImgPlugin and fix the code that depend on it. . The general problem is that CImg is header only library thus the; multiple inclusion of the code in multiple dll seems to cause trouble; on the mutexes initialization causing the crash & failure when two plugins compile; with CImg & CImgPlugin are loaded (eg image, flexible). To avoid this scenario, CImg is moved into the CImgPlugin that; hold the mutex and other code needs to include #include<CImgPlugin/SOFACImg.h>; instead of the raw CImg. This PR is resulting from the split of #548 (for clearity and to ease reviewing). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/562:252,failure,failure,252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/562,3,['failure'],"['failure', 'failures']"
Availability,Refactor of DetectionOutputVector interface and its implementation TDetectionOutputVector. . The goal is to force all components to use the only functions provided by the DetectionOutputVector interface to interact with the DetectionOutput data that stores the contacts. One advantage of accessing the DetectonOutput data through an interface is to make a concurrent modification of contacts easier. The current implementation allows direct access to the DetectionOutput vector by casting the TDetectionOutputVector class to the helper::vector<DetectionOutput> Vector due to a double inheritance. ; This makes the DetectionOutputVector interface useless because easy to bypass. Current implementation of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector : public helper::vector<DetectionOutput>; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. }; ```. New implementation of of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. private:; 	helper::vector<DetectionOutput>; }. ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:1524,failure,failures,1524,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,2,['failure'],['failures']
Availability,"Refactoring ObjectFactory without breaking to much SOFA is rather complex. ; To ease in the process I split the ObjectFactory class in three entity.; ; sofa::core::future::ObjectFactory and sofa::core::future::ObjectFactoryInstance are the new versions while sofa::core::ObjectFactory is a compatibility layer exposing the old API for transitionning. . For the moment, 100% of the old API is reproduced and emits deprecation warning. ; As the code change are rather important it is easier to read the source code instead of the diff. . sofa::core::future::ObjectFactory is implementing the factory mecanisme without any static in it. ; sofa::core::future::ObjectFactoryInstance is a single-instance factory accessible through static method. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712:1287,failure,failures,1287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712,2,['failure'],['failures']
Availability,"Referee: @faichele. Members: @faichele , @fjourdes , @ChristianDuriez , @thomas-lemaire , @IPeterlik , @courtecuisse , @hdeling . Main objective: bring TaskScheduler within SofaKernel. Subtasks and estimated duration:; - merge the branch _issofa_multithreading_ involving the MultiThreading plugin into master (fixes); - remove dependencies to boost (might face issue in the lock implementation); - create trivial examples describing the API; - add documentation, and examples of Intel; - migration into SofaKernel. Non-requisite:; - no maintenance guarantees for the plugin Multithreading. Future; - nice feature : experiment the definition of a pointer to the Scheduler into ExecParams; - anyone interested can join!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24:537,mainten,maintenance,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24,1,['mainten'],['maintenance']
Availability,"Referee: @matthieu-nesme @ChristianDuriez. Members: @JeremieA @francoisfaure @courtecuisse, Eulalie Coevoet, Igor Peterlik. Main objective: build or compute the mechanical system when forcefields, constraints etc... are under mapping. 1 implementations available using Compliance plugin (and EigenMatrix) and masks; 1 implementation todo using sparseMatrix of SOFA without masks. For that, the fact that we remove the particular case of InteractionForceField could greatly simplify the solution. There are many different cases depending on the number of dofs that are concerned by the mapped values... Difficult to have the ideal implementation for all the case, but we need to allow several strategies. Maybe possible to avoid the ""explicit"" use of masks given the knowledge of the sparsity of the matrices... . Subtasks:; - Make option ""use Mask"" to false by default; - Tag ""InteractionForceField"" as deprecated; - First implementation for the sparseMatrix of SOFA using applyJt(SparseMatrixDeriv => not ideal for all the case; - see if we could define a common strategy without the use of masks.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26:253,avail,available,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26,6,"['Mask', 'avail', 'mask']","['Mask', 'available', 'masks']"
Availability,"References removed:; - THMPGSpatialHashing, ; - Flexible, ; - Compliant, ; - OptiTrackNatNet, ; - OpenCTMPlugin. In ref to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3960:719,failure,failures,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3960,2,['failure'],['failures']
Availability,"Reflect change in CMake which added a dependency on LinearSystem in #2777. It will fix out-of-tree builds based on the current master. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3840:679,failure,failures,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3840,2,['failure'],['failures']
Availability,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4410:789,failure,failures,789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410,2,['failure'],['failures']
Availability,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4294:1000,failure,failures,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294,2,['failure'],['failures']
Availability,"Related to https://github.com/sofa-framework/sofa/issues/3499. Unit tests are added on empty systems. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3500:646,failure,failures,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3500,2,['failure'],['failures']
Availability,"Related to: https://github.com/sofa-framework/sofa/issues/3013; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3015:608,failure,failures,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3015,2,['failure'],['failures']
Availability,"Relevant for those compiling out-of-tree (e.g SofaPython3 😙); Some dependencies were missing in the *cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1679:655,failure,failures,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1679,2,['failure'],['failures']
Availability,"Remove ColladaSceneLoader plugin and its embedded old version of assimp. ; - Move class, doc and examples inside SofaAssimp plugin.; - Merge the CMakeLists and update the findAssimp with a the version provided by Assimp 5.0.; - Ensure scenes of both plugins are working with up to date version of assimp. SofaAssimp plugin still need the pluginization refresh. To be done in another PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1360:643,failure,failures,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1360,2,['failure'],['failures']
Availability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375 ; Update FEM:; - FastTriangularBendingSprings; - TriangularBendingSprings; - TriangularTensorMassForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2388:767,failure,failures,767,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2388,2,['failure'],['failures']
Availability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - FastTetrahedralCorotationalForceField; - QuadBendingFEMForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - TriangularAnisotropicFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2390:893,failure,failures,893,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2390,2,['failure'],['failures']
Availability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - HexahedralFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2384:771,failure,failures,771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2384,2,['failure'],['failures']
Availability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - QuadularBendingSprings; - TriangularBiquadraticSpringsForceField; - TriangularQuadraticSpringsForceField; - VectorSpringForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2389:806,failure,failures,806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2389,2,['failure'],['failures']
Availability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Updated components:; - DiagonalMass; - MeshMatrixMass. Also fix DiagonalMass topological changes for Quad topology and update test which was wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2391:807,failure,failures,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2391,2,['failure'],['failures']
Availability,"Remove a really annoying ""unused variable"" warning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1325:308,failure,failures,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1325,2,['failure'],['failures']
Availability,"Remove all CUDA plugins from default plugin list for the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5044:610,failure,failures,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5044,2,['failure'],['failures']
Availability,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1883:805,failure,failures,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883,2,['failure'],['failures']
Availability,"Remove commented code & fix trivial issues (#1691 and #1662). EDIT: this pr is part of my good resolution for 2021...make at least 1 pr a day (whatever it is). ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1693:706,failure,failures,706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1693,2,['failure'],['failures']
Availability,"Remove damping correction to the RHS because it is already added in the computeForce. In a Euler implicit integration scheme, the right hand side expression only contains terms coming for the internal and external forces taken at the begining of the timestep, and an inertial term constituted of the stiffness matrix, but no term coming from the constitutive damping. (see [Christian Duriez HDR](https://theses.hal.science/tel-00785118) for ref). The contribution of the damping forcefield is already taken into account through the `computeForce` call line 126, so the `b` coefficient should be put to 0 here otherwise the behavior is not correct. . This can bee reproduced by launching the scene `examples/Component/SolidMechanics/FEM/DampingForceField.scn` and putting the data `implicit` of the damping forcefield to true. This data might have been introduced to fix this error, because here we are in an implicit scheme, and setting this parameter to true when the `b` coef is equal to 1 changes the behavior. . This was introduced here : https://github.com/sofa-framework/sofa/commit/fe0ee6248971383daa4e488e80f5fe480ee85988. [ci-depends-on https://github.com/sofa-framework/Regression/pull/67]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848:875,error,error,875,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848,3,"['error', 'failure']","['error', 'failures']"
Availability,Remove deprecated updateFlags method in TriangleModelCollision; Remove deprecated sort method in CubeModelcollision. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1201:373,failure,failures,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1201,2,['failure'],['failures']
Availability,Remove duplicated constructors and commented alias. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1250:308,failure,failures,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1250,2,['failure'],['failures']
Availability,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554:7,error,error,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554,3,"['error', 'failure']","['error', 'failures']"
Availability,"Remove logs/warnings in SceneCreator_test by:; - inheriting from BaseSimulationTest instead of old api: sofa_test; - Remove sceneDump in AddCube method. Also update SofaCarving_test to use the correct header path. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2406:760,failure,failures,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2406,2,['failure'],['failures']
Availability,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1787:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787,2,['failure'],['failures']
Availability,"Remove most of the checks: if(CHECK_TOPLOGY). This macro is automatically set to true if SOFA is compiled in debug mode. The macro has been either:; - Remove the test and the warning/info message if not relevant. For example many getter, were sending a warning message if requested element id was out of bound before returning an ```Topology::InvalidID```. For those cases, the return value should be checked and warning could be send depending on the use. But it is not the role of a getter to send the warning.; - Remove test and let warning/error message when it is useful also in release.; - Remove the tests and sometimes also some creation buffer and keep some warning message in tricky cases. . **Result: several errors and warnings hidden in scenes are going to be revealed!** . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1352:544,error,error,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1352,4,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,Remove new warning in MapMapSparseMatrixEigenUtils.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/485:310,failure,failures,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/485,2,['failure'],['failures']
Availability,"Remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4785:568,failure,failures,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4785,2,['failure'],['failures']
Availability,"Remove some warning:; - by updating the code ; - by configure in CMakeLists.txt the library (gtest, libQGlViewer, csparse, CImg) as system library. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1343:404,failure,failures,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1343,2,['failure'],['failures']
Availability,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4555:616,failure,failures,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555,2,['failure'],['failures']
Availability,"Remove the mesh export to a hard-coded absolute path, which was probably used to debug the component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2420:646,failure,failures,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2420,2,['failure'],['failures']
Availability,Remove the randomness of LCPForceFeedback test to avoid having random errors.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4671:70,error,errors,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4671,1,['error'],['errors']
Availability,"Remove thread specific declaration for ExecParams class. accessing thread local variables is slow and if the thread-local variable is accessed very frequently, the cost may become an issue. ; https://software.intel.com/en-us/blogs/2011/05/02/the-hidden-performance-cost-of-accessing-thread-local-variables. The ExecParams global pointer is declared thread specific but it is often passed in a function call as argument.; A function executed in a second thread can receive as argument the thread local variable of the first thread and it is allowed to use it.; In this situation there is no need of use the thread local variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1129:885,failure,failures,885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1129,2,['failure'],['failures']
Availability,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4506:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506,2,['failure'],['failures']
Availability,"Remove unused Data buffer of point indices. quick way to fix #1591 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2993:613,failure,failures,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2993,2,['failure'],['failures']
Availability,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2283:656,failure,failures,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283,2,['failure'],['failures']
Availability,"Remove unused _assembling data in BeamFEMForceField and HexahedronFEMForceField; Also clean warning. However, @alxbilger, `_assembling_ seems to be used for both TetrahedronFEMForceField and TetrahedralCorotationalFEMForceField.. (see [for instance](https://github.com/sofa-framework/sofa/blob/master/Component/SolidMechanics/FEM/Elastic/src/sofa/component/solidmechanics/fem/elastic/TetrahedralCorotationalFEMForceField.inl#L664)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2901:977,failure,failures,977,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2901,2,['failure'],['failures']
Availability,Remove useless log files; Remove old example of MatrixMass (deprecated and soon removed class); Add MeshMatrixMass example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1257:380,failure,failures,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1257,2,['failure'],['failures']
Availability,"Remove warnings, mostly from missing override keyword.; (+ some old style C cast). And fix a (potential) crash in MechanicalMatrixMapper (uninitialized pointer) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/968:419,failure,failures,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/968,2,['failure'],['failures']
Availability,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2195:678,failure,failures,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195,2,['failure'],['failures']
Availability,Removing all highorder classes from the base topological classes of SOFA.; Created a new open repository for those classes at sofa-framework/plugin.HighOrder 👍 ( https://github.com/sofa-framework/plugin.HighOrder.git ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] updated Flexible plugin to use the new plugin. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220:450,failure,failures,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220,1,['failure'],['failures']
Availability,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1973:778,failure,failures,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973,2,['failure'],['failures']
Availability,"Rename OBJExporter into VisualModelOBJExporter to express more clearly that it only exports the VisualModels; Compatibility layer added + Alias. Fix #1783. Q: does it make sense to keep examples in the module itself?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505:762,failure,failures,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505,2,['failure'],['failures']
Availability,Rename the class and add the option to handle sparse mass matrix with Euler explicit scheme!; Useful for trainings and useful for anyone starting in SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1260:411,failure,failures,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1260,2,['failure'],['failures']
Availability,Renaming the HeartBeatEvent with one called IdleEvent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/55:13,HeartBeat,HeartBeatEvent,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/55,1,['HeartBeat'],['HeartBeatEvent']
Availability,"Rendering using GL_DOUBLE has terrible performance on some hardware/os/drivers that are still commonly used. . Reverts #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3073:670,failure,failures,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3073,2,['failure'],['failures']
Availability,"Reopening of #1274. > unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer); > This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1287:545,failure,failures,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1287,2,['failure'],['failures']
Availability,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4417:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417,2,['failure'],['failures']
Availability,"Replace SOFACUDA_ARCH containing arbitrary value with (CMake's) auto arch detection.; If needed, you can disable auto-detection with the desired arch value.; It should (not tested) also generate cuda code for multiple arch as well. Remove also warning when configuring with CMake. (about deprecated macro sofa_create_package). I guess it could break CMake CUDA config for people using the SOFACUDA_ARCH variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1336:669,failure,failures,669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1336,2,['failure'],['failures']
Availability,"Replace some \#ifndef by pragma, update some namespace and remove some relatives header inclusions in:; - CudaCollision; - CudaContactMapper; - CudaIdentityMapping; - CudaSubsetMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2674:730,failure,failures,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2674,2,['failure'],['failures']
Availability,"Replace the bash code block by a python one-liner. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2454:595,failure,failures,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2454,2,['failure'],['failures']
Availability,"Replaces #3360 as the pull request is blocked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3462:591,failure,failures,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3462,2,['failure'],['failures']
Availability,"Replaces https://github.com/sofa-framework/sofa/pull/3806 after discussion during the dev meeting.; Fixes https://github.com/sofa-framework/sofa/discussions/3773. The includes are not exhaustive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3865:740,failure,failures,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3865,2,['failure'],['failures']
Availability,"Replacing ; `std::enable_if_t<TL == 1 && TC != 1 || TC == 1 && TL != 1> >`; by; `std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)> >`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3633:692,failure,failures,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3633,2,['failure'],['failures']
Availability,Replacing `#include <math.h>` by `#include <cmath>` produces a `'M_PI': undeclared identifier` error on Windows for `applications/plugins/sofadistancegrid/components/collision/DistanceGridCollisionModel.h` (and only this one).; Any idea how to solve that?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-469741320:95,error,error,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-469741320,1,['error'],['error']
Availability,"Replacing automatically the deprecated template at the begining of the createObject method of the factory doesn't work for CUDA implementation using Matrices when compiling sofa in Double and CUDA in Float. See #3644 for more context . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3646:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3646,2,['failure'],['failures']
Availability,Requires #814 . Renaming DataTrackerDDGNode::isDirty() to DataTrackerDDGNode::hasChanged() to reduce confusion with DDGNode::isDirty(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/820:392,failure,failures,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/820,2,['failure'],['failures']
Availability,"Requires other PRs to avoid crashes during the dump. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4818:597,failure,failures,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4818,2,['failure'],['failures']
Availability,RequriedPlugin does not updates when some of its data field are changed. ; This PR implement this behavior without breaking the existing one. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1458:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1458,2,['failure'],['failures']
Availability,"Reset button becomes Reload button (equivalent to CTRL+R); Reset remains available with ALT+R ; If this PR gets accepted I would propagate to ImGUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3123:73,avail,available,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Resize the force vector even when no force Data has been set. This avoids a crash later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3670:633,failure,failures,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3670,2,['failure'],['failures']
Availability,"RestSpringsForceField has almost two versions: one for Vec (default implementation), the other for Rigid (specialization in cpp); Problems are:; - ugly code duplication; - not possible to instantiate from somewhere else for other kind of RigidTypes (i.e for float version or CudaRigid...). so this PR unifies the code and does not rely on any specialization in the cpp. The main difference is that the ""Vector"" version was testing if the stiffness was global or for each spring (more or less), with again an other ugly code duplication.; I removed the particular case but it means there is a test of the size at each iteration (in addF(), addDF()) which I think is not very problematic but I did not do any bench to test that. 🙊; ~~I also test if the case is Rigid on the Name(), a bit ugly but does the trick for me....~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3175:1368,failure,failures,1368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3175,2,['failure'],['failures']
Availability,"Retrospectively, I would prefer the following structure:; ```; SofaCUDA; | - component; | - mapping; | - linear; | - nonlinear; ```. I find that the intermediate directories `sofa/gpu/cuda` are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; What do you think @hugtalbot @epernod @damienmarchal @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883:211,redundant,redundant,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883,1,['redundant'],['redundant']
Availability,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2235:167,error,errors,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Revert #3278 remove un-inded merge. Sorry for the mess. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4068:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4068,2,['failure'],['failures']
Availability,"Reverts sofa-framework/sofa#2208. Sorry, made an error with github cli !",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2214:49,error,error,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2214,1,['error'],['error']
Availability,Review taken into account.Just not sure about the removed macro ```SOFA_BASE_CAST_IMPLEMENTATION(BaseLMConstraint)``` causing error:; ```; error: 'toBaseLMConstraint' marked 'override' but does not override any member functions; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-758827116:126,error,error,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-758827116,2,['error'],['error']
Availability,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1734:1592,failure,failures,1592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734,2,['failure'],['failures']
Availability,Rework the PR with clean history (see previous #1238); Fix #1166 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1241:323,failure,failures,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1241,2,['failure'],['failures']
Availability,"Right now for a tetrahedron: [P0, P1, P2, P3] (see picture below); The 4 triangles saved in the tetrahedron are:; - T0: [P1, P3, P2]; - T1: [P2, P3, P0]; - T2: [P3, P1, P0]; - T3: [P0, P1, P2]. This means the 4 triangles are clockwised oriented and thus their normals are going inside the tetrahedron. If there is a special reason for that I couldn't find it in the doc. . ![image](https://user-images.githubusercontent.com/21199245/50616906-cf072980-0eea-11e9-8bf0-72a4d2d584d7.png). As Gmsh nice ascii picture (from gmsh full doc) and the 2nd picture suggest. I changed to have counter-clockwise orientation so triangles on borders are by default well oriented to have normals going out. Then, T0 being the 2D plan [u,v], T1 sharing vector u and then T2 and T3 to close the tetrahedron; So new triangles are:; - T0: [P0, P2, P1]; - T1: [P0, P1, P3]; - T2: [P1, P2, P3]; - T3: [P0, P3, P2]. ![image](https://user-images.githubusercontent.com/21199245/50616994-4937ae00-0eeb-11e9-9aca-87385530a7ea.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/878:1260,failure,failures,1260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/878,2,['failure'],['failures']
Availability,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2114:1224,failure,failures,1224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114,2,['failure'],['failures']
Availability,"Right now, if you put a BoxROI in your scene to get the edges, triangles, etc. contained inside a box, the BoxROI will gets you every elements for which its center point is inside the box. An element partially inside the box can than be flagged as inside. This PR adds an option named ""strict"" to the BoxROI which will instead test that every nodes of the elements are contained inside the box. The option is false by default so that the current behavior remains unchanged. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1127:730,failure,failures,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1127,2,['failure'],['failures']
Availability,"Roadmap STC11. \<to be filled by people working on the subject\>. References:; #26 (mask); #800 (eigen); #1350 (visitors); #1341 (api); #1636 (getJ, getK)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2119:84,mask,mask,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2119,1,['mask'],['mask']
Availability,Roadmap for a totally green dashboard:; - fix the last centos bug (I heard about bruno started digging into this one); - fix the 14 ubuntu_options_debug (I made #465 that fix it but @fjourdes pointed that one of the pending InSimo PR was doing that in a more powerful/general way...so ...I praise that someone will nudge the InSimo and merge it :)); - fix the windows (well these are my fault...so I will have to spend time on that). But after that...well happy.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337485994:387,fault,fault,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337485994,1,['fault'],['fault']
Availability,Roll back #1321 which should have been closed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1327:303,failure,failures,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1327,2,['failure'],['failures']
Availability,"SOFA with OpenGL adds a X11 dependency. If we compiled SOFA without OpenGL, this dependency was still there, which caused problem when compiling for a headless system (no X11 and no GL). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1370:443,failure,failures,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1370,2,['failure'],['failures']
Availability,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1954:611,failure,failures,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954,2,['failure'],['failures']
Availability,SOFA_WITH_DEPRECATED_COMPONENTS option was declared after it was supposed to be used in SofaFramework's own CMakeLists. Therefore CMake was throwing an error at the first step [here](https://github.com/sofa-framework/sofa/blob/d3aee470bc79a017e4f3e04b608c49d16d5874a6/SofaKernel/SofaFramework/CMakeLists.txt#L26). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1452:152,error,error,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1452,3,"['error', 'failure']","['error', 'failures']"
Availability,SPHParticleSink_obstacle.scn should be ignored. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1317:304,failure,failures,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1317,2,['failure'],['failures']
Availability,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2039:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039,2,['failure'],['failures']
Availability,"Same as PR #284 but without the unwanted merge commits. Small fix related to issue #114 . Have tested the compilation without the flag SOFA_INSTALL_RESOURCES_FILES (which is set by default), Sofa.ini and installedSofa.ini, which are necessary for build and install, are well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/291:540,failure,failures,540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/291,2,['failure'],['failures']
Availability,"Scene angularSpringForceField.scn throws an error, related to the message you just added @epernod ; Is this normal ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-676050830:44,error,error,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-676050830,1,['error'],['error']
Availability,"Scene checkers were located in the SofaGraphComponent (even if they were not components themselves....); So they needed to be moved out of it.; The first idea was to move them to Sofa.Simulation as they related to the simulation itself (or rather its initialization).; But scene checking could need dependencies on components themselves (in this case, it needs the contact manager from Sofa.Component.Collision.Response.Contact, and APIVersion from Sofa.Component.SceneUtility); So finally a library was created into ~~applications/plugins, even if it is not really a plugin in the sofa-way of thinking (aka a set of components)~~ Sofa/plugins because it is not in Component or framework, but it could be placed in Sofa/ directly (where GUI is as well). As usual, a compat layer has been added to warn devs of the move. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2960:1364,failure,failures,1364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2960,2,['failure'],['failures']
Availability,"Scene test errors ""extension (py) not handled"" should be fixed now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103683768:11,error,errors,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103683768,1,['error'],['errors']
Availability,"SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:5577,ERROR,ERROR,5577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['ERROR'],['ERROR']
Availability,"SceneChecks were isolated in a project. But we may want that plugins add their own SceneCheck. An example with MultiThreading is provided here. The class `SceneCheck` is now available in Sofa.Simulation.Core. Tools to register a SceneCheck are also available in the module. The newly introduced SceneCheck checks if there are opportunities to use a multi-threaded component. It advices the user with a message looking like:. ```; [SUGGESTION] [SceneCheckMultithreading] This scene is using components implemented sequentially while a parallel implementation is available. Using the parallel implementation may improve the performances. Here is the list of sequen; tial components in your scene and their parallel equivalent:; BVHNarrowPhase -> ParallelBVHNarrowPhase; BruteForceBroadPhase -> ParallelBruteForceBroadPhase; HexahedronFEMForceField[Vec3d] -> ParallelHexahedronFEMForceField[Vec3d]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3597:174,avail,available,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597,5,"['avail', 'failure']","['available', 'failures']"
Availability,"SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2792,error,error,2792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,2,['error'],"['error', 'errorlevel']"
Availability,"Second and last task about https://github.com/sofa-framework/sofa/issues/2483. Contains #2531. Create a new plugin SofaNewmat with ; - newmat lib itself; - NewmatMatrix and NewmatVector (and their tests); - LULinearSolver (only compatible with NewmatMatrix); ; Add a ""compatibility"" layer (tricky because SofaNewmat is optional; Update ComponentChange; Remove newmat usage in image plugin. Fix #2483 . Change the template of CGLinearSolver in the BeamLinearForceField because I dont see why we would need to run it with newmat matrices. It results with a very slight difference on the DOF positions. [ci-depends-on https://github.com/sofa-framework/Regression/pull/21]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532:1214,failure,failures,1214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532,2,['failure'],['failures']
Availability,See #1180 for details. Fixes #1180; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1182:292,failure,failures,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1182,2,['failure'],['failures']
Availability,See #1271 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1272:268,failure,failures,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1272,2,['failure'],['failures']
Availability,"See #2641 and especially https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1036695510. @EulalieCoevoet could you try this branch to make sure it fixes the error ? Thanks !. (NOTE: I did not revert the PR itself as there are some welcoming cleanings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2699:167,error,error,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2699,3,"['error', 'failure']","['error', 'failures']"
Availability,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533:1032,failure,failures,1032,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533,2,['failure'],['failures']
Availability,"See [this gist](https://gist.github.com/maxime-tournier/3c59175c9219098d419768d89af8a51e#file-attribute_list-cpp) for a simple prototype (start from the main function at the end). It uses a nifty trick for erasing and recovering type information through a throw/catch, which is a little slow but not slower than string conversion anyway. The one with member function pointers won't fly as it requires e.g. `DefaultPipeline::name` to be public, which is often not the case. I don't see how to come up with a reasonably usable syntax for the last one, since `Node, MechanicalObject` are (possibly dependent) type names. Also, putting them all inside a single `initializer_list` will drop type informations to make type checking possible in `createTree`, so I'm afraid this won't be worth it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-335082143:218,recover,recovering,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-335082143,2,['recover'],['recovering']
Availability,"See doc https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html. It gives 3 different presets similarly to what we are used to on the CI. The idea is the same (3 different config) but it cannot mimic it perfectly. For example, the CI checks if dependencies are available before setting a variable. It is not possible with presets. An example of CMakeUserPresets.json I use: https://gist.github.com/alxbilger/bee1135fbe222943906d0f595699c1a3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3305:269,avail,available,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3305,3,"['avail', 'failure']","['available', 'failures']"
Availability,"See https://github.com/sofa-framework/LMConstraint and https://github.com/sofa-framework/sofa/pull/2508. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2828:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2828,2,['failure'],['failures']
Availability,"See https://json.nlohmann.me/api/basic_json/error_handler_t/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4900:606,failure,failures,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4900,2,['failure'],['failures']
Availability,See issue #784 : Quadractic complexity in BarycentricMapping ; This PR depends on PR #797: Cleaning and refactoring of BarycentricMapping. In this PR the initialization of BarycentricMapping (for topology container only) is optimized using spatial hashing. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798:515,failure,failures,515,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798,2,['failure'],['failures']
Availability,"See issue: https://github.com/sofa-framework/sofa/issues/338; The Rayleigh parameters (Rayleigh mass and stiffness) are used for numerical dumping in the simulation. However, most integration schemes (OdeSolvers) in SOFA use NON-ZERO default values. This commit fixes this.; The user must be aware of its dumping parameters, now : ; - default rayleighMass=0.0; - default rayleighStiffness=0.0. To avoid breaking all scenes, this PR also updates (where needed) the rayleighMass and; rayleighStiffness parameter (set to 0.1 like previous default values). NOTE : a script is available for updating all your own scenes if needed (script/update-scenes-rayleighcoeff.sh). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350:572,avail,available,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350,3,"['avail', 'failure']","['available', 'failures']"
Availability,"See the list of commit for a description of the changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4185:601,failure,failures,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4185,2,['failure'],['failures']
Availability,"See; - #4429. (+ add registration from missing components sceneutility and engine.transform). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5055:638,failure,failures,638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5055,2,['failure'],['failures']
Availability,"See; - #4429. EDIT:; Based on ; - #4863 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4858:586,failure,failures,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4858,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/143]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/458]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/305]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/302]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4976:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4976,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/306]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/462]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/463]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053,2,['failure'],['failures']
Availability,"See; - #4429. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4930:558,failure,failures,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4930,24,['failure'],['failures']
Availability,"See; - #4429. some works still need to be done in the future to avoid calling a singleton for the ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5098:657,failure,failures,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5098,2,['failure'],['failures']
Availability,"Seems VS2017 is not happy ; ```; j:\0\src\sofakernel\modules\sofabasemechanics\src\sofabasemechanics\diagonalmass.inl(573) : fatal error C1001: An internal error has occurred in the compiler.; (compiler file 'd:\agent\_work\1\s\src\vctools\compiler\utc\src\p2\main.c', line 187); To work around this problem, try simplifying or changing the program near the locations listed above.; Please choose the Technical Support command on the Visual C++ ; Help menu, or open the Technical Support help file for more information; ```; but we are ditching vs2017, right ? 😗. Or it could be that the CI is on a VM, maybe the vCPU is also at fault here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028148021:131,error,error,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028148021,6,"['error', 'fault']","['error', 'fault']"
Availability,Seems fine but CI shows 3 errors + 5 crashs instead of 2 errors; I guess it's the point you raised about BeamAdapter @bakpaul,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4755#issuecomment-2133725783:26,error,errors,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4755#issuecomment-2133725783,2,['error'],['errors']
Availability,Segmentation Fault when loading SofaPython3.dll,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672:13,Fault,Fault,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672,1,['Fault'],['Fault']
Availability,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2140:571,failure,failures,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140,2,['failure'],['failures']
Availability,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1997:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997,2,['failure'],['failures']
Availability,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1826:929,failure,failures,929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826,2,['failure'],['failures']
Availability,"Setup for the Sofa.Type module which will contain classes like Vec, Mat, etc.; Empty for now (just an init() ) and is set as a dependency for SofaHelper. (was before in #1553 but decided to split it). Issue #1521 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1555:459,failure,failures,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1555,2,['failure'],['failures']
Availability,Several changes and fix from my master branch:; - Fix: Duplicate declaration of Data in MechanicalObject; - Fix: the graph display of topologyData.; - Replace serr by msg_error and put some methods and parameter from private to protected in SofaMeshCollision classes; - Add: missing generic methods in MeshTopology; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/953:572,failure,failures,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/953,2,['failure'],['failures']
Availability,"Several changes from my working branch:; - **TopologicalMapping**: Add method checkTopology. Can be called from outside the component. Need to be overwritten by children. Implement only the tetra2TriangleTopologicalMapping version.; - **Quad2TriangleTopologycalMapping**, **Hexa2TetraTopologicalMapping**, **Hexa2QuadTopologicalMapping**: clean component init and model check in methods.; - **MeshTopology**: reorder methods declaration in header for clarity.; - **EdgeSetTopologyContainer**, **TriangleSetTopologyContainer**, **TetrahedronSetTopologyContainer**: Improve checkTopology methods in container.; - **Mat**, **MatSym**: Improve invertMatrix error logs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/999:653,error,error,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/999,3,"['error', 'failure']","['error', 'failures']"
Availability,Several changes in PluginManager:; - Add check to avoid registering the same plugin from different paths; - Change method getPlugin to look in the map of registered plugin using the plugin name instead of using a reconstructed path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:489,failure,failures,489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,2,['failure'],['failures']
Availability,Several crashes possible in Tetra2TriangleTopologicalMapping when removing tetrahedron.; - When removing the last elements; - When using noInitialTriangles or noNewTriangles options. Will fix issue #954 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/960:461,failure,failures,461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/960,2,['failure'],['failures']
Availability,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275:939,failure,failures,939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275,2,['failure'],['failures']
Availability,"Several improvments regarding principal stress computation in `TriangularFEMForceFieldOptim`:; - Add Data `d_computePrincipalStress` to force the computation no matter if stress vector is displayed or not.; - Move the computation out from the draw loop, in addForce if `d_computePrincipalStress` or `d_showStressVector` is true; - Store principal stress info into the TriangleInfo structure so it can be accessed outside from the component; - Update drawing to use arrow with color orientation.; - Add Data `d_showStressThreshold` to display only vectors above a threshold. ![image](https://github.com/sofa-framework/sofa/assets/21199245/9da6ebe5-38b7-4e3a-a37c-7d25fc8724f4). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4027:1221,failure,failures,1221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4027,2,['failure'],['failures']
Availability,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575:1068,failure,failures,1068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575,2,['failure'],['failures']
Availability,Several tests are not passing yet due to error in the code to be fixed soon.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/708#issuecomment-403002854:41,error,error,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/708#issuecomment-403002854,1,['error'],['error']
Availability,Several warning types:; - uint/int conversion; - bad init order; - missing break; - unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/873:358,failure,failures,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/873,2,['failure'],['failures']
Availability,"ShewchukPCGLinearSolver is not an ODE solver. Instead, the scenes examples/Components/linearsolver/FEMBAR-ShewchukPCGLinearSolver.scn and in the folder examples/Components/linearsolver/preconditioner shows how to use this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2726:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2726,2,['failure'],['failures']
Availability,Short fix in main CMakeList regarding compilation with other than Win; CPackNSIS preventing from compiling. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/867:364,failure,failures,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/867,2,['failure'],['failures']
Availability,"Should be fine now; I ran some tests, looks fine to me. MeshNewProximityIntersection is rarely used.; Regarding the TriangleModel the new options seems to add some 1% slow down on a test scene I made, but it's just an option. Ready for me, I wait for a second eye :eye:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1559#issuecomment-724765422:172,down,down,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1559#issuecomment-724765422,1,['down'],['down']
Availability,"Should fix #2486 (at least it was working for me :p ). The InteractionPerformerFactory was instantiated in SofaUserInteraction but not exported so I suppose other dlls using this factory was created their own InteractionPerformerFactory (creating discrepancies between the various registations) ; This is valid only for Windows (Mac/Linux is not using this import/export mechanism). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2495:927,failure,failures,927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2495,2,['failure'],['failures']
Availability,"Should fix a failing unit test: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3799/testReport/UnitTests/. The [dynamic_cast](https://github.com/sofa-framework/SofaPython3/blob/05195cd49b6db0dd028f1163ac407d459f6156f6/bindings/Modules/src/SofaPython3/SofaConstraintSolver/Binding_ConstraintSolver.cpp#L69) failed in:; ```cpp; py::cast(dynamic_cast<ConstraintSolverImpl*>(object));; ```. This is due to the lack of key function in the class ConstraintSolverImpl. See ; https://github.com/android/ndk/issues/533#issuecomment-335977747. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3240:1150,failure,failures,1150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240,2,['failure'],['failures']
Availability,Should fix crash and error on scenes:; - SimpleBox-Method2.scn; - testOmniDriverEmu.scn; - /scene-tests/archive/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.scn. Fix unit test:; - ReadState_test.test_loadFailure. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/982:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/982,3,"['error', 'failure']","['error', 'failures']"
Availability,"Should fix issue #3750. In this PR : ; - minor cleaning : set the default value to `d_indexFromRoot` in init(); - checks size of `m_fromRoot` wrt to `d_indexFromRoot`, if `d_indexFromRoot` is out of bounds, uses default value instead.; - typo? : I think there was a typo at line 534, for me it should be `xfromRoot[indexFromRoot]` instead of `xto[indexFromRoot]`. It makes more sense to me. Could be double checked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751:960,failure,failures,960,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751,2,['failure'],['failures']
Availability,"Should fix out-of-tree errors like https://github.com/guparan/SofaPython3/runs/7896706218?check_suite_focus=true; To be backported asap. [ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/57]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3229:23,error,errors,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3229,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2310:601,failure,failures,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310,2,['failure'],['failures']
Availability,Should not but I will check.; Yes in fact my fix in TetrahedronFEMFF reveals that the test was doing nothing: This the log on the master branch:; ```; [ RUN ] TetrahedronDiffusionFEMForceField_test/0.extension; [ERROR] [TetrahedronFEMForceField(fem)] object must have a mesh topology. The component is inactivated. To remove this error message please add a topology component to your scene. ```; Right now it crashes... will see if I understand enough the test to fix it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302012176:212,ERROR,ERROR,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302012176,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Showcase of a pure cpp application with direct usage of components.; Replace glut with sofalgfw (dependency).; Can be built out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792:681,failure,failures,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792,2,['failure'],['failures']
Availability,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1882:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882,2,['failure'],['failures']
Availability,Signed-off-by: duriez <christian.duriez@inria.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/844:307,failure,failures,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/844,2,['failure'],['failures']
Availability,Significant improvement.; Just removing msg coming in the console in release due to CTRL key pressed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1130:358,failure,failures,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1130,2,['failure'],['failures']
Availability,"Silence the -Wattribute warning because of its verbosity g++.; It was supposed to be in pr #1643 but it appears to have been lost somehow... so this PR add it again. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1657:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1657,2,['failure'],['failures']
Availability,"Similar code is factorized to be reused. Also, in `AnimationLoopParallelScheduler`, I replaced the use of the class `StepTask` by a lambda function. Since it is no longer used, I deprecated the `StepTask` class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607:756,failure,failures,756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607,2,['failure'],['failures']
Availability,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:311,robust,robust,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815,2,['robust'],['robust']
Availability,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2208:1816,failure,failures,1816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208,2,['failure'],['failures']
Availability,"Similar to #2322, but in the profiler. Buttons collapse or expand the displayed tree of timers.; ![image](https://user-images.githubusercontent.com/10572752/134161374-9985c29b-d864-4900-a9ac-a5e27a59c964.png). Note that those two buttons add extra space on top of the tree widget, but not so much because there was already an empty spacer here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2351:889,failure,failures,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2351,2,['failure'],['failures']
Availability,"Similar to TetrahedronFEMForceField, compute von mises per element and add option to draw it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4945:638,failure,failures,638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4945,2,['failure'],['failures']
Availability,"Similar to https://github.com/sofa-framework/sofa/pull/3650; To make it compatible with Cuda 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3868:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3868,2,['failure'],['failures']
Availability,"Similar to https://github.com/sofa-framework/sofa/pull/4720. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4721:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4721,2,['failure'],['failures']
Availability,"Similar to work done for triangles. Add tests on:; - Component creation; - Component init without topology; - Component init with empty topology; - checkDefaultAttributes; - check Wrong Attributes; - Check values at init; - Check values during simulation; - Check vertex position at init and after some steps. **Not all tests are activated** for `TetrahedronFEMForceField`, `CorotationalTetrahedralForceField `and `FastTetrahedralCorotationalForceField` because some are failing for now. . This PR doesn't change the behavior of the FEM, this will be done in next PR. ; This PR add tests to ensure the current behavior won't be broken in the incoming work. . ----- . Logs at this stage for 1000 steps of an horizontal fixed beam (resolution: 8x26x8). ; Average values of 6 executions of 4 successive simulations. | **ForceField** | **timeMin** | **timeMax** | **timeMean** |; | ------------- | ------------- | ------------- | ------------- |; | `TetrahedronFEMForceField` | 8.402152 | 8.643823 | 8.491758 |; | `TetrahedralCorotationalFEMForceField` | 13.79633 | 14.15237 | 13.96938 |; | `FastTetrahedralCorotationalForceField` | 5.71298 | 5.8269 | 5.772838 |. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2842:1704,failure,failures,1704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2842,2,['failure'],['failures']
Availability,"Similarly to SparseLDLSolver own exporter, it is now possible to set the arithmetic precision of the matrix export. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2724:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2724,2,['failure'],['failures']
Availability,"Similarly to Vec implementation, add a NoInit constructor for Quat and a type QuatNoInit<Real>. Speedup is minor compare to Mat and Vec of big size but still it makes a small diff when working with several Quat in loops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3217:765,failure,failures,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3217,2,['failure'],['failures']
Availability,"Simple PR to clean up DeformableOnRigidFrameMapping, during DEFROST team coding friday. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/848:344,failure,failures,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/848,2,['failure'],['failures']
Availability,"Simple add to make sure the return value corresponds to the package found (qt5 or 6). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2346:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2346,2,['failure'],['failures']
Availability,"Simple as is the title, namely:. - MeshTopology instead of Mesh; - PointCollisionModel instead of: Point, TPointModel, PointModel, PointMesh, PointSet; - LineCollisionModel instead of: Line, TLineModel, LineMeshModel, LineSetModel, LineMesh, LineSet, LineModel; - TriangleCollisionModel instead of: Triangle, TriangleSet, TriangleMesh, TriangleSetModel, TriangleMeshModel, TriangleModel, TTriangleModel; - SphereCollisionModel instead of: Sphere, SphereModel, TSphereModel; - CapsuleCollisionModel instead of: Capsule, CapsuleModel, TCapsuleModel; - CubeCollisionModel instead of: Cube, CubeModel; - CylinderCollisionModel instead of: Cylinder, CylinderModel; - RayCollisionModel instead of: Ray, RayModel; - TetrahedronCollisionModel instead of: Tetrahedron, TetrahedronModel; - EulerExplicitSolver instead of: Euler, EulerExplicit, ExplicitEuler, EulerSolver, ExplicitEulerSolver; - CGLinearSolver instead of CGSolver, ConjugateGradient; - SparseGridTopology instead of SparseGrid; - SVDLinearSolver instead of SVD, SVDSolver; - FreeMotionAnimationLoop instead of ; - DampVelocitySolver instead of DampVelocity. just you @epernod . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1292:1390,failure,failures,1390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1292,2,['failure'],['failures']
Availability,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903:706,failure,failures,706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903,2,['failure'],['failures']
Availability,Simple cleaning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856:273,failure,failures,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856,2,['failure'],['failures']
Availability,"Simple fixes and improvements while wandering in SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2667:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2667,2,['failure'],['failures']
Availability,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2294:575,failure,failures,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294,2,['failure'],['failures']
Availability,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1778:574,failure,failures,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778,2,['failure'],['failures']
Availability,"Simple, fast-merge :sunglasses: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1484:290,failure,failures,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1484,2,['failure'],['failures']
Availability,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495:1118,failure,failures,1118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495,2,['failure'],['failures']
Availability,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2148:78,avail,available,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Simply change the keyboard shortcut associated to camera mode: M key instead of Space key, because the latter is already used to interact with the GUI buttons.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/997:417,failure,failures,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/997,2,['failure'],['failures']
Availability,Simply remove a useless if block. Related to : https://github.com/sofa-framework/sofa/issues/535; Fixes #535 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/590:367,failure,failures,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/590,2,['failure'],['failures']
Availability,"Simply remove all lines in scenes (scn) including a DefaultCollisionGroupManager. `$ find . -type f -name ""*.scn"" -exec sed -i '/DefaultCollisionGroupManager/d' {} +`. [ci-depends-on https://github.com/sofa-framework/Regression/pull/30]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3104:782,failure,failures,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3104,2,['failure'],['failures']
Availability,Since #638 the PR breaks some #ifdef.; Here is fix for the #inclusion problem and a pattern to avoid this kind of problem to be repeated. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/672:396,failure,failures,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/672,2,['failure'],['failures']
Availability,"Since BoxROI supports 2D and 1D data types, it can lead to undefined behavior, due to out-of-range access.; This PR fixes them.; Oriented bounding box are not supported in 2D and 1D. A future PR could add the support in 2D. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2604:768,failure,failures,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2604,2,['failure'],['failures']
Availability,"Since C++11, it is possible to declare a variable with one copy per thread with the keyword `thread_local`. The consequence is that the code in `thread_specific_ptr.h` could be deprecated as it is not used anywhere else (not in this PR). Bonus: remove a memory leak. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3422:811,failure,failures,811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422,2,['failure'],['failures']
Availability,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2323:935,failure,failures,935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323,2,['failure'],['failures']
Availability,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4523:672,failure,failures,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523,2,['failure'],['failures']
Availability,"Since SofaNG, cmake was again slow to configure (especially on Windows); After investigation, the previous sofa_find_package() was nulliified in #3120 , and I dont really see why. And the associated commit message is not informative https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054. Bringing it back bring the config time from ~18s to 4.5s on Windows/MSVC generator on a minimal preset (all framework + comonents+ GL + GUI); (Manjaro/ninja generator go from 4 to 2.5s); So it is quite nice all in all 🥸. Trace: (orange part is time for `find_package()`); Before: ![cmake1](https://user-images.githubusercontent.com/11028016/195506545-32c3d4db-b6b2-4500-a3fb-dce59da50c53.png); After: ![cmake2](https://user-images.githubusercontent.com/11028016/195506607-e6ede1f9-c5fd-497d-bd4f-dd4832da918a.png). Install procedure should not be impacted, as the cmake.in files are not touched. \+ this PR fixes some missing sofa_find_package() here and there. Lets see if the CI confirms if https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054 was only a mistake; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382:1687,failure,failures,1687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382,2,['failure'],['failures']
Availability,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2239:1126,failure,failures,1126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239,2,['failure'],['failures']
Availability,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4253:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253,2,['failure'],['failures']
Availability,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a dynamic_cast.; This PR removes it for TorsionForceField. Note that there is no example for this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2859:822,failure,failures,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2859,2,['failure'],['failures']
Availability,"Since it has no significant added computational costs, I suggest to activate the export of lambda forces by default, i.e. set the `computeConstraintForces` data to true by default. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3857:725,failure,failures,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3857,2,['failure'],['failures']
Availability,"Since it is now possible to export a system matrix from any solver, the matrix export included in SparseLDLSolver is no longer required. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2725:681,failure,failures,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2725,2,['failure'],['failures']
Availability,"Since it's annoying every single user and developer!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3153:598,failure,failures,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3153,2,['failure'],['failures']
Availability,"Since state accessors work closely with a mstate, it seems logical that they inherit the same bbox.; Note that the mstate must be visited before the accessor in `UpdateBoundingBoxVisitor`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2780:733,failure,failures,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2780,2,['failure'],['failures']
Availability,"Since the 05/06, there are no GUI available on Ubuntu on the master branch.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006:34,avail,available,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006,1,['avail'],['available']
Availability,"Since the big refactoring from Sofa NG (https://github.com/sofa-framework/sofa/wiki/SOFA-NG:-documentation-on-transition), unit tests fail when the compatibility layer is not compiled, because they rely on the old modules. An example of failure:. ```; Sofa\Component\IO\Mesh\tests\STLExporter_test.cpp(79): error: Failed; A message of type 'Error' was not expected but it was received. ; ====================== Messages =======================; [RequiredPlugin]: ; Message type : Error; Message content: Plugin not found: ""SofaLoader""; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3389:237,failure,failure,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3389,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"Since the components are explicit formulations, they don't contribute into an implicit scheme.; A task from #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4000:659,failure,failures,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4000,2,['failure'],['failures']
Availability,"Since users often copy paste examples, let's show good scene habits: when modeling volumetric, the MeshMatrixMass should be used instead. I guess this will trigger the regression tests (but I need to recompile regression first, so I give the CI a chance :) ). [ci-depends-on https://github.com/sofa-framework/Regression/pull/64]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687:874,failure,failures,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687,2,['failure'],['failures']
Availability,"Small (and first) Pullrequest to add several methods in plugin SceneCreator:. - to add basic 3D object: Cube, Cylinder, Plane. In rigid or deformable.; - also add an executable sceneCreatorExamples to run simple examples using those methods.; - Minor changes in TriangularFEM and CylindricalGrid to use those components. This PR: ; - [x] succeed on each compilation setup on the CI; - [x] does not generates new warnings or test failure; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] clean stuff; - [x] is now 1 week old and no one send a 'no go' comment. ; - [x] have tests on the introduced features.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133:429,failure,failure,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133,1,['failure'],['failure']
Availability,"Small PR on GridTopology and RegularGridTopology link to issue: #163. - Allow to set RegularGridTopology in 1,2 or 3 dimension. But still check if the grid resolution is valid.; - Fix example of Tetrahedron FEM that was crashing if no tetrahedron is found in the scene.; - Add an example scene.; - Remove RegularGridTopology dependencies from MechanicalObject. CHANGELOG:; - GridTopology ; - clean the code & factor the constructor; - implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis; - RegularGridTopology clean the constructor's code & remove NDEBUG code. ; - Adds RegularGridTopology_test; - TetrahedronFEMForceField clean code; - MechanicalObject removes code that was specific to the grid. ; - Adds new examples scenes called: ; examples/Components/topology/Hexa2TetraTopologicalMapping.scn; examples/Components/topology/RegularGridTopology_dimension.scn; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270:1151,failure,failures,1151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270,1,['failure'],['failures']
Availability,Small PR on the pickHandler class.; ADD: several tests on pointers != null before accessing them. ; ADD: default ray length parameter in the constructor.; UPDATE: replace most of the .h include in the header by forward classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/522:484,failure,failures,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/522,2,['failure'],['failures']
Availability,"Small PR to : ; - ~~remove useless header~~ (and then remove one dependency on SofaBaseTopology) (see discussion #242 ) (actually instead of removing, I used an existing #ifdef macro); - add forgotten Windows macro to export specialized functions into DLLs. This should not break any API compatibility or compilation (hopefully). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/249:560,failure,failures,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/249,1,['failure'],['failures']
Availability,Small PR to :. 1. Add more tests and error messages if **ArticulatedSystemMapping** init or bwdinit failed. ; 2. Check if **articulatedCenter** has been found in **ArticulatedHieararchyContainer**.; 3. Fix warning when drawing JointSpringFF lines and Update the warning message to be more understandable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448:37,error,error,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448,3,"['error', 'failure']","['error', 'failures']"
Availability,"Small PR to allow compilation of SofaCUDA plugin with SOFA_NO_OPENGL flag (i.e disabling OpenGL); Remarks:; - The components' draw() functions in SofaCUDA should share their code with their ""normal"" version.; For example, CudaUniformMass with cudarigid3f should call the draw() of UniformMass<Rigid3>; Some work has to be done further in Sofa itself, that's why I just add preprocessor tests (#ifdef SOFA_NO_OPENGL) and did not use the drawtool functions 👅 ; - Obviously, if you compile without OpenGL, you wont be able to share OpenGL buffer in CUDA. In other words it is useless to use CudaVisualModel without SOFA_NO_OPENGL.; (Actually CudaVisualModel should be renamed CudaOglModel). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1242:944,failure,failures,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1242,2,['failure'],['failures']
Availability,Small PR to fix SofaPhysicsAPI compilation broken due to changes done in sofa main API on:. - helper::io::Image; - GUIManager::RegisterGUI. Maybe this project should be added to one of the vm of the dashboard?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/549:467,failure,failures,467,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/549,2,['failure'],['failures']
Availability,Small PR to fix two unneeded dependencies :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/588:303,failure,failures,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/588,2,['failure'],['failures']
Availability,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2255:830,failure,failures,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255,2,['failure'],['failures']
Availability,Small changes found in my dev branch:; 1. clean various type mismatch warnings in **SofaBaseVisual** classes; 2. Clean some unnecessary/deprectated header includes in **SofaDeformable** classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449:451,failure,failures,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449,2,['failure'],['failures']
Availability,Small changes to prepare to compile with stdc++17.; * weird problem with byte keyword (introduced with std::byte); * removal of binary_function in c++17 (already deprecated in c++11 actually). Final compatibility with c++17 will need the merge of #1101 (problem with Eigen) and a small change with CMake (CMAKE_CXX_STANDARD 17); waiting for the CI to be fully compatible. EDIT: had to update googletest as well because of new STL's things.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1162:697,failure,failures,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1162,2,['failure'],['failures']
Availability,"Small cleaning, replacing sout and serr by msg_info, dmsg_info or msg_error. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1234:333,failure,failures,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1234,2,['failure'],['failures']
Availability,"Small cleanings for the BeamFEMForceField :; - Use read and write accessors; - Make the data `youngModulus`, `radius` and `radiusInner` required to explicit the fact that BFFF only focuses on circular sections. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3887:755,failure,failures,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3887,2,['failure'],['failures']
Availability,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2020:617,failure,failures,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020,2,['failure'],['failures']
Availability,"Small fix related to issue #114 . Have tested the compilation without the flag `SOFA_INSTALL_RESOURCES_FILES` (which is set by default), Sofa.ini which is necessary is well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/284:438,failure,failures,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/284,2,['failure'],['failures']
Availability,Small fix to allocate memory on cuda_device much faster for large vectors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1142:331,failure,failures,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1142,2,['failure'],['failures']
Availability,"Small fix, after a discussion we had Christian, Hugo, Erik and I on haptic rendering. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1537:342,failure,failures,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1537,2,['failure'],['failures']
Availability,"Small fix, correcting the check for the multiplicity between ""time"" and dt, as well as putting period to dt by default if nothing is given by the user.; Set back to the default behavior : periodic export activated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/776:471,failure,failures,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/776,2,['failure'],['failures']
Availability,Small improvement on the view of html file associated with scenes. We can now navigate (with backward) between and starting Sofa scene directly with hyperlinks. The windows can also be hidden/displayed and its location preserved. . I cannot prevent myself to also clean small things in RealGUI and SetDirectory/FileSystem. ; But this is very minor. . I made a quick & dirty video to show the results so that you don't need to compile it: ; https://youtu.be/5uumC9f-wzo. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540:726,failure,failures,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540,2,['failure'],['failures']
Availability,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2273:1484,failure,failures,1484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273,2,['failure'],['failures']
Availability,Small patch to restore ambient component in fake sphere rendering. Was:; ![manyspheres_00000002](https://cloud.githubusercontent.com/assets/11028016/23556748/ef984e7c-002d-11e7-9346-c7208b12f44d.png). Now:; ![manyspheres_00000001](https://cloud.githubusercontent.com/assets/11028016/23556756/f77050b8-002d-11e7-948d-5605c6cd2825.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/192:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/192,1,['failure'],['failures']
Availability,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1920:673,failure,failures,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920,2,['failure'],['failures']
Availability,"Snap, CImg errors on Windows are fixed :tada: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/622:11,error,errors,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/622,3,"['error', 'failure']","['errors', 'failures']"
Availability,"So I wanted to open a python file in SOFA but the terminal shows this error-; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'filepath'; Python exception:; ModuleNotFoundError: No module named 'splib3'. I am not able to fix this error. I have SofaPython3 and STLIB plugins already added. Can't figure out how to solve. Please help!. Also, I am using windows10 , python v3.7",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2959:70,error,error,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2959,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"So far, we used the ""Interactions"" DisplayFlag in the GUI (actually named as ""InteractionForceFields"" in the list:; 1. it's confusing; 2. this name is :question: $ :exclamation: :boom: :bird: . Here is a new suggestion: :white_flower: ""ContactInteractions"" :white_flower: ; Obviously, compat and generalization in the code will be done if we agree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3977:893,failure,failures,893,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3977,2,['failure'],['failures']
Availability,So for this one the CI showing an error..but I'm not sure it is a real one... I retry ubuntu only.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1848#issuecomment-789912106:34,error,error,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848#issuecomment-789912106,1,['error'],['error']
Availability,"So it's done. That answers my question. On Mon, Jan 23, 2023, 21:14 Hugo ***@***.***> wrote:. > Sorry I do not get the question @alxbilger <https://github.com/alxbilger>; > Here it's the ChangeLog for v22.06 is already available here :; > https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#v220600; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400919780>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACQVHUB5KC7PSWLPY7AYYSTWT3RBZANCNFSM6AAAAAATVQHW2U>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682:219,avail,available,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682,1,['avail'],['available']
Availability,So now the linkage of metis is PRIVATE in `Sofa.Component.LinearSolver.Direct` and every other target requiring metis finds the package itself (e.g. SofaMatrix) . One problem is that FetchContent_MakeAvailable make the target available for the current target and its child (that is why the test in `Sofa.Component.LinearSolver.Direct` is able to link to metis without the need of finding it) but other unrelated targets cannot find it. So we cannot keep it Public because it will not be found by the other target linking to `Sofa.Component.LinearSolver.Direct` because a lot of them doesn't require metis,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1956756623:226,avail,available,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1956756623,1,['avail'],['available']
Availability,So now the object is fully valid if the transformation's data are updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1459:331,failure,failures,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1459,2,['failure'],['failures']
Availability,"So we can validate how the ObjectFactory should behave. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2696:602,failure,failures,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2696,2,['failure'],['failures']
Availability,Sofa is a drama in term of #include coupling which make:; - compilation time to be larger than what it should; - cost a lot in term of code maintenance. . In the future we should try to progressively improve the situation. ; This PR is a minor step toward this target. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/419:140,mainten,maintenance,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/419,3,"['failure', 'mainten']","['failures', 'maintenance']"
Availability,"Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collis",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4553,ERROR,ERROR,4553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4312:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312,2,['failure'],['failures']
Availability,"SofaCUDA declaration is moved out of the condition on Sofa.GL.; It is moved after VolumetricRendering, because SofaCUDA has a dependency to VolumetricRendering. Therefore, VolumetricRendering must be declared first. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3514:760,failure,failures,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514,2,['failure'],['failures']
Availability,"SofaComponentAll is not deprecated but is using deprecated things.; So it is little bit confusing (especially for newcomers); This change gets all the declared modules (thanks to sofa_add_module()) ; instead of SofaCommon/SofaMisc/SofaGeneral. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1696:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1696,2,['failure'],['failures']
Availability,SofaExporter was a linked to SofaPython & SofaGuiQt under the PUBLIC scope while that dependency is internal & should not be exposed publicly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/963:399,failure,failures,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/963,2,['failure'],['failures']
Availability,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2000:1591,failure,failures,1591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000,2,['failure'],['failures']
Availability,"SofaGLFW was throwing me error when saving a camera view while effectively writting the file....; It appeared that SaveFile return XML_SUCCESS (underlying value of 0) when successful.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4884:25,error,error,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4884,3,"['error', 'failure']","['error', 'failures']"
Availability,"SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```. Thanks!; What I'm doing wrong?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3382,error,errors,3382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,2,"['avail', 'error']","['available', 'errors']"
Availability,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2052:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052,2,['failure'],['failures']
Availability,"SofaPython could not compile without having SofaExporter.; To solve that, bindings included in SofaPython are moved into SofaExporter. Bindings should be included into their respective modules/plugins anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1095:465,failure,failures,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1095,2,['failure'],['failures']
Availability,"SofaPython is now disabled on CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2526:578,failure,failures,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2526,2,['failure'],['failures']
Availability,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1875:1214,failure,failures,1214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875,2,['failure'],['failures']
Availability,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1988:826,failure,failures,826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988,2,['failure'],['failures']
Availability,"SofaSphFluid was computing normals using an experimental parallel loop (brought by std::execution); Requires external Intel' s TBB library and does not really bring an significant speed-up.; So it is better to remove it to remove conditional code (as it was not compiled for Apple as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1684:835,failure,failures,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1684,2,['failure'],['failures']
Availability,SofaUnity-Renderer demo scene of caudeus.scn crash with errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:56,error,errors,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['error'],['errors']
Availability,"SofaValidation seems to be a true plugin and not a collection.; This PR does not move it from the `collection` folder. Question:; - Should the module decide by itself what type of module (plugin, collection etc) it is?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3296:764,failure,failures,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3296,2,['failure'],['failures']
Availability,"Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_error(""HERE"") << ""This should generate a test failure"" ;; }; }. {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a test falure"" ;; }. }; }",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1601,Error,Error,1601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,1,['Error'],['Error']
Availability,"SoftRobots uses SceneCreator for its tests, but as it is built as an out-of-tree project on our CI, libSceneCreator.so can't be found. until this PR is merged at least... . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1109:429,failure,failures,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1109,2,['failure'],['failures']
Availability,"Solve #1331 . For multi configuration projects (e.g Visual Studio), the macro was not checking if the directory was existing, and was copying the lib as the configuration name (which is obviously wrong 🐇 ); The fix creates the directory before copying (no need to check as CMake does not do anything if it already exists). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1347:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1347,2,['failure'],['failures']
Availability,Solves issue #84 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/282:275,failure,failures,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/282,2,['failure'],['failures']
Availability,"Some `image` plugin scenes fail because the template used is not compiled in the standard set. It needs the full set. Only the standard set is compiled on the CI. Decision to take:; 1) The failing scenes are ignored on the CI; 2) The failing scenes are modified to use a templated available in the standard set; 3) The CI compiled the full set. I am in favor of the third option, but we already talked about it in https://github.com/sofa-framework/ci/pull/15. It seems to take too much time at the compilation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378:281,avail,available,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378,1,['avail'],['available']
Availability,"Some advanced timer steps also pass the node as an ""obj"" data to the timer's record. This allows one to differentiate a timer call from another one in another node. I guess one picture is worth a lot or words here:. <img width=""675"" alt=""advanced_timer_graph"" src=""https://user-images.githubusercontent.com/6951981/74366929-3e7b6800-4dd1-11ea-82de-c4631ee7e857.png"">. This PR adds these obj ids to the timer labels. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1256:672,failure,failures,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1256,2,['failure'],['failures']
Availability,"Some benchmarks done:; (setup: whole SOFA compiled either float or double, and the scene is just an OglModel drawting the dragon from the stanford database http://graphics.stanford.edu/data/3Dscanrep/ , which has 500K vertices and 1M triangles); - SOFA with double: 105 fps; - SOFA with float: 110 fps; ; (on Windows); the small difference is within the error margin (and in a real simulation the rendering itself is negligible). <img src=""https://user-images.githubusercontent.com/11028016/166214524-85d8ae4d-0ccd-43a3-8a55-9437b12dc36e.PNG"" width=""200"" />",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1113123372:354,error,error,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1113123372,1,['error'],['error']
Availability,Some bug fix from my working branch. List of fix:; - **[FixedConstraint]** fix bug when several invalid indices need to be removed. Need to parse all first and remove in a second stage.; - **[SphereModel]** FIX: display of collision sphere in wireframe mode.; - **[TetrahedronSetTopologyContainer]** FIX: triangle created with bad orientation in addTetrahedronProcess method.; - **[TriangleModel]** FIX: need to check if topology has changed and update the triangles if needed before computing triangleModel BBox; - **[PointModel]** Fix pointModel crash when removing points. need to be well resized in computeboundingtree method.; - **[SofaBaseTopology]** Add a single static trianglesOrientationInTetrahedronArray in baseMeshTopology.h and remove all the different occurences (with different values) in the cpp files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/985:1076,failure,failures,1076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/985,2,['failure'],['failures']
Availability,Some changes to be able to handle tetra removal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554:305,failure,failures,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554,2,['failure'],['failures']
Availability,"Some cleaning in `CudaPointModel`, `CudaLineModel`, `CudaTriangleModel `and `CudaSphereModel`; and fix the ambiguity between Collision element model and collision element. for example:; `using CudaLine = sofa::component::collision::TLine<CudaVec3fTypes>; // collision element`; `using CudaLineCollisionModel = sofa::component::collision::LineCollisionModel<CudaVec3Types>; // collision element model`. No support of Cuda double for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2673:981,failure,failures,981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2673,2,['failure'],['failures']
Availability,"Some cmake file/macros/options references the SofaNG project (codename), which is not really good for consistency IMO.; This has been rename to SOFA, as the SOFANG was merely for dev purpose. e.g, the option to enable Sofa.Component.AnimationLoop was called:; `SOFANG_ENABLE_SOFA_COMPONENT_ANIMATIONLOOP`; now it is named:; `SOFA_ENABLE_SOFA_COMPONENT_ANIMATIONLOOP`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3102:912,failure,failures,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3102,2,['failure'],['failures']
Availability,"Some cmake instructions became irrelevant as new requirement versions for cmake, gcc ,and clang have been defined.; So this PR merely remove the now-dead code. \+ Sofa.compat deletion from #4760 was not totally finished (add a warning at cmake configure time). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4812:805,failure,failures,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4812,2,['failure'],['failures']
Availability,"Some computeBBox() functions were still using numeric_limits<Real>::min() instead of lowest(). numeric_limits<T>::min() returns 0 (more precisely a value very close to it) if T is a floating-point type, whereas numeric_limits<T>::lowest() returns -inf(more precisely -max of T), which is the expected behavior in computeBBox(). http://en.cppreference.com/w/cpp/types/numeric_limits/min; http://en.cppreference.com/w/cpp/types/numeric_limits/lowest. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/634:705,failure,failures,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/634,2,['failure'],['failures']
Availability,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1933:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933,2,['failure'],['failures']
Availability,"Some formatting errors (tabs) but looking at your work @epernod it does not matter, we could maybe run the format-script.; Anyway, a short question: for the MMMass for instance, even before your changes it would not have supported a mixed mesh (mix of hexa & tets for instance) ? right ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1352#issuecomment-631272046:16,error,errors,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1352#issuecomment-631272046,1,['error'],['errors']
Availability,"Some functionalities introduced by this PR looks redundant to the existing printLog data, and can replace it with great advantage. Moreover, the current usage of this printLog data varies from one component to an other, and could be cleaned in the same time.; Maybe a sdebug stream (in addition to sout, serr) could be introduced to cover some of the misusage of the printLog data.; Initially, printLog is to print or not the component messages to the standard output",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276617447:49,redundant,redundant,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276617447,1,['redundant'],['redundant']
Availability,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1950:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950,2,['failure'],['failures']
Availability,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4213:1019,failure,failures,1019,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213,2,['failure'],['failures']
Availability,Some minor warnings and ...; FIX strange double incrementation on iterator in DefaultMultiMatrixAccessor.cpp : @ChristianDuriez @courtecuisse your review would be great !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/364:428,failure,failures,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/364,2,['failure'],['failures']
Availability,"Some minus signs disappeared in #2429 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2448:584,failure,failures,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2448,2,['failure'],['failures']
Availability,"Some more info about this test... ; Fails on master since b70b477f; Error appeared in `defrost` branch between 4b1f289 and a33b4b1.; First CI build with error: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_default_amd64/546/ ; Error message: ; ```; J:\job\origin\master\modules\SofaOpenglVisual\SofaOpenglVisual_test\LightManager_test.cpp:65; Expected: (lm) != (nullptr), actual: NULL vs 8-byte object <00-00 00-00 00-00 00-00>; ```; Full output: ; ```; Running SofaOpenglVisual_test.exe; Seed Value used for the tests = 1478637948; [==========] Running 1 test from 1 test case.; [----------] Global test environment set-up.; [----------] 1 test from TestLightManager; [ RUN ] TestLightManager.checkAttributes; [ERROR] [DAGNode ""Level 1""] Object type ""MechanicalObject"" creation Failed; Emitted from 'J:\job\origin\master\SofaKernel\modu; les\SofaSimulationCommon\xml\NodeElement.cpp' line ; 92; [ERROR] [DAGNode ""Level 1""] Object type ""LightManager"" creation Failed; Emitted from 'J:\job\origin\master\SofaKernel\modu; les\SofaSimulationCommon\xml\NodeElement.cpp' line ; 92; [ERROR] [SceneLoaderXML] Node initialization failed.; Emitted from 'testscene' line 1; J:\job\origin\master\modules\SofaOpenglVisual\SofaOpenglVisual_test\LightManager_test.cpp(65): error: Expected: (lm) != (nullptr), actual: NULL vs 8-byte object <00-00 00-00 00-00 00-00>; unknown file: error: SEH exception with code 0xc0000005 thrown in the test body.; [ FAILED ] TestLightManager.checkAttributes (9 ms); [----------] 1 test from TestLightManager (9 ms total). [----------] Global test environment tear-down; [==========] 1 test from 1 test case ran. (10 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TestLightManager.checkAttributes; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263269510:68,Error,Error,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263269510,9,"['ERROR', 'Error', 'down', 'error']","['ERROR', 'Error', 'down', 'error']"
Availability,"Some notes:. - It was extremely hard to understand why L^T was used in the first step of the solve, and not L. I hope it's clearer now with the comment I added. Anyway, it requires to have the knowledge of the CSR and CSC formats, and how they relates to the transpose.; - I would like to use C++20 `std::span` in some functions such as `solveLowerUnitriangularSystemCSR`.; - Regression tests threshold are usually set to 1e-4. IMO it's not enough to capture errors happening on a single DOF because it's an average",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403:459,error,errors,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403,2,['error'],['errors']
Availability,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2234:696,failure,failures,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234,2,['failure'],['failures']
Availability,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2304:765,failure,failures,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304,2,['failure'],['failures']
Availability,"Some pragma directive were introduced by 4548ab474f89a229f; but they work only with gcc, and generate some warnings with ; other compilers, at least msvc based on my own experience. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/447:438,failure,failures,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/447,2,['failure'],['failures']
Availability,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1817:983,failure,failures,983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817,2,['failure'],['failures']
Availability,"Some scenes where presenting strange behavior : no object moving; with specific numerical settings, and with some others it was; working fine. This was due to a threshold of CG met at first step; on denominator value. Now force at least one step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/521:503,failure,failures,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/521,2,['failure'],['failures']
Availability,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1998:794,failure,failures,794,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998,2,['failure'],['failures']
Availability,"Some unit tests are generating sofa errors w/o generating gtest errors (e.g. SofaBoundaryCondition_test). To detect such problems, I had added a msg handler that was returning a gtest error at each sofa error.; It was not good enough because some tests can generate sofa errors on purpose.; But the new implementation defeat the main purpose.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211:36,error,errors,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211,5,['error'],"['error', 'errors']"
Availability,Some various changes that shouldn't break things but ease the SOFA_FLOAT removal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/864:338,failure,failures,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/864,2,['failure'],['failures']
Availability,"Some vector calculus are performed on normalized orthogonal vectors, and the result is also normalized. Therefore, no need to normalize it again. The proposed change avoids 2 normalizations. To be multiplied by the number of elements. It's called in `addForce`. And I suspect this is why `addForce` is faster in https://github.com/sofa-framework/sofa/pull/2550 (the branch contains the same changes only for TetrahedronFEMForceField).; In this PR, the changes are applied on all the corotational FEM I could found. I found that the function `Decompose<Real>::getRotation` is very similar to my changes. However, the resulting rotation is the transpose of the rotation needed in the FEM. Also, I did not find any use of `Decompose<Real>::getRotation`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2647:1295,failure,failures,1295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2647,2,['failure'],['failures']
Availability,Some very simple clean ups while I was there. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1124:302,failure,failures,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1124,2,['failure'],['failures']
Availability,"Some work on cleaning the components SparseGridTopology and SparseGridRamicficationTopology: . - Remove commented code; - Replace sout/serr by msg macro; - Remove duplicated Data in SparseGridRamicficationTopology which inherite from SparseGridTopology ; - Fix warnings (size_t, unsued variables, ...); - Fix SparseGridTopology.scn and SparseGridRamicficationTopology.scn behavior; - Add regression_test references for both scenes and add them to the list of scene to be tested. This PR replace an old one #706 instead of merging master. This PR is only a aesthetic clean before a more complex PR to clean and factorize methods inside the components as well as removing the fileMesh loaded inside the component and use topology Data buffers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/855:998,failure,failures,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/855,2,['failure'],['failures']
Availability,"Some work on cleaning, adding more check and test on sparseGridTopology component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/706:339,failure,failures,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/706,2,['failure'],['failures']
Availability,"Some work on dynamic topology changes:; - rewrite the TRIANGLESREMOVED case of Tetra2TriangleTopologyMapping, should bring a speedup of xN where N is the number of triangles to remove. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/788:443,failure,failures,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/788,2,['failure'],['failures']
Availability,"Something, when having multiple topologies in the same node as the input state, the barycentric mapping will get the wrong input topology since it rely only on `fromModel->getContext`. This PR fixes this by adding links for the input and output topologies. . Also some reformatting of the input topology type detection with a goto statement...a good example as to where goto can be useful :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1125:650,failure,failures,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1125,2,['failure'],['failures']
Availability,"Sometimes (every few thousand occurrences) the vector becomes invalid between getting its length and iterating over it. . This error was first described in https://www.sofa-framework.org/community/forum/topic/m_contactsvectorbuffer-not-valid-sometimes/. Now swapping the contents and the error does not occur anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2676:127,error,error,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2676,4,"['error', 'failure']","['error', 'failures']"
Availability,"Sometimes we see this kind of initialization of a Data:; ```cpp; showObjectScale(initData(&showObjectScale, 0.1f, ""showObjectScale"", ""Scale for object display. (default=0.1)"")); ```; The information on the default value is redundant and error-prone. A developer can decide to change the default value and forget to change the default value in the description. Instead, I suggest to store the default value of the Data and use it to print it in the GUI, in addition to the description. Here is the result:; ![image](https://github.com/sofa-framework/sofa/assets/10572752/eb6e238b-2b06-4d3b-bdc4-cf553d795606). We can also imagine having a small button to change the value to its default value (like in Unreal Engine). The implementation of this suggestion triggers some questions:; - I chose to store the default value only for some of the `Data<T>`, based on the type of `T`. Do we want that or do we want to store it for all types?; - I chose to store the default value of `Data<T>` as a T. But we can also consider storing its string representation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4133:223,redundant,redundant,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4133,4,"['error', 'failure', 'redundant']","['error-prone', 'failures', 'redundant']"
Availability,"Sorry @alxbilger, typo in my rewrite of the output. In fact, the error starts with ""$EndNodes"", so no possibility to read the elements.; The `cmd==""$EndNodes\r""`, so the comparison is always wrong. ; @hugtalbot, yes, it works for the other file I have. This shouldn't change anything for files that don't put '\r' at the end of keywords.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1152074953:65,error,error,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1152074953,1,['error'],['error']
Availability,"Sorry for the dual edditing... I didn't knew github was not robust against that. . I merge the PR because I hate having PR that longs for month and we can still fix the description even when it is merged/closed. . Many thanks,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311019886:60,robust,robust,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311019886,1,['robust'],['robust']
Availability,Sorry the caduceus scene was also affected by #1369 ; Could anyone merge it straightaway?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1392:347,failure,failures,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1392,2,['failure'],['failures']
Availability,SparseGridTopology segmentation fault when the grid is out of bound,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1748:32,fault,fault,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748,1,['fault'],['fault']
Availability,"Speed up by a (huge) factor the rendering of several spheres.; This is done in 2 ways:; - optimizing with VBO for ""normal"" spheres (like before, with rings and segments parameters) ; - impostors (https://paroj.github.io/gltut/Illumination/Tutorial%2013.html). On the same computer, for 150K spheres :; - 0.8fps with previous rendering; - 22fps with VBO; - 46 fps with impostors . This task is also the beginning of optimizing draw tools, by removing deprecated glu calls and non optimized OpenGL code ; and by using VBO/IBO and shaders. (class BasicShapesGL). This PR should resolve more or less the issue #142 . ; It depends if this issue talks about spheres only or more generally speeding up rendering itself (in that case, it will need much more commits ;) ). <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/170:938,failure,failures,938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/170,1,['failure'],['failures']
Availability,Sphere drawn was actually half the size of the Sphere used.. Thank you @etagliabue for the notice !; ; Problem was:; ![](https://i.ibb.co/J5SkJ01/Sphere-ROI-00000001.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1318:428,failure,failures,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1318,2,['failure'],['failures']
Availability,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1992:684,failure,failures,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992,2,['failure'],['failures']
Availability,"Split the default parameters of the FileRepository constructor into; multiple constructors to avoid ambiguous calls. Add a new constructor that allows the creation of the repository using; multiple paths. The plugin file repository is now initialized using both $SOFA_ROOT/lib; and $SOFA_ROOT/plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610:846,failure,failures,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610,2,['failure'],['failures']
Availability,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1949:64,error,error-in-first-launch-of-sofa-after-installation,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949,3,"['error', 'failure']","['error-in-first-launch-of-sofa-after-installation', 'failures']"
Availability,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1948:675,failure,failures,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948,2,['failure'],['failures']
Availability,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4637:837,failure,failures,837,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637,2,['failure'],['failures']
Availability,"Start with mappings. ![image](https://user-images.githubusercontent.com/10572752/214327429-63f4208d-a6fc-4e76-a939-5a16a14eb9e7.png). With a compatibility layer on headers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601,2,['failure'],['failures']
Availability,"Start work on merging the duplicated code of the mesh loader components versus helper::io::mesh loaders. See issue #42 . Basically, all code to load a mesh file directly in the topology without using a meshLoader component. For example: `<GridTopology fileMesh=""my_mesh.msh"" /> or <OglModel filename=""my_mesh.obj"" />`; go through the class: helper::io::MeshTopologyLoader which had directly some code to load several formats or was using a helper::io::meshXX to read XX file format. All this code is duplicated with the meshLoader components and with some differences (otherwise it would not be fun...). For the moment I only updated the MeshTopologyLoader and the helper::io::mesh classes to check the tests on all plateforms. ; Changes are:; - obj -> nothing (use MeshObj class); - trian -> nothing (use MeshTrian class); - vtk -> remove code from 2009 and use MeshVTK class from 2015. Still different from meshVTKLoader.; - stl -> nothing (use MeshSTL class); - gmsh -> create a MeshGmsh class and move the code in it.; - xsp -> create MeshXsp class and move the code in it.; - cgal -> remove the methods. Assume it is deprecated.; - unknown format -> the ""else"" method when format not found return false now and is set as deprecated. - Update the helper::io::mesh class to have topology buffers in order to be similar as baseMeshLoader for future merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/661:1614,failure,failures,1614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/661,2,['failure'],['failures']
Availability,"Started from ; - #4858 . but decided to do a separate PR to introduce the new ComponentChange for lifecycle/user management.; and applying on Animation loop components. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/296]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863:781,failure,failures,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863,2,['failure'],['failures']
Availability,"Started from the PR #4838 . Similar to the Thread Sanitizer.; Only for GCC/Clang and Unix (seems even GCC-win/Clang-win are not supported). This A(L)SAN adds leaks and memory detection.; More info:; - https://github.com/google/sanitizers/wiki/AddressSanitizer; - https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer (leak is included into the addresssanitizer). The `-fno-omit-frame-pointer`adds also a better reporting (nicer stack traces). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4847:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4847,2,['failure'],['failures']
Availability,"Started from the fact that there was an option to profile MT scheduling but the header `TaskSchedulerProfiler.h`is not available anywhere (git history, etc) so I removed the macros related to profiling. - some files did not have the SOFA licence header; - indentation was all over the place; - guidelines, etc; - clean some includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3448:119,avail,available,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3448,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2314:292,down,downside,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314,3,"['down', 'failure']","['downside', 'failures']"
Availability,"Starting the work of cleaning the topology in Sofa.. resting in peace since 2012... - Change those methods: now returns unsigned int instead of int: ; - getEdgeIndex(PointID v1, PointID v2);; - getTriangleIndex(PointID v1, PointID v2, PointID v3);; - getQuadIndex(PointID v1, PointID v2, PointID v3, PointID v4);; - getTetrahedronIndex(PointID v1, PointID v2, PointID v3, PointID v4);; - getHexahedronIndex(PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8);; - Now unfound ID == UINT_MAX instead of -1.; - Change several serr/sout into msg_. In this PR, 2 scene tests are now sending error due to the conversion of serr into msg_error.; This is beacuse some scene test try to do topological change on regularGrid which doesnt support that. I would like to keep those scene error and handle that in a next PR (to split PRs and simplify review process). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/866:630,error,error,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/866,4,"['error', 'failure']","['error', 'failures']"
Availability,"StateAccessor is used quite intensively so this warning is popping up everywhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2835:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2835,2,['failure'],['failures']
Availability,StateMask is including Eigen/Sparse everywhere while it is not needed/used. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1505:334,failure,failures,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1505,2,['failure'],['failures']
Availability,Static access to the ConsoleMessageHandler (use case in SP3 ([PR #18](https://github.com/sofa-framework/SofaPython3/pull/18)). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1434:383,failure,failures,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1434,2,['failure'],['failures']
Availability,Static solver updated by @jnbrunet and I think @IPeterlik worked on it as well; It now includes : ; - possibility to make more than one Newton-Raphson step; - correction and residual tolerance as data; - option to stop iterations when residual is growing. Uses also #pragma; A DOC page will soon be made available specific to the static solver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950:183,toler,tolerance,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950,4,"['avail', 'failure', 'toler']","['available', 'failures', 'tolerance']"
Availability,"Static variable was not defined with double precision Cuda types. The CI probably does not compile SofaCUDA with double precision (off by default). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440:692,failure,failures,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440,2,['failure'],['failures']
Availability,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649:269,avail,available,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649,3,"['avail', 'failure']","['available', 'failures']"
Availability,Still some compilation errors left,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1128659439:23,error,errors,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1128659439,1,['error'],['errors']
Availability,Stop the search of the Container/BaseTopology when one is found (using break). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new scene test failures.; - [ ] does not generate new unit test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1176:336,failure,failures,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1176,2,['failure'],['failures']
Availability,"Strange error on Mac clang: ; ```; Adding module SofaOpenglVisual; CMake Error at /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1239/mac_clang-3.5_options_release/build/cmake/SofaFrameworkConfig.cmake:76 (find_package):; Could not find a package configuration file provided by ""GTest"" with any of; the following names:. GTestConfig.cmake; gtest-config.cmake. Add the installation prefix of ""GTest"" to CMAKE_PREFIX_PATH or set; ""GTest_DIR"" to a directory containing one of the above files.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709:8,error,error,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709,2,"['Error', 'error']","['Error', 'error']"
Availability,"Strange there is still a gtest error @alxbilger ; ```; gtest.h:1527:11: error: no match for 'operator==' (operand types are 'const sofa::type::Mat<1, 1, int>' and 'const int'); 1527 | if (lhs == rhs) {; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056,2,['error'],['error']
Availability,"Stumbled on it with #1649 . DiffusionSolver was unable to find ""png.h"" when SOFA_NO_OPENGL is activated. It appears that if SOFA_NO_OPENGL is not activated, adding glew somewhat adds the dependency package directory (<sofaroot>/include) to the include_directories of SofaHelper (and the subsequent modules needing it). But if SOFA_NO_OPENGL is not activated, this directory is not added.; DiffusionSolver needs Cimg, which adds only for himself the include directory (i.e no target_include_directories).; So CImg compiles well but the modules needing it do not. That's why DiffusionSolver cannot find ""png.h"". My fix does add this include_directory to the target, but I don't know if it is the best way. Joy of CMake 🥴. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1650:1264,failure,failures,1264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1650,2,['failure'],['failures']
Availability,"Stumbled on this error:; ```; XXXXXXX exceeds the OS max path limit. The fully qualified file name must be less than 260 characters.; ```; while generating with MSVC (and Windows); I dont know if there is a specific CMake parameter to shorten build paths but here are some workarounds:; - move your build the closest to your root dir ( e.g at ```C:\``` ); - [discard the path limit](https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation#enable-long-paths-in-windows-10-version-1607-and-later) (starting from Windows 10, version 1607)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1716:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1716,1,['error'],['error']
Availability,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2160:1061,failure,failures,1061,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160,2,['failure'],['failures']
Availability,"Suffix was missing for SceneCreator, SofaTest and SofaSimulationCore.; Fixes #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/511:340,failure,failures,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/511,2,['failure'],['failures']
Availability,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2094:744,failure,failures,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094,2,['failure'],['failures']
Availability,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2322:802,failure,failures,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322,2,['failure'],['failures']
Availability,"Summary:; - duplicate changes appeared since the Sofa-ng move (and the message from uncreatable was reporting only the first registered move, so the displayed error message itself was incorrect); - few changes were invalid (some non-BaseObject were inserted); - few components were forgotten; - removed the creatablemoved class, since the move will be reported by the SceneCheckerRequiredPlugin anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2986:159,error,error,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2986,3,"['error', 'failure']","['error', 'failures']"
Availability,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1924:516,error,errors,516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924,4,"['Error', 'error']","['Error', 'Error-Handling-in-C', 'error', 'errors']"
Availability,"Summery of the problem statement:; currently in sofa there is not rules to describe colors inthe data fields. Consequently some components use Data, others rely on Data and others are using a combination of Data with private float r,g,b,a member. So there are component that accepts color by string ""blue"" or ""#aabbccdd"", other works by passing ""0 1 0 1"" while others ""0 1 2"". This lack of consistency in a problem in term of user interface design which impact XML, python scene as all as in GUIs like runSofa or qtQuickSofa. To solve that I replace the existing data fields with a dedicated type for color (see defaulttype::RGBAColor introduced in PR ##119) . The advantages are multiple:; - expose color in a consistent way to the users.; - all the components now supports the following way to set color: ""blue"", ""0 0 1 1"", ""0 0 1"", ""#0000AAAA"", ""#0000AA"", ""#00AA"", ""#00A"",; - the code to convert the string to a RGBAColor is no more duplicated in component and is now more robust and reports more errors to the users.; - the behavior of the RGBAColor public API is now tested in Color_test.cpp. The disadvantage is that despite I try not to break things (especially in scene) ... it may happens (brecause the commit is rather big & touch a lot of files). So please test it on one or two scene of your choice and report problem. This PR depends on PR #119; This PR replace PR #124 ; This PR solve the Issue #64. Checklist to be merge:. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does may break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/206:976,robust,robust,976,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/206,3,"['error', 'failure', 'robust']","['errors', 'failures', 'robust']"
Availability,"Summery of the problem statement:; currently in sofa there is not rules to describe colors inthe data fields. Consequently some components use Data<Vec3>, others rely on Data<Vec4> and others are using a combination of Data<string> with private float r,g,b,a member. So there are component that accepts color by string ""blue"" or ""#aabbccdd"", other works by passing ""0 1 0 1"" while others ""0 1 2"". This lack of consistency in a problem in term of user interface design which impact XML, python scene as all as in GUIs like runSofa or qtQuickSofa. To solve that I replace the existing data fields with a dedicated type for color (see defaulttype::RGBAColor introduced in PR #https://github.com/sofa-framework/sofa/pull/119) . The advantages are multiple:; - expose color in a consistent way to the users.; - all the components now supports the following way to set color: ""blue"", ""0 0 1 1"", ""0 0 1"", ""#0000AAAA"", ""#0000AA"", ""#00AA"", ""#00A"", ; - the code to convert the string to a RGBAColor is no more duplicated in component and is now more robust and reports more errors to the users. ; - the behavior of the RGBAColor public API is now tested in Color_test.cpp. . The disadvantage is that despite I try not to break things (especially in scene) ... it may happens (brecause the commit is rather big & touch a lot of files). So please test it on one or two scene of your choice and report problem. This PR depends on PR #https://github.com/sofa-framework/sofa/pull/119 ; This PR solve the Issue https://github.com/sofa-framework/sofa/issues/64. Checklist to be merge: ; - [ ] succeed on each compilation setup on the CI.; - [ ] does not generates new test failure. ; - [ ] does not seems to break existing scenes. ; - [ ] does not seems to break API compatibility. ; - [ ] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/124:1040,robust,robust,1040,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/124,3,"['error', 'failure', 'robust']","['errors', 'failure', 'robust']"
Availability,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4236:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236,2,['failure'],['failures']
Availability,"Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901:205,avail,available,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901,2,['avail'],['available']
Availability,"System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:1849,ERROR,ERROR,1849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,THIS PR HAS BEEN REPLACED WITH #377.; So i close it. . ===============; This is an attempt to fix the bug here: #375 . The only real change is in BaseLink all the other file is cosmetic cleaning. ; Currently it is breaking & a wip. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/376:488,failure,failures,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/376,2,['failure'],['failures']
Availability,"TItle. GCC12, and SOFA minimal build (Sofa.framework + Sofa.Component + some stuff in Sofa.GUI) does not report warnings anymore; ~~But the current warning level is quite low...~~ not really, -Wall and -Wextra only reports warnings in tinyxml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3627:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627,2,['failure'],['failures']
Availability,TODO (to be discussed):. - [ ] Add a CI to https://github.com/sofa-framework/CSparseSolvers; - [ ] Add CSparseSolvers to the list of shipped plugins with the release (https://www.sofa-framework.org/download/),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4994:198,down,download,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4994,1,['down'],['download']
Availability,"TODO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3643:550,failure,failures,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3643,2,['failure'],['failures']
Availability,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4534:95,avail,available,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4266:1373,failure,failures,1373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266,2,['failure'],['failures']
Availability,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4257:1413,failure,failures,1413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257,2,['failure'],['failures']
Availability,"Take for example the scene: Demos/Liver.scn; Change the gravity of the root node:; <Node name=""lroot"" gravity=""0 0 0"" dt=""0.02"">. As soon as the simulation start, the liver disappears... No error message in the console, neither on the components. Does someone has an idea?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/557:190,error,error,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/557,1,['error'],['error']
Availability,"Takes over #2851 (a mess to merge with master, easier to reopen a new one). Remove completely when useless else, replace it using callback. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4075:684,failure,failures,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4075,2,['failure'],['failures']
Availability,Targets are built with debug version of runtime library in debug configuration; under MS Visual Studio. This is enabled with /MDd compiler flag. Missing this; flag for NVCC generated object files results in linker fails due to different; versions of runtime libraries. The problem is resolved by explicitly setting compiler options for debug build; under Windows. The solution is given only for Windows and only for MSVS because; it's the only officially supported by NVidia compiler on this platform. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/300:758,failure,failures,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/300,2,['failure'],['failures']
Availability,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4263:897,failure,failures,897,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263,2,['failure'],['failures']
Availability,"TaskScheduler was doing several things:; - A base class for task schedulers; - A factory to register and create task schedulers. The factory code is extracted from the TaskScheduler class and moved into its dedicated class and file. I refactored a bit how the factory works:; Before, it was like there could be only one TaskScheduler at a time. Everytime a new TaskScheduler was created, the previous one is destroyed. It prevents the use of multiple TaskScheduler with different type (derived class). Instead, the task schedulers are now stored in a map. ; The only issue is related to the task allocator. The task allocator is used every time a task is created. The task allocator is supposed to depend on the TaskScheduler where the task will be added. But in practice, a Task is created independently from the TaskScheduler. So I kept the old system that calls a static function setting the allocator when the task scheduler is created. Some unit tests are introduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3480:1517,failure,failures,1517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480,2,['failure'],['failures']
Availability,"Template aliases are clarified. They were introduced for `double` and `float` because of `DataExchange`. But it is a mistake since the default behavior is not in `DataExchange`. Therefore, I restored the template name to be `double` and `float` instead of `d` and `f` only for scalars. This is to mimic the default behavior. Template aliases are removed. Fixes https://github.com/sofa-framework/sofa/issues/3450. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3461:957,failure,failures,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461,2,['failure'],['failures']
Availability,Test failures are still here. Looks like CMAKE_INSTALL_DEFAULT_COMPONENT_NAME is not responsible for the failures then.; I keep this PR open to investigate...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-831802913:5,failure,failures,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-831802913,2,['failure'],['failures']
Availability,"Test is failing:. ```; [ERROR] [MergeVectors(mergedPositions)] Requested template 'Data<double>' cannot be found in the list of available templates [vector<RigidCoord2d>, vector<RigidCoord3d>, vector<RigidDeriv2d>, vector<RigidDeriv3d>, vector<Vec2I>, vector<Vec2d>, vector<Vec3d>, vector<Vec4d>, vector<bool>, vector<d>, vector<i>]. Falling back to the first compatible template: 'vector<d>'.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676:24,ERROR,ERROR,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676,2,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,Test is fixed. Failure was due to the fact that test values were generated before c81e4b73f24c2272e9346be3b5c0a1756ecdca59.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323962386:15,Failure,Failure,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323962386,1,['Failure'],['Failure']
Availability,Test.html) | [misc-misplaced-const](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-const.html) |; | [clang-analyzer-core.CallAndMessage](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.CallAndMessage.html) | [misc-misplaced-widening-cast](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-widening-cast.html) |; | [clang-analyzer-core.DivideZero](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DivideZero.html) | [misc-new-delete-overloads](https://clang.llvm.org/extra/clang-tidy/checks/misc-new-delete-overloads.html) |; | [clang-analyzer-core.DynamicTypePropagation](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DynamicTypePropagation.html) | [misc-non-copyable-objects](https://clang.llvm.org/extra/clang-tidy/checks/misc-non-copyable-objects.html) |; | [clang-analyzer-core.NonNullParamChecker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonNullParamChecker.html) | [misc-redundant-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-redundant-expression.html) |; | [clang-analyzer-core.NonnilStringConstants](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonnilStringConstants.html) | [misc-sizeof-container](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-container.html) |; | [clang-analyzer-core.NullDereference](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NullDereference.html) | [misc-sizeof-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-expression.html) |; | [clang-analyzer-core.StackAddressEscape](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.StackAddressEscape.html) | [misc-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/misc-static-assert.html) |; | [clang-analyzer-core.UndefinedBinaryOperatorResult](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.UndefinedBinaryOperatorResult.html) | [misc-string-compare](https://clang,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:9002,redundant,redundant-expression,9002,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-expression']
Availability,Tested on classical and retina screens on os x system and classical screen on linux system. I do not know how to create a unit test for this fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311:402,failure,failures,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311,2,['failure'],['failures']
Availability,"Testing this with the Visual Studio compiler, on my (getting old) desktop (4 cores, 16GB RAM, Windows) I obtained :. ```; - MSVC/debug: 23:52; - MSVC/debug/pch: 14:50; - MSVC/debug/unity: 15:10; - MSVC/debug/pch+unity: 12:46. - MSVC/release: 34:44; - MSVC/release/pch: 23:51; - MSVC/release/unity: 28:52; - MSVC/release/pch+unity: 23:52; ```. So this gives me a 20 to 50% decrease in build time (:+1:), and I would say that performances obtained either with unity, pch, or both are comparable.; Aside from that, when using the unity build, I get only one error while compiling SofaMeshCollision (for multiply defined symbols)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404:555,error,error,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404,1,['error'],['error']
Availability,"Tests pulled from https://github.com/InSimo/ISSofa/blob/issofa/framework/framework_test/defaulttype/ConstraintSparseMatrix_test.cpp. Major modifications:; - bloc -> block; - some tests fixed (???); - removal of MapMapSparse tests. \+ Important fix: readLine returns a endIterator if the line index is not correct (as described by the description....). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5037:896,failure,failures,896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5037,2,['failure'],['failures']
Availability,"Thank Eulalie for this report. After discussion with Erik, STL was remove on purpose but the error message is not clear on that and on how to fix the Scene. We will fix that this friday. DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/768#issuecomment-420558059:93,error,error,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/768#issuecomment-420558059,2,['error'],['error']
Availability,Thank for the reviewed. ; I checked the example file and my thinking is that this example is wrong and my PR is legitimate. ; 1) if you change in the example to turn visualization of the edge set it will crash. ; 2) The edgeset is in the root node and so the existing code to retrieve the context in the init() is not working as we expect.; 3) The code in the PR is right at detecting and reporting an error when this case is detected. . So i moved the EdgeSet into the same node as the topology. So the error does not pop up.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483165483:402,error,error,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483165483,2,['error'],['error']
Availability,"Thank maxime for this PR. . According to Mathieu's comment it is unclear to me if the PR should:; - be splitted in two; one with the error handling and one with the adding of the Spring Data binding; - or merged with minor change because, even if not perfect, this PR fundamentally it improves Sofa. ; ; EDIT: [ci-build] and up :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156#issuecomment-277264998:133,error,error,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156#issuecomment-277264998,1,['error'],['error']
Availability,"Thank you @fredroy and @alxbilger for the quick response on this issue!. I cherry-picked your merged commit [3f59ca7] from sofa/master into my local branch based on sofa/v21.06, this issue still happens to me as before. I actually don't see any ERROR messages in the sofa console when I change mouse to attach-using-bilaterial-constraint mode and try to grasp the caduceus.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2495#issuecomment-976154055:245,ERROR,ERROR,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2495#issuecomment-976154055,1,['ERROR'],['ERROR']
Availability,"Thank you CLion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4181:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4181,2,['failure'],['failures']
Availability,"Thank you for your comment; The interest is to be able to map the forcefields through the mapping in a sparse manner for many solvers of SOFA. I agree that this functionality is not directly available in the API and for now, would be only available in a private plug-in. But this is work in progress and we need more time to have a clean code available. Why does it break the API ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276#issuecomment-306720849:191,avail,available,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276#issuecomment-306720849,3,['avail'],['available']
Availability,"Thank you for your report @louise-scherrer . This segmentation fault is indeed a bug, and should be prevented. Here is the call stack to the fault:. ```; -> return m_trianglesAroundVertex[i];; const MeshTopology::TrianglesAroundVertex& MeshTopology::getTrianglesAroundVertex(PointID i); bool LocalMinDistance::testValidity(Point &p, const Vector3 &PQ); int LocalMinDistance::computeIntersection(Point& e1, Point& e2, OutputVector* contacts); int MemberElementIntersector<Point, Point, LocalMinDistance>::intersect(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector* contacts); void BruteForceDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void NarrowPhaseDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void DefaultPipeline::doCollisionDetection(const helper::vector<core::CollisionModel*>& collisionModels); void PipelineImpl::computeCollisionDetection(); ...; void CollisionAnimationLoop::computeCollision(const core::ExecParams* params); void FreeMotionAnimationLoop::step(const sofa::core::ExecParams* params, SReal dt); ```. I'll try to further look into this. We should try to find the best place to prevent this kind of fault without impacting too much the computation time.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329:63,fault,fault,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329,3,['fault'],['fault']
Availability,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:83,error,error,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,4,['error'],['error']
Availability,"Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5).; I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`.; Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well.; Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path`; I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`. Anyway, Thanks a lot.; <img width=""1099"" alt=""sofa"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159:299,error,error,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159,1,['error'],['error']
Availability,Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; - Is any test available with these new classes?; - is there any example scene?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616496056:116,avail,available,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616496056,1,['avail'],['available']
Availability,"Thanks Jérémie,. The remaining failing tests are our classic failures so this PR seems ok to me. ; @guparan Can this one be set to the flag ready for merge ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308375664:61,failure,failures,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308375664,1,['failure'],['failures']
Availability,"Thanks Pedro! Since you repaired #1788, this PR is actually not necessary. We will backport #1788 manually into v20.12 :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1805#issuecomment-778289229:24,repair,repaired,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805#issuecomment-778289229,1,['repair'],['repaired']
Availability,"Thanks for replying, actually it worked, when I used the dll files of binary release of SOFA v23.06, But there was some issue when I load the demo scene of caudeus.scn, Here are the errors which were printed on the console of Unity editor:. ```; SofaContext::OnDestroy stop called.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:251); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContext::OnDestroy stop now.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:256); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceExcep",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:182,error,errors,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['error'],['errors']
Availability,"Thanks for the clarification @damienmarchal. It makes sense. ; As you said, it's a feature. Therefore, I just want to make sure that this feature is used enough to justify the maintenance cost.; Note that I believed that the feature was also possible with Python, but I don't see it. I would prefer it, compared to a scene component which does not bring anything to the simulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265209282:176,mainten,maintenance,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265209282,1,['mainten'],['maintenance']
Availability,"Thanks for the explanation,. So, when GLOBAL is set the friction coefficient came from the mu parameter and when {MINIMUM, AVERAGE, GEOMETRIC, PRODUCT} is set the friction coefficient is computed from the objects with the corresponding function. . If so, I agree that a GLOBAL flags in addition to MINIMUM, AVERAGE, GEOMETRIC and PRODUCT would make sense. I also agree with maxim's that ""In any case I would favour clamping negative mu to zero together with some warning displayed since mu < 0 is a modelling error anyways."". It could also be nice to display a warning when 'mu' is set while GLOBAL is not to inform users they are maybe mis-understanding something (and provide an advice on how to fix the problem). . Finally I also have the feeling that the ""horizontal"" data field could also be improved by renaming it with something like ""coneProjection"" with two possible values: [""horizontal"" and ""orthogonal""] instead of using a boolean. The boolean can be kept inside but it should not be exposed as is to the users.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/81#issuecomment-265566878:509,error,error,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/81#issuecomment-265566878,1,['error'],['error']
Availability,Thanks for the fast-review&merge @epernod and @alxbilger. ; The compilation error does not look related. ; So I merge :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1150023581:76,error,error,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1150023581,1,['error'],['error']
Availability,"Thanks for the reply @damienmarchal ; Error of link apparently is remaining. I guess that SofaGeneralExplicitOdeSolver and SofaGeneralImplicitOdeSolver which were depending on SofaSimulationTree, had also a dependency to the SofaSimulationTree's dependency: SofaSimulationCommon",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1664#issuecomment-745947292:38,Error,Error,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1664#issuecomment-745947292,1,['Error'],['Error']
Availability,"Thanks for the review @alxbilger,. I integrates your comments.; More generally do you have any opinion on how we could improve the exceptions/component error in Sofa ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383:152,error,error,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383,1,['error'],['error']
Availability,"Thanks for this massive PR @EulalieCoevoet :+1:. Here is the error output for CentOS build:; ```; In file included from /usr/include/boost/intrusive_ptr.hpp:16:; /usr/include/boost/smart_ptr/intrusive_ptr.hpp:68:34: error: use of undeclared identifier 'intrusive_ptr_add_ref'; if( px != 0 && add_ref ) intrusive_ptr_add_ref( px );; ^; /builds/workspace/sofa-framework/PR-798/centos_clang-3.4_options_release/src/SofaKernel/framework/sofa/core/../../sofa/core/objectmodel/SPtr.h:56:28: note: in instantiation of member function 'boost::intrusive_ptr<sofa::component::mapping::BarycentricMapperEdgeSetTopology<Vec3dTypes, ExtVec3fTypes> >::intrusive_ptr' requested here; New(Args&& ... args) : SPtr( new T(std::forward<Args>(args)...) ) { }; ^; /builds/workspace/sofa-framework/PR-798/centos_clang-3.4_options_release/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:973:40: note: in instantiation of function template specialization 'sofa::core::objectmodel::New<sofa::component::mapping::BarycentricMapperEdgeSetTopology<Vec3dTypes, ExtVec3fTypes> >::New<sofa::component::topology::EdgeSetTopologyContainer *&, sofa::component::topology::PointSetTopologyContainer *&>' requested here; m_mapper = sofa::core::objectmodel::New<EdgeSetMapper>(t5, toTopoCont);; ^; ```. SofaCUDA seems also to be a problem on Linux build.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432568313:61,error,error,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432568313,2,['error'],['error']
Availability,Thanks for your PR @raffaellatrivisonne :-); Could you add a small description explaining the error and your fix please?; [ci-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-329738621:94,error,error,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-329738621,1,['error'],['error']
Availability,"Thanks for your inputs @fspadoni and @damienmarchal , and sorry for the late response. There are two commits in this PR (two versions of the fix); the first one fixed completely the problem on mac OS X, but may introduce thread race condition as only the constructor of a static variable is thread safe. Since the **messageTypePrefixes** and **messageTypeColors** static arrays are initialized in the ; **formatMessage** method, two threads can collide there. The second one tries to fix that, but isn't working yet (hence the commit name ""temp"").; In this one, the **DefaultStyleMessageFormatter** singleton instantiation doesn't cause a seg fault on mac os x anymore, but the **messageTypeColors** static array fails to instantiate correctly, causing all console messages to be blue. This may be because **Console::BRIGHT_GREEN**, **Console::BRIGHT_YELLOW**, etc. are all, of course, static objects. Since they are initialized in another .cpp, the order of their constructor calls with respect to the **DefaultStyleMessageFormatter** singleton instantiation cannot be predicted (compiler bound). I'll try to find a solution in two weeks (I'll be away for the next 10 days working hard on my sun tan ☀️)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748:643,fault,fault,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748,1,['fault'],['fault']
Availability,"Thanks guillaume for the investigation,; The easy solution is to use msg_warning instead (restoring the old behavior). ; But shouldn't something that prevent the component to work be reported as an error and thus we should fix the test ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331839847:198,error,error,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331839847,1,['error'],['error']
Availability,"That is to say, I need to download the source of the sofa in the docker container (/home), then compile the sofa according to the regular instructions based on dependencies in the docker",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1758040613:26,down,download,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1758040613,1,['down'],['download']
Availability,"That script is used to parse the output of the AdvancedTimer in a Python scene to plot it. One of the function bindings has changed name, but this change was not reflected in the script. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/458:443,failure,failures,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/458,2,['failure'],['failures']
Availability,"The 20 new unit tests failures are still there, certainly caused by 092b19fd8e922d155a459de09f002f1815ce9a16.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355829:22,failure,failures,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355829,1,['failure'],['failures']
Availability,"The BIG one. based on:; - #2717 (for one file moved in core). Deprecates _SofaDeformable_, _SofaObjectInteraction_, _SofaGeneralDeformable, SofaGeneralSimpleFem, SofaMiscFem, SofaNonUniformFem_; Deprecates partially _SofaRigid, SofaSimpleFem, SofaGeneralObjectInteraction, SofaMiscForceField_. Create a meta-module **SolidMechanics**, managing mechanics for mechanical object in a scene (internal forces?); It is composed of ; - **Spring**: with spring-system related components; - **FEM**: an other meta-module containing:; - **Elastic**: elastic FEM; - **HyperElastic**: hyperelastic FEM with materials; - **NonUniform**: non-uniform FEM ; - **TensorMass**: tensormass related components . ### Remarks, questions; - One Spring component has not been included (yet?), namely BoxStiffSpringForcefield, as it is meta-component; it would add dependencies on other module (Engine); - ~~The rest of the components implementing core::ForceField are things applying ""external"" forces on it, so we may create a whole category for them (not defined in the draft)~~ -> see #2783 . ~~SofaCUDA wont compile for the moment (WIP)~~, as the compatiblity files wont work. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2759:1701,failure,failures,1701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2759,2,['failure'],['failures']
Availability,The BaseObject::draw() function should be used only for debugging purposes.; The BaseObject::draw() function is called when pass is standard and it is rendered before any VisualModel. Any overlay text rendered in BaseObject::draw() function is not visible. This line change allows every component to display overlay text (for debugging purposes) always at the top in the viewport in the draw() functon. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/929:661,failure,failures,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/929,2,['failure'],['failures']
Availability,The CGAL version provided in Unbuntu 18.04 LTS is 4.11 and it seems this version is now expecting that the CGAL_MESH_3_VERBOSE needs to have a value. . Otherwise it fails to compile.; The fix is minor so please consider merging it ASAP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/664:495,failure,failures,495,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/664,2,['failure'],['failures']
Availability,"The CI does not look happy, but I think it's nothing:. for Linux: some permission error at CMake phase. and Windows: ; - `139 - see BUILD_URL/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/SimpleBox-Method2.scn/output.txt`; - `3 - see BUILD_URL/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt`. + scenes not working:; HexahedronCompositeFEMMapping.scn; HexahedronCompositeFEMForceFieldAndMass.scn",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-646697637:82,error,error,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-646697637,1,['error'],['error']
Availability,The CI finished but the dashboard is not up-to date.; The test failure are pre-existing to the PR. So I merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314#issuecomment-316832128:63,failure,failure,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314#issuecomment-316832128,1,['failure'],['failure']
Availability,"The CI is down, but to me this is ok. So I take the resposability of merging it :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/962#issuecomment-471907830:10,down,down,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/962#issuecomment-471907830,1,['down'],['down']
Availability,"The CenterOfMassMapping, requires a Mass associated with its parent MechanicalState.; The initial code relies on a call to fromModel()->getContext()->getMass() to retrieve the associated mass, and did not propose a way to set explicitely the mass to use.; The mass was stored in a pointer during init(), and we want to use singleLinks instead, to keep track of how components interact with each other. The initial goal of this PR was to get rid of getMass in BaseContext(), but we want your opinion on how to do this, especially for the case of MultiMapping (CenterOfMassMultiMapping):. 1. add a SingleLink to the mass in the MechanicalState; 2. store a list of the masses associated to the list of models in CenterOfMassMultiMapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1184:991,failure,failures,991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1184,2,['failure'],['failures']
Availability,"The Cmake option is set on true, it compile but when I run runSofa there is no gui available. Even when I consult the help with runSofa -h there is only the batch in the list of GUI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146593775:83,avail,available,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146593775,1,['avail'],['available']
Availability,"The Config.cmake.in was not consistent with the actual CMakeList.txt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3576:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3576,2,['failure'],['failures']
Availability,"The Data had always the prefix `(V_COORD)`. Now it really depends on the type. The bug has been introduced in https://github.com/sofa-framework/sofa/pull/2811. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2872:704,failure,failures,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2872,2,['failure'],['failures']
Availability,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2285:1771,failure,failures,1771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285,2,['failure'],['failures']
Availability,"The LateSpecialization pattern, introduced in https://github.com/sofa-framework/sofa/commit/1b92a802eb69693af65f2094f02f9a734d333804, was used to avoid code duplication between float and double specialization of Rigids. However, now that there is only one specialization, it makes the code more difficult to read. Therefore, I suggest to go for a standard specialization. Note that the diff may be difficult to read, but this PR only moves code (with adaptation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126:1008,failure,failures,1008,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126,2,['failure'],['failures']
Availability,"The LinearForceField component does not contribute anything to the matrix when solving a system. Accordingly, the addKToMatrix function does nothing. However, since it is not implemented, it displays a warning when running a simulation. This PR simply adds an empty implementation of that function, which removes the warning displayed by the definition in the base class. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/384:628,failure,failures,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/384,2,['failure'],['failures']
Availability,"The MechanicalMatrixMapper example scene deserved a bit of love. - Converted to Python3; - Add documentation (the concept of rigidification deserves a more detailed doc somewhere else); - It is possible to change the resolution of the grid while keeping the same behavior: 1) `indexPairs` is built algorithmically, 2) ConstantForceField is applied using a BoxROI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2361:908,failure,failures,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2361,2,['failure'],['failures']
Availability,"The MechanicalOperations (mops) already had the method `multiVector2BaseVector` that allows us to fill a BaseVector (one continuous memory vector) from a multi vector (group of vectors contained inside mechanical objects). However, the were no way to do the inverse (build a multi vector from a continuous vector) beside creating a new visitor, which is now done automatically by the mops. This PR is only adding a new method, it is non-breaking. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1248:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1248,2,['failure'],['failures']
Availability,"The MutationListener in Sofa is used to notify (A GUI for instance) of the SceneGraph's edition (addition / deletion / move of nodes, objects, or slaves); The MutationListener itself does not perform anything, but once inherited, its methods can be overloaded to perform operations on a ListView widget for instance, as does the GrapListenerQListView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] b",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:801,error,error,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,1,['error'],['error']
Availability,"The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\idlelib', 'C:\\SOFA\\Lib\\site-packages', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\python311.zip', 'C:\\Users\\",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:2633,error,error,2633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['error'],['error']
Availability,"The O(n) should be avoided even though; 1. there might already be a O(n) lookup hiding somewhere during insertion; 2. we should be fine in practice; 3. this should really be O(log n) anyways. I like the late check during `getChild/getObject`, and even more so the Visitor approach where all the checks are made in a separate pass (aside: in this spirit we could provide a `check` method just like `init` and a visitor that checks consistency so that we don't have to check stuff all the time during simulation. also: use exceptions for error handling!!). More generally, why do we have objects and children stored in a list? We just need to store pointers to the siblings directly inside nodes/components instead of the extra memory/indirections, especially if we're using lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428:536,error,error,536,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428,1,['error'],['error']
Availability,"The PLUGIN_SOFASPHFLUID option was not taken into account by the CUDA plugin, so it would try to link against that plugin even if it was not compiled with SOFA. There was also a file that was included twice in CMakeLists.txt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/523:482,failure,failures,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/523,2,['failure'],['failures']
Availability,"The PR #2988 opens this discussion. ## Today; - gravity is defined though a data in the Nodes (by default `gravity=""0 9.81 0""`); - this gravity is propagated down from the root node to the child nodes; - gravity computation is performed by the mass (if any) in the node; - nowhere appears the gravity as a ForceField (mechanical load) within the node. #### Typical scene; ``` xml; <Node name=""root"" gravity=""0 -9.81 0"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this grav",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:158,down,down,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,1,['down'],['down']
Availability,"The PR https://github.com/sofa-framework/sofa/pull/2943 replaced by mistake the ""activated"" with the ""currentIndexChanged"" one. But there is a slight difference between the two as currentIndexChanged can be called with; -1 (which makes the connected slot crash). To revert back to the ""activated"" signal instead (but using the modernized syntax). This PR fix issue #3017 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3018:917,failure,failures,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3018,2,['failure'],['failures']
Availability,"The PR just adds the template ""Vec1,Vec3"" to the component MechanicalMatrixMapper. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1703:627,failure,failures,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1703,2,['failure'],['failures']
Availability,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2142:36,down,down,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142,1,['down'],['down']
Availability,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:11,down,downloaded,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154,3,"['down', 'error']","['downloaded', 'error']"
Availability,"The ReadScene_test not passing is explicitly said so in the PR description, this is a new test showing an existing wrong behavior in Sofa (i.e. not sending an error message when trying to load an invalid faile). [ci-build][with-scene-tests] will say if my last commit fixed the old scene failing",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648:159,error,error,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648,1,['error'],['error']
Availability,"The SOFA version of cleaning the Augean stables... 🐴. Make it compile and run (for the quadSpring scene); And does not need the sofaOPENCL application. Compile with the SofaSphPlugin as well, but the example scene crashes somewhere in the OpenCL kernel... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1361:512,failure,failures,512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1361,2,['failure'],['failures']
Availability,"The SceneCreator is now based on the plugin manager to load its dependency. ; It seems that when compiling in debug the plugin names are changed. In this PR I added to the PluginManager a way to search for ""debugging"" names when Sofa is compiled in debug. . This should fix the failling tests on options_debug on master reported in #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:595,failure,failures,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,2,['failure'],['failures']
Availability,"The SofaBaseMechanics_test were probably broken. ; They were not in-heriting from SofaTest neither BaseTest. This means that uncatched msg_error() should generate test failure while they should. . In this PR I implement the proper behavior, so now several tests are ""correctly failing"" :) ; And I fixed the tests.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832:168,failure,failure,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832,3,['failure'],"['failure', 'failures']"
Availability,The TaskScheduler keepThreadsActive virtual function can be overridden to allow to change worker threads waiting policy when there are no tasks to steal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/934:410,failure,failures,410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/934,2,['failure'],['failures']
Availability,"The WIN32 implementation is lowering the case of the given path. This is; not consistent with other case insensitive OS like macos and is discussed in:; https://github.com/sofa-framework/sofa/pull/250. In this PR I deprecate this 'lowering' behavior, adds a dedicated message & I updated; the calling point all around Sofa. Code updated shouldn't print any message but un-touched one should continue working as usual and prints the deprecated message to indicate to user they must update. CHANGELOG:; - [SofaKernel]; - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior. ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/264:844,failure,failures,844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/264,1,['failure'],['failures']
Availability,The [ReadState test](https://github.com/sofa-framework/sofa/blob/0da3f6e1aef69318838c4a363e017d7901f14483/modules/SofaGeneralLoader/SofaGeneralLoader_test/ReadState_test.cpp#L76) is not passing due to error not emitted. and all scenes with XspLoader are crashing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465493555:201,error,error,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465493555,1,['error'],['error']
Availability,"The `BaseCamera` is computing the scene center point and scene radius based on the current bounding box. The `InteractiveCamera` is using these information to compute the zoom/translation speed when navigating in the scene with mouse events. . Since the `BaseCamera` was computing the scene center point and radius only when `BaseCamera::p_computeZClip` was true, when manually giving the z-clip values, the interaction was not working at all (`sceneCenter` and `sceneRadius` were 0, hence the zoom/translation speed were 0). This was only visible when using the `QtViewer` since the `QglViewer` is using its own internal camera and is ignoring the cameras added to the scene. This PR also fixes the caduceus scene as it was using a `Camera` instead of `InteractiveCamera`, which isn't listening to mouse events at all, hence navigating with the mouse wasn't possible with the QtViewer. A little bit problematic when it is the default scene of runSofa.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1377:1210,failure,failures,1210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1377,2,['failure'],['failures']
Availability,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2222:829,failure,failures,829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222,2,['failure'],['failures']
Availability,"The abstract class `BaseNonLinearMapping` is introduced. All mappings from the folder, except `RigidMapping`, inherit from `BaseNonLinearMapping`. The class relies on the delegate pattern to simplify the implementation of non-linear mappings. All the affected mappings relied on the same design, so it made sense to factorize common code in a base class. Breaking because I removed some aliases, made some methods final etc. What I would like for a next work is to factorize the 3 methods `buildGeometricStiffnessMatrix`, `applyDJT` and `updateK` (if possible). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5006:1106,failure,failures,1106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5006,2,['failure'],['failures']
Availability,"The access to the pointer of data &ptr[0] have been replaced by the use of .data() in PR #279 . This generate a problem because helper::vector is specialized for cuda (thanks to the MemoryManager) in vector_device.h. This type of vector mimic a std::vector but it does not implement all the functions of the stl. If new functions are necessary they must be also implemented in this vector_device class, but the consistency of data must be CAREFULLY checked. Indeed a cudavector has data both on the CPU and the GPU and one must guarantee that the accessed data is the correct one. This PR add the missing function in vector_device to make it match the API of helper::vector. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/320:933,failure,failures,933,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/320,2,['failure'],['failures']
Availability,"The actual implementation to store parentData is weird because it stores two times the same object. One is in the base class (parentBaseData) and one in its child class; (parentData). . The rational behind the current implementation is that we wanted to access the data without abstraction cost, ie. accessing the object with its true type (eg: Data<T>) instead of its parent type (BaseData) and at the same time having an abstraction to manipulate BaseData. . Duplicating the same obect/point is in general a code smell indicating that something is wrong in the implementation. In general duplication complexify the implementation and error prone (because you have to garantee that the different copies are kept synchronized and interact together in a seamlessness way. . So, in this PR I addresse this duplication problem by removing the lowest type and relying on a dynamic_cast when it is needed. There is an abstraction cost...but it is on a on a very rarerly used method (actually only used for fast copy of data field...and in that context...the cost of the dynamic cast against one of copying millions of Dofs is totally neglectible). . A different pattern was initially used with a child-delegation to expose the abstraction to its parent but it appears it would have made the PR breaking. The difference is that the selected pattern allows one data to be parented to a data of different type while the pattern with child-delegation restrict the parenting to be of exactly the same time. . I personally prefer to have parent only on same type (so that data conversion must be added manually and becomes explicit) but this was not done previously in Sofa and thus breaks some scenes (somes of them are actually really funny....and probably work only by side effect). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1490:636,error,error,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1490,1,['error'],['error']
Availability,"The added function is used in a few places in plugins I would like to make available in addition to the ROS connector. It is not specifically tied to the multithreaded collision pipeline, but it is potentially useful independent of the relation to the plugins in question, and easy to patch into a core class as it introduces no further dependencies on additional modifications.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144:75,avail,available,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144,1,['avail'],['available']
Availability,"The assert triggers in the following case:; A SphereROI is defined in a Python script. In order for the outputs to be used right away, it must be initialize by the Python script, just after its definition.; But when the scene is completely defined, a visitor calls again the init method. So the assert triggers in case the addInput method is called multiple times (like in the example I gave). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2822:938,failure,failures,938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2822,2,['failure'],['failures']
Availability,"The block size (2x3) did not make sense with regards to the matrix size (4x8). I changed the block size to 2x4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3832:656,failure,failures,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3832,2,['failure'],['failures']
Availability,"The broken tests are caused by new error messages introduced by converting serrs into msg_errors. the number of errors should be updated in the tests. @epernod has a waiting PR doing just that, so I suggest that we merge and wait for erik's fixes in his own PR, as he suggested himself ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062,2,['error'],"['error', 'errors']"
Availability,"The build error is ; ```; Undefined symbols for architecture x86_64:; ""sofa::component::collision::response::mapper::BarycentricContactMapper<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createMapping(char const*)"", referenced from:; sofa::component::collision::response::contact::FrictionContact<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::activateMappers() in MORFrictionContact[OBBCapsule].cpp.o; sofa::component::collision::MORFrictionContact<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::activateMappers() in MORFrictionContact[OBBCapsule].cpp.o; sofa::component::collision::response::contact::FrictionContact<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::activateM",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3083#issuecomment-1169948589:10,error,error,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3083#issuecomment-1169948589,1,['error'],['error']
Availability,"The bwdInit is used to implement a bugfix that seems to be fixed in a more approriate way elegant way in BaseMapping; ```cpp; bool BaseMapping::insertInNode( objectmodel::BaseNode* node ); {; if( isMechanical() ) node->addMechanicalMapping(this);; else node->addMapping(this);; Inherit1::insertInNode(node);; return true;; }; ```. That said, I find annoying these two approaches because they are considering a a problem to have mechanicalmapping in the two list (mechanicalmapping and mapping). If a mechanicalmapping *is a* mapping it makes sense for it to be in the two lists. I don't know what would happend if I remove this behavior... a future PR maybe) . . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3954:1207,failure,failures,1207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3954,2,['failure'],['failures']
Availability,"The call stack of the runtime error on Linux is the following:. ```; ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); pthread_kill; raise; abort; free; std::__new_allocator<int>::deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::~_Vector_base(); std::vector<int, std::allocator<int> >::~vector(); sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector(); sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric(); sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical(); void std::_Destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >(sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>*); std::_Sp_counted_ptr_inplace<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose(); std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release(); std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count(); std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr(); std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr(); std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair(); std::_Rb_tree<sofa::core::behavior::BaseMechanicalState*, std::pair<sofa::core::b",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:30,error,error,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['error'],['error']
Availability,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2298:817,failure,failures,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298,2,['failure'],['failures']
Availability,"The case arises mostly because of running runSofa from a build directory but you set SOFA_ROOT. It will then tried to load plugins from the install afterwards, etc..., leading to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:573,error,error,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"The case where plugin is smaller than dotExt is not handled by std::equal. See how it works: http://en.cppreference.com/w/cpp/algorithm/equal. An assert is called.; I had the case when dotExt = "".dll"" and plugin = ""PSL"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617:477,failure,failures,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617,2,['failure'],['failures']
Availability,The changes have not been propagated everywhere @epernod ; ```bash; /builds/workspace/sofa-framework/PR-1495/mac_clang-3.5_options_release/src/modules/SofaGeneralLoader/SphereLoader.cpp:81:5: error: use of undeclared identifier 'radius'; did you mean 'd_radius'?; radius.beginEdit()->clear();; ^~~~~~; d_radius; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-696242423:192,error,error,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-696242423,2,['error'],['error']
Availability,"The class `Simulation` has been refactored:. - It no longer inherits from `BaseObject`; - All the non-pure virtual methods have been deprecated. Instead, their equivalent are available as free functions. Indeed, the content did not need to be in a class and `DAGSimulation` did not override them.; - `sofa::simulation::setSimulation` is deprecated. The global variable `Simulation` is set once and for all in the initialization of the `Sofa.Simulation.Graph` module. ⚠️ If `new` is used to provide a new `Simulation`, it results in a memory leak, because `setSimulation` now does nothing. In summary, the type `Simulation` is now only useful to create `Node` instantiations. This feature can be done out of the Simulation class thanks to a refactoring of modules. It will be done later in another PR. Once it is done, the type could be deprecated. In this Pull Request, it is assumed that it is not possible to create another type of Simulation than `DAGSimulation`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/350]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889:175,avail,available,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The classes were used in a plugin which is no longer maintained. See https://www.sofa-framework.org/community/forum/topic/how-to-use-parallelvisitorscheduler/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3957:704,failure,failures,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3957,2,['failure'],['failures']
Availability,"The cmake part of our build process is very slow and is getting slower and slower the more we add plugins/modules and packages.; ; I noticed that commands like include or find_package(XXXXX) imply the search, the loading and the execution of the requested package XXXX each time. . This is very problematic as this scale in an horrible (non linear) way. . So I tried a quick and dirty fix based on inclusion gard, 'à la #ifdef MYFILE_H'. I first checked if the file are really loaded multiple times (and this was the case) and implemented a quick test to stop the loading. . The fix accelerates a lot the cmake time on my machine reducing the generation from 1min20 down to 15 sec. So I'm curious to see if such solution is reliable enough to be used (I consider that if this is not the default design of cmake package there must be a rational behind) and what are the possible drawback. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1464:666,down,down,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1464,4,"['down', 'failure', 'reliab']","['down', 'failures', 'reliable']"
Availability,"The cmake.in file for SofaGeneralObjectInteraction was missing the two news deps on SofaEngine and SofaGeneralEngine, following the PR on #2621 . Fix #2658; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2659:701,failure,failures,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2659,2,['failure'],['failures']
Availability,"The code in `proximity.h` has several problems:. - The classes names are misleading. It makes think that it computes the distance, but it computes the closest points.; - Classes with a single function that could be static. It could be a free function.; - Difficult to find this file in Helper. To me, it makes more sense to put it in Geometry.; - Types mismatch. I separated the 3 functions in dedicated files.; I deprecated the classes and the header. Note: I don't think the LCP approach is the fastest one to compute closest points. ; Not2: `Mat_solve_LCP.h` would deserve a bit of cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3666:1139,failure,failures,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3666,2,['failure'],['failures']
Availability,"The code in `sofa::helper::gettypename` is similar (almost identical) to `NameDecoder::decodeTypeName`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2482:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2482,2,['failure'],['failures']
Availability,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1845:787,failure,failures,787,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845,2,['failure'],['failures']
Availability,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4355:577,failure,failures,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355,2,['failure'],['failures']
Availability,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1819:666,failure,failures,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819,2,['failure'],['failures']
Availability,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2109:670,failure,failures,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109,2,['failure'],['failures']
Availability,"The comment is wrong.; I need more investigation to be able to write a better one. Till then, I remove the comment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3582:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3582,2,['failure'],['failures']
Availability,The commits are touching a single file each and focus on fixing single bug or regression. Could you consider fast-merge ?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/931:379,failure,failures,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/931,2,['failure'],['failures']
Availability,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2044:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044,2,['failure'],['failures']
Availability,"The component FillReducingOrdering, introduced in https://github.com/sofa-framework/sofa/pull/2501, was using the METIS library to reorder the vertices. Now, it is able to use approximate minimum degree algorithm from the Eigen library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875:781,failure,failures,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875,2,['failure'],['failures']
Availability,"The component has been deprecated in #2777. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3919:588,failure,failures,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3919,2,['failure'],['failures']
Availability,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862:1417,failure,failures,1417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862,2,['failure'],['failures']
Availability,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4611:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611,2,['failure'],['failures']
Availability,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4389:796,failure,failures,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389,2,['failure'],['failures']
Availability,"The creation of TriangleSetAlgorithms is not linked to the creation of triangleSetTopologyContainer arrays like edgesInTriangle. what can be possible is that MeshMatrixMass access to edgesInTriangle which is not filled due to the return.; But the return is reached because the input topology is not consistent. And the choice was done to break instead of simulating potential wrong behavior. My question was, in your PR, by removing the return, how many error is dumped if you test #1243 ?. each error means an inconsistency between the Triangle, the Edge and the EdgeInTriangles structure so potentially if FEM is using edges and mass the EdgeInTriangles, you won't fill the matrix in the same order.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577251657:454,error,error,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577251657,2,['error'],['error']
Availability,"The current approach consist in recursively crawling up to the root node of; the scenegraph. Which have linear complexity in the depth of the graph. This PR implements a constant time mecanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3059:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3059,2,['failure'],['failures']
Availability,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4536:1130,failure,failures,1130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536,2,['failure'],['failures']
Availability,"The current implementation is printing a deprecation message but the modified ""arg""; are also reported by caller's as error. To avoid that I don't accumulate the deprecation warning in the ""arg"" arguments; and print them immediately. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939:118,error,error,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939,3,"['error', 'failure']","['error', 'failures']"
Availability,"The current implementation of file saving in XML is in fact doing a kind of complete dumping of the state of the objects in the scene. This is bad because this produce totally unreadable scene. . The idea of this PR is to implement a much more ""user friendly"" file saving as described in this issue; https://github.com/sofa-framework/sofa/issues/41. Saving caduceus.scn with the old way look produce a 2Mb file like this: http://pastebin.com/01hfAeAT; while with the current code it is a 3.5Kb file looking like this: http://pastebin.com/K3jzVxcE. Please help to improve it by reporting any problem or patch. . Additional things to do in future PR:; - support saving of scene created from Python (I have a prototype...I'm waiting integration of this PR); - support saving scene to python (with the same readability logic); - fix the broken component that parse directly the xml attribute instead of using data. This is the case of (VisualModelImpl, CubeTopology). These component have to be fixed one by one (including test to validate that there is no regression). ; - implement a more ""dump"" like feature to save a scene that have been simulated. . Checklist to be merge: ; - [ ] succeed on each compilation setup on the CI.; - [ ] does not generates new test failure. ; - [ ] does not seems to break existing scenes. ; - [ ] does not seems to break API compatibility. ; - [ ] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116:1262,failure,failure,1262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116,1,['failure'],['failure']
Availability,"The current implementation of the tensor product of two vectors seems incorrect since it assumes the resulting square matrix is always symmetric.; This is not true in general, for example: ; ```; tensorProduct([0 1],[1 2]) = [0 1]'*[1 2] ; = [[0,0]; [1 2]]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2787:807,failure,failures,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2787,2,['failure'],['failures']
Availability,"The current lifecycle mechanism when renaming the symbol of a Data object is depreciating the old data and setting the new data as a parent of the old one : ; `_oldData.setParent(d_newData)`. This is not 100% working, because a setValue on the old data will not be applied on the new one, because a child is only link to the parent by a callback (and not a _feedForward_). This means that a lot of the recent refactoring pr renaming data symbols are breaking. This pr aims at solving this, and is meant to be applied to all the recent pr to solve this issue. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4814:1105,failure,failures,1105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4814,2,['failure'],['failures']
Availability,"The current process of constructing object is very complex, error prone and generates a lot of duplicated code. ; To clean a bit in this PR is:; 1) moving the common code into dedicated and opaque method: ; BaseObject::IsRequiredLinkPathPointingToCompatibleObject...; BaseObject::IsRequiredComponentInContext....; BaseObject::AddObjectToContextAndParse. 2) remove the create or canCreate method that I think where doing nothing more than the default ones (please check). 3) to update to new signature It was needed to update some rare component. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3309:60,error,error,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3309,3,"['error', 'failure']","['error', 'failures']"
Availability,"The data strings are replaced with Links! Finally!. It's obviously breaking but there is one important point: both ConstraintCorrection had a vector of LinearSolver\* while in fact only one was always used. It is now back only to a single pointer. Let's take time to discuss it with others!. @ziqiu-zeng . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3152:850,failure,failures,850,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3152,2,['failure'],['failures']
Availability,"The data strings are replaced with Links! Finally!; Let's take time to discuss it with others!. @ziqiu-zeng. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3155:653,failure,failures,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3155,2,['failure'],['failures']
Availability,The deprecated macro `sofa_generate_package` was not forwarded to the correct new macro.; Bug introduced in #1433 . EDIT: I joined a quick fix for SofaSparseSolver related to #1440. **Commits to be backported independently**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1446:482,failure,failures,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1446,2,['failure'],['failures']
Availability,"The deprecation layer did not work in some cases (see https://github.com/sofa-framework/sofa/pull/4814). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4866:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4866,2,['failure'],['failures']
Availability,"The difference lies in the fact that the `UniformLagrangianConstraint` is applied to all the model points. This assumption is important because thank's to this, it is able to use a block optimization when the data `iterative` is set to false. Here, it wouldn't be possible because we don't have the guaranty that the points ids will be contiguous. . As for the other specialization, what I did was to replicate the two specialization already available for the `BilateralLagrangianConstraint`. Actually I made sure to factorize as much as possible so that it would be easier for new specialization to pbe implemented. I could add them, but given that they didn't exist for the `BilateralLagrangianConstraint`, I don't know if they are really useful for anyone.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4646#issuecomment-2082914275:442,avail,available,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646#issuecomment-2082914275,1,['avail'],['available']
Availability,"The directories `screenshots` and `config` are currently created in the `build` directory of SOFA. When installing the software on a machine, those can end up in a read-only directory. . To avoid this problem, this PR changes:. On Linux:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/.config/SOFA/config/` . On Windows:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/AppData/Local/.config/SOFA/config/` . On MacOS:; - `screenshots` location to: `~/Library/Application Support/SOFAData/screenshots/`; - `config` location to: `~/Library/Application Support/.config/SOFA/config/` . These changes have only been tested on Linux. I'm not familiar with MacOS so I don't know what would be the best location. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5096:1321,failure,failures,1321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5096,2,['failure'],['failures']
Availability,"The doc/ repository is removed and it now has its own GitHub repository : https://github.com/sofa-framework/olddoc. Additionally, the useless file `sofa_include_stats.md ` is also removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2889:733,failure,failures,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2889,2,['failure'],['failures']
Availability,"The document is not maintained and obsolete. The relevant paragraphs are already in https://www.sofa-framework.org/community/doc/plugins/usual-plugins/multithreading/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3667:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3667,2,['failure'],['failures']
Availability,The duplicated code to initialize the data field in component looks really bad & error prone. ; Since c++x11 we can probably do much better.; ; If you think this is something to fix (or at least stop doing in new components) and have a better pattern that our copy-paste approach please drop it here. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/274:81,error,error,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/274,1,['error'],['error']
Availability,The error in the tests came from (applications/plugins/LMConstraint/src/LMConstraint/LMConstraintSolver.cpp) in `init`:; ```cpp; listConstraintCorrection[i]->removeConstraintSolver(this);; listConstraintCorrection[i]->addConstraintSolver(this);; ```; The first line removed the element from the list whereas the element was never added to the list (we are in the `init` method). It is added in the second line.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-940746618:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-940746618,1,['error'],['error']
Availability,The error is gone apparently :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572973788:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572973788,1,['error'],['error']
Availability,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647,5,['error'],['error']
Availability,"The error pops up in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577,3,"['error', 'failure']","['error', 'failures']"
Availability,The error says you are using 3.16. ; `CMake Error at /usr/share/cmake-3.16`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761264704:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761264704,2,"['Error', 'error']","['Error', 'error']"
Availability,The error to be fixed was due to `using namespace std;` removal.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1097#issuecomment-510019064:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1097#issuecomment-510019064,1,['error'],['error']
Availability,"The error was not detected on CI as nobody was using this `MatrixScale` thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2369:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2369,3,"['error', 'failure']","['error', 'failures']"
Availability,"The examples were about components only available into the SofaEulerianFluid plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2833:40,avail,available,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2833,3,"['avail', 'failure']","['available', 'failures']"
Availability,The existing Binding does not cover the whole feature of the c++ API.; With this PR it does.This is not breaking anything...it only add new features with their associated tests. . This allows python messages and error to be routed to the right component and have it added to its backlog and displayed in the GUIs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/335:212,error,error,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/335,3,"['error', 'failure']","['error', 'failures']"
Availability,"The existing code is falling back into the std::runtime_expection if a node's data; is modified and it is not a transformation (which actually happens a lot). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3020:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3020,2,['failure'],['failures']
Availability,"The extern template instantiations allows to include ` SofaCUDA/config.h` before `ObjectFactor.h`. That is why the module name is defined properly in this PR. The extern template instantiations don't act directly on the module name, just the order of includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4714:805,failure,failures,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4714,2,['failure'],['failures']
Availability,"The fails again... the mac_clang-3.4 succeeded (I restarted but the previous build was here; https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options_pr3/25/console); And the additional failure in test scenes is because some machines still don't have the libjpeg/tiff library installed (se macos pr3 ) :) . @guparan, @hugtalbot if you are passing by please considere merging the PR because we need it monday morning for our group writing of tutorials for Sofa :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877:183,failure,failure,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877,1,['failure'],['failure']
Availability,"The failure is not generated by the PR but by the use of clang 6.0 on some sofa-macos builder. ; The underlying question is whether the problematic code is c++11 and thus valid or not. ; If it is not it has to be changed, if it is valid we need to change the compiler ot the sofa-macos builder machine. Anyhow I will rebuild it on the other builder;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/425#issuecomment-336396630:4,failure,failure,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/425#issuecomment-336396630,1,['failure'],['failure']
Availability,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:166,error,error,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169,6,['error'],"['error', 'errors']"
Availability,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4244:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244,2,['failure'],['failures']
Availability,The file was still using the old .h location for RGBAColor. ; Replace to the new ones. ; It was also include DataFilename which was pointless. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1346:399,failure,failures,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1346,2,['failure'],['failures']
Availability,The filesystem error was fixed by upgrading my Ubuntu version. Thanks!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527#issuecomment-1962316095:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527#issuecomment-1962316095,1,['error'],['error']
Availability,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4630:145,avail,available,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The following code create memory leaks:. ```cpp; static const BaseClass* get(); {; static TClass<T, Parents> *theClass=new TClass<T, Parents>();; return theClass;; }; ```. To remove the memory leak, it has to be replaced by:. ```cpp; static const BaseClass* get(); {; static TClass<T, Parents> theClass;; return &theClass;; }; ```. However, `Parents` can be a `std::pair`, which one of the pair type can be an abstract type. Since it is not possible to instantiate an abstract type, the compilation fails. This PR removes the use of `std::pair` to introduce a structure that does not need to instantiate the types. The compilation now succeeds. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3183:1189,failure,failures,1189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3183,2,['failure'],['failures']
Availability,The following scenes must be fixed because they show warnings or error messages. ```; [INFO] [PluginFinder] Found 6 files with advice:; examples\Benchmark\Performance\MatrixAssembly\MatrixAssembly_direct.scn; examples\Components\linearsolver\preconditioner\FEMBAR_PCG_AsyncSparseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\Topologi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:65,error,error,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['error'],['error']
Availability,"The following warnings appears everytime a Link is declared:. https://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-1-c4305?view=msvc-170. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3763:100,error,error-messages,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3763,3,"['error', 'failure']","['error-messages', 'failures']"
Availability,"The function `buildDampingMatrix` was introduced in #2777. By default, if a component does not implement it, it will call the implementation from `BaseForceField` which calls `addBToMatrix` with a warning message. This is the compatibility layer.; Therefore, I implemented `buildDampingMatrix` everywhere there is no `addBToMatrix` implementation. It will avoid to display the warnings of the compatibility layer and explicit the fact that there is no damping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3948:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3948,2,['failure'],['failures']
Availability,"The function `sofa::helper::system::DataRepository.findFile` triggers a `msg_error` if the file is not found. In the case of `PrecomputedConstraintCorrection`, an error is not appropriate because the file can be generated. Instead I used `msg_info`. Because the log message contained trailing line breaks, I introduced a couple of utility functions to remove them. Example of output:. ```; [INFO] [PrecomputedConstraintCorrection(PrecomputedConstraintCorrection1)] File SquareCloth1-675-0.04.comp NOT FOUND in :C:/Users/Alex/Dev/sofa1/src/share:C:/Users/Alex/Dev/sofa1/src/examples:C:/Users/Alex/Dev/sofa1/builds:C:/U; sers/Alex/Dev/sofa1/builds. Compliance will be pre-computed and saved into a file; ```. It fixes a scene test from https://github.com/sofa-framework/sofa/pull/4106. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4108:163,error,error,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4108,3,"['error', 'failure']","['error', 'failures']"
Availability,"The function asin is defined in [-1,1].; The fix prevents NAN when the argument is slightly >1 due to numerical errors (1,000000000000001).; Hope it's clear enough.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-335735433:112,error,errors,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-335735433,2,['error'],['errors']
Availability,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4620:631,failure,failures,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620,2,['failure'],['failures']
Availability,"The function is not working at all and was not tested. In this PR:; - add tests for relativePathTo, following the existing function documentation.; - fix the function. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2350:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2350,2,['failure'],['failures']
Availability,"The function pluginIsLoaded is not behaving as it name suggest and does not detect plugin that have not been loaded using an absolute file path. . See: ; https://github.com/SofaDefrost/plugin.SofaPython3.deprecated/issues/137. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:771,failure,failures,771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,2,['failure'],['failures']
Availability,The functions ParallelFor and ParallalFor2d make the for loop parallelization easier to write.; They internally used the task scheduler and automatically perform the the tasks partitioning and creation. ParallelFor is used to parallelize for loops iteration on one index.; ParallelFor2d is used to parallelize for loops iteration on two indices. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/902:602,failure,failures,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/902,2,['failure'],['failures']
Availability,"The goal is to comment useless warnings.; The following line was introduced to deprecate ExtVector. However, before adding this line it is necessary to remove all the use of ExtVector in the core of sofa. Indeed, the current compilation generates thousand of warnings and slow down significantly the compilation. In addition, remove the possibility to exploit other warnings since too much information is printed. . //[[deprecated(""since 19.06, ExtVector is deprecated. Use helper::vector instead. Will be removed in 19.12"")]]. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1144:277,down,down,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1144,3,"['down', 'failure']","['down', 'failures']"
Availability,"The goal is to reduce the number of alias declarations. I propose 2 methods:. 1. using traits (for example `DataVecCoord_t<Out>`). This is illustrated in `Multi2Mapping`.; 2. ~~using a set of macros. The aliases are still declared, but it is hidden inside the macro.~~. I find the trait approach elegant (nothing is hidden and no use of macro or additional code), but too much verbose when only one template parameter is available (e.g. `TetrahedronFEMForceField`). The advantage of the macro is that it does not require changes in the code other than the alias declarations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4788:421,avail,available,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4788,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The goal was to avoid type conversions by removing explicit types. Instead I took the rigorous returned types and added static_assert when two types are interacting. Curiously, I found out that the templated code (intersection with Sphere) is not called anywhere. Let's see if a known plugin is using it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3287:849,failure,failures,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3287,2,['failure'],['failures']
Availability,"The goal was to be able to set the minimal requirements to get Sofa.Component + runSofa + batch only, and not having seemingly unrelated dependency. Fixes:; - runSofa needed absolutely Sofa.Gui.Qt but not using it; - not possible to compile Sofa.Gui.Common without having to compile Sofa.Gui (which should be possible). and cmake cleanups here and there. \+ an other unrelated fix by repairing the typo for simulation core tests ; the consequence was that simulation.core.tests was always activated even if sofa_build_tests was off. This PR is a preliminary step to have SofaGui totally deprecated (and not used anymore by runSofa). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3323:384,repair,repairing,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3323,3,"['failure', 'repair']","['failures', 'repairing']"
Availability,"The idea is to define component Data's where they are declared, usually in the header file. See https://isocpp.org/wiki/faq/cpp11-language-classes#member-init. Pros:; - All pros described in https://isocpp.org/wiki/faq/cpp11-language-classes#member-init; - Data name, variable name and description are declared and defined at the same place. No more back and forth between the declaration and the constructor definition.; - No duplicates between Doxygen and Data description. Cons:; - A change in the definition leads to a re-compilation of the files including the header; - Does not solve https://github.com/sofa-framework/sofa/issues/274 or https://github.com/sofa-framework/sofa/issues/44. An evolution of this proof of concept will be proposed in another PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2613:1307,failure,failures,1307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2613,2,['failure'],['failures']
Availability,"The idea is to ease the understanding of what the **RestShapeSpringsForceField** does. Usually, this component is used to fix points, or follow a path, using elastic forces. That is why, a suggestion of a new name could be **SpringConstraint**. It would be a constraint based on penalties. Note that this PR requires more work for the renaming. For the moment, it is just a support for a discussion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3903:944,failure,failures,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3903,2,['failure'],['failures']
Availability,"The idea is to provide tools to write multithreaded code more efficiently. The functions introduced in this pull request allow to apply a function to a range in parallel.; Unit tests are provided.; The newly added functions are used as example in two places:; - GenericConstraintSolver: the code is unique for both sequential and parallel execution; - ParallelHexahedronFEMForceField: no ambiguity: the code is only for parallel execution. But nothing prevent to have a code supporting both sequential and parallel execution. But the component is not totally ready for a merge with HexahedronFEMForceField. Note that it avoids a lot of boilerplate code, hence reducing the complexity of the file. I think this will allow us to write more multithreaded code. In the back, the parallel loop uses a task scheduler and divides the number of elements in `n` ranges, where `n` corresponds to the number of threads in the task scheduler. This is to execute exactly `n` tasks, instead of `m`, if `m` is the number of elements. It avoids the overhead of creating a task for each element. It is more efficient when the number of elements is large. Benchmarks are yet to perform. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3548:1713,failure,failures,1713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548,2,['failure'],['failures']
Availability,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1777:831,failure,failures,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777,2,['failure'],['failures']
Availability,"The idea of this PR is to check if some work done in 2016 in the branch ""Collodi"" has to be patched. The branch has been updated with recent version of master... probably with some conflicts resolution errors.. so it won't compile asis. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1492:202,error,errors,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1492,3,"['error', 'failure']","['errors', 'failures']"
Availability,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2278:975,failure,failures,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278,2,['failure'],['failures']
Availability,"The implementation was not correct.; BaseData::getLinkPath() should return a string pointing to the current data not the link value; of a parented data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2354:697,failure,failures,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2354,2,['failure'],['failures']
Availability,"The implementations of `addDForce` and `addBToMatrix` were removed in https://github.com/sofa-framework/sofa/commit/044f78ad4e3931b9754a90c251360f8f1e69c902. According to the commit message, an explicit formulation of the forces gives ""the best results"". This could not be tested on the example provided with SOFA as it is too simple (particles). To me, the computations seem ok, so I am in favor to keep them. However, we can discuss about activating the implicit formulation or not (through a Data?).; The implementation of `buildDampingMatrix` has been added according to #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3999:1126,failure,failures,1126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3999,2,['failure'],['failures']
Availability,"The inheritance link between CollisionResetVisitor and CollisionVisitor and some other had a consequence that ProcessGeometricalData was called multiple times in the FreeMotionAnimationLoop when the free motion and the collision detection where computed in parallel. . Another issue was that we had two time the timers for the substeps of the collision detection in the case of parallel computation : IMO only the AnimationLoop should have timers for global computation made by visitors. Here I remove the one of the Pipeline. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5042:1073,failure,failures,1073,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5042,2,['failure'],['failures']
Availability,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1939:757,failure,failures,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939,2,['failure'],['failures']
Availability,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2220:1231,failure,failures,1231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220,2,['failure'],['failures']
Availability,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1941:1390,failure,failures,1390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941,2,['failure'],['failures']
Availability,"The jacobian is already computed. It must be transposed and multiply by a right-hand side matrix in this overload of `applyJT`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3776:672,failure,failures,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3776,2,['failure'],['failures']
Availability,"The last parameter of getAttribute is the value returned by default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3946:615,failure,failures,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3946,2,['failure'],['failures']
Availability,"The line `dJ.startVec( row );` crashes in an example in the branch of #2777. I am not able to explain why, and I am not able to reproduce it in a simple example. But from what I can understand:. - Usage of `startVec` is internal to Eigen. I am not sure it is meant to be used outside of Eigen (but it's in the public API); - Manipulation of the `EigenSparseMatrix` is not consistent with the other non-linear mappings. This PR mimics the pattern from the other mappings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3803:1015,failure,failures,1015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3803,2,['failure'],['failures']
Availability,"The line defining node gathering all the plugins was immediately closed (slash at the end); consequently, the second `</Node>` was closing the root node itself. (so the loaded scene was containing nothing). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2831:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2831,2,['failure'],['failures']
Availability,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2011:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011,2,['failure'],['failures']
Availability,"The link to the linear solver was always overwritten by the first linear solver in the current context. This PR adds the possibility for the user to specify which linear solver to use. This is useful when there are multiple linear solver in the current context (preconditioning methods). EDIT: about GlobalSystemMatrixExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2497:872,failure,failures,872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2497,2,['failure'],['failures']
Availability,"The message was not making sense and was incorrect anyway,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4120:604,failure,failures,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4120,2,['failure'],['failures']
Availability,"The method `applyConstraint(sofa::core::behavior::ZeroDirichletCondition* matrix)` was not implemented. It is added in this PR. A unit test is also added, based on the tests from `PartialFixedConstraint_test`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3925:754,failure,failures,754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3925,2,['failure'],['failures']
Availability,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4319:837,failure,failures,837,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319,2,['failure'],['failures']
Availability,The method exists in Sofa and is useful to explore the graph between components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/843:337,failure,failures,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/843,2,['failure'],['failures']
Availability,"The method getTime has a problem of precision over the simulation in the animationLoop. Playing a scene with a Dt of 0.0051 and comparing the return time to ground truth reveal the error. See below. In DefaultAnimationLoop::step; ```; std::cout << ""!!!!!!!DefaultAnimationLoop::get startTime"" << std::endl;; SReal startTime = SReal(gnode->getTime());; std::vector<SReal> refs = { 0.0, 0.0051, 0.0102, 0.0153, 0.0204, 0.0255, 0.0306 };; for (auto ref: refs); std::cout << ""diff Time: "" << startTime - ref << std::endl;; ```. give:. ```; !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153; diff Time: -0.0204; diff Time: -0.0255; diff Time: -0.0306. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0051; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153; diff Time: -0.0204; diff Time: -0.0255. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0102; diff Time: 0.0051; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153; diff Time: -0.0204. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 1.73472e-18; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0204; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0255; diff Time: 0.0204; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 3.46945e-18; diff Time: -0.0051. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0306; diff Time: 0.0255; diff Time: 0.0204; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 3.46945e-18; ```; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1079:181,error,error,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1079,1,['error'],['error']
Availability,"The module name is used by the PluginManager to identify a plugin. And there seems to have a need that the plugin binary filename matches the module name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4720:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4720,2,['failure'],['failures']
Availability,The modules/SofaOpenglVisual/CMakeLists.txt has been changed because it always tried to generate the tests even if SOFAGUI_BUILD_TEST is set false. It makes the compilation fail. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1091:437,failure,failures,437,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1091,2,['failure'],['failures']
Availability,"The most important is just the `if (results.size() <= 1)` in `HasFailures`.; About the name, I started by fixing the typo ""ATLEASE"" and finnaly changed the whole thing but it's not very important we can go back to ""ATLEAST"" if you prefer :-). EDIT: Actually we can't since the new behavior is to pass only if there is MORE than 1 failure.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370712593:330,failure,failure,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370712593,1,['failure'],['failure']
Availability,"The name `CollisionOBB` mismatched the module name `CollisionOBBCapsule`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3107:618,failure,failures,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3107,2,['failure'],['failures']
Availability,"The never-ending quest of eradicating implicit type conversion. This PR contains two things:. 1) Introduction of a user-defined literal for SReal constants.; 2) Avoid implicit conversions. **Introduction of a user-defined literal for SReal constants**. When dealing with constants that should be SReal, I saw the the following behavior in the SOFA code base:. - The `SReal` type is ignored and the constant is considered either as a double or a float, or any other primitive type. Example: `Vector3(1.f, 1.f, 1.f)`, `Vector3(1., 1., 1.)`, or `Vector3(1,1,1)`.; - The constant is C-style cast. Example: `Vector3( (SReal)1, (SReal)1, (SReal)1)`; - The constant is `static_cast`. Example: `Vector3( static_cast<SReal>(1), static_cast<SReal>(1), static_cast<SReal>(1))`. The first option is what we want to avoid. The second option has some problems that the third can solve. However, the third option is ugly, long and can be complex to read. To simplify such expressions, I introduced a user-defined literal. Example: `Vector3(1_sreal, 1_sreal, 1_sreal)`. This PR also fixes some implicit conversions that can be avoided.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3314:1665,failure,failures,1665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3314,2,['failure'],['failures']
Availability,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:874,error,error,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611,1,['error'],['error']
Availability,"The new major version of[ MSVC 2022 (v17.4)](https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-4/) seems to change some std header inclusions.; `SceneLoaderFactory.h` did not know `std::string` anymore. \+ SpatialGridContainer.h was not compiling anymore as well, I just removed all the shenaningans made +15years to support the at-that-time experimental `unordered_map`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3466:932,failure,failures,932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3466,2,['failure'],['failures']
Availability,"The new message is:; ```; [ERROR] [TriangleSetTopologyContainer(topo)] Cannot find edge 0 [161, 158] in triangle 0 [0 161 158] in the provided edge list (@/vtk file/topo.edges). It shows an inconsistency between the edge list (@/vtk file/topo.edges) and the triangle list (@/vtk file/topo.triangles). Either fix the topology (probably in a mesh file), or provide only the triangle list to '/vtk file/topo' and not the edges. In the latter case, the edge list will be computed from triangles.; ```. Previously it was:; ```; [ERROR] [TriangleSetTopologyContainer(topo)] Cannot find edge 0 [161, 158] in triangle 0; ```. Fixes https://github.com/sofa-framework/sofa/issues/2636. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2638:27,ERROR,ERROR,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2638,4,"['ERROR', 'failure']","['ERROR', 'failures']"
Availability,The operator>> was not functionning properly as it was returning; with a failbit set because of the in.peek() on empty string. This error; was generating a warning in UniformMass. The PR:; - fix this error; - adds a test that validate that the code is correct and does not generate error anymore.; - makes some sout/serr cleaning in uniformmass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/993:132,error,error,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/993,5,"['error', 'failure']","['error', 'failures']"
Availability,"The option handleSeams was supposed to mimic the same mechanism as in the OglModel, i.e duplicated vertices when texture coordinates are present (as it is possible that one vertex has multiple texture coordinates).; This option never worked because of references errors ; this PR corrects it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/923:263,error,errors,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/923,3,"['error', 'failure']","['errors', 'failures']"
Availability,"The option was available only for MSVC. There is no reason no to add it for gcc/clang.; I did not tested the option myself. Fix some typos. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3922:15,avail,available,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3922,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The orientation must be skipped. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4891:577,failure,failures,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4891,2,['failure'],['failures']
Availability,"The parameter is not used in the function. Only its type. The parameter is here probably just for template deduction. I suggest to remove the use of a parameter. Reason in https://github.com/sofa-framework/sofa/pull/4816. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4817:766,failure,failures,766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4817,2,['failure'],['failures']
Availability,The path to the pluginManager.cpp is incomplete in the CMakeLists. Thus prefix was always empty and nod set to _d in debug mode. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1313:385,failure,failures,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1313,2,['failure'],['failures']
Availability,"The position and edges vectors were not cleared if load() is called multiple times. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/337]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702:700,failure,failures,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702,2,['failure'],['failures']
Availability,"The preproc define SOFA_WITH_THREADING seems to not be used at all (except in a logger_test) and the cmake `SOFA_WITH_THREADING` option itself is misleading (both the name and the description); ```SOFA_WITH_THREADING ""Compile sofa with thread-safetiness support (PARTIAL/EXPERIMENTAL)``` 🤔 ?. So this PR removes everything related to this option, and as it was not used for some time, ; I did not do any compat/deprecation... EDIT:. After some investigation, it was created to let the user chose if he wants thread safety with the message dispatcher, with this commit https://github.com/sofa-framework/sofa/commit/2aebe06241c6f8b391f0cc3d32b12ed90e40ef96 (did not find the related PR) ; and it disappeared with #1799 (where the message dispatcher will always be thread-safe). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3565:1320,failure,failures,1320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3565,2,['failure'],['failures']
Availability,"The preprocessor directive #warning is not standard. It does not exist on Windows in the Visual C++ compiler, creating an error in compilation.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3:122,error,error,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3,1,['error'],['error']
Availability,"The problem comes when using 'both' it seems. For one part of the build failure, TriangleOctree / TriangleOctreeRoot must be instantiated with both precision instead of currently using the default type SReal only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305127979:72,failure,failure,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305127979,1,['failure'],['failure']
Availability,The problem the PR solve is related to how data are changed by the setValue function. When writing in data through an opaque pointer it is important to properly notify the data successors that a data has changed. This is why write access *must* be done using beginEdit/endEdit and absolutely not; by removing the const qualifier from q getValueVoidPtr using a cast (what was done in the setValue function). Doing it the wrong way break the data update mechanism. . The PR fix that.; To ease the writing of the beginEdit/endEdit pair it also add a RAII WriteAccessWithRawPtr. It is in BaseData...because it is for BaseData. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1006:881,failure,failures,881,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1006,2,['failure'],['failures']
Availability,The problem was that a failure to create a component due to template mismatch on a; pluginized object shows the pluginization message instead of template mismatch one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1332:23,failure,failure,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1332,3,['failure'],"['failure', 'failures']"
Availability,"The problem with the approach to have a name helper in each Node is that the Node must exist before using it. And it's not the case in the XML loader. A name is required before the object creation, and no Node is available at that time. Therefore, I used a single name helper inside the XML loading for all the components. In this case, the counter suffix does not depend on the Node. A problem with this approach (other than it's not consistent), Nodes' counters are not updated...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905:213,avail,available,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905,1,['avail'],['available']
Availability,"The project has been renamed to ""Sparse Matrix"" and ""Sparse Vector"" representation because we have similar issues with Mask, mapping, constraints, solvers etc... due to the lack of unified ""sparse"" representation of vectors and matrices in SOFA.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292202592:119,Mask,Mask,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292202592,1,['Mask'],['Mask']
Availability,"The purpose of this PR is to unify the mass components in SOFA (UniformMass, DiagonalMass and MeshMatrixMass):; - unify the naming of data for mass information (vertexMass, massDensity and totalMass); - unify their initialization process; - apply the coding rules (especially regarding the variable prefix d_ and m_) and use the msg API; - add the feature of dataTracker on the data for mass information; - add support for additional CUDA templates for the MeshMatrixMass (that should always be preferred as default mass). This should ease the understanding of new users at first look.; All tests and checks added should also make these codes more robust. A script is added with this PR to automatically update all your scene files (.xml and .scn). I invite to be really **prudent** before merging this PR, since it affect basically all simulations. Note: @hdeling I removed unused functions (numericalIntegrationOrder, numericalIntegrationMethod, integrationMethod) in MeshMatrixMass that I think were used before the ""plugin.HighOrder"" plugin was created. Can you confirm this?. Suggestion for future work:; - rename MeshMatrixMass into SparseMass; - move MeshMatrixMass with DiagonalMass; - make DiagonalMass depends from MeshMatrixMass (since it's a simplified -lumped- derived approach from MeshMatrixMass) : this would clearly factorize the code and make it more robust. PS : bisous. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637:648,robust,robust,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637,4,"['failure', 'robust']","['failures', 'robust']"
Availability,"The rational is that we should reduce as much as possible the interface size of an object as long as the same service can be done in our case the two variation are:; myData == value; vs; myData.getValue() == value. The second one has the advantage:; - to make explicit that there is computation/accessor. ; - the object we put in Data<> does not need anymore to have == operators. ; - as the Data interface has less functions so it is easier to learn/discover/read/remember. . EDIT: I'm not sure it is a good idea to remove the operator== directly without transition period, this is why I'm searching for some template tricks that would print the deprecation warning then stop the compilation but I didn't managed to do so. Any help appreciated.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1639:1291,failure,failures,1291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1639,2,['failure'],['failures']
Availability,"The removed code is a copy/paste of its base class. It's useless, and also triggers warning because it hides its base class implementation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2430:684,failure,failures,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2430,2,['failure'],['failures']
Availability,"The removed line prevents referencing this plugin in another, externally built SOFA plugin.; (doing a `find_package(SofaPython)` from the CMakeLists.txt of another plugin, built as a standalone project did not work). I don't know the side-effect of simply removing this line, but I also don't see in which case this could (or should) work anyway: there is no reason to create a target during the import of a package. the targets are created at install, and loaded during the package import, not created, to my understanding. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/888:781,failure,failures,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/888,2,['failure'],['failures']
Availability,"The removed specializations were not that different from the generic `draw` method. So, I removed them. I also took the opportunity to implement bbox computation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4823:707,failure,failures,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4823,2,['failure'],['failures']
Availability,"The rigid type is registered both in applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/CapsuleModel.cpp and applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/RigidCapsuleModel.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4709:773,failure,failures,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4709,2,['failure'],['failures']
Availability,"The root tree is now displayed in the tree. Previously, only the root children were displayed. This root item provides more information about the time step: the time that has not been measured by timers (children). It's in the columns 'Self'. In the example, 3% of the step is not measured, corresponding to 1 ms. The second addition is the overhead due to timers processing. It is displayed in the left panel. Here, it takes 10 ms to process the incoming timers and update the chart. ![image](https://user-images.githubusercontent.com/10572752/151393063-10d272a0-38d9-4c64-9a76-b326fb010e15.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2643:1142,failure,failures,1142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2643,2,['failure'],['failures']
Availability,"The same code in `ForceField` and both classes of this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4779:603,failure,failures,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4779,2,['failure'],['failures']
Availability,The same error appears in SparseLUSolver...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/74#issuecomment-263585022:9,error,error,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/74#issuecomment-263585022,1,['error'],['error']
Availability,The scene CarvingTool.scn throws an error: `[CarvingManager(carvingManager1)] m_surfaceCollisionModels not found. Set tag 'CarvingSurface' to the right collision models.`; Could you have a look @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-516839841:36,error,error,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-516839841,1,['error'],['error']
Availability,"The scene `examples/Components/animationloop/FreeMotionAnimationLoop.scn` takes a lot of time to initialize. I would like to warn the user that it is normal, that SOFA did not freeze. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2470:728,failure,failures,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2470,2,['failure'],['failures']
Availability,"The scene checker detects when we use a plugin but forgot the ""required plugin"" tag and tells us how to add it in our scene, but without closing the tag. This PR fixes the bug in the suggestion and corrects some typos in error messages in the same file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/573:221,error,error,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/573,3,"['error', 'failure']","['error', 'failures']"
Availability,"The scene graph view is not updated to reflect the content of the scene changes. ; This is because a mecanism was implemented to not update the view at each simulation step to maximise performance. . This may be useful when max performance is needed but this lead to an inconsistant display. . In this PR I try to fix the situation by allowing three states:; - lock = true => changes in the scene graph are not reflected into the model but the model is flagged as dirty ; - lock = false => changes in the scene graph are imediately reflected into the model; - dirty => true => the model is not anymore synchronized with the sofa scene graph; - dirty => false => the model is showing the content of the scene graph. when going from lock=true to lock=false the model is updated if it was dirty. . To let user to control if they want the graph to be updated we add an icon to lock/unlock the model state. If the model is dirtyfied; a the icon is reflecting the change (with an highly professional icon free of copyright ;)) . Fixes #2920 . The PR also contains few fixes for the modeller (that is still broken anyway). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026:1662,failure,failures,1662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026,2,['failure'],['failures']
Availability,"The scene is generated successfully the first time with the the OglSceneFrame component correctly loaded and without warnings.; But, with or without any parameters specified in the component, I have been unable for the last few days to reload the scene. A segfault error is appearing.; I tried another scene containing this component and the result is the same.; I confirm that without this component, both scenes properly reload (using CTRL+R). Thanks in advance for resolving this issue!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/462:265,error,error,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/462,1,['error'],['error']
Availability,The script would sometimes plot completely wrong info because some numbers were treated as strings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/519:356,failure,failures,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/519,2,['failure'],['failures']
Availability,"The second parsing values were not updated because insert() of (unordered_)map does not overwrite values. This bug was actually making all the scene tests (using runSofa) successful... 🤐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3672:732,failure,failures,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3672,2,['failure'],['failures']
Availability,The seg fault on compliant doesn't seems to be related to this PR since I also got the fault on my mac with the master branch.... You might need to launch the Compliant_test a couple of time to get the seg fault.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-489105279:8,fault,fault,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-489105279,3,['fault'],['fault']
Availability,"The solver crash if the system is rank deficient because it read memory at indices like xxx[0]. . This PR:; - adds a conditional test prevent that. ; - adds SOFA_WITH_FLOAT, SOFA_WITH_DOUBLE to make it consistant with the rest of sofa.; - removes commented code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/655:521,failure,failures,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/655,2,['failure'],['failures']
Availability,"The solver offers two methods to solve the constraint system: `build_LCP` and `build_problem_info`. They were very similar and long functions with a lot of duplicated code. The duplicated code has been moved into small functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3474:774,failure,failures,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3474,2,['failure'],['failures']
Availability,"The state of vector.h and set.h is a bit messy right now. . A recent PR have added tests to vector & fix several crashes & infinite loop. It appears that the problematic code is also in set.h so a general code factoring is needed. . There is also some details on container refactoring in PR #113 ; Finally it is not very clear what should be in std:: and what should be in sofa::helper:: ...; and there is a lot of code in the .h for only two specialization I see no reason why they shouldn't be make extern and implemented in .cpp. . So this PR is a WIP in which everyone is welcome to contribute. My current todo list is:; - implement tests for set so we can refactor safely. ; - declare int & unsigned int as extern template & move specialization from .h to .cpp for vector & set; - have everything in sofa::helper for consistancy (vector, set, map, pair, list, deque); - fix the problem pointed by @maxime-tournier in #271 in the remove* functions. ; - remove the lines added by hugo ; ```cpp; /// \todo: refactoring of the containers required; /// More info PR #113: https://github.com/sofa-framework/sofa/pull/113; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/278:1382,failure,failures,1382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/278,2,['failure'],['failures']
Availability,"The static variable is constructed as soon as the plugin is loaded. This could be a problem if the plugin initialization failed (SofaCUDA). This PR remove the variable for a static function. The code is called only when used. Note that this PR is temporary, waiting for https://github.com/sofa-framework/sofa/pull/4852 where this variable won't be necessary. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4883:903,failure,failures,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4883,2,['failure'],['failures']
Availability,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1957:784,failure,failures,784,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957,2,['failure'],['failures']
Availability,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4442:773,failure,failures,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442,2,['failure'],['failures']
Availability,"The test `QuaterTest::EulerAngles` randomly fails on the CI. Here is a test that fails 100% of the time. Anybody wants to fix it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4122:675,failure,failures,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122,2,['failure'],['failures']
Availability,"The test is on large displacement. . Note: As stated in the class comments, the small displacement does not give the expected result. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4781:678,failure,failures,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4781,2,['failure'],['failures']
Availability,"The test was failing due to triangle orientation a priori, let's check the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1338:335,failure,failures,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1338,2,['failure'],['failures']
Availability,"The timer ""ApplyCorrection"" is already in the mother class in applyCorrectionTask which is the method that actually call applyCorrection. ""Compute And Apply Motion Correction"" was thus redondant and the second ""ApplyCorrection"" was misleading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5045:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5045,2,['failure'],['failures']
Availability,"The timer `Accumulate Constraint` included two steps: 1) reset the constraint, 2) accumulate the constraints.; Since resetting the constraints is not negligible, I suggest that each of the step has its own timer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2469:757,failure,failures,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2469,2,['failure'],['failures']
Availability,The title says it all. . I'm confused as the windows build used to terminate correctly when the PR was merged :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/391:371,failure,failures,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/391,2,['failure'],['failures']
Availability,The title says it all. Feel free to comment if any of the removed scenes should be kept. Removed scenes:; - Components/controller/ArticulatedHierarchyBVHController.scn; - Components/controller/EdgeSetController.scn; - Components/controller/MechanicalStateController.scn; - Components/controller/NodeToggleController.scn; - Components/forcefield/BuoyantForceField.scn; - Components/forcefield/BuoyantForceField2Boxes.scn; - Components/forcefield/ForceMaskOff.scn; - Components/forcefield/WashingMachineForceField.scn; - Components/mapping/CatmullRomSplineMapping.scn; - Components/mapping/ProjectionToTargetLineMapping.scn; - Components/mapping/ProjectionToTargetPlaneMapping.scn; - Components/topology/HexaCenterPointMapping.scn; - Demos/10000.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922,2,['failure'],['failures']
Availability,"The underlying idea is that we should have only one alias for code consistency and to make things clearer.; I didn't deprecates/removed the long names alias but this should be done in a future PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299:741,failure,failures,741,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299,2,['failure'],['failures']
Availability,"The unit test in this PR relied on `rand()`, which was seeded by `srand(time(nullptr))`. However, it means that every time the test is executed, the generated input values are different. The test is not repeatable. And sometimes, the generated values lead to singularities, which are values not supported by the tested functions.; The changes in this PR made the random generation deterministic and portable, so that the test is repeatable. We also make sure that the generated values don't lead to singularities. For more information about the singularities, see https://github.com/sofa-framework/sofa/pull/4122. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4126:1158,failure,failures,1158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4126,2,['failure'],['failures']
Availability,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:15,failure,failure,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603,2,['failure'],['failure']
Availability,"The unit tests on the StaticSolver failed because the Metis permutation using the Eigen API did not give the same result than the Metis permutation that was implemented before. This is intriguing... But the most concerning problem is that the result of the linear solver depends on the permutation. Hopefully, it is only a problem of numerical errors. Afterall, the operations are not the same depending on the permutation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4370#issuecomment-1895627928:344,error,errors,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370#issuecomment-1895627928,1,['error'],['errors']
Availability,"The use of the macro CHECK_TOPOLOGY has been removed from the code through several PR. This one totally remove it. Remove duplicate call to createEdgeSetArray from Modifier when adding an edge to the topology. As all topology buffers are init at start, if hasEdges return 0, it means the topology is really empty not that the topology is not init.; This behavior has been set in the PR #967. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1399:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1399,2,['failure'],['failures']
Availability,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4314:907,failure,failures,907,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314,2,['failure'],['failures']
Availability,"The user was never informed that its scene does not compute bbox.; Consequently the viewer settings based on the bbox are messed up. This PR will at least warn the user that he needs to either:; - add a component which implements computeBBox; - implement itself in its own components; - force set bbox=""minx miny minz maxx maxy maxz"" parameter in a node/component. The logic would want to set it in the root node.; This PR fixes also the fact that the bbox parameter was being ignored by the BBox computing visitors. . This PR is related to issue #29, but it does not compute BBox automatically so #29 should not be closed, in my opinion. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/524:895,failure,failures,895,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/524,2,['failure'],['failures']
Availability,"The usual :p, adding dependencies introduced in #2777 in the CMakeLists.txt. It will fix the out-of-tree builds based on the current master, especially for SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3846:713,failure,failures,713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3846,2,['failure'],['failures']
Availability,"The usual cleaning:. 1- removed commented code; 2- added using; 3- sofa rules with name (m_, d_); 4- moved definitions from .h to .inl; 5- replaced old serr/sout with msg_warning, msg_error, msg_info. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/846:457,failure,failures,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/846,2,['failure'],['failures']
Availability,"The usual pattern of component classes is the following:. - A generic method is defined in the base class of the component. Since it is generic, it does not know the type of the `DataTypes` (it's not templated). Instead, it acts on `VecId`.; - In a second base class, inheriting from the first one, the `DataTypes` is known (the class is templated). Therefore, the methods can be defined to work on the right type.; - In this class, the generic method calls the template-specific one. IMO, the template-specific method should not be public. In this PR, they are moved to protected. I think also, that the generic methods can be final, but this is breaking, so I am not sure that it is a good idea to keep the final keyword. The PR starts with the `final` keyword to study the consequence on the CI. Those changes force the user to call only the generic methods. I took the opportunity to add a check on the component state in the generic methods. If the final keyword is used, it would ensure that the component state is called before each call of the public API. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4943:1608,failure,failures,1608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4943,2,['failure'],['failures']
Availability,The virtual function BaseLinearSolver::isMultiGroup() returns always false because multi group solver is no more supported after PR #901 in all LinearSolver classes. Needs #1060 to be merged first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1063:454,failure,failures,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1063,2,['failure'],['failures']
Availability,"The warning message now indicates if the newly added Data/Link is used as a Data or as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2489:639,failure,failures,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2489,2,['failure'],['failures']
Availability,"The warning was:; ``` cmake; CMake Warning at Sofa/framework/Config/cmake/SofaMacrosInstall.cmake:1031 (message):; Deprecated macro. Use 'sofa_add_targets_to_package' instead.; Call Stack (most recent call first):; applications/plugins/image/image_gui/CMakeLists.txt:46 (sofa_install_targets); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359:843,failure,failures,843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359,2,['failure'],['failures']
Availability,"The warning/deprecation message from OptionGroup containing the string ""error-prone"" was bothering me to find the real error in compilation outputs!. I therefore worked on upgrading the SOFA codebase to remove these warnings by replacing the deprecated constructor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4064:72,error,error-prone,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4064,4,"['error', 'failure']","['error', 'error-prone', 'failures']"
Availability,"The website does not display the cpp code properly, so I added spaces to see if it fixes it. ![image](https://github.com/sofa-framework/sofa/assets/10572752/b80bca8b-6d79-43a5-bf23-faf675d1730a). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4695:740,failure,failures,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4695,2,['failure'],['failures']
Availability,The workflow is really slow when changing simple values in the data inspectors ; (validating by clicking on update). In this pr we allows the user to change the numeric values; by moving the mouse left&right to decrease/increase with immediate update. I will do a small video to show the results to make that more clear. ; https://www.youtube.com/watch?v=fuWz3Dn1-oM; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/750:624,failure,failures,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/750,2,['failure'],['failures']
Availability,"There are a few tests/scenes throwing the new warnings (especially with the image plugin), but this was to be expected I guess.; Strangely, I would have predicted Jenkins/gtest to consider those as ""FAILED"" (and having some additional failures in the summary) but it does not. 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167:235,failure,failures,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167,1,['failure'],['failures']
Availability,"There are still lots of references to this plugin in the rest of the SOFA code base, including bindings in the `image` and `PSL` plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855,2,['failure'],['failures']
Availability,"There are too many changes for me to review this PR ;); But from a quick glance, personally I would have preferred to keep the optional ExecParams* parameter in the Data* APIs even if it is unused now. This would remove frustrations for downstream / plugin codes that could be broken by this change. One option would be to add them back with a [[deprecated]] attribute.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-603859486:237,down,downstream,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-603859486,1,['down'],['downstream']
Availability,"There is a work in progress to extract the constraint matrix.; The internal force vector is available in the MechanicalObject, in the `force` Data field (but it is merged with all the other forces).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324191143:92,avail,available,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324191143,1,['avail'],['available']
Availability,There is an error in the test because timer ids changed in this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718,1,['error'],['error']
Availability,"There is duplicated code in several function of Link.h. ; I factored that. . I also removed an #ifdef MACRO that was standing there for year and no one cares. If we plan/want to refactor this part we should do that with [[deprecated]]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1704:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1704,2,['failure'],['failures']
Availability,There is examples which relies on SparseSolver without having the corresponding RequiredPlugin. ; This PR fix this (to make the CI happy). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/748:397,failure,failures,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/748,2,['failure'],['failures']
Availability,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1751:1380,failure,failures,1380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751,2,['failure'],['failures']
Availability,There is not a lot of contribution to make plugin from the old sofa modules. ; Here is one. . The general idea is that it should decrease compilation time and memory footprint of sofa. . This is my contribution to the issue stated by @hugtalbot in ; https://github.com/sofa-framework/sofa/issues/346. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/396:557,failure,failures,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/396,2,['failure'],['failures']
Availability,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:13,error,error,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824,2,['error'],['error']
Availability,"There is only one ""Node"" implemenation in Sofa so there is no need to expose internal details (saying it is ""DAG"") to the UI layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2395:676,failure,failures,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2395,2,['failure'],['failures']
Availability,"There is several dependencies from SofaHaptics to ""hard"" to compile code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/945:332,failure,failures,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/945,2,['failure'],['failures']
Availability,There should be no more calls of OpenGL API in SofaKernel's modules.; Clean gl's related includes as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/425:363,failure,failures,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/425,2,['failure'],['failures']
Availability,"There was a flaw fixed in the tests, fixing it fixed all tests on Linux and OSx but raised errors on Windows. I switch to Redmond's OS to fix them and hopefully, it will then be ok...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/267#issuecomment-302020287:91,error,errors,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/267#issuecomment-302020287,1,['error'],['errors']
Availability,There was a regression in the way RGBAColor are parsed by the stream operator>>.; This was the cause of Material reading was not working (issue #302). . This PR fix:; - fix the problem. ; - add new tests for RGBAColor & Material ; - Clean Material without breaking the API. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/305:532,failure,failures,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/305,2,['failure'],['failures']
Availability,"There was a segfault when opening MechanicalObject properties in runSofa at least with caduceus.scn; Thanks @remibessard for spotting it :+1: . Details:; For a reason I don't know, there is a Datafield named ""dforce(V_DERIV)"" in MechanicalObject that has **no help message**. Thus, when opening MechanicalObject properties, QDisplayDataWidget's constructor runs `data_->getHelp()` which returns nullptr provoking a segfault when used in stringstream creation right after. Bug introduced by 48395d837474beb67ca4d9721ebb8b7361089fe3. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1090:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1090,2,['failure'],['failures']
Availability,"There was an error in the name of the (origin) directory to install. Not sure about the destination though. This fix has no impact on building Sofa, only on its installation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959:13,error,error,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959,3,"['error', 'failure']","['error', 'failures']"
Availability,"There was an unused variable in a frequently included header, and a missing override in another one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/386:357,failure,failures,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/386,2,['failure'],['failures']
Availability,"There was no example scene for the following components:; - BlockJacobiPreconditioner ; - JacobiPreconditioner ; - PrecomputedWarpPreconditioner; - SSORPreconditioner; - WarpPreconditioner. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2492:734,failure,failures,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2492,2,['failure'],['failures']
Availability,"There were only a few tests on NameDecoder in `SofaKernel/modules/SofaCore/SofaCore_test/objectmodel/BaseClass_test.cpp`. I created a dedicated file to test the main functions in NameDecoder. It required changes in some of the algorithms to comply with the added test:. - Support of nested classes; - Spaces are processed in the first pass of the algorithm, instead of adding a second pass just for spaces. This is also to detect when spaces must be skipped or not (always skipped before). For example, it must not be skipped in `unsigned int`.; - Returned string get a balanced number of opening chevrons and closing chevrons. Note: Anonymous namespaces are not supported (yet?).; Note 2: The algorithms in `NameDecoder` are complicated to read. It is hard to anticipate the result. IMO, it's due to the fact that it is written to be executed in a single pass. I think allowing multiple passes would help to read and debug these functions. `decodeTemplateName` was never called. I call it now in `getOverridableTemplateName()` instead of assuming there is no template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2380:1614,failure,failures,1614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2380,2,['failure'],['failures']
Availability,"There's a wierd issue in cmake package config that caused the paths to CImg to be inconsistent (depending on whether the build was triggered from ghprb or manually) on Defrost's CI.; It happens to be CMake's interpretation of the ""PACKAGE_"" prefix in . CImgPlugin/extlibs/CImg/CImgConfig.cmake.in that varied from one build to another.; The prefix is actually useless, since ${CIMG_INCLUDE_DIR} is already a valid and complete path, in build & install configurations. Removing the PACKAGE_ prefix solves the issue.; I flagged this PR as fast-merge since our CI @SofaDefrost does not build anything because of that.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/921:872,failure,failures,872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/921,2,['failure'],['failures']
Availability,"These 2 classes were not compiled/used anymore for at least more than 1 year.; So I consider the ""deprecation""/""removal"" process as expired; and remove them from the SOFA codebase.; (and especially to avoid for good the confusion with helper::system::{Plugin/PluginManager}. Removed last files using these mechanism as well (some plugins); those files were not compiled so no consequence at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1612:940,failure,failures,940,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1612,2,['failure'],['failures']
Availability,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1767:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767,2,['failure'],['failures']
Availability,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1842:1092,failure,failures,1092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842,2,['failure'],['failures']
Availability,"These references were not removed in; - #3960 . There should be errors like; `CMake Error: File applications/plugins/Flexible/ExternalProjectConfig.cmake.in does not exist.` occuring. 🤐. Not sure why the CI did not detect this, maybe because of CMake caches not cleaned or something like that. EDIT: seems it depend on some factors, I get ""only"" warning on other configuration; `applications/plugins/Compliant does not exist and will be ignored.`; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:64,error,errors,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,4,"['Error', 'error', 'failure']","['Error', 'errors', 'failures']"
Availability,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258:1068,failure,failures,1068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258,2,['failure'],['failures']
Availability,"They are not meant to be overriden because there is another mechanism to have a custom class name or template name. As stated in the removed comments, it should have been final. But they could be non-virtual because Base is the top-level base class. Note this is breaking. For example, SoftRobots is affected. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/298]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/4]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242:997,failure,failures,997,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242,2,['failure'],['failures']
Availability,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2326:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326,2,['failure'],['failures']
Availability,"This ""move"" is originally done to uncouple CGAL plugin and Image. This was done by moving Image class (along with dependencies) from Image plugin (ImageTypes.h) to CImgPlugin (CImgData.h). The point is to reduce compilation time since CImg takes less time to compile than Image.; Now Image and CGAL both depend on CImgPlugin which is lighter.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1104:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1104,2,['failure'],['failures']
Availability,This (old) PR allows to have topological change with UniformMass and DiagonalMass. PointAdded and PointRemoved are added.; Add clean tracker function (temporary regarding Data discussion). This should fix the testIncise. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1212:477,failure,failures,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1212,2,['failure'],['failures']
Availability,"This CMake macro permits to create dependent options for tests that will automatically be hidden and set to OFF if SOFA_BUILD_TESTS is defined and FALSE.; If SOFA_BUILD_TESTS goes back to TRUE, the option is shown again with its old value. This way of adding a tests subdirectory should be propagated to all plugins. See [CMake documentation](https://cmake.org/cmake/help/v3.10/module/CMakeDependentOption.html) for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1164:686,failure,failures,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1164,2,['failure'],['failures']
Availability,This PR Do: ; [SofaGraphComponent] FIX Bug in scene checker.; [SofaGraphComponent] FIX RequiredPlugin . For more details have a look at the commit messages. ; This PR is a re-split of PR #548 to ease review & merging. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/563:476,failure,failures,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/563,2,['failure'],['failures']
Availability,This PR FIX Issue #928 and add basic tests on RestShapeSpringsForceField. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/942:332,failure,failures,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/942,2,['failure'],['failures']
Availability,"This PR add a component called TopologyChecker to be added in the scene and link to a MeshTopology / TopologyContainer in order to check the topology either on demand or every end of step. The methods used to check the topology is similar to the code inside the method xxxSetTopologyContainer::CheckTopology() ; which will be removed. **This PR use changes from PR #1593 and won't compile until the previous one is merged**. Fix #1367 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1594:981,failure,failures,981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1594,2,['failure'],['failures']
Availability,"This PR add a frameskip option to the headless recorder.; Previous behavior is kept for compatibility.; Frameskip option can have 4 different values : ; - noskip and simulationtime : previous behavior, now default. One frame is taken at each time step.; - realtime : Output images at rate of 1/fps; - an arbitrary float : tries to skip this much time between each frame. The order between simulation and frame saving has also been inverted : now the first frame taken is at time 0, instead of time dt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/615:758,failure,failures,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/615,2,['failure'],['failures']
Availability,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2249:1216,failure,failures,1216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249,2,['failure'],['failures']
Availability,"This PR add a unit test that is currently failing, showing that the inertia is wrongly taken into account for rigid with different inertia along each direction. . After rotation of a rigid, the inertia matrix is not rotated accordingly. See issue https://github.com/sofa-framework/sofa/issues/4936. . We need to fix this ! . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4935:869,failure,failures,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4935,2,['failure'],['failures']
Availability,This PR add some facility method to convert back and forth a `MapMapSparseMatrix` type ; into an `Eigen::SparseMatrix`. # CHANGELOG ; * Added some utility methods to be able to accumulate MatrixDeriv types to parent dofs when the mapping implements its jacobian using a sparse matrix from the Eigen library.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/452:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/452,2,['failure'],['failures']
Availability,"This PR add:; Initialization of helper::vector using {}. Example:; helper::vector< double > vec1 = {5,4,7,1,2};; helper::vector<helper::vector< double >> vec2 = {{5,4},{7,1,2}};; ______________________________________________________. This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/252:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/252,1,['failure'],['failures']
Availability,"This PR address the problem of the uses of atoi and atof in the parse methods. . In short, ; using atof/i is flawned because:; - it does not check that the attribute is successfully parsed by atoi/atof resulting in undefined behavior when user input is invalid. ; - the components that use them also forgot to set the Local to ""C"" resulting in wrong parsing of 0.1 vs 0,1 (reported in issue https://github.com/sofa-framework/sofa/issues/151); - a failure during the parsing of the attribute does not generate a message to the user when something is wrong. . This PR add getAttributeAsFloat and getAttributeAsInt to be used in place of atof(attr->getAttribute()).; The getAttributeAs* method set the correct Local as well as generates error messages in case they are unable to parse the attribute. The PR contains new tests for the two added functions as well as a more general test in MechanicalObject.; This PR shouldn't break any API or scene or whatever. <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/161:447,failure,failure,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/161,3,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,"This PR adds 2 generic tests for mappings:. - It tests `applyDJT` in two different contexts to cover both situtations; - It tests `buildGeometricStiffnessMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897:707,failure,failures,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897,2,['failure'],['failures']
Availability,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2169:661,failure,failures,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169,2,['failure'],['failures']
Availability,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4290:1170,failure,failures,1170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290,2,['failure'],['failures']
Availability,"This PR adds a RGBAColor type in defaulttype as well as dedicated tests. . There is several advantage of doing so:; - no ambiguity in the code between a rgba color and vector4.; - the code needed to build colors from their name, hexadecimal or list of float is factored in this class (while currently there is at least 8 duplications in the sofa code base); - unifying the underlying data also offer the possibility to offer consistent user interface for colors . This PR will be the ground to solve issue #https://github.com/sofa-framework/sofa/issues/64. . This PR have no impact on the sofa source code. Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/119:718,failure,failure,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/119,1,['failure'],['failure']
Availability,"This PR adds a `isFile` function to the FileSystem component. The PluginManager will then use this new function to test whether or not the plugin path is an existent file. @guparan Concerning your question last week (what happens if the name of the plugin is passed without a path), the previous behavior was to check if the file was a valid library file (.so, etc.), and then gather the full path from the search directories. The new behavior will first check that the file is a valid file (which won't be if only the name is passed), and then try to find it in the search directories. This should not break any old behaviors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/621:884,failure,failures,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/621,2,['failure'],['failures']
Availability,"This PR adds a base test for the MeshSTLLoader component, based on similar tests for the OBJ and VTK loaders. It loads and checks the composition of the 3 .stl meshes available in share/meshes. Fix #2899; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2999:167,avail,available,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2999,3,"['avail', 'failure']","['available', 'failures']"
Availability,"This PR adds a callback in OglModel, to update the current visual (triggering a call to `initVisual()`), whenever the `m_positions` field is changed dynamically. The first interest of this PR is to add the possibility to change dynamically the underlying mesh of the OglModel (typically with a controller), and see the corresponding changes.; The context I'm using this feature is in a scene where I have several mesh files representing the same mesh moving along time. Loading these meshes sequentially along time, using a python controller, is equivalent to impose a displacement to the underlying mesh during the simulation. But visualising this movement requires this additional callback.; Unfortunately I can't share the data I'm referring to, and I don't have an example as striking at my disposal. There are two questions I'd like to discuss:; - Is this callback likely to cause some trouble in existing scenes ?; - Is this behaviour generally desirable ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925:1508,failure,failures,1508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925,2,['failure'],['failures']
Availability,This PR adds a few boolean Data parameters for the user to have ore control when using the component:; - stopAtNodeToParse: to avoid considering children nodes of the node to be parsed.; - skipJ1tKJ1: to avoid computing the contribution of the first object (useful when several MMMappers are used and you want to avoid to compute several time the same contribution); - skipJ2tKJ2: to avoid computing the contribution of the 2nd object. It adds also a few templates and corrects a bug (mat12.matrix->add instead of mat22.matrix->add). Enjoy!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/882:798,failure,failures,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/882,2,['failure'],['failures']
Availability,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1832:982,failure,failures,982,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832,2,['failure'],['failures']
Availability,"This PR adds an attribute pathType (m_pathType) in DataFileName and DataFileNameVector to be able to easily identify whether a component holding a DataFileName accepts files, directories or both. This is useful to provide custom fileDialogs in user interfaces such as runSofa2, give more information about the type of values a dataFileName takes, and provide better error messages. To use it: in the ctor of the component, on a DataFileName datafield, call setPathType(<PathType>) (<PathType> being an enum value of either FILE, DIRECTORY or BOTH. Default value is FILE). The PathType of a DataFileName can be queried by calling getPathType(). In addition, checks are made within the updatePath() method of DataFileName, called when the value changes, to guarantee that the value set is consistent with the defined path type. Since the default pathtype is set to FILE, there are only few components that are directly affected by the pull request (AddResourceRepository is one of them (takes only directories), MeshExporters have a DataFileNameVector which can accept both directories and files. Those 2 components had to be modified to behave properly, and I've been able to identify them thanks to the existing unit tests & scene tests that we compile on the CI. There's no guarantee that there isn't any untested component that should be updated too, but the fix is easy (setPathType(WHATEVER) in the ctor of the component). Same goes for pluginized components of course. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1407:366,error,error,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1407,3,"['error', 'failure']","['error', 'failures']"
Availability,"This PR adds custom RPATH to handle dependencies to relocatable targets that will be installed in the ""plugins"" directory. 3 cases are handled:; - A non-relocatable library depends on a relocatable library; - A relocatable library depends on a relocatable library; - A relocatable library depends on a non-relocatable library. WARNING: note that this is a hacky fix based on the hacky RELOCATABLE ""feature"". ; TODO: rework the CMake files to replace the relocatable mechanism by something more standard. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1619:1048,failure,failures,1048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1619,2,['failure'],['failures']
Availability,"This PR adds finally hyperelasticity code in SOFA! ; Related to issue : https://github.com/sofa-framework/sofa/issues/231. Based on the work of @hdeling with @IPeterlik six new hyperelastic models (linearized or non-linear constitutive law) can now be used:; - ArrudaBoyce; - StVenant; - Mooney-Rivlin; - VerondaWestman; - Costa; - Ogden. Note that a validation of such models was done in this [paper](https://hal.inria.fr/hal-01536406/).; More about this can be found on the[ SOFA website](https://www.sofa-framework.org/about/news/validation-of-a-non-linear-model-of-the-liver/). TODO next : ; - improve how parameters are given, stored; - allow for non-homogeneous model (definition per tetra); - add associated test. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/349:977,failure,failures,977,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/349,2,['failure'],['failures']
Availability,"This PR adds several bindings to the SOFA python's plugin that we recently needed for a project. - GUIManager: set prefix, config and screenshot directories; - RegularGrid: get the position of a given node index; - SparseGrid:; get the cube and node index in the underneath regular grid; get the position of a given node index; get the boundary cells and nodes; find the cube that enclose a given position; get the nodes indices of a given cube; - Simulation: init and unload a simulation node. Export a scene.; - SofaModule: add plugin repositories, create and set the simulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990:838,failure,failures,838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990,2,['failure'],['failures']
Availability,This PR adds some read/write access method for Data which can shorten slightly the syntax ; required when you want to construct a Read(Write)Accessor object for a Data. ; It extends the method implemented in commit 77ca6f2a7c2cf18a39cdad6a4a88f02ed6d9a9dd; for WriteOnlyAccessor to other types of Data Accessor.; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/450:571,failure,failures,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/450,2,['failure'],['failures']
Availability,"This PR adds the ability to autoload plugins, i.e without the need to add ""RequiredPlugin"" in each scene file.; This is especially useful for ""essential"" plugins such as SofaPython.; For now, only SofaPython is marked as ""Autoloadable"". An other future PR will activate CImgPlugin to add image loading (and remove ImagePNG/ImageBMP from SofaKernel). ""Main"" programs just needs to add the line : ; `sofa::helper::system::PluginManager::getInstance().autoloadPlugins();`. Important Changes:; * autoload API in Plugin ""interface""; * remove hard loading of SofaPython in runSofa; * add a new commandline in runSofa to disable autoloading of plugins (enable by default); * add a test; * (not really related to the PR but could be useful) add an helper function to check if a file is a symbolic link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253:1025,failure,failures,1025,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253,1,['failure'],['failures']
Availability,"This PR adds the cmake option ""NINJA_BUILD_POOL_FLEXIBLE"" which limits the number of CPU cores used to build the Flexible target (default value: 1). Can be easily replicated to other projects as needed. ; This is only effective when using Ninja.; This will make possible to optimize the number of build threads without hitting the RAM limit on CI, but also on workstations.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/254:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/254,1,['failure'],['failures']
Availability,"This PR adds the possibility to add bloc matrices in a basematrix. By default this function calls the add function with a scalar but it can also be overlaoaded to reduce the number of virtual function calls. . With the combination of 1x1, 2x2 and 3x3 matrices, it covers most of needs for simulations (the other matrix dimension can be implemented as a combination of the implemented functions). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1143:652,failure,failures,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1143,2,['failure'],['failures']
Availability,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1733:651,failure,failures,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733,2,['failure'],['failures']
Availability,"This PR aims at cleaning and improving the response method available in SOFA.; Here are the changes on the user standpoint:. - default :arrow_right: PenalityContactForceField; - FrictionContact :arrow_right: FrictionContactConstraint; - ray :arrow_right: RayContact; - registration :arrow_right: RegistrationContactForceField; - stick :arrow_right: StickContactForceField; - StickContactConstraint (remains unchanged); - distanceLMConstraint (remains unchanged). Personally, I love it :heart: . - Fix #1966; - NOTE: a documentation page should soon join the PR if it pleases the reviewers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2522:59,avail,available,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2522,3,"['avail', 'failure']","['available', 'failures']"
Availability,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4574:1166,failure,failures,1166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574,2,['failure'],['failures']
Availability,"This PR aims to improve the way we search and load plugins. It adds:; - recursive search in PluginManager::findPlugin; - finding plugin dependencies in its directory (Windows only); - (SofaPython) function to easily edit sys.path at any plugin init; - ~~new Data in RequiredPlugin to find out-of-sofa plugins: `searchPath`~~; - new component AddPluginRepository for adding a path to the pool of plugin paths; - ~~**BREAKING**~~: rename AddResourceRepository into AddDataRepository (alias added for backward compat); - new default plugins folder in build/install to allow drag&drop. The last one shall be discussed, I'm not sure it is really needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:905,failure,failures,905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,2,['failure'],['failures']
Availability,"This PR allows to add aliases in C++ in DisplayFlags.; Moreover, DisplayFlags are now case insensitive but a warning is given.; The DisplayFlagsDataWidget is now fixed to correspond to the FlagTreeItem names. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/671:465,failure,failures,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/671,2,['failure'],['failures']
Availability,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1861:754,failure,failures,754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861,2,['failure'],['failures']
Availability,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4445:1096,failure,failures,1096,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445,2,['failure'],['failures']
Availability,"This PR change the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::Vec<Type> can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) need to be updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/328:960,failure,failures,960,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/328,2,['failure'],['failures']
Availability,"This PR changes the API of the Event class slightly so that there's no need to instantiate an Event to get its classname.; The getClassName method that was previously implemented by each of Event's subclasses is moved in the SOFA_EVENT_H macro, and a static GetClassName method becomes the one to override. This is important as Events do not have a default ctor and it is thus impossible to instantiate a dummy event to check its type without knowing the signature of the subclass's ctor. This allows me to implement better and cleaner bindings for events in SofaPython3. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1118:828,failure,failures,828,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1118,2,['failure'],['failures']
Availability,"This PR changes the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::fixed_array (and so helper::Vec<Type>) can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) is updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330:982,failure,failures,982,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330,2,['failure'],['failures']
Availability,"This PR completes #1619 by adding a recursive dependency search.; RPATH should now cover ALL dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1710:651,failure,failures,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1710,2,['failure'],['failures']
Availability,This PR contains a set of small changes on SofaPython that we are using in our projects. . CHANGELOG:; - [SofaHelper] add StringUtils::getStringCopy (because it was duplicated in several place of the plugin); - [SofaPython] add systematically sys.argv in PythonEnvironment; - [SofaPython] add a very general getattr function in Binding_Node (to write node1.node2.node3.obj.data); - [SofaPython] add a getTarget in BaseObject (to return the plugins that contains a component); - [SofaPython] add a getComponentsFromTarget in the Sofa module ; - [SofaPython] add some minor function in Binding_Data; - [SofaPython] add docstring support for the Sofa module; - [SofaPython] change Binding_BaseContext.getObject to return None instead of a broken exception . There is tests for all features. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656:1044,failure,failures,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656,2,['failure'],['failures']
Availability,"This PR contains all the changes I did to produce SOFA releases.; Basically it is almost only CMake improvements to ease SOFA installation. Some of them may not be clean/wanted/useful, **please give feedback**. WARNING: I renamed some macros in SofaMacros.cmake so this could break your code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/635:549,failure,failures,549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/635,2,['failure'],['failures']
Availability,This PR contains needed SOFA modifications for regression tests reactivation:; - Remove SofaTest_test/Regression_test (moved to https://github.com/sofa-framework/regression) and SofaVerification; - FIX DataRepository init: always load sofa.ini at construction; - FIX SofaGTestMain for out-of-sofa use; - ADD `FileSystem::findFiles` for recursive search; - FIX some scenes; - ADD `RegressionStateScenes.regression-tests` and `RegressionTopologyScenes.regression-tests` for listing tested scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830,2,['failure'],['failures']
Availability,"This PR contains small changes to runSofa. . One is to save & restore the scenegraph state in the live-coding mode. This fix avoid to constantly have to expand/collapse things to restore the view in a manageable state when we reload. . The second change is to fix a problem. When Data fields that belong in the ""Infos"" results in having to ""Infos"" panel in the object inspector. So this PR add the Data fields which are in the Info groups to the existing ""Infos"" panel instead of creating a second one with the same name. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/657:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/657,2,['failure'],['failures']
Availability,This PR contains some minor fixes and adds two new components named: UniformStiff & DiagonalStiffness. Checklist: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [x] is now 1 week old and no one send a 'no go' comment.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/147:202,failure,failure,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/147,1,['failure'],['failure']
Availability,"This PR contains the code required to retrieve a component's bounding box in Python, and to manually call for a BaseObject's computeBBox method. This was necessary in my case to create a RegularGrid from a mesh, since contrary to the sparseGrid, the regularGrid does not look at the node's MechanicalObject to create the grid.; An example scene in this PR shows my specific use case. Concerning the bindings, I made the BoundingBox's minBBox and maxBBox read only since this should be computed by the component, and not set externally IMHO. Could be useful to bind the different methods of BoundingBox too, but this is not covered in this PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/736:899,failure,failures,899,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/736,2,['failure'],['failures']
Availability,"This PR depends on #2374 #2375 and #2376 and should be rebased before review. - Remove old method ```handleTopologyChange```; - Turn d_indices into TopologySubsetIndices, this automatically fix the topological changes update. ; - Fix the use of subset indices combined with topology changes.; - Add callback on endingEvent to update the totalMass/vertexMass; - Fix the center of gravity display when using subset of indices. Here is an example of scenes RemovingTrianglesProcess.scn using a subset of indices (yellow points); ```<UniformMass template=""Vec3d,double"" name=""mass"" totalMass=""1.0"" handleTopologicalChanges=""1"" indices=""0 1 2 3 4 5 6 7 8 9""/>```. ![RemovingTrianglesProcess_00000001](https://user-images.githubusercontent.com/21199245/135688953-b9a8d6fa-eafc-499e-916d-8e209b227736.png). ![RemovingTrianglesProcess_00000002](https://user-images.githubusercontent.com/21199245/135688979-3e678cc4-a95b-4ff8-b685-688e761d0640.png). ______________________________; ________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2377:1487,failure,failures,1487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2377,2,['failure'],['failures']
Availability,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2300:1393,failure,failures,1393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300,2,['failure'],['failures']
Availability,This PR depends on the #1186 . Move code of ParticleSource into inl file and clean it: ; - change Data and member prefix; - remove old code and hacks; - update the scene examples. ![SPHParticleSource_00000001](https://user-images.githubusercontent.com/21199245/67021784-6f3be100-f100-11e9-89e6-98ddfd6d6393.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1190:569,failure,failures,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1190,2,['failure'],['failures']
Availability,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4327:1016,failure,failures,1016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327,2,['failure'],['failures']
Availability,"This PR diffs against the sofa-framework::issofa_constrainsolving branch until it has been merged into master. # Objectives; - Adjust FreeMotionAnimationLoop so that it is more faithful to the actual equations, most notably by ; allowing only one linearisation of the mappings within the time step. ; - Update the API in order to compute a linearised version of the constraint forces, in a similar fashion to ; what is done in the Compliant plugin. . # Requirements ; The following PR are required in order to build this ; - #484 ✔️; - #450 ✔️ ; - #452 ✔️ ; - #456 ✔️ . For testing: ; - `SOFA_USE_MASK` **must** be deactivated, otherwise derivatives quantities ( velocity at contact points for example) are not propagated at all since all dofs are ""masked"" by default. After having a rather quick look, apparently the `SOFA_USE_MASK` impose some strict (undocumented) requirements (on top of other limitations like the fact that it does not support changes in the topology) about where in the time step the ""apply"" method of mappings is called. - There is a branch on my local fork that integrates all the requirements for testing that can be found at the following location [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration). # Changelog; API Breaking. [SofaCore]; - `ConstraintSolver` can now define the VecId where the constraint lambdas and constraint correction are stored. Previously, these were fixed locations, usually VecId::externalForce() and VecId::dx(), but it could vary depending on the implementation of both the ConstraintSolver and the ConstraintCorrection API. Components can retrieve these locations when inspecting their ConstraintParams object which is usually a parameter of the API methods for constraint solving.; - `ConstraintParams` contains the `MultiMatrixDerivId` that can be used by components related to the `ConstraintSolver` to retrieve the location of the constraint jacobian.; - `ConstraintResolution` API ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:749,mask,masked,749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['mask'],['masked']
Availability,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2290:746,failure,failures,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290,2,['failure'],['failures']
Availability,"This PR disables all freshly pluginized modules by default except for SofaMiscCollision because it contains DefaultCollisionGroupManager. It also disables PSL by default.; Tell me if these default plugins should actually be kept. To continue testing as before (and to keep our scene tests working) I manually enable all these plugins in CI at configuration step. This will fix some failing scene tests due to missing dependency (RequiredPlugin).; Actually, the scenes with missing dependencies due to disabled plugin (plugin library not found in `bin`) should not even be tested. Some scenes like `Fluid2D.scn` and `Fluid3D.scn` could even be moved to an examples folder in `plugins/SofaEulerianFluid`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575:959,failure,failures,959,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575,2,['failure'],['failures']
Availability,"This PR does what I want it to do:; - when changing a MeshLoader's filename, all buffers are properly reset in the OglModel.; - When changing the edges / triangles / position fields of the oglModel, all buffers are properly reset. Yet I don't know if I'm doing this right. @fredroy especially, I think you might have some objections with the code.; Lemme know!. (this PR follows up on #1423). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1483:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1483,2,['failure'],['failures']
Availability,"This PR factorizes the code of PartialFixedConstraint by inheriting for most functions (init, draw) from the FixedConstraint; FIX #440 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/718:393,failure,failures,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/718,2,['failure'],['failures']
Availability,"This PR fix UI problem:; - the icon now display the correct icon (green for info message, yellow for warning and red for error) instead of a red sign all the time; - the icon was displayed at scene loading but not updated. This happens when using controllers that emits messages at simulation time. The result was that the treeview was out-of-date misleading the users. Using the feature introduced in #2397, the state is now tracked to correctly report the message status with it is changed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398:121,error,error,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398,3,"['error', 'failure']","['error', 'failures']"
Availability,This PR fix an issue with sofa-launcher. When we are using sofa-launcher the scene we want to execute is copied in the /tmp directory. ; But because we weren't closing the current file it wasn't saved and so wasn't executed. . The fix close it.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/592:502,failure,failures,502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/592,2,['failure'],['failures']
Availability,This PR fix an issue with the BoxROI component. There was a test in the constructor of BoxROI that created an unwanted behavior.; This test was moved in reinit(); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/627:419,failure,failures,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/627,2,['failure'],['failures']
Availability,"This PR fix an issue with the WriteState component. When we are using WriteState, we indicate as an argument the period with which we want to save the states. The states will be then saved in a file when a modulo of the period is reached.; But I have observed that there is always a one step offset between reaching the time to save and the actual saving. So I naively add one dt to the time WriteState is working with. . If there is an other way to resolve this issue without hard-coding in WriteState like I have done, I will be happy implement it . Thanks in advance; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625:827,failure,failures,827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625,2,['failure'],['failures']
Availability,"This PR fix the opengl performance issue reported in #https://github.com/sofa-framework/sofa/issues/1070. The fix is in OglModel.cpp/OglModel.h and is very simple, when the positions and normals array are containg double precision numbers they are converted into single precision one before sending the data to OpenGL. I'm sure we can optimize further the conversion loop...but I have not time for that (volunteer needed). . Because the code in OglModel was hard to read because of the #ifdef GLEW all around I first cleaned the whole SofaOpenglVisual code, by removing the #ifdef. I also updated the call to function with name *ARB because they are now part of any baseline opengl implementation since nearly a decade. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069:978,failure,failures,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069,2,['failure'],['failures']
Availability,This PR fixes ShewchukPCGLinearSolver member `preconditioners` initialization.; Should fix the failing scene test `FEMBAR-PCGLinearSolver.scn`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/737:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/737,2,['failure'],['failures']
Availability,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2265:654,failure,failures,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265,2,['failure'],['failures']
Availability,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4272:1188,failure,failures,1188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272,2,['failure'],['failures']
Availability,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4273:242,avail,available,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273,3,"['avail', 'failure']","['available', 'failures']"
Availability,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1813:968,failure,failures,968,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813,2,['failure'],['failures']
Availability,This PR fixes errors like `[FileRepository] File icons/back.png NOT FOUND` reported recently. These errors were caused by the fact that SofaGuiQt and runSofa had no idea were to find their resources (if not installed).; Adding and configuring some .ini files will fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/758:14,error,errors,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/758,4,"['error', 'failure']","['errors', 'failures']"
Availability,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2170:14,error,errors,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170,3,"['error', 'failure']","['errors', 'failures']"
Availability,"This PR fixes exception handling in Python bindings. Mostly, the PR replaces the incorrect:; ```c++; PyErr_BadArgument();; Py_RETURN_NONE;; ```; with the correct:; ```c++; PyErr_BadArgument();; return NULL;; ```. As the [Python API](https://docs.python.org/2/c-api/exceptions.html) documentation says: . > [Python exception handling] works somewhat like the Unix errno variable: there is a global indicator (per thread) of the last error that occurred. Most functions don’t clear this on success, but will set it to indicate the cause of the error on failure.; > ; > **Most functions also return an error indicator, usually NULL if they are supposed to return a pointer, or -1 if they return an integer (exception: the PyArg_*() functions return 1 for success and 0 for failure).**. As it happened, any error triggered within the python bindings would go unnoticed until someone else would check the error flag using `PyErr_Occurred`, possibly during a python code error or by some other C extension (in my case, Numpy). . Hopefully the behaviour is now correct. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] the content of the PR is clear and that a future PR from @maxime-tournier may follow the @matthieu-nesme suggestion. ; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156:432,error,error,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156,9,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,This PR fixes install finding of Boost::program_options dependency added for the new ArgumentParser API in #513 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/618:370,failure,failures,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/618,2,['failure'],['failures']
Availability,"This PR fixes missing default ""plugins"" (now modules) after https://github.com/sofa-framework/sofa/pull/732. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/753:365,failure,failures,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/753,2,['failure'],['failures']
Availability,"This PR fixes most of the warnings which are not related to the lifecycle (on Ubuntu).; Summer cleaning :shower: . I did not put it as fast merge regarding the test on intersection @fredroy ; Once your reviewed this part, we could flag it :flags: . :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4909:809,failure,failures,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4909,2,['failure'],['failures']
Availability,"This PR fixes quaternion integration so that a 1 rad.s^{-1} angular velocity integrated during 1 second results in a 1 rad angle change, as one generally expects. The original quaternion integration scheme is a [gnomonic projection](https://en.wikipedia.org/wiki/Gnomonic_projection) on the 3-sphere (or equivalently, a variant of the Cayley transform) that prevents the maximum angular change to exceed *pi* rad during one time-step, which is problematic as angular velocities get larger. Also, the angular velocity does not integrate to the corresponding rotation angle using this chart, as demonstrated in the failing test. This PR implements the [exponential map](https://en.wikipedia.org/wiki/Exponential_map_(Riemannian_geometry)) for unit quaternion integration given spatial angular velocity, which fixes both issues. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/172:1056,failure,failures,1056,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/172,1,['failure'],['failures']
Availability,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1815:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815,2,['failure'],['failures']
Availability,"This PR fixes the `init()` of RigidRigidMapping when using `globalToLocalCoords=True` (your positions are initially expressed wrt the global frame) with `repartition` (your child's positions are mapped to the parent's positions using this description). . When we look at the code, we can see that someone already fixed the `init()` but only for one of three cases. ; This PR fixes the two forgotten cases. . **EDIT**. This PR:. RigidMapping:; - adds template <Rigid3,Rigid3> with tests ; - this change required some updates/additions in RigidCoord and RigidDeriv; - cleans variables name (d_, m_), which is **breaking** . RigidRigidMapping:; - sets the component as deprecated (with instruction to fix the scene) ; - fixes `init()` when using `globalToLocalCoords=True` with `repartition` ; - adds tests; - cleans variables name (d_, m_), which is **breaking**; - adds vectors' size checks; - adds component state checks; - removes ""fake"" vectors' size checks: if the sizes mismatch it should be detected during the initialization and the component should be in an invalid state. If the sizes change during execution, it is not enough to just check the size, the component should be in an invalid state because it impacts many other things... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680:1789,failure,failures,1789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680,2,['failure'],['failures']
Availability,This PR fixes the compilation of CGAL plugin with CGAL version greater than 4.10. It also enables back the CylinderMesh component for which I'm not sure why it was removed in the first place as it seems to work perfectly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/783:478,failure,failures,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/783,2,['failure'],['failures']
Availability,This PR follows #1272 to fix a link error on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1282:36,error,error,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1282,3,"['error', 'failure']","['error', 'failures']"
Availability,"This PR follows @marques-bruno work on https://github.com/sofa-framework/sofa/pull/909. - add INCLUDE_SOURCE_DIR parameter to sofa_generate_package; - rename INCLUDE_ROOT_DIR to INCLUDE_INSTALL_DIR (avoid confusion with INCLUDE_SOURCE_DIR). The idea is to permit this:; ```; sofa_generate_package(; NAME SofaSparseSolver ; VERSION ${PROJECT_VERSION} ; TARGETS SofaSparseSolver; INCLUDE_SOURCE_DIR ""src/SofaSparseSolver""; INCLUDE_INSTALL_DIR ""SofaSparseSolver/SofaSparseSolver""; ); ```; to obtain for example an install tree like this; ```; install; include <-- include_directories here exposes ALL module headers; SofaBaseTopology; header.h; SofaSparseSolver <-- include_directories here exposes ONLY SofaSparseSolver headers; SofaSparseSolver; header.h; SofaValidation; header.h; ...; ```; which is needed if we want to cleanly separate SOFA include directories. In a future PR I'd like to rework all SOFA install tree based on this INCLUDE_SOURCE_DIR + INCLUDE_INSTALL_DIR mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/951:1242,failure,failures,1242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/951,2,['failure'],['failures']
Availability,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1880:749,failure,failures,749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880,2,['failure'],['failures']
Availability,"This PR gives the ability to exchange images between different threads in the MultiThreading plugin. It would be especially usefull for multithreading a camera grabber component and other components (for instance computer vision algorithms). In more details: ; - It consists in adding, in the DataExchange component, exchanges of image data types (ImageUC, ImageUS, ImageF). It involves a depedency with the image plugin, handled in the CMakeLists through a preprocessor directive (WITH_IMAGE) defined in config.h.in.; - A simple example passing an image loaded from an ImageContainer component (thread 1) to an ImageViewer component (thread 2), to display the image in the GUI, is added.; - An issue with OpenGL in the draw() function in the Kinect component in the image plugin has also been fixed, by using the SOFA_NO_OPENGL directive (in the CMakeLists and in Kinect.h). Indeed, with the lib FREENECT detected, the OpenGL functions in draw() may not be compiled given the OpenGL support of SOFA. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:1259,failure,failures,1259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,2,['failure'],['failures']
Availability,"This PR hopes to solve the bug where radius option can't be used with AttachConstraint. Provided scenario will crash SOFA.; [attach_radius.txt](https://github.com/sofa-framework/sofa/files/1973782/attach_radius.txt) (Github don't let me give `*.scn` ...). This is due to a call done to early. First commit solve this specific issue.; However, if you execute the previous scenario with just the first commit, it will still not work correctly : both index 0 points will be attached to each other, and that's it. The reason is that the mechanical objects are not correctly initialized when AttachConstraint `init()` is called. Commit 2 is a hack to show how it behave if we delay the initialisation. This does not aim to stay (and likely breaks working scenarios). Is there a way to delay said initialisation ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/650:1065,failure,failures,1065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/650,2,['failure'],['failures']
Availability,"This PR improves the `sofa_add_external_*` macros used for example by SofaHighOrder. It changes `sofa_add_external_subdirectory` behavior: instead of directly fetching/cloning the repository, it creates a CMake option which, if checked, will do the fetch (and be automatically reset to OFF aftewards). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/759:558,failure,failures,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/759,2,['failure'],['failures']
Availability,"This PR improves the message about missing required plugins for python users. Before it was printing lines to cut and paste in the scene (which is really nice!), but only for xml users. Now I propose to check the scene's extension and adapt the message. Here's an example for python:. ![image](https://user-images.githubusercontent.com/12150715/173034896-f7547d53-6a99-475a-892f-b481709ed0c4.png); . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033:944,failure,failures,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033,2,['failure'],['failures']
Availability,This PR include PR #1508 and replace last use of Qwt in QGraphDataWidget by qtCharts; Remove all cmake config of Qwt and remove the internal library. should fix #1496 or make things worst!. ![graph_cg](https://user-images.githubusercontent.com/21199245/94787278-63f5ca00-03d2-11eb-8fca-80bfcd40ba29.JPG); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1512:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1512,2,['failure'],['failures']
Availability,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2085:878,failure,failures,878,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085,2,['failure'],['failures']
Availability,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2086:731,failure,failures,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086,2,['failure'],['failures']
Availability,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1860:62,down,down,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860,3,"['down', 'failure']","['down', 'failures']"
Availability,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2162:913,failure,failures,913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162,2,['failure'],['failures']
Availability,"This PR introduces CMake configurations for SOFA activating and deactivating sub-parts of the project given the SOFA_CONFIGURATION string : CORE/STANDARD/FULL. . The configuration can be forced using `SOFA_FORCE_CONFIGURATION` otherwise the configuration can still be tweaked using CMake option command line. . To apply those configuration I've made two main modification depending on what needed to be activated :; - For options : I've added a CMake macro `sofa_configuration_dependent_option` that allows to specify the scope of the option and force it when needed.; - For plugins : I've modified the sofa_add_subdirectory adding the possibility to specify a `CONFIGURATION` type enabling or disabling the plugin by default depending on the config type and forcing the activation when needed. These configurations have been defined regarding the last STC discussion. . PS: This PR also enables to build Sofa.GUI without Qt. ; PPS: This PR also deactivates the legacy headers by default now; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:1537,failure,failures,1537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,2,['failure'],['failures']
Availability,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4268:1541,failure,failures,1541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268,2,['failure'],['failures']
Availability,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4580:1508,failure,failures,1508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580,2,['failure'],['failures']
Availability,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4219:904,failure,failures,904,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219,2,['failure'],['failures']
Availability,This PR is Based on #1004 . CHANGELOG:; - Cosmetic cleaning in RigidRigidMapping & replace serr with msg_error. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1005:370,failure,failures,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1005,2,['failure'],['failures']
Availability,"This PR is a ""all-in-one"" fix that correct all the failing test taggued ""OpenIssue"". ; To fix the issues some changes have been done but it shouldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:528,error,errors,528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,2,['error'],['errors']
Availability,This PR is a cherry pick of the changes proposed in PR #869 . Here is the initial description of the PR by @fspadoni . ---------. When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1447:1338,failure,failures,1338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1447,2,['failure'],['failures']
Availability,"This PR is a clean before introducing more work on the GeomagicDriver and a GeomagicEmulator. - Move all code related to model display from GeomagicDriver to an embedded class GeomagicVisualModel. This last class is not a component but it creates the node hierarchy to display the device.; - Various minor changes in Driver like adding a singleLink to the Forcefeedback. If needed this work would allow to use GeomagicDriver without linking to SofaOpenglVisual nor SofaLoader. (With a few changes in the cmakelists and in code). ![geomagic_demo](https://user-images.githubusercontent.com/21199245/81161088-4e978380-8f8b-11ea-9f59-bad683bc014d.JPG). - Even if this display is only for debug, my eyes were bleeding too much to let that.; Update the mesh to have cleaner normals/vertices. New mesh display:. ![Geomagic-RigidCubes_00000003](https://user-images.githubusercontent.com/21199245/81160922-06786100-8f8b-11ea-91f8-59fd904c8c2f.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1366:1196,failure,failures,1196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1366,2,['failure'],['failures']
Availability,This PR is a follow up #548 ; My last batch of changes to fix the CI. Please review :) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565,2,['failure'],['failures']
Availability,"This PR is a merge with #4802. ![](https://private-user-images.githubusercontent.com/30337881/337613447-0367e8be-aebb-4349-9b01-dc7f4e73ac2a.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTkzOTE1ODAsIm5iZiI6MTcxOTM5MTI4MCwicGF0aCI6Ii8zMDMzNzg4MS8zMzc2MTM0NDctMDM2N2U4YmUtYWViYi00MzQ5LTliMDEtZGM3ZjRlNzNhYzJhLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA2MjYlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNjI2VDA4NDEyMFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIyN2QwNDYxMGJiM2ZkN2IwZDk1NTExNDlkOGM5NGQ5MDBhMTE2NzJiNzVlNGQ4YTZkZmUzMzg3Y2JlNjc1ZjImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.tWIepU9BfDMpqQKGDy0qE8Y1rGyyX2betzD6udxDwik). - New Changelog; - Update CMake version ; - Fix Changelog with closed PR. close #4770; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4787:1487,failure,failures,1487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4787,2,['failure'],['failures']
Availability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to Issue https://github.com/sofa-framework/sofa/issues/94). The reason is that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure. In case I'm wrong please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. Concretely by this PR:; - The class TestMessageHandler is removed; - Handler needed by ExpectMessage & MessageAsTestFailure are now installed by default for tests ( Issue https://github.com/sofa-framework/sofa/issues/94); - The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure.; - A bug in LoggingMessageHandler.h has also been corrected. Examples of use of the ExpectMessage & MessageAsTestFailure classes... To generate a test failure when an expected message have not been emitted you have to do; ```cpp; {; ExpectMessage raii(Message::Error);; ... do something that must emit a message ...; }; ```; To generate a test failure when a un-expected message have been emitted you have to do; ```cpp; {; 	MessageAsTestFailure raii(Message::Error);; ... do something that must not emit an error message ...; }; ```. The raii can be combined in the following way:; ```cpp; {; 	ExpectMessage warning(Message::Info);; 	MessageAsTestFailure raii(Message::Error);; 	MessageAsTestFailure raii(Message::Warning);; 	...; }; ```. Any suggestion on this API is more than welcome. . TODO:; 	It would be nice to be able to write; ExpectMessage warning(Message::Info & Message::Warning);,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/96:952,failure,failure,952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/96,6,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"This PR is a step-by-step version of the experiment done in https://github.com/sofa-framework/sofa/pull/1552. Currently this PR shouldn't breaking too much, the CI will tells us. Two test are failing...but this is on purpose to keep a track the breaking parts. ; The failure results from the unification of the naming schemes. ; Fixing the tests is easy, just replace the old string with the new one (int->i).; Nevertheless I suggest to fix that when whole refactoring will be over. Compared to #1552 ; - In this PR I'm re-organizing the existing Sofa code without touching its logic. The files in typeinfo/models/* are cut & past from DataTypeInfo.h. The files in typeinfo/TypeInfo_XXX.h are the DataTypeInfo<> specialization that also come from DataTypeInfo.h; - Some breaking changed are introduced to unify the naming scheme. The 'short' naming scheme is following the standard for python.array and was very close to what we already have in Sofa. . - In this PR I don't use at all the TypeInfoRegistry (expect in the test part), this is on purpose so a future PR will be able to emphasize the change on the Sofa code base (in Data.h). ; - In this PR I don't register typeinfo the registry (because it is not used yet), but I added the 'empty' files for that...it is in typeinfo/TypeInfo_xxxxx.cpp ; ; What will be done in a future PR:; - 1. fill the registry with types we are using and replace the use of VirtualTypeInfo<T>::get() in Data.h by TypeInfoRegistry::Get(T).; - 2. remove step by step the static type info and there related #includes files. ; - 3. rename all the method/enum in the static & dynamic system to unify with official naming convention. ; a. static function must start with an UpperCase; b. function returning boolean must start with a verb like IsValidTypeInfo() instead of ValidTypeInfo() ; c. add a getName()/GetName() to replace name().; - 4. replace the enum involved in the static type info system with constexpr. . EDIT: To satisfy popular demand here is more or less",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605:267,failure,failure,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605,1,['failure'],['failure']
Availability,This PR is an attempt to solve the problem pointed in Issue #193 . Problem summary: ; Currently in runSofa when reloading the scene only the ScriptController's are reloaded but not the python code imported by the controllers. . This PR:; solve the issue which avoid to restart runSofa each time an imported module used by a ScriptController is changed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198:585,failure,failures,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198,1,['failure'],['failures']
Availability,"This PR is based on #1406 and #1407 and uses the callback mechanism on some SOFA components (mainly Mesh loaders); It also takes advantage of the newly added ""isDirectory"" method in DataFileName in AddResourceRepository. It also:; - Removes the isPersistent flag from datafields in MeshLoaders (because this flag should only be used to set application-specific behaviors: in runSofa2, this flag is used to determine whether the datafield should be recorded when saving the scene for instance); - takes advantage of the getAccessors introduced by @damienmarchal in #1254 ; - Clears log messages from components withing update callbacks if the componentState changes to ""Valid""; - Sets the dynamic datafields created on-the-fly in the MeshVTKLoader depending on the mesh file content as outputs of the component (to guarantee they're update when the component's inputs change; - Checks for the validity of binary STL files using `isBinarySTLValid` for better error handling (see comment in the code l.103 in MeshSTLLoader.cpp); - Removes the autoLink flag from fileMesh in VisualModelImpl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408:957,error,error,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408,3,"['error', 'failure']","['error', 'failures']"
Availability,This PR is based on #853 despite there is not real connection. ; I was to lazy to swtich branch. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/862:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/862,2,['failure'],['failures']
Availability,"This PR is based on https://github.com/sofa-framework/sofa/pull/2613 and makes sense only if https://github.com/sofa-framework/sofa/pull/2613 is accepted. A macro is introduced to simplify declaration and definition of Data's. See code comments for a description of this macro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2614:822,failure,failures,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2614,2,['failure'],['failures']
Availability,This PR is basically the same as #444 but this time it is against master. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/449:330,failure,failures,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/449,2,['failure'],['failures']
Availability,"This PR is big but should finally clean all licenses in SOFA. Here is what I did:; - Fix the licenseUpdater script; - Fix wrong or missing LGPL headers in modules; - Fix wrong or missing LGPL headers in SofaKernel; **WARNING**: I found a **contaminating paste of GPL code** in LCPcalc.cpp:501 (lcp_lexicolemke function). Since I didn't found any usage of this function in SOFA (including plugins), **I removed it**. ; Please **tell me if this is OK**. Otherwise, we will have to discuss about GPL contamination.; - Fix wrong or missing GPL headers in applications/projects; - ~~Fix wrong or missing LGPL headers in applications/plugins~~ (commits removed); - ~~Fix wrong or missing GPL headers in applications/plugins: OptiTrackNatNet, SofaPML and SofaVRPNClient~~ (commits removed); - ~~Fix wrong license in SofaHAPI/initSofaHAPI:58 (should be LGPL)~~ (commits removed); - Optimize organization of LICENSE files in SOFA. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139:1096,failure,failures,1096,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139,1,['failure'],['failures']
Availability,"This PR is build on top of #1639. It contains: ; - using the SOFA_BEGIN_DEPRECATION_WARNING_AS_ERROR where is makes sense.; - warning fix for gcc. With modern g++ (after version 10.0) there is hundreds of thousand of warning generated by the use of the; ```cpp; __attribute__(visibility); # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); # define SOFA_IMPORT_DYNAMIC_LIBRARY; ```; I don't know if there is a fix but in the meantime I suggest to quite the warning system a little bit. . EDIT: well it seems I forogot to add the -Wattribute stuff in the PR and it was merge...I will change the title and make a new pr :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1643:1194,failure,failures,1194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1643,2,['failure'],['failures']
Availability,"This PR is en enhancement of the AdvancedTimer. We have added the possibility to get two different JSON ouputs. The first one represent all informations without deep limitation and the other is easier to use but does not represent all the componants tree of the simulation. You can now use the timer in C++ and in python, change dynamically the output type of each timer separately and use the output of the AdvancedTimer to create graphs and/or compare datas from two different scene timers. You can find an exemple of JSON output here : [JSON_example.txt](https://github.com/sofa-framework/sofa/files/1200444/JSON_example.txt); And an exemple of Light JSON output here : [LJSON_example.txt](https://github.com/sofa-framework/sofa/files/1200439/LJSON_example.txt). This work was done with the help of @untereiner and @chpaulus. A documentation will come at the end of my internship. suggested tag : enhancement; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360:1169,failure,failures,1169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360,2,['failure'],['failures']
Availability,"This PR is following PR #1605 in which we layed out a new organization for the sofa type system (i.e. the system that provide information about the content of Data fields). . PR #1605 should be merged so this one will have a quite small number of file changed and not 82. In the present PR we are:; - filling the TypeInfoRegistry with the type used but most of components. This is done in .cpp files ; - adding sofa/core/typeinfo/TypeInfo_ with the same organization as the one we have in SofaDefaultType; - replace the use of VirtualTypeInfo in Data.h so we are now using the new dynamic system. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1611:1143,failure,failures,1143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1611,2,['failure'],['failures']
Availability,This PR is here to support Issue #388 . This is the beginning of a work on cleaning and modularizing the; SofaVolumetricData.; The module is splitted in two Plugins.; - SofaDistanceGrid; - SofaImplicitField. A third plugin act as a transitional package SofaVolumetricData guiding; other developpers on the change they have to do in order to have their; code compiling again. CHANGELOG.txt:; - SofaVolumetricData was strongly refactored and splitted in two plugins SofaDistanceGrid and SofaImplicitField. Please report to sofa-dev any broken behavior. A transitional plugin SofaVolumetricData is provided for one year. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389:876,failure,failures,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389,2,['failure'],['failures']
Availability,"This PR is just an excuse to test latest SofaPython3 PR https://github.com/sofa-framework/SofaPython3/pull/252. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/252]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905:728,failure,failures,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905,2,['failure'],['failures']
Availability,"This PR is linked to the issue #308 .; Since the modification of MechanicalObject reinit method in PR #270 ([this commit](https://github.com/sofa-framework/sofa/pull/270/commits/b6750f06ea0c5082f8c88d5aaea6bc65d8840429) ). The mechanicalObject doesn't change the value of P0. Thus, it is not necessary anymore to shift the OglModel and the Surf mechanicalObj. Several scenes were impacted but without ground truth it is hard to say if the scene is totally fixed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/324:719,failure,failures,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/324,2,['failure'],['failures']
Availability,This PR is not supposed to be breaking but one day we will totally remove the sofa::defaulttype::RGBAColor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1463:366,failure,failures,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1463,2,['failure'],['failures']
Availability,This PR is not supposed to be merged...the idea was to show on the CI in which components there is not an even number of begin/end of accessors. But the CI is not working anymore on it and has not kept the compilation log. Now after a quick reading I see several good things in this PR:; - a new fonction in BackTrace to get the trace; - a way to systematically detect components rely on an invalid behavior in begin/end pairs. But given how many componnents have problem this is far too much error messages. ; ; Maybe we could just enable the systematic test using NDEBUG and have that merged.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834:493,error,error,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834,1,['error'],['error']
Availability,"This PR is ready but breaking, it thereore needs to stay 7 days available for remarks. Resist @epernod ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1700#issuecomment-760411732:64,avail,available,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1700#issuecomment-760411732,1,['avail'],['available']
Availability,"This PR is the continuation of the refactoring of Link. . Currently there is two static function to check path that are fully implemented in Link.h. The drawback of doing is that this requires:; - more #include are needed because of the full function definition.; - the #includes propagate in all the files that includes Link.h (so nearly everywhere); - as the function are implemented on templated classes this also cause a a lot of code generation (one for each template instance). . The new implementation move the implmentation out of the .h and put that into PathResolver.h. ; Bacward compatibility is implemented and flagged as deprecated. This PR also includes #1714 (to validate that the CheckPath features are still working as they were doing in the past).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1717:1311,failure,failures,1311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1717,2,['failure'],['failures']
Availability,"This PR is the following work on Geomagic started in PR #1366 (which is included in this one). This PR:; - Totally rewrite the GeomagicDriver init. Now, the tool is directly well placed before simulation start and doesn't need 2 or 3 simulation step to be well init.; => fix #996 . - HD (openHaptics) scheduler communication has been cleaned and fired msg_error with HD error code and description in case of problems.; => fix the possibility to handle several devices. - Clean a lot of old code not anymore used. Like the denavit matrix computation as OpenHaptics is doing it internally. ; => As a consequence, 5 or 6 Data have been removed: dh_XX; - Others changes like variable names replaced to use ""device"" or ""haptic"" instead of ""omni"". And add Doxygen documentation. - Add a component GeomagicEmulator to be able to virtually recreate device motion and interaction. See #1371; => This is almost working.. just need to do some inverse kinematics to compute the good tools transform matrix from the set of arm angles. ... I beg for help here. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1378:370,error,error,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1378,3,"['error', 'failure']","['error', 'failures']"
Availability,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2245:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245,2,['failure'],['failures']
Availability,"This PR isolates OpenGL-specific code (pickhandler, viewers, etc) of SofaGuiQt to a new library (called SofaGuiQtOpenGL), thus allowing us to implement a viewer which cannot/dont want to use OpenGL (e,g to deal with macOS in the future). . This PR prepares the ground for a SofaQt3D viewer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1121:547,failure,failures,547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1121,2,['failure'],['failures']
Availability,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1814:595,failure,failures,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814,2,['failure'],['failures']
Availability,"This PR just reorder the files inside the CMakeLists but it would be a good starting point to discuss:; - how we want to reorder files in the plugin SofaCUDA. For the moment they are all in sofa/gpu/cuda/ in a big mess.; - refresh the CMakeLists for new CUDA support. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2534:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2534,2,['failure'],['failures']
Availability,"This PR kind of fixes #316 ; Concerning Multithreading plugin, it still would be better to get rid of Boost dependency as stated by @fjourdes in #316. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/359:407,failure,failures,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/359,2,['failure'],['failures']
Availability,"This PR links PythonLibs 2.7 to SofaPython ""the proper way"":. Until now, a target was created within SofaPython, in order to expose PythonLibs' leaders & libraries to linked projects. This led to issues when trying to link an external project to SofaPython, since the targets were not properly installed (see #888). Since there's not reason to create a separated target for PythonLibs anyway, I removed it, and simply linked PythonLibs as you would do for any other lib. It should not cause any issue to plugins using SofaPython, since PythonLibs' headers / lib are exposed publicly through the SofaPython target anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/891:877,failure,failures,877,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/891,2,['failure'],['failures']
Availability,"This PR mainly changes SofaMacros.cmake to permit external (on another repository) projects/plugins to be automatically fetched, updated and added to SOFA. Important: this work will permit to include SofaQtQuick GUI as an external project :wink: . This is a modified version of @fredroy branch [setup_external_plugin](https://github.com/fredroy/sofa/tree/setup_external_plugin). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/649:635,failure,failures,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/649,2,['failure'],['failures']
Availability,"This PR makes it easier & more reliable for plugins / external projects to find paths to the ""examples/"" and the ""share/"" folders in both the build directory and install directory. The current system was filling a file (sofa.ini) for this single purpose, that GUIManager was then parsing to retrieve those paths. if another project (tests for instance) would want to retrieve those paths, they would have to first locate this sofa.ini file (which can be very tricky if not part of the SOFA project tree), parse it and add it to the DataRepository. Now, preprocessor defines holds the paths and you just have to add it to the DataRepository as such:; sofa::helper::system::DataRepository.addFirstPath(SOFA_SHARE_DIR); sofa::helper::system::DataRepository.addFirstPath(SOFA_EXAMPLES_DIR). In both cases, the paths are *absolute* which is great (and what I needed) when building an external project, but generating distributable binaries with absolute paths will not work out well...; I realise this PR is not mergeable until this issue is resolved, but don't know how to change that.; With relative paths, finding the install directory from external projects is impossible, and with absolute paths, redistribution of binaries is not feasible. . Looking fwd to your inputs!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/651:31,reliab,reliable,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/651,1,['reliab'],['reliable']
Availability,"This PR makes so that the user can activate an option to look for and use CCACHE for compilation.; If the option is activated, then CMake looks for ccache. If ccache is found, it is used for compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692:460,failure,failures,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692,2,['failure'],['failures']
Availability,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2228:709,failure,failures,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228,2,['failure'],['failures']
Availability,This PR moves required Data check from BaseObject::init() to a new SceneCheck loaded by default.; The starting problem for this work was that having the check in BaseObject::init() forces every Component that overrides init() to call the parent init(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754:509,failure,failures,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754,2,['failure'],['failures']
Availability,"This PR parallelize the assembly of the compliance matrix for the constraint resolution. It is done using a task pool.; It currently only applies to sparse linear solver (LU and Cholesky).; For this part of the code i observed a speedup of more than 2.; The SparseLDLSolver is not yet concerned. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3093:840,failure,failures,840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3093,2,['failure'],['failures']
Availability,"This PR proposes an alternative representation of the root path's name. If we consider a node named ""root"", with a child node named ""child"", a component named ""object"" and a data field named ""data"", here were the previous values returned by their `getPathName` method:. ```; root.getPathName(): """"; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): "".data""; ```. I find this naming convention misleading, as an empty string for the root path does not seem right to me, and "".data"" for the path of root.data also look wierd:. - When working with link paths, like we do all the time in Sofa, making a link between a component's data and root.value would look like this:; ```; root.createObject('MyComponent', value=""@.value""); ```. - The same way, if a component for some reason would need a take a node as an input field, passing root would look like:. ```; node.createObject(""MyComponent"", nodePath=""@"") # passing root to nodePath would lead to syntax errors during parsing.; ```. Thus I suggest that, as it is done in FTP clients for instance, or filesystem browsers in general, the root node, regardless of its name be represented as a forward slash `/`:. ```; root.getPathName(): ""/""; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): ""@/.data"" # this cas still looks a bit funny, but makes more sense IMHO. root.createObject('MyComponent', value=""@/.value""); root.createObject('MyComponent', nodePath=""@/""); ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1146:1001,error,errors,1001,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1146,3,"['error', 'failure']","['errors', 'failures']"
Availability,"This PR proposes to remove DiagonalMass and replace with MeshMatrixMass (with lumping); Fix #2452 . One case remains to be covered: RigidTypes with non uniform vertex mass. A new PR is coming on this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3001:745,failure,failures,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3001,2,['failure'],['failures']
Availability,"This PR re-adds the previously removed Regression project. This time, we use our CMake ""external project"" feature to auto-fetch Regression from https://github.com/sofa-framework/regression. We are now able to build Regression_test within SOFA and to specify what version (commit) of the project shall be fetched.; To change the version that will be fetched, edit `applications/projects/Regression/ExternalProjectConfig.cmake.in`. I also removed the deprecated ci scripts from `scripts/ci`. You can find latest CI scripts in https://github.com/sofa-framework/ci. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1052:818,failure,failures,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1052,2,['failure'],['failures']
Availability,This PR removes all occurrences and related codes for SOFA_GUI_INTERACTION. Fixes #623 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/643:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/643,2,['failure'],['failures']
Availability,This PR removes the COMPONENTSET mechanism from our CMakeLists.; Deprecated components are now identified by the option SOFA_WITH_DEPRECATED_COMPONENTS. I also couldn't resist to reformat a bit. Tell me if I did something wrong!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/586:486,failure,failures,486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/586,2,['failure'],['failures']
Availability,"This PR removes the dependency from SofaTest to the framework_test executable.; The reason for this is that SofaTest depends on a **lot** (if not all...) of librarires which do not reside ; in SofaKernel. So having a dependency to SofaTest somewhat defeats the whole puropose of writing; self contained fast to compile unit tests.; As a general rule, it should be a requirement that SofaKernel can compile without any dependency to ; libraries that do not reside in SofaKernel.; This PR address the problem only for framework_test, but the problem persists in SofaSimulation_test. # CHANGELOG; - Moved AdvancedTimer_test and DefaultAnimationLoop to SofaSimulation_test since they require to be able to instantiate a concrete instance of a Node; - Moved _TrackedData_test to SofaSimulation_test since it requires to be able to instantiate an AnimateBeginEvent object; - Removed dependency to SofaTest from framework_test, which implied the following; - removing calls to EXPECT_MSG_NOEMIT ( which is defined in SofaTest ); - copy pasting EXPECT_MAT_NEAR and EXPECT_MAT_DOUBLE_EQ macros from SofaTest in MatTypes_test.cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455:1377,failure,failures,1377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455,2,['failure'],['failures']
Availability,"This PR removes warnings caused by inconsistent use of the override keyword. While it might not remove all of them (not all plugins have been checked), it allows developers to actually fix the remaining ones rather than ignoring them because it will only generate more warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423:535,failure,failures,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423,2,['failure'],['failures']
Availability,This PR replaces #510 with a simple fix suggested by @vmagno (thank you). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/515:330,failure,failures,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/515,2,['failure'],['failures']
Availability,"This PR replaces `this->d_componentState.getValue() == ComponentState::Valid` with `this->isComponentStateValid()`; Removes location where it should managed through delegation mechanism. Closes #4921. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4995:745,failure,failures,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4995,2,['failure'],['failures']
Availability,"This PR restores the use of argv with runSofa. I'm sorry I've been keeping this fix for a long time now, so I cannot tell you which PR broke the feature. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2802:700,failure,failures,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2802,2,['failure'],['failures']
Availability,This PR should fix #401 bug. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/403:285,failure,failures,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/403,2,['failure'],['failures']
Availability,"This PR should fix the issue raised in #1650 by cleaning CImgPlugin to properly use targets for dependencies and thus propagate their include directories. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1651:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1651,2,['failure'],['failures']
Availability,"This PR shows how to replace sofa::type::Mat with Eigen::Matrix. The goal was to minimize the amount of code change in the code base. Several difficulties arise:; - `sofa::type::Mat` initializes the values, but `Eigen::Matrix` don't; - `sofa::type::Mat` relies on the [] operators from `fixed_array`. I tried to add the [] operators in `Eigen::Matrix`, but too much cases makes it difficult. Maybe not impossible.; - `sofa::type::Vec` must also be a `Eigen::Vector`, but `Eigen::Vector` is a `Eigen::Matrix`, so all the methods we add in `Eigen::Matrix` are also available in `Eigen::Vector`, but sometimes it does not make sense. So conditions must be added on the availability of those methods. Because of those difficulties, the replacement is not simple. This PR is not finished. It just show how (at least the first step). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4993:563,avail,available,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4993,4,"['avail', 'failure']","['availability', 'available', 'failures']"
Availability,This PR simply add a default class named NoArgument in Factory.h.; NoArgument is usefull when you try to instantiate BaseCreator or Factory without passing arguments. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/385:423,failure,failures,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/385,2,['failure'],['failures']
Availability,"This PR simply introduces the template alias:. ```c++ ; sofa::core::sptr<T> = boost::intrusive_ptr<T>;; ```; in `<sofa/core/sptr.h>` and reflects the needed changes in the codebase. # Motivation. Most (all?) component types in SOFA come with a member typename `T::SPtr` referring to `boost::intrusive_ptr<T>`, which makes it impossible to declare a member shared pointer to another component without including the component header file. In an effort to decrease compilation times by removing unneeded include files, this PR introduces a template alias to solve this problem. It is now possible to declare member shared pointers using a forward declaration of their types only, as shown in 48f1447. # Changelog. - added `sofa::core::sptr<T>` template alias; - reflected changes in BaseClass macros, Base and Aspects; - replaced many constructors in `New` with variadic templates; - added an example include fix in `Compliant`. # Note. This PR is *not* intended to be a place for fixing every member SPtr + includes, otherwise it will never get merged. . If we can agree on the PR's philosophy and get it merged, please make separate PRs for include simplifications. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436:1421,failure,failures,1421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436,2,['failure'],['failures']
Availability,"This PR slightly improves the doc around the DataTypeInfo API according to our findings while digging in to implement the Data type binding in SofaPython3.; It also adds a specialization of the `DataTypeInfo<helper::vector<T> >` with `T=std::string`, which proves that it is possible to iterate over containers with `SimpleLayout() == true` and `BaseType()->FixedSize() == false`, which is important for SofaPython3 bindings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1113:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1113,2,['failure'],['failures']
Availability,This PR suggested by @alxbilger fixes build on Windows with VS2017. Error was `C2057: expected constant expression`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/630:68,Error,Error,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/630,3,"['Error', 'failure']","['Error', 'failures']"
Availability,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1735:1492,failure,failures,1492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735,2,['failure'],['failures']
Availability,This PR unify the API for DataTrackerEngine and DataCallback; so they match. The difference between the two is that in DataTrackerEngine; the callback is called when the data is needed (so the output is accessed); while in a DataCallback the update is done each time the data is changed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1073:544,failure,failures,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1073,2,['failure'],['failures']
Availability,"This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stif",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:135,Error,Error,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['Error'],['Error']
Availability,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2171:710,failure,failures,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171,2,['failure'],['failures']
Availability,This PR will fix our last failing unit test on Unix! :tada: . CImgPlugin defines for CImg build needed to also be defined by every project using CImg.; ~~They are now exported in `CImgPlugin_CFLAGS`.~~; They are now defined PUBLIC by CImgPlugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/595:502,failure,failures,502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/595,2,['failure'],['failures']
Availability,This PR will remove various warnings generated when compiling with gcc 6.3.0. Warnings coming from extlibs are not fixed.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/454:379,failure,failures,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/454,2,['failure'],['failures']
Availability,This PR won't solve any error nor warning. It will just prevent the warning parser (on Jenkins) from crashing.; About the SceneChecker raising lots of warnings: what kind of warnings does it raise? Is it normal that it is triggered for our CI batch tests?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355560915:24,error,error,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355560915,1,['error'],['error']
Availability,This PR: ; - [ ] succeed on all compilations setup on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-273726986:109,failure,failure,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-273726986,1,['failure'],['failure']
Availability,This PR: ; - [ ] successfully compile on each configuration on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.; - [x] has been reviewed and agreed to be transitional.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996:118,failure,failure,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996,1,['failure'],['failure']
Availability,This PR: ; - [x] does not breaks compilation on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old. So I merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273724965:103,failure,failure,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273724965,1,['failure'],['failure']
Availability,This PR: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] is now 1 week old. I would say we can merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/148#issuecomment-276601858:109,failure,failure,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/148#issuecomment-276601858,1,['failure'],['failure']
Availability,"This PR:; - adds the new component MechanicalMatrixMapper (formerly called MappedMatrixForceField); - suppress the Cmake option SOFA_WITH_EXPERIMENTAL_FEATURES (Was used for development and is useless now) added in https://github.com/sofa-framework/sofa/pull/276. The component MechanicalMatrixMapper allows to compute the mapped matrices computed by ForceFields under mappings, which are ignored by the SOFA animation loops.; Typical usage would be:; **Node**; MechanicalObject (MO) **q**; MechanicalMatrixMapper (NodeParsed = **MappedNode**) --> computes **J**^T.**K**.**J** and **J**^T.**M**.**J**; .....**MappedNode**; .....MappedMechanicalObject (MMO) **q_m**; .....Mapping (input = ../MO, output = MMO) -> Computes **J**.**q_m**; .....ForceField -> Computes stiffness matrix **K**; .....Mass -> Computes Mass Matrix **M**. Any comments welcome!; (Work with @VannesteFelix @ChristianDuriez ); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/721:1154,failure,failures,1154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/721,2,['failure'],['failures']
Availability,"This PR:; - remove the ""Add Node"" context menu & feature because it is not working and even if working it makes no real sense without having the hability to save the scene.; ; - remove the transform feature in QSofaListView.cpp because it is not working and makes no real sense without having the hability to save the scene. . - modernize the qt connect to use the c++11 syntax. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3025:925,failure,failures,925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3025,2,['failure'],['failures']
Availability,This PR:; - updates the sceneCheckerAPI by setting the default leve at 19.06 and removing the warning for BoxStiffSpringFF; - set as deprecated MatrixMass for developers; - warns users about the deprecation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1107:464,failure,failures,464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1107,2,['failure'],['failures']
Availability,This PRs regroups 2 works:. **1. Changes for v19.12 packaging**; - Qt deployment using windeployqt/macdeployqt and post-install scripts; - Improvement of post-install scripts (Linux and MacOS); - MacOS packaging with latest CMake; - Better param names for macros sofa_install_libraries and sofa_copy_libraries. **2. Integration of DocBrowser by Defrost**; - New Qt dependencies (required): WebEngine + WebEngineWidgets; WARNING: this will definitely break VS2015 compatibility. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275:734,failure,failures,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275,2,['failure'],['failures']
Availability,"This Pull request is not supposed to be merged... it is for a demonstration for the CRIStAL seminar. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3506:647,failure,failures,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3506,2,['failure'],['failures']
Availability,"This Pull_request is adding three new tests:; - LocalMinDistance; - Light (the three kind of light); - AllComponent . These tests contains open issues. ; The AllComponent test will fail until all component have an associated example file, on failure it reports the number of missing examples and the component that have none)... Maybe this test should be moved as a tool and not a systematic test;. . This commit shouldn't break anything in sofa. If it does beep me.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/67:242,failure,failure,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/67,1,['failure'],['failure']
Availability,This STC#5 sprint pull-request cleans the whole Scene Checking API.; It also adds a new SceneCheck that warns for alias uses: `SceneCheckUsingAlias`. It's a first step concerning #677 :+1: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/702:447,failure,failures,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/702,2,['failure'],['failures']
Availability,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:383,mainten,maintened,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,2,"['avail', 'mainten']","['available', 'maintened']"
Availability,"This allows to create a vector this way:. ```cpp; CudaVector<SReal> v { {1., 2., 3., 4.} };; ```. It is required to apply the suggestion from https://github.com/sofa-framework/sofa/pull/4852#discussion_r1696348587. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4868:759,failure,failures,759,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4868,2,['failure'],['failures']
Availability,"This assert is annoying:; In a better world, a singleton should never return null in the first place, so getSimulation() should create the simulation if it doesn't exist. but then in a better world, the Simulation class would not be a singleton in the first place..; Meanwhile, this assert prevents us from coding things like this:. ```cpp; if(!sofa::simulation::getSimulation()); sofa::simulation::setSimulation(new DAGSimulation());; ```; And that's a problem to initialize the Simulation singleton, because without the test, it would be recreated all the time.; So I vote for removing it entirely. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1082:857,failure,failures,857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1082,2,['failure'],['failures']
Availability,"This branch contains the coding-sprint results & associated fixing commits. . There is the commit for the base branch, the coding sprint commit, post-sprint compilation fixes et test fixing. . CHANGELOG:; - deprecating several components (see the list in deprecatingcomponents.cpp); - the SceneCreator is base on a totally new implementation. The most notable difference is that the ; SceneCreator is no more relying on component from sofa core but use the factory to create the objects. ; The API does not change but if the factory is empty (because no plugin is loaded) then the ; components cannot be not created. So If you used SceneCreator in your test you may need to pre-load the plugin or module as done in ""sofa/SofaKernel/modules/SofaImplicitOdeSolver/SofaImplicitOdeSolver_test/loadPlugins.cpp""; - Fix FileMonitor_test that were randomly failing one MacOS; - Fix DataEngine_test that was failing on Vertex2Frame. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457:1180,failure,failures,1180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457,2,['failure'],['failures']
Availability,"This branch is to prepare the coding sprint. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and 425 . Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429:818,down,down,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429,4,"['down', 'failure']","['down', 'failures']"
Availability,"This branch's purpose is to create artificial targets when compiling to avoid the need of installing sofa to be able to use compiled sofa library in external project compilation. . This was needed by @courtecuisse in the development of external library. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4135:800,failure,failures,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4135,2,['failure'],['failures']
Availability,"This bug just pop up again in #967 and was referenced in issue #631 ; Several Gmsh file have non coherent topology information, for example Triangulation with edges on the border only. This mess up information feeding the topology container. If this behavior is wanted, use ``` <MeshGmshLoader createSubelements=""0"" />``` and be sure to link the different topology buffer data to the appropriate components.; For example:; ``` ; <MeshGmshLoader name=""loader"" createSubelements=""0"" />. <Node name=""triangulation"" >; <TriangleSetTopologyContainer name=""tri_topo"" triangles=""@../loader.triangles"" />; </Node>. <Node name=""border"" >; <TriangleSetTopologyContainer name=""edge_topo"" edges=""@../loader.edges"" />; </Node>; ```. fixes #631. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/986:988,failure,failures,988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/986,2,['failure'],['failures']
Availability,"This bug seems to have been introduced by 0ae8f64fc7145417bb528af039b1b9bd30dfb247. To reproduce the bug, the following scene should normally converge. ```; <?xml version=""1.0""?>; <Node dt=""1"">; <StaticSolver />; 	<CGLinearSolver name=""CGLinearSolver"" printLog=""1"" iterations=""250"" tolerance=""1e-08"" threshold=""1e-08"" />; 	<RegularGridTopology name=""grid"" n=""3 3 25"" min=""0 0 0"" max=""15 15 180"" p0=""0 0 0"" />; 	<MechanicalObject template=""Vec3d"" name=""dof"" src=""@grid"" showObject=""1"" showObjectScale=""5"" />; 	<HexahedronSetTopologyContainer src=""@grid"" />; 	<HexahedronSetGeometryAlgorithms />; 	<HexahedronFEMForceField template=""Vec3d"" method=""small"" poissonRatio=""0.45"" youngModulus=""1.51665"" />; 	<BoxROI name=""fixedROI"" box=""0 0 -3.75 15 15 3.75"" drawBoxes=""1"" />; 	<FixedConstraint indices=""@fixedROI.indices"" />; 	<BoxROI name=""forceROI"" box=""0 0 176.25 15 15 183.75"" drawBoxes=""1"" />; 	<LinearForceField points=""@forceROI.indices"" times=""0 1"" forces=""0 0 0 0 -0.00166667 0"" />; </Node>; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/539:282,toler,tolerance,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/539,1,['toler'],['tolerance']
Availability,"This cannot yet be tested due to the non-triggering of Actions (probably due to MacOS issue). However, I think we needed this action to daily check whether +1 year old topics where kept unanswered while having a reply from a core-dev. There it is. For the moment the action is de-activated to first test it and print as log:; ```; console.log(`Discussion Title: ${discussion.title}`);; console.log(`Discussion ID: ${discussion.id}`);; console.log(`Last Reply by ${teamName} Member: ${lastReplyUserName}`);; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4096:1056,failure,failures,1056,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4096,2,['failure'],['failures']
Availability,"This caused a compilation error since #4776 in Debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4792:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4792,3,"['error', 'failure']","['error', 'failures']"
Availability,This change has been performed to make the usage of the script and the documentary clearer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/570:348,failure,failures,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/570,2,['failure'],['failures']
Availability,This change is needed before using the new dependency pack (libjpeg + libtiff) on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/566:347,failure,failures,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/566,2,['failure'],['failures']
Availability,"This code had to be removed:; ```cpp; if (this->m_separateGravity.getValue()) for ( unsigned int i=0; i<indices.size(); i++ ); {; }; ```. because it is empty, and also because the condition was already tested earlier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3593:762,failure,failures,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3593,2,['failure'],['failures']
Availability,"This commit adds a directive to instruct CMake to find/use XCode's framework lastly.; E.g if you have installed libpng with homebrew/macport, CMake will use those first instead of the Apple's (old) ones. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/720:460,failure,failures,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/720,2,['failure'],['failures']
Availability,This commit fixes compilation error while adding QtGuiInteraction plugin.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/48:30,error,error,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/48,1,['error'],['error']
Availability,"This commit rewrites the static ODE solver, implements two additional convergence criteria, improves the documentation of every step found in the ""solve"" method, and adds useful doxygen documentation of the Newton algorithms executed by the component. Up until this commit, the only convergence criteria of the static ODE solver were absolute force residual norms, and absolute (displacement) increment norm. Using absolute values for convergence criteria means that the value set by the user is dependent on the simulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:761,error,error,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,1,['error'],['error']
Availability,"This commit sets the d_totalMass as read and write in DiagonalMass.; Before set as read-only, without reason.; The commit also updates the coding rules in the Data. Tests are added to check for both hexa and tetra topologies,; the coherency between totalMass and massDensity. It also checks that; if both totalMass and massDensity are defined, totalMass predomines. WARNING: the test showed issue of casting in the EXPECT_EQ(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] breaks existing scenes.; - [x] breaks API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/230:658,failure,failures,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/230,1,['failure'],['failures']
Availability,"This component has been removed from SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4708:587,failure,failures,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4708,2,['failure'],['failures']
Availability,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4635:1235,failure,failures,1235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635,2,['failure'],['failures']
Availability,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4334:1346,failure,failures,1346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334,2,['failure'],['failures']
Availability,This data holds the force applied to satisfy the SlidingConstraint. Rename some data with more explicit names following Sofa conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/780:394,failure,failures,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/780,2,['failure'],['failures']
Availability,"This does the issue https://github.com/sofa-framework/sofa/issues/4845. . During this refactoring, I've stumbled upon two issues : ; 1. The first refactoring has some errors, where the new type was compatible with the old one, but not the exact one. So I fixed it. Also Sometimes the old data type was changed but only on the old symbol, which is strange and certainly made the compat layer break is used because often the two types where completely unrelated but `setParent` isn't templated so.... ; 2. This compat layer only works for `Data<T>` every types that inherits from it, will only see the original `Data<T>` methods taken into account in the compact layer. This was the case here for `DataFileName` and all `TopologicalData`. . I've decided to adopt two different strategy : ; 1. For `DataFileName` I didn't put my component and still usef the 'setParent' strategy. This is because, a priori, we won't chage a filename data during execution, this is often a given parameter, but we often use methods specific to `DataFileName`. ; 2. For the topological one, usually topological mechanisms are used in very specific classes to handle topological changes. But in a user perspective, it is often used as a classical `Data<vector<Index>>`. So What I did is use `RenamedData` on those, allowing the compat on the `Data<T>` level, but not for the topological methods which are not working anymore on the old symbol (and will create a compilation error if used)... ; ; To make it cleaner we might need to create new `RenamedData` class for all classes inheriting from `Data<T>`. Which is not the purpose of this PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4927:167,error,errors,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4927,1,['error'],['errors']
Availability,This file is needed even if SOFA_INSTALL_RESOURCES_FILES == false; Fixes #114. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/285:335,failure,failures,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/285,2,['failure'],['failures']
Availability,"This fix allows to select and copy parameters names in Sofa GUI interface, which is very useful when setting default values for elements in scene files. Instead of setting parameters names as titles of widgets I created QLabel objects and set them as the first row of the GridLayout manager. I know that current sofa GUI will be replaced with Qt quick GUI soon, but I guess this modification will still be useful for those who use this version of GUI. I also would to make this change for Qt quick GUI, but all parameters names in QML are covered with ""Mouse Area"" objects, which don't allow to handle mouse events for text objects under them. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369:900,failure,failures,900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369,2,['failure'],['failures']
Availability,This fix allows to set the default filename for the Monitor class. The default name assignment is removed in 'init()' function since in constructor it doesn't work. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/500:423,failure,failures,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/500,2,['failure'],['failures']
Availability,"This fix was already applied to examples/Components/forcefield/TriangularForceFieldComparison.scn; See 28c8b68f9d6ed4be725baf305a0957097581fb13. Sorry but I can't explain why this fix was needed in the first place. ; If someone could, that would be great :+1: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/626:518,failure,failures,518,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/626,2,['failure'],['failures']
Availability,"This fixes a segmentation fault I had with the SofaPython3 where the valid gui name was a python string variable. Since the GUI manager was storing a raw pointer to it, and since the python variable was later destroyed, the GUI manager was seg faulting when accessing the pointer. This PR simply creates a copy of the string instead of storing a raw pointer to it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1108:26,fault,fault,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1108,4,"['failure', 'fault']","['failures', 'fault', 'faulting']"
Availability,This fixes the GuiRepository path for Windows VS compiling related to issue #577 and then a subsequent issue with QTextBrowser opening the runsofa.html file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/578:414,failure,failures,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/578,2,['failure'],['failures']
Availability,This fixes the problem of closing runSofa while window like pluginManager or VisitorWindow being open and not killed when main application stop. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1030:401,failure,failures,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1030,2,['failure'],['failures']
Availability,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2081:683,error,error,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081,4,"['error', 'failure']","['error', 'failures']"
Availability,"This function crashed in some cases covered by the added unit tests.; I changed the behavior:; - No difference between platforms; - Check if the returned path starts with a slash or backslash and remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3693:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3693,2,['failure'],['failures']
Availability,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4370:1325,failure,failures,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370,2,['failure'],['failures']
Availability,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4626:597,failure,failures,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626,2,['failure'],['failures']
Availability,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4448:771,failure,failures,771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448,2,['failure'],['failures']
Availability,This include #1283.... so please let the first one merge first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1330:320,failure,failures,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1330,2,['failure'],['failures']
Availability,This include PR #1251 to make it compile in the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1253:308,failure,failures,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1253,2,['failure'],['failures']
Availability,"This include is actually required in some cases outside of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3547:609,failure,failures,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3547,2,['failure'],['failures']
Availability,"This is a WIP PR but need review flag for CI-driven investigation. [ci-depends-on https://github.com/sofa-framework/Regression/pull/25]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800:681,failure,failures,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800,2,['failure'],['failures']
Availability,This is a WIP to support discussion about issue #362 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/371:311,failure,failures,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/371,2,['failure'],['failures']
Availability,This is a basic fix when compiling sofa with Visual Studio 2015 and using the QWT plugin; last() is replaced by back() for deque. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/935:386,failure,failures,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/935,2,['failure'],['failures']
Availability,"This is a comment from @damienmarchal in #413 about deprecation task; __________________________________________; To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181:844,redundant,redundant,844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181,1,['redundant'],['redundant']
Availability,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . We will therefore investigate in an upcoming PR the use of virtual Python environment and see how it behaves when the action runs itself a python script",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5065:139,error,error-externally-managed-environment-every-time-i-use-pip-,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5065,3,['error'],"['error', 'error-externally-managed-environment-every-time-i-use-pip-', 'errors']"
Availability,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5061:139,error,error-externally-managed-environment-every-time-i-use-pip-,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5061,5,"['error', 'failure']","['error', 'error-externally-managed-environment-every-time-i-use-pip-', 'errors', 'failures']"
Availability,"This is a first pass. Everything is not fixed, but it is a good start. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5064:615,failure,failures,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5064,2,['failure'],['failures']
Availability,"This is a fix for a very specific situation. Here is what happens:. 1. A `msg_warning` is called in a component from a thread different from the main thread. It could be also `msg_error` or `msg_info`, as long as the message count of the element changes. It could be a change of name as well.; 2. The `ObjectStateListener` associated to the component updates the associated `QTreeWidgetItem` (this class is not a `QObject`).; 3. The icon is updated, so it warns the `QTreeWidget` (this class is a QObject) through a signal.; 4. Since the call happens in a thread different from the main thread, the queued connection is used. For that, all signals/slots parameters must be known to Qt's meta-object system. This PR registers the class `QVector<int>`, so it can be used in the queued connection. It partially fixes https://github.com/sofa-framework/sofa/issues/3610. The warning is no longer triggered by Qt. Therefore, the mutex is locked only once in one thread. I say it solves partially, because any other Qt error would trigger the same crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3749:1012,error,error,1012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3749,3,"['error', 'failure']","['error', 'failures']"
Availability,This is a fix to update a bound box for a hyperelastic force field. Without updating the rotation and translation of a virtual camera works incorrectly. This method is a copy of a bound box computation from TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1401:489,failure,failures,489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1401,2,['failure'],['failures']
Availability,"This is a follow up #3990 but now we focus on the complex use cases of canCreate. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3992:628,failure,failures,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3992,2,['failure'],['failures']
Availability,"This is a follow-up to #326, now with green tests. TL;DR: There should be no unprotected python code in sofa except in extension code. . Any code like this:. ```c++; void my_function(...) {; // ...; PySomething_Something(...);; }; ```. Should be GIL-protected as follows:; ```c++; void my_function(...) {; // ...; // the lock runs until the end of scope; sofa::simulation::PythonEnvironment::gil lock;; PySomething_Something(...);; }; ```. Or even better yet: don't use naked python calls and use the `PythonEnvironment` API instead. You may also temporarily release the GIL while doing a costly/blocking c++ operation as follows:. ```c++; void my_function_that_already_owns_the_gil(...) {; // ...; // unlocks the GIL until the end of scope; sofa::simulation::PythonEnvironment::no_gil unlock;; // ...; }; ``` . I tried looking for all python calls in the codebase, but I may have missed some. . # Changelog. - added `PythonEnvironment::gil` RAII for scoped acquisition of the GIL; - added `PythonEnvironment::no_gil` RAII for scoped release of the GIL; - GIL-protected most (all?) python calls with the above (except in extension code); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/347:1394,failure,failures,1394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/347,2,['failure'],['failures']
Availability,"This is a long standing issue in Sofa about not being able to save 'usable' scene in runSofa. . This is the result of multiple problems combined together among which:; - there is keywords that are not Data field but parsing hook (eg: src, compatbility hook) and they needs to be converted into Data.; - the Data have a persistant field. But it is let to the component to specify which are or not depending on some object property but depend on their context of ""use"".; Eg:; *) a data changed in the GUI should be saved; *) a data filled with a script shouldn't; etc... To allow to control fine grain the state of a data is now set to non persitant; by default and should only be activated specifically (by the GUI, or the script); if it is needed to save it. This is what this PR do, and despiste this is a behavior change...it is on a totally broken feature. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1191:1116,failure,failures,1116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1191,2,['failure'],['failures']
Availability,This is a proposal PR following discussion on gitter to use a macro to define the extern template in the header and remove the non extern version from the cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/777:416,failure,failures,416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/777,2,['failure'],['failures']
Availability,"This is a proposal for a clean and consistent SofaKernel. ; The idea is to make SofaFramework modules consistent with the rest of SOFA by moving them into `SofaKernel/modules` and reorganizing their tests. Main changes:; - `SofaKernel/framework/sofa/*` goes to `SofaKernel/modules` with consistent naming; - `SofaKernel/framework_test/*` becomes XXX_test (where XXX is a SofaFramework module); - `SofaKernel/modules/sofa/*` becomes XXX_simutest (where XXX is a SofaFramework module); - `<sofa_root>/modules/tests` goes to `<sofa_root>/tests` for better readability. This PR is heavy but non-breaking. Package, module and library names stay the same. Include directories stay the same. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1200:941,failure,failures,941,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1200,2,['failure'],['failures']
Availability,This is a quick redo of #1437 ; I did not see that SOFASPARSESOLVER_HAVE_METIS and SOFASPARSESOLVER_HAVE_CSPARSE are actually used in SofaSparseSolver sources :fearful: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1440:427,failure,failures,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1440,2,['failure'],['failures']
Availability,This is a redo and fix #919 based on current master. To be tested by @Younesssss :wink: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1396:346,failure,failures,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1396,2,['failure'],['failures']
Availability,This is a remake of #1007 . Upgrading Eigen from 3.2.7 to ~~3.3.7~~ 3.2.10; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101:332,failure,failures,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101,2,['failure'],['failures']
Availability,"This is a small correction to fix the compilation of the Sensable plugin. Also, any idea why we keep the OmniDriver when there is a NewOmniDriver available?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/22:146,avail,available,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/22,1,['avail'],['available']
Availability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in Compliant plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1557:402,failure,failures,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1557,2,['failure'],['failures']
Availability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in SofaBoundaryCondition. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1558:407,failure,failures,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1558,2,['failure'],['failures']
Availability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in collision components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1559:406,failure,failures,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1559,2,['failure'],['failures']
Availability,"This is a task for the conda-forge packaging. . This pr removes the folder containing the libQGLViewer source files and instead fetch our forked version (required to add a CMakeList to the project) when the dependency is not found. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4840:778,failure,failures,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4840,2,['failure'],['failures']
Availability,"This is a task for the conda-forge packaging. Add QGLViewer2 name as Conda installs this name instead of QGLViewer on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4841:671,failure,failures,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4841,2,['failure'],['failures']
Availability,"This is a task for the conda-forge packaging. This PR adds an option to completely deactivate WinDepPack mechanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4842:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4842,2,['failure'],['failures']
Availability,"This is a tentative to refactor `TetrahedronFEMForceField` for better readability. All the FEM methods have been dispatched into dedicated files. The methods are now classes sharing the same interface (polymorphism), called by the component. Advantages:; - `TetrahedronFEMForceField` is smaller; - `TetrahedronFEMForceField` had many similar codes (often identical). This is now avoided as all common code are in the base classes.; - It is easier to read the differences between the different FEM methods.; - We could imagine having a factory of FEM methods for `TetrahedronFEMForceField`. Then, the component could be extended in plugins by adding more methods into the factory. To do:. - [ ] Clean; - [ ] Move some class members from `TetrahedronFEMForceField` to `TetrahedronFEMForceFieldImpl`; - [ ] Restore initial performances; - [ ] Fix broken features such as drawing rotations; - [ ] If everyone agrees, remove the assembled methods. It adds complexity while the resulted matrix is not used.; - [ ] Adapt (if necessary) the derived classes (multithreading, CUDA etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:1621,failure,failures,1621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,2,['failure'],['failures']
Availability,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2036:1100,failure,failures,1100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036,2,['failure'],['failures']
Availability,"This is a variation of the proposal done by @fjourdes in #455 where I allow me a bit more refactoring. . Here is what the PR does:; - implement basic test class in sofa/helper/testing/ BaseTest & NumericTest so that all framework tests can use them. ; - in SofaSimulationGraph/testing add a BaseSimulationTest class that implement facilities for tests that needs scene manipulation & loading. ; - udpates SofaTest to use the previously defined classes but still behaving as they used to in the past. ; - updates the framework_test to use BaseTest or NumericTest in place of Sofa_test or ::testing; - moves the tests in framework to framework_extra when they are manipulating a simulation (thus requires BaseSimulationTest instead of BaseTest); - updates the tests in simulation_test so that they don't use SofaTest anymore. ; - moves SimpleApi from SceneCreator to SofaSimulationGraph & fix a bug.; - creates a plugin in a the application/package directory so that in our tests we can load all the common sofa component with a single RequirePlugin(""SofaAllCommonComponents""). The consequences are:; - SofaTest is no more needed in framework & simulation ; - we can now progressively make the other tests to rely on BaseTest, BaseSimulation and SimpleAPI that are dependency free instead of SofaTest/SceneCreator. . Feel free to provide feedback/comment. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:1612,failure,failures,1612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,2,['failure'],['failures']
Availability,"This is a way to explicit the narrowing conversions in SOFA. Instead of using the classic `static_cast`, this function can check if the value changed after the cast. It can happen in case of narrowing conversion, when the target type is smaller than the source type.; Since the check must be performed at run-time (affects the performances), it is enabled only in DEBUG mode. The idea is to use this cast everywhere the compiler warns about possible data loss and it's not possible to avoid a narrow conversion (e.g. by adapting both target and source types). An example is provided in this PR in `MeshGmsh`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2590:1153,failure,failures,1153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2590,2,['failure'],['failures']
Availability,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4351:693,failure,failures,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351,2,['failure'],['failures']
Availability,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2155:1368,failure,failures,1368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155,2,['failure'],['failures']
Availability,"This is an attempt to fix the error in issue https://github.com/sofa-framework/sofa/discussions/3773 by explicitly instantiate ForceField class for cuda types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3806:30,error,error,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3806,3,"['error', 'failure']","['error', 'failures']"
Availability,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2166:800,failure,failures,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166,2,['failure'],['failures']
Availability,This is an attempt to refactor from PR #332 to make it non breaking. . No need for review now this is in WIP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/596:368,failure,failures,368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/596,2,['failure'],['failures']
Availability,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2325:706,failure,failures,706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325,2,['failure'],['failures']
Availability,"This is an old work that has already been merged into ng branch (see #620) but since the NG task is paused for now I think it would be appreciable to have this in master. The idea is to remove SofaComponent* from modules (because they are not modules) and put them next to SofaAllCommonComponents. Concretely, this PR does:; - Move SofaComponent* next to SofaAllCommonComponents; - Rename SofaAllCommonComponents into SofaComponentAll; - Rename ""packages"" into ""collections"" to avoid confusion with CMake packages like SofaGeneral, SofaFramework, ...; - Somes fixes in SofaPreconditioner and SofaSparseSolver completing #1137 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1155:884,failure,failures,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1155,2,['failure'],['failures']
Availability,"This is exactly what I mentionned when I said ""I strongly believe that would these paths have been properly restored by f93e2b9 (**my bad**)..."" ; It should have been restored, but I did not do it properly for the **linux** plaform because it is not my main working environment ( so it is easy to slip an error here ) and also probably because I was kind of upset to have to deal with this issue on the first place... [EDIT] I did not take the time to go back enough in the log to find back the last version which had the paths properly set. [/EDIT]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342829426:305,error,error,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342829426,1,['error'],['error']
Availability,"This is in the hope to fix the failing scene on Ubuntu gcc.; If it does fix the issue:; - [ ] Explain why the issue happened; - [ ] Study the effect on the performances. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3424:714,failure,failures,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424,2,['failure'],['failures']
Availability,"This is just a small test to see if an automated replacement is working ""good"" enough. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/836:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/836,2,['failure'],['failures']
Availability,"This is just to better display the CudaVector inside the qt gui. Before:; ![SOFA v21 12 99 - C__projects_sofa-src_applications_plugins_SofaCUDA_scenes_cpu-gpu_validation_CudaStiffSpringForceField scn 12_22_2021 4_34_15 PM](https://user-images.githubusercontent.com/21199245/147117105-858be56c-1440-4bac-bca8-020efcaa81df.png). After:; ![SOFA v21 12 99 - C__projects_sofa-src_applications_plugins_SofaCUDA_scenes_cpu-gpu_validation_CudaStiffSpringForceField scn 12_22_2021 4_33_29 PM](https://user-images.githubusercontent.com/21199245/147116953-03eda549-2825-42b0-ac81-5855e658b51b.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2558:1132,failure,failures,1132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2558,2,['failure'],['failures']
Availability,"This is mainly to differentiate two identical error messages, but with different causes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3985:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3985,3,"['error', 'failure']","['error', 'failures']"
Availability,This is related to the issue at: https://github.com/sofa-framework/sofa/issues/816; Fixes #816 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/901:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/901,2,['failure'],['failures']
Availability,This is reopening one PR that was issued from SofaDefrost/master instead of a dedicated branch. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/691:354,failure,failures,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/691,2,['failure'],['failures']
Availability,"This is required by the plugin manager when writing and reading in an ini file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2948:624,failure,failures,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2948,2,['failure'],['failures']
Availability,"This is required to properly define SOFA_TARGET. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4726:593,failure,failures,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4726,2,['failure'],['failures']
Availability,"This is small feature addition. Currently, LinearMovementConstraint only takes trajectories relative to the rest position of the MechanicalState. Sometimes though, the trajectory is specified in world frame coordinates, and especially with Rigid3D (i.e. orientations), conversion is not trivial for the user . This patch introduces a switch ""relativeMovements"" (default true).; When disabled, trajectories can be specified in world frame coordinates. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/394:707,failure,failures,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/394,2,['failure'],['failures']
Availability,"This is still WIP be I would be happy to have some feedback. As discuss in #744 . The idea at the end is to remove all GetMeshTopology. ; 1. Add SingleLink in all component accessing GetMeshTopology from context; 2. Update all scenes but keep backward compability:; ```; if (linkTopology.empty()){; msg_warning() <<""set the link"";; linkTopology.set((this->getContext()->getMeshTopology());; }; ```; 3. Flag all getXXXMeshTopology to Depreciate 20.06 ?; 4. after 20.06 Remove all getMeshTopology(). Component upgraded: ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1183:1325,failure,failures,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1183,2,['failure'],['failures']
Availability,This is the Defrost cleaning week29 with...as usual a lot of std:cout and dead code removal. ; Shouldn't break anything. ; In case some component are too verbose please tell us. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/370:436,failure,failures,436,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/370,2,['failure'],['failures']
Availability,"This is the Defrost week contribution in cleaning & testing. CHANGE for Hugo:; - [FileMonitor] fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue https://github.com/sofa-framework/sofa/issues/146; - [ConstantForceField] clean to follow sofa guideline & fix the ""visible dependencies"", ; - [ConstantForceField] replace the ""points"" attribute by ""indices"" (with backward compatibility & deprecation message); - [ConstantForceField] add test in ConstantForceField_test, some of them are OpenIssue demonstrating existing problem (as crashing sofa when using negative (or too large) values in indices). ; - [Light] clean and strenghening the interface; - [Light] add tests ; - [DefaultAnimationLoop] add tests; - [LocalMinDistance] add tests; - [RequiredPlugin] add tests; - [ClipPlane] add tests; - [DistanceGrid] add tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/258:1114,failure,failures,1114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/258,1,['failure'],['failures']
Availability,"This is the callback system we use in our dev branch for runSofa2.; It lets you add a callback function so that outputs can be updated upon changes on their input data.; The callback function returns a component state (Valid / invalid / ...) which guarantees that the component's state is properly maintained. I kept this PR simple (only tests to show the working principle), but will make another one later on with a few components that we've updated to use this callback mechanism (AddResourceRepository, MeshLoaders (OBJ / VTK / STL ...) . This mechanism is also used in the ""nodephysics"" Links POC (https://github.com/SofaDefrost/ComponentData_POC/pull/2). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406:917,failure,failures,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406,2,['failure'],['failures']
Availability,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1858:1071,failure,failures,1071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858,2,['failure'],['failures']
Availability,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1859:806,failure,failures,806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859,2,['failure'],['failures']
Availability,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1738:774,error,error,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738,3,"['error', 'failure']","['error', 'failures']"
Availability,"This is the same scene than TetrahedronHyperelasticityFEMForceField.scn but TetrahedronHyperelasticityFEMForceField has been replaced by StandardTetrahedralFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2857:715,failure,failures,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2857,2,['failure'],['failures']
Availability,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1765:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765,2,['failure'],['failures']
Availability,"This is the the third step of my LockOut refactoring effort for Sofa. In PR#1283 we have refactored the reflection system. We can now clean the DDGNode to cut the un-needed dependencies. ; DDGNode needed to be part of reflection system because it was storing its inputs and ouputs with Links. It is unclear what the link data structure was needed for and storing the input and output with a more classical data structure (a stable_vector) remove the needs to have DDNode be part of the reflection system...so remove a lot of un-needed code. . Exemple of needed but in face un-needed code that are now removed:; ```cpp; /// This method is needed by DDGNode; const std::string& getName() const override; {; static const std::string emptyName ="""";; return emptyName;; }; /// This method is needed by DDGNode; objectmodel::Base* getOwner() const override { return nullptr; }; /// This method is needed by DDGNode; objectmodel::BaseData* getData() const override { return nullptr; }; ```; ; Some code was added in BaseData. This is because these code was in-herited from DDGNode and are now not provided anymore. The code cannot be removed because BaseData is still used in Links and thus, still required to implement the reflection system...removing that is for an incoming PR. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372:1532,failure,failures,1532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372,2,['failure'],['failures']
Availability,"This is to avoid non-ascii characters. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4901:583,failure,failures,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4901,2,['failure'],['failures']
Availability,"This is to ease debugging by identifying threads managed by the task scheduler (Windows only).; Source: https://learn.microsoft.com/en-us/visualstudio/debugger/how-to-set-a-thread-name-in-native-code?view=vs-2022. ![image](https://user-images.githubusercontent.com/10572752/208109683-d20496a6-0d0c-4b4e-ad97-b139150d4c76.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3551:871,failure,failures,871,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3551,2,['failure'],['failures']
Availability,"This is to fix SOFA configuration without Qt; Not 100% sure of the change inside the cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:639,failure,failures,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,2,['failure'],['failures']
Availability,"This is to support `root->getObjects( objects, ...)`, when `objects` is a `std::set` or a `std::unordered_set`. Otherwise, only containers with a `push_back` method could be supported.; I also moved the class definition out of the `BaseContext` class to ease the reading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3495:816,failure,failures,816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3495,2,['failure'],['failures']
Availability,"This is to take into account the geometric stiffness in non-linear mappings. It has to take into account the sum of all forces applied on a MechanicalObject. Therefore, a list of VecIds is maintained and accessed later. It fixes some of the existing scenes that were broken due to #2777. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3918:832,failure,failures,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3918,2,['failure'],['failures']
Availability,This is very useful to implement any kind of 3D interaction in the python controllers. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/731:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/731,2,['failure'],['failures']
Availability,"This issue comes up from a SOFA-meeting discussion.; The question is how to homogenize and improve the check of data initialization (e.g. out of bounds values etc) in SOFA while avoiding increasing the computation time at the init phase. Consequence a more robust SOFA and possibility of avoiding long init phases. An option has been proposed and consists in creating a new specific virtual function ""check"" in which these checks would be done. To avoid over-computation, this function could be skipped to avoid huge computation time for SOFA-based applications. Could be [BREAKING] the API. Interested ? Any remark ? @damienmarchal @bcarrez @matthieu-nesme @francoisfaure @JeremieA",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265:257,robust,robust,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265,1,['robust'],['robust']
Availability,"This issue is connected to the discussion: ; https://github.com/sofa-framework/sofa/commit/aee0d912432d043a792f3b43160417e724b11704. This discussion was continued between I, Mathieu and Guillaume, during our weekly meeting. . Our conclusion were that: ; - in sofa::core the defaultmessagehandler should be the simplest so that people making third party applications out of Sofa are not disturbed by the new formatter. . - runSofa & Test may use the RichStyleFormater . - it would be nice to add more capability of routing the messages (explaination and details in the following). **New features:** ; Currently the _msg_* API has two class of message (Dev and Runtime). Message of class Runtime are supposed to be for ""the users"". Message of class Dev are supposed to be for developers. ; You can send message of class Runtime with _msg_info()_...and message of class Dev with _dmsg info()_. The use of macro was to allows us to totally remove the _dmsg*_ from the sofa official releases (they are totally removed from the binary and thus have a zero cost). ; ; In addition to the classes of message is the 'type' which is among: Advice, Info, Warning, Error, Deprecated, Fatal. To select the type you can use the macro _msg info_, _msg advice, _msg error_, ... or their dmsg_ equivalent. . It was suggested:; - to add one extra class of message for ""Log""; - to add a new MessageHandler that can route precisely the messages depending on the developper's need. ; (eg:; - route all the message to a FileMessageHandler but not the one of type advice); - route all the messages of class Log to a FileMessageHandler as well as the class Runtime&Error). DM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/56:1152,Error,Error,1152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/56,2,['Error'],['Error']
Availability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. The image plugin supports the python plugin, but does not require it. However, when linking the image plugin into an external project by using the install path of sofa, the image plugin lists the python plugin as a required dependency. CMake will then return the following error:. ```; CMake Error at CMakeLists.txt:50 (find_package):; Found package configuration file:. /.../sofa/build/install/lib/cmake/image/imageConfig.cmake. but it set image_FOUND to FALSE so package ""image"" is considered to be NOT; FOUND. Reason given by package:. The following imported targets are referenced, but are missing: SofaPython. -- Configuring incomplete, errors occurred!; ```. To reproduce the bug; 1. Compile SOFA with the image plugin activated, but without python plugin; 2. Lauch cmake on an external project and add the image plugin as a dependency; `find_package(image REQUIRED)`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/135:101,error,error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/135,4,"['Error', 'error']","['Error', 'error', 'error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile', 'errors']"
Availability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. When installing SOFA's image plugin (ex.: make install), the image plugin installation does not preserve the file's hierarchy which will failed the compilation of any external project that includes the SOFACImg.h file. `/.../sofa/build/install/include/CImg/CImg.h:9341:21: fatal error: plugins/skeleton.h: No such file or directory`. If we look in the installation folder (sofa/build/install), all the required headers are in include/CImg instead of include/CImg/plugins which will then failed the compilation. To reproduce the bug. 1. Compile and install SOFA with the image plugin activated; 2. Create an external project with the image plugin as a requirement, and add the following line in any of the source file: `#include <CImg/SOFACImg.h>`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:101,error,error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,2,['error'],"['error', 'error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile']"
Availability,"This last parameter can be deduced from the container traits so there is no need to specify it. ; This allow to simplifying some calling point as in MechanicalVisitor & UpdateMappingVisitor.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1689:737,failure,failures,737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1689,2,['failure'],['failures']
Availability,This line has been removed accidentally in PR #1428 . need to be backported?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1438:334,failure,failures,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1438,2,['failure'],['failures']
Availability,"This line is the origin of our problem: https://github.com/sofa-framework/sofa/blob/9c85b17b55f4cd1a14927090754004aaba51b802/SofaKernel/framework/sofa/helper/system/PluginManager.cpp#L103; This line was creating entries in m_pluginMap because pluginPath is not always a path.; It is not a path when we are reading ""plugin_list.conf.default"" file to auto-load plugins at startup. This PR adds getPlugin method to avoid future operator[] mishandlings. It gets a loaded plugin by paths OR names (even if the map is based on paths). Conclusion: **`operator[]` on maps should be globally avoided for read access**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:866,failure,failures,866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,2,['failure'],['failures']
Availability,This member was an error prone copy of `PluginRepository::vpath`.; PluginManager is now always in sync with PluginRepository. AddPluginRepository component has no effect without this change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/947:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/947,3,"['error', 'failure']","['error', 'failures']"
Availability,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2013:652,failure,failures,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013,2,['failure'],['failures']
Availability,"This methods override the default behavior of python. Now when writing: dir(myObject) this will returns the list of methods available in myObject but also the list with the Datas and the Links. Example with:; ```py; print(dir(myMechanicalObject)); ```; Will prints:; ```; ['__class__', '__delattr__', '__dir__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'addData', 'addNewData', 'applyRotation', 'applyScale', 'applyTranslation', 'bbox', 'bwdInit', 'cleanup', 'computeBBox', 'constraint', 'context', 'derivX', 'downCast', 'drawMode', 'externalForce', 'findData', 'findLink', 'force', 'free_position', 'free_velocity', 'getAsACreateObjectParameter', 'getCategories', 'getClassName', 'getContext', 'getData', 'getDataFields', 'getLink', 'getLinkPath', 'getListOfDataFields', 'getListOfLinks', 'getMaster', 'getName', 'getPathName', 'getSize', 'getSlaves', 'getTarget', 'getTemplateName', 'init', 'isToPrint', 'listening', 'mappingJacobian', 'master', 'name', 'position', 'printLog', 'reinit', 'reserve', 'reset', 'reset_position', 'reset_velocity', 'resize', 'restScale', 'rest_position', 'rotation', 'rotation2', 'scale3d', 'setSrc', 'showColor', 'showIndices', 'showIndicesScale', 'showObject', 'showObjectScale', 'showVectors', 'showVectorsScale', 'size', 'slaves', 'storeResetState', 'tags', 'topology', 'translation', 'translation2', 'useTopology', 'velocity']; ```. NB: There is minimal test to be sure this work.; NB2: I'm not found of this big list but didn't want to change the semantics to visually separate the links, the data and the methods. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/762:124,avail,available,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/762,2,"['avail', 'down']","['available', 'downCast']"
Availability,"This non-breaking PR:; - allows to set the index for input2 instead of using the last one; - allows to set the container. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2803:666,failure,failures,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2803,2,['failure'],['failures']
Availability,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1952:847,failure,failures,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952,2,['failure'],['failures']
Availability,"This option was missing in the visitor to init writeState components with a period.; Teaser: it will be useful in the new version of Regression. Also rename some parameters to be more explicit. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4744:740,failure,failures,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4744,2,['failure'],['failures']
Availability,"This package is needed by plugins when building tests out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2511:611,failure,failures,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2511,2,['failure'],['failures']
Availability,"This part of Sofa.GUI (main codebase):; - is an option in Sofa.GUI (strongly non-recommended in Sofa nowadays); - need X11 libs (so being deprecated with the arrival of Wayland); - almost 99.9% restricted to Linux due to X11; - has replacement (https://github.com/jnbrunet/SofaOffscreenCamera among others); - is not compiling 😂. So IMO it was time to make it a plugin (as in, being in `applications/plugins`); Due to all recent implemented mechanisms, it was quite straight-forward and almost as easy as simply cut-pasting into the new folder. IMO 2, I would even directly put it into an external fetchable plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4928:1160,failure,failures,1160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4928,2,['failure'],['failures']
Availability,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4227:135,error,error,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227,3,"['error', 'failure']","['error', 'failures']"
Availability,"This plugin allows us to load images using CImg API. For now this plugin is located in applications/plugins of Sofa, and does not supersede ImageQt/ImagePNG/ImageBMP. Tests and a simple scene to test all the supported formats are provided. An other pull-request will be done to remove ImageQt/ImagePNG/ImageBMP and their posssible dependencies in SofaKernel (e.g libpng), following further discussions. Linked to issue #51 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:655,failure,failures,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,1,['failure'],['failures']
Availability,"This pr aims at fixing the crash on exit for some python scene. It was due to the cache of the Sofa python module not being cleaned up correctly (deleted after the interpreter). This is corrected here by insuring that the interpreter is correcty released through cleanup callback (see the SofaPython3 pr for more insights) . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828:869,failure,failures,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828,2,['failure'],['failures']
Availability,"This pr clean most of warnings; The code has never been changed in terms of runtime, but sometimes one may thing that warning were here to detect potential error (passthrough in a case for instance).; The main remaining warning is the alreadydefine class but i will do that in a separate pr since I'm scared it changes behavior on other platforms. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1549:156,error,error,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1549,3,"['error', 'failure']","['error', 'failures']"
Availability,"This pr only goal is to test the Regression [PR #68](https://github.com/sofa-framework/Regression/pull/68). [ci-depends-on https://github.com/sofa-framework/Regression/pull/68]. PR hijacking!; [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/138]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942:814,failure,failures,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942,2,['failure'],['failures']
Availability,"This prevents creation of nodes / components with empty `names`, when instantiated in a ""non-conventional"" way:. ```py; py:; node.createChild(''); node.createObject('MyComponent', name=''); ```. ```xml; xml:; <Node name=""""></Node>; ```. By default, if `name` is not provided, unnamed is set in `name`. but if `name` is forcefully set to `""""`, there's currently no safeguards. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1009:632,failure,failures,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1009,2,['failure'],['failures']
Availability,"This pull request aims at add a new extension file (.tmg) supported by DistanceGrid. This extension file is used to represent a shape : it's a list of values corresponding to the function evaluated at each point. All the data are placed one after the other in a single column. ; It's a minor add which does not disturb anything in SOFA, so it shouldn't raise any problems. (edit - 08/08/17) The file is now able to provide the size of the grid : these 3 values (nx, ny, nz) are placed at the top of the .tmg file and are used at the DistanceGrid instaciation.; Example : . **Shape.tmg**; *Header with the grid size*; >150; 150; 150. *Values of the grid*; > 0.015; 1; 1; ... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/353:930,failure,failures,930,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/353,2,['failure'],['failures']
Availability,"This pull request aims at making the gravity clearly appearing in object nodes as a GravityForceField.; Old way to define gravity still works and is not deprecated. Main changes:; - By implementing this, the Mass is not inheriting from ForceField anymore.; - The optional mechanism of a separate gravity and the **Gravity** class are also deprecated.; - Default gravity is now 0 (therefore some scenes might fail and need an update). The GravityForceField can:; - either be manually added by the user in the node; - or the gravity can still be globally defined in the root node which will create the automatic creation of a GravityForceField for each mass in the graph. Fix: #2683. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/305]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/56]; [ci-depends-on https://github.com/sofa-framework/ci/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988:1431,failure,failures,1431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988,2,['failure'],['failures']
Availability,"This pull request allows the usage of the advanced timer ; 1. In the standard way; `runSofa -c 1`; 2. Only for the init functions:; `runSofa -c 0`; 3. For the init function and for every second step:; `runSofa -c -2`. Moreover, the usage of the advanced timer in batch mode works again:; `runSofa -c -2 -g batch -n 10`. Fixes #357 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/468:589,failure,failures,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/468,2,['failure'],['failures']
Availability,This pull request contains few cleaning cout/print/comments. @ChristianDuriez also added the dot poduct for SofaPython Quaternion; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/404:387,failure,failures,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/404,2,['failure'],['failures']
Availability,"This pull request does not change anything to the compilation, it only affects the install phase. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/383:354,failure,failures,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/383,2,['failure'],['failures']
Availability,"This pull request enhances the Operation::createPerformer function to provide more detailed error messages when it fails to create an InteractionPerformer. The function now includes precise diagnostic messages that indicates where the failure occurred, improving the ease of debugging and maintaining the code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880:92,error,error,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880,4,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,This pull request fix the problem proposed in issue #1390 . **1. BoxROI.inl**; Move the code piece; ```; if(!d_doUpdate.getValue()){; return ;; }; ```; in front of indices clear operations. **2. RestShapeSpringsForceField.inl**; Add warning message in function recomputeIndices(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1391:537,failure,failures,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1391,2,['failure'],['failures']
Availability,"This pull request fixes issue #3510. In a nutshell: PR #3299 introduced a change of behavior in how the keyboard inputs are taken into account by the GUI during a simulation. This modification is actually a good idea (see #3384), but it was pushed in #3299 by mistake and should be introduced distinctively (as it seems to be breaking for the majority of scenes). This PR simply reverts the two lines in #3299 responsible for the change of behavior.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3562:995,failure,failures,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562,2,['failure'],['failures']
Availability,This pull request removes classes implementing High Order simplicial elements from SOFA.; Those classes have been moved to plugin sofaFramework/ plugin.HighOrder; Updates include . - removing topological classes for High order triangulation and tetrahedral meshes; - removing tests associated with topological classes; - removing topological and mechanical mapping between regular and highorder meshes; - update of MeshMassMatrix by removing code to compute mass of high order elements. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222,1,['failure'],['failures']
Availability,This pull-request adds the following features ; - add numerical integration on tetrahedra and triangles; - add a mechanical tag on a PointSetGeometry object in order to find its associated MechanicalObject; - add the orthogonal of a 2d vector; - add support of high order elements in VTK and Gmesh mesh loaders. It also fixes some bugs ; -Quand2Triangle Topologivcal mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:606,failure,failures,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,1,['failure'],['failures']
Availability,This removes some override warnings that were (re)introduced recently. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/520:327,failure,failures,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/520,2,['failure'],['failures']
Availability,This removes warnings that appear when running runSofa from a directory where it was installed from source. This should not affect compilation in any way (but not sure how it would affect packaging Sofa). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687:461,failure,failures,461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687,2,['failure'],['failures']
Availability,"This request contains: ; - Add new tests to LocalMinDistance; - Add new tests Light (the three kind of light); - Add AllComponent (this test is failling until all component have an associated example file, on failure it reports the number of missing examples); - Add new test to LightManager . The ChangeLog is updated with the content of this pull-request.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/89:209,failure,failure,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/89,1,['failure'],['failure']
Availability,This scene makes no sense since no ShapeMatchingForcefield is existing; in SOFA public. Another scene already shows ShapeMatching example; using the ShapeMatching engine:; ICPRegistration_ShapeMatching_Engine.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/331:470,failure,failures,470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/331,2,['failure'],['failures']
Availability,"This scene using the Mouse interaction (*Edit->MouseManager-> attach with bilateral constraint*) illustrates the bug @alxbilger : . ``` xml; <?xml version=""1.0"" ?>; <Node name=""lroot"" gravity=""0 -9.81 0"" dt=""0.02"">; <RequiredPlugin pluginName=""Sofa.Component.Constraint.Projective Sofa.Component.LinearSolver.Iterative Sofa.Component.Mapping.Linear Sofa.Component.Mass Sofa.Component.ODESolver.Backward Sofa.Component.SolidMechanics.FEM.Elastic Sofa.Component.StateContainer Sofa.GL.Component.Rendering3D Sofa.Component.Topology.Container.Dynamic Sofa.Component.IO.Mesh Sofa.Component.Constraint.Lagrangian.Solver Sofa.Component.Constraint.Lagrangian.Correction Sofa.Component.Collision.Response.Contact Sofa.Component.Collision.Geometry Sofa.Component.Collision.Detection.Intersection Sofa.Component.Collision.Detection.Algorithm Sofa.Component.AnimationLoop"" />; <DefaultVisualManagerLoop/>. <FreeMotionAnimationLoop />; <!-- <LCPConstraintSolver tolerance=""0.001"" maxIt=""1000""/> -->; <GenericConstraintSolver tolerance=""0.001"" maxIterations=""1000"" />. <DefaultPipeline name=""CollisionPipeline"" verbose=""0"" />; <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""collision response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection/>. <MeshOBJLoader name=""LiverSurface"" filename=""mesh/liver-smooth.obj"" />. <Node name=""Liver"" gravity=""0 -9.81 0"">; <EulerImplicitSolver name=""cg_odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver name=""linear solver"" iterations=""25"" tolerance=""1e-09"" threshold=""1e-09"" />; <MeshGmshLoader name=""meshLoader"" filename=""mesh/liver.msh"" />; <TetrahedronSetTopologyContainer name=""topo"" src=""@meshLoader"" />; <MechanicalObject name=""dofs"" src=""@meshLoader"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; <DiagonalMass name=""computed using mass density"" massDensity=""1"" geometryState=""@dofs"" topology=""@topo""/>; <TetrahedralCorotationalFEMForceField template=""Vec3d"" name=""FEM"" method=""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916:949,toler,tolerance,949,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916,2,['toler'],['tolerance']
Availability,"This scene was using a TriangleFEMForceField and exploding. This is not possible as the projectToPointConstraint is constraining several points in a single position, leading to flat triangles. ; Using a MeshSpringForceField instead. ![ProjectToPointConstraint_00000001](https://user-images.githubusercontent.com/21199245/161145056-22a75286-ccf8-4346-b10f-b7059e5738e8.png). ![ProjectToPointConstraint_00000002](https://user-images.githubusercontent.com/21199245/161145064-b0fb09f8-3235-498b-b019-12170b1ad6ef.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2827:1059,failure,failures,1059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2827,2,['failure'],['failures']
Availability,This shoud fix #1243 and several issues pointed out on the forum. Return was preventing from recomputing topology internally. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245:382,failure,failures,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245,2,['failure'],['failures']
Availability,This should avoid confusion in constraint resolution when mixing integration factors.; Let's see how this affect the CI. This affects the UncoupledConstraintCorrection : the flag _useOdeSolverIntegrationFactors_ is now true by default. This enforces to respect values returned by the ODESolver. See this [forum topic](https://www.sofa-framework.org/community/forum/topic/bilateralinteractionconstraint-reduces-gravity-by-100x/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:685,failure,failures,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,2,['failure'],['failures']
Availability,This should avoid issue #768. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/778:286,failure,failures,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/778,2,['failure'],['failures']
Availability,This should avoid us to scroll through the entire build output searching for a crashed unit test (often due to a segfault).; It is just re-printing the output that was already printed. Some dump is still needed to debug the crash (see PR #191). This PR fixes issue #149. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/195:501,failure,failures,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/195,1,['failure'],['failures']
Availability,"This should fix ""a few"" failing scene tests due to ColladaSceneLoader on Windows. See the Details tab of https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64_pr1/526/warnings2Result/category.96784904/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/504:468,failure,failures,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/504,2,['failure'],['failures']
Availability,"This should fix #5065. EDIT: `actions/setup-python` could be used to provision the Python install de Python (install provided by the OS). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5066:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5066,2,['failure'],['failures']
Availability,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1940:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940,2,['failure'],['failures']
Availability,This should fix CMake errors like `file cannot create directory: C:/softwares/sofa-soft-build/$C:/softwares/sofa-soft-install/plugins/SofaMiscCollision/lib` on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154:22,error,errors,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154,3,"['error', 'failure']","['errors', 'failures']"
Availability,This should fix all the scene crashing when performing topological change with some mechanicalMapping in the scene. Like for example identityMapping between the mechanicalObject and the OglModel. This is a temporary fix. Those 2 visitors will be removed as soon as all the component listed in #810 will be updated to use TopologicalData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/880:594,failure,failures,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/880,2,['failure'],['failures']
Availability,This should fix failing scene tests due to issofa_plugin merge ; Failures were due to wrong `plugin_list.conf` path implying no plugin loading. Added some output to understand better were this list is loaded from (especially in case of failure). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502:65,Failure,Failures,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502,4,"['Failure', 'failure']","['Failures', 'failure', 'failures']"
Availability,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1769:594,failure,failures,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769,2,['failure'],['failures']
Availability,"This should fix the CUDA issue on CI. Issue was due to SofaCUDA having a version number (instead of NO_VERSION) and thus not being deactivated for scene tests by CI scripts (main.sh). We chose to deactivate SofaCUDA for scene tests because VMs can't run CUDA (or can they?).; In CI, SofaCUDA is only compiled, never executed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1123:582,failure,failures,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1123,2,['failure'],['failures']
Availability,This should fix the failing ImagePng test failure. . The problem is the consequence of the use of the ExpectMessage RAII without adding a CountingMessageHandler to the MessageDispatcher. This is quick fix but more fundamentally we need an API improvement to make; that automatical/hidden. But how to do that in an efficient way is yet unclear.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/92:42,failure,failure,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/92,1,['failure'],['failure']
Availability,"This should fix the issues raised by @alxbilger when compiling https://github.com/sofa-framework/SofaGLFW/pull/41. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2940:659,failure,failures,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2940,2,['failure'],['failures']
Availability,This shouldn't break anything and is a first step toward the slighgly more ambitious pr #601 . CHANGELOG:; - update gtest from their master (version 1.9: sha1 447d58b4ee8ea96b4757a5bb5f0b3be75af6c2a1); - update the CMakeLists so that they correctly export the needed -D to be used as a shared library; - Fix the problem of missing GTEST_API_ operator<< gtest by implementing the function in TestMessageHandler_test instead of gtest. NB: A better FIX for the GTEST_API_ operator<< could be to make submit PR to gtest but I have no more time left. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604:804,failure,failures,804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604,2,['failure'],['failures']
Availability,"This solves the issue : [runsofa] -a -n conflict for batch #552; In case to run infinite iterations, the command to be run in command line is: ; bin/runSofa -g batch -n -1. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/610:429,failure,failures,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/610,2,['failure'],['failures']
Availability,"This tests may be merged before refactoring otherwise it is harder to keep track of API changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1714:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1714,2,['failure'],['failures']
Availability,"This unit test, based on the issue #3499, crashes and waits for a fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3501:615,failure,failures,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3501,2,['failure'],['failures']
Availability,"This utility component takes one mechanical object and one constraint solver as input links and computes the forces induced by the constraints applied on the mechanical object. (it can also display those forces with a debug rendering). This feature seems to be quite recurrent from the discussions.; It suppose it would have been easy to do it with python bindings directly, but I did not find any mechanism to retrieve the constraint matrix (with its peculiar format) from the mechanical object. (and I prefer c++/scn anyway 🤫). https://user-images.githubusercontent.com/11028016/190094711-a9acea8b-154d-43fd-977b-c64e1f37813f.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3294:1177,failure,failures,1177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294,2,['failure'],['failures']
Availability,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1956:636,failure,failures,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956,2,['failure'],['failures']
Availability,"This version is a following the effort started in #1605 and #1611 to clean TypeInfo. . In #1611 I tried to remove the hard dependency to all typeinfo and ODR violation by using the TypeInfoRegistry to get ; the typeinfo. The missing types were detected at runtime... In this version I found what is actually a much easier solution that removes the ODR violation and removes the need to typeinforegistry. . There is also two positive sides effects I see:; - in #1611 the missing types (one not having a datatype) were detected at runtime while in this one they are detected at link time with a single message like the one:; ""; undefined reference to 'sofa::core::objectmodel::Data<sofa::helper::vector<sofa::core::topology::Topology::Pyramid>::getValueTypeInfo() ; ""; - the mechanism is combined with the systematic use of declaring extern class Data<MyType>. The TypeInfo registration/generation is done where the Data<MyType> is not declared as extern. Comments welcome,; D. ; PS: I was also playing with Data/TData but this is for another PR so you can skip that part. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1632:1615,failure,failures,1615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1632,2,['failure'],['failures']
Availability,This was only needed so that Data can be used with Link. As this is now a; deprecated feature we can remove this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1541:370,failure,failures,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1541,2,['failure'],['failures']
Availability,"This was preliminary introduced in SofaGLFW/SofaImgui, where a new GUI is loaded at run-time; Contrary to the batch/qt/headlessrecorder GUIs which are forcefully linked at compile-time through SofaGui, which could depend (or not) on Qt, etc according to the CMake config,. SOFANG works already made all the different GUIs as independent libraries but ultimately the SofaGui was still present because of the fact that runSofa was still relying on this mechanism. Now :; - Qt/Batch/HeadLessRecorder are loadable plugins and register themselves in the GUIManager, if loaded .; - Batch is still forcefully loaded by runSofa ; otherwise it could be possible to run SOFA without any GUI (I am not against having this possibility tho); - SofaGui is officially deprecated 🎇. Remarks: ; - after this PR, I would really like to move HeadlessRecorder in applications/plugins (either that in the ""official"" SOFA trunk) as it is only supported on Linux, needs X libs dev and I dont even know if people really uses it.; - showing help will only show the help for the runSofa options not the ones introduced by the eventual plugins....; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3550:1666,failure,failures,1666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550,2,['failure'],['failures']
Availability,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1771:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771,2,['failure'],['failures']
Availability,"This will avoid updating each year the header, thus polluting the history of the code.; Update list of authors of SOFA. Perl code used for additional cleaning:; ```batch; perl -0777 -i -pe ""s/((\*){78}\/\n)((\/)(.*?)(\n)|\n|(\s*?)\*(.*?)(\n))/\1/s""; ```. Following files could also be discussed:; - SofaKernel/modules/SofaBaseCollision/IntrCapsuleOBB.inl; - SofaKernel/modules/SofaHelper/src/sofa/helper/RandomGenerator.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/gl/Trackball.cpp // h ; - SofaKernel/modules/SofaHelper/src/sofa/helper/polygon_cube_intersection/fast_polygon_cube_intersection.cpp // h; - applications/projects/meshconv/meshconv.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375:978,failure,failures,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375,2,['failure'],['failures']
Availability,"This will enable creating SOFA packages on Linux when Qt is installed from the package manager instead of the Qt installer. It also fixes some missing dependencies on Linux distros other than ubuntu 18.04. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728:750,failure,failures,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728,2,['failure'],['failures']
Availability,This will fix the crashing DistanceGridForceField-liver.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/591:317,failure,failures,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/591,2,['failure'],['failures']
Availability,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1971:839,failure,failures,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971,2,['failure'],['failures']
Availability,"This won't be enough. All bindings made for SofaPython fail when building in C++17.; ```; [1208/2186] Building CXX object modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; FAILED: modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; < ... >; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.cpp:24:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.h:25:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonMacros.h:29:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonCommon.h:27:; In file included from /usr/include/python2.7/Python.h:88:; /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]; register PyObject *obj, /* Object */; ^~~~~~~~~; ```; See https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1284/CI_CONFIG=ubuntu_clang-6,CI_PLUGINS=options,CI_TYPE=release/2/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480:1198,error,error,1198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480,1,['error'],['error']
Availability,"This work aims at having a complete Doxygen documentation of SOFA components, especially concerning their Datas. I used the shell script doxygenDataComments.sh to; 1. Force each Data to be defined on one line; 2. Add an inlined and Doxygen-formatted comment on each Data (if no comment found) copying the description used in `initData`. Obviously this has not a 100% coverage (it ""only"" affects Data<.*> written members) but it's still a very good start. PS: our nightly-generated Doxygen is ready to receive these changes: https://www.sofa-framework.org/newapi. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/546:819,failure,failures,819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/546,2,['failure'],['failures']
Availability,"This work is initially from @Camille-K in his branch https://github.com/Camille-K/sofa/tree/dev_limited_RestShapeSpringsForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3850:676,failure,failures,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850,2,['failure'],['failures']
Availability,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4436:1047,failure,failures,1047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436,2,['failure'],['failures']
Availability,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4465:750,failure,failures,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465,2,['failure'],['failures']
Availability,"Those macro are needed if you are trying to enhance the gui from your plugin linking with SofaGuiQt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2555:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2555,2,['failure'],['failures']
Availability,Those scene are failing in PR #3339 but from my understanding they were broken since a long time. The PR just reveal their failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1301987269:123,failure,failure,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1301987269,1,['failure'],['failure']
Availability,Those scenes were not tested? How did you detect the error?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041:53,error,error,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041,1,['error'],['error']
Availability,"Through a blog, i tried a new way to compute the rotation of a Vec3 with a Quaternion from the famous [glm library](https://github.com/g-truc/glm); (that is to say, the method is tested thoroughly I suppose....); https://github.com/g-truc/glm/blob/cc98465e3508535ba8c7f6208df934c156a018dc/glm/detail/type_quat.inl#L347. Measured with SofaBenchmark (), MSVC/full optim enabled (LTO and full-inlining):; ```; before: BM_Quat_rotateVec/8192 46.4 us; after: BM_Quat_rotateVec/8192 33.6 us; ```; FYI, RelWithDebInfo (no inlining) ; ```; after: BM_Quat_rotateVec/8192 38.0 us; ```. GCC on Ubuntu has pretty much the same behavior. And this PR add some tests between the previous and the new implementations. Related SofaBenchmark PR : https://github.com/alxbilger/SofaBenchmark/pull/25; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3138:1325,failure,failures,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3138,2,['failure'],['failures']
Availability,"Throw an exception when denominator is zero. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2929:589,failure,failures,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2929,2,['failure'],['failures']
Availability,"Timers have been transformed to `AdvancedTimer`.; `MechanicalGetConstraintInfoVisitor` has now its own file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2640:653,failure,failures,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2640,2,['failure'],['failures']
Availability,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4300:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300,2,['failure'],['failures']
Availability,Title says all (at least on Windows/MSVC). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1425:299,failure,failures,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1425,2,['failure'],['failures']
Availability,Title says all :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] has been reviewed and agreed to be transitional.; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/240:249,failure,failures,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/240,1,['failure'],['failures']
Availability,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1911:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911,2,['failure'],['failures']
Availability,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2045:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045,2,['failure'],['failures']
Availability,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1983:808,failure,failures,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983,2,['failure'],['failures']
Availability,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2279:610,failure,failures,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279,2,['failure'],['failures']
Availability,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2247:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247,2,['failure'],['failures']
Availability,"Title says all.; Not detectable on the CI unfortunately.; Thanks to @alxbilger for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2841:639,failure,failures,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2841,2,['failure'],['failures']
Availability,Title says it all. SofaMacros.cmake was becoming more and more messy. Nothing changes in the macros/functions (I promise :angel:). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1477:387,failure,failures,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1477,2,['failure'],['failures']
Availability,Title says it all. Sorry for the messy quick fixing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/619:309,failure,failures,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/619,2,['failure'],['failures']
Availability,Title speaks for itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/981:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/981,2,['failure'],['failures']
Availability,"Title. The CI should not be impacted by this PR (hopefully). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3628:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3628,2,['failure'],['failures']
Availability,"Title. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3637:551,failure,failures,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3637,10,['failure'],['failures']
Availability,"To avoid NaN propagation when a wrong constraint is created using barycentricMapper and CreatePointLine. Also add a small changes in regularGrid done during debug division by 0. fix https://github.com/sofa-framework/BeamAdapter/issues/55 (does it works across repo?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3383:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3383,2,['failure'],['failures']
Availability,"To be discussed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3956:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3956,2,['failure'],['failures']
Availability,"To be merged after https://github.com/sofa-framework/sofa/pull/2588. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2597:613,failure,failures,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2597,2,['failure'],['failures']
Availability,To complete the new doc page on [ShewchukPCG](https://www.sofa-framework.org/community/doc/components/linearsolver/preconditioned-cg/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1420:392,failure,failures,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1420,2,['failure'],['failures']
Availability,"To experiment a new handling of sparse matrices under mappings in our plugin, a few changes are needed in the core of SOFA.; Main changes:; - Add a new function in MechanicalObject (commit 6a6fd98).; - Refactoring of MatrixDerivId: warning holonomicC() is deprecated --> replaced by constraintMatrix (commit 966f9af).; - Change allocation in createMatrix from a fullMatrix to a sparseMatrix.; Linked to #26 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276:665,failure,failures,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276,2,['failure'],['failures']
Availability,"To fix rendering bug reported in https://github.com/sofa-framework/sofa/discussions/3100; Also restore the `msaa` command line option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3105:679,failure,failures,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3105,2,['failure'],['failures']
Availability,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2213:583,failure,failures,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213,2,['failure'],['failures']
Availability,"To make it more simple to manage deprecation and more specifically to not override the parse() method for that purpose. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3934:664,failure,failures,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934,2,['failure'],['failures']
Availability,"To move forward in order to be ready for c++20 modules we need to clean the dependency graph of SOFA. This PR is going in this direction by removing most of the dependency to BaseVector.h, BaseMatrix.h and StringUtils.h. . In SOFA we often use this pattern; ```cpp; class MyClass; {; public:; typedef int Index; ; };; ``` . Which impose a dependency to the full MyClass definition to manipulate indices. ; I design pattern avoiding this problem is used in the PR. This PR work as the following: ; ```cpp; /// Forward declaration; class MyClass;; typedef int MyClassIndex;. /// Definition ; class MyClass; {; public:; typedef MyClassIndex Index; ; };; ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1509:913,failure,failures,913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1509,2,['failure'],['failures']
Availability,To move rmath.h from the header I had to moved the code that rely on rmath into Vec.inl so that the include is not spread all around the codebase. Now if you want to instanciate special version of the Vec templates you need to include Vec.inl either. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1543:509,failure,failures,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1543,2,['failure'],['failures']
Availability,To prepare for runSofa2 i feel the need to refactor some aspects. . CHANGELOG:; - ADD a Camera object inheriting from BaseCamera so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement your own 'application specific behavior' by using an external Controller (eg: PythonScriptController).; - ADD a link in BaseCamera to a BackgroundSetting so different camera can have different background. ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object; - Update the caduceus example.; - Light object now have a drawSource so that it is possible to draw the source from without having to change the d_drawSource data field.; ; This PR replace #674 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:1037,failure,failures,1037,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,2,['failure'],['failures']
Availability,"To register the data type info into the TypeInfoRegistry I used partial specialization of the Data class. ; The default implementation of AbstractTypeInfoRegistration is using the old code system (which imply a dependency to all the TypeInfo_xxxx.h). . For progressive migration to new typeinfo system, the selected typeinfo are specializating their custom AbstractTypeInfoRegistration. This custom registration is using the new system. To make sure that the partial specialization is used, the migrated types are declared as extern so we are sure there is a single registration. . An additional advantage of explicit extern declaration of Data is that this avoid bloating the compiler with all the data type to instanciate in every compilation unit. . Done:; - Data[bool]; - Data[RGBAColor] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3289:1338,failure,failures,1338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3289,2,['failure'],['failures']
Availability,To relax after discussions on DataEngines i clean that;. This one is based on stc5 branch (not master). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/818:360,failure,failures,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/818,2,['failure'],['failures']
Availability,"To reproduce the bug, simply add a `msg_error()` at the first line of `static std::string computeSofaPathPrefix()` (sofa/helper/Utils.cpp) on a mac OSX system. I believe this bug was due to an order mixup of global static initializer since this bug wasn't affecting Linux (not sure about Windows). I would need more time to prove this though. I moved the faulty global static intializer to local static initializer and that fixed the crashes. It may be a good idea in the future to minimize the uses of static objects (singletons, static global variables, etc) since they are pretty hard to debug and can cause behaviors dependent of the compiler used. @guparan could you test this in your PR #635 (by reinserting the msg_error) and make sure that the seg fault is gone?. Fixes #636 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642:355,fault,faulty,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642,4,"['failure', 'fault']","['failures', 'fault', 'faulty']"
Availability,"To summarize, this PR #113 allows to include the latest c++11 functionalities. From now on, the sofa::helper::(list, map etc.) should not be used. The **std::** should be preferred.; However, there are drawbacks:; - it's invasive (add operators directly in std); - conflicts / redefinition / ambiguity compiler errors / silently override could arise by using SOFA in an application doing the same. So this is **TEMPORARY**.; I added a todo in the focused header files. The discussion remains open.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-275346823:311,error,errors,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-275346823,1,['error'],['errors']
Availability,"To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965:730,redundant,redundant,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965,1,['redundant'],['redundant']
Availability,"To use a LinearForceField, we need to specify a series of key times associated with forces. However, when simulation time goes beyond the last key time, the force becomes zero instantly. This PR changes it so that it stays at the last specified force instead.; There are a few more small changes to remove some warnings and to use SOFA coding conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/525:612,failure,failures,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/525,2,['failure'],['failures']
Availability,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:3388,failure,failures,3388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,2,['failure'],['failures']
Availability,"TopologySubsetIndices can be initialized before their corresponding TopologyContainer is total init depending on the component graph order.; Therefor the member `m_lastElementIndex` used to store the size of the TopologyBuffer could be set to 0. Override the method `getLastElementIndex() ` in `TopologySubsetIndices` (and put it in const) to get the number of points as a TopologySubsetIndices is always used on the Point topology. This method is called before removing elements to make sure we use and up to date value of m_lastElementIndex before doing any process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3331:1113,failure,failures,1113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3331,2,['failure'],['failures']
Availability,"Towards a green dashboard. Scene was broken since the change on StaticSolver; But I am not convinced it was even working before, the simulation seems very unstable. A python script handling the incremental loading is added. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1064:480,failure,failures,480,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1064,2,['failure'],['failures']
Availability,"TriangleOctree is used in some case where people wants to do ray tracing on an octree structure (filled with triangles); It makes more sense to move it in helper, as it is not a component but a shared utility class potentially used by something else than ""GeneralCollisionMesh"" things (whatever that means). Based on; - #2763 ; ; Breaking 'cause I removed dependency on VisualTool (Sofa.Core) to use directly Drawtool. Still, it has a compat file to redirect deprecated usages.; Removed more useless headers...; This class would need a quite heavy facelift BTW. PS: There was a weird include of defaulttype/fwd.h in DrawTool which was undetected until now, 🤥 ??. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2805:1207,failure,failures,1207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2805,2,['failure'],['failures']
Availability,"Triangles `or `TrianglesAroundEdges `as well as `d_triangles `array inside a `TetrahedronToplogy `where empty at start and created only the first time a getter is called.; For example: `getEdgesInTriangleArray()` was calling: `if(m_edgesInTriangleArray.empty()) createEdgesInTriangleArray()` . This works but means at start component are not fully init (potential unstable behavior) and there is no warranty at which timestep buffer will be created. ; Furthermore means that getter are not const and could change the content of the container which is a bad design (in my opinion). **This PR force the computation of all buffers at component init** using a dedicated method `initTopology()` which is called in cascade -> `Tetrahedron::initTopology()` will call `Triangle::initTopology()` -> `Edge::initTopology()`; **and remove all buffer creation call from the getter.**. - Additional changes: ; - Add more check in the buffer creation methods. Potentially exit if creation is not possible (will return bool in future changes).; - Always check buffer size access in the getter. If out of bound acces, returns Invalid element and only emit a warning if CHECK_TOPOLOGY is ON, as this call could be logical and the caller should check the invalid return. ; - Update all topologicalMapping to init the target topology at end of mapping init. ; - **Add some static invalid buffers in sofa::core::topology::Topology.h -> Im not fully happy about those add. Any better suggestion is welcomed.**. fixes #746; fixes #955; fixes #956 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/967:1929,failure,failures,1929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/967,2,['failure'],['failures']
Availability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in Sofa modules see #1237 for changes in SofaKernel. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1236:171,error,errors,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1236,3,"['error', 'failure']","['errors', 'failures']"
Availability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in SofaKernel. See #1236 for changes in Sofa Modules. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1237:171,error,errors,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1237,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Trivial removeal of compilation warnings. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3494:588,failure,failures,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3494,2,['failure'],['failures']
Availability,Try to fix additional warnings !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1210:290,failure,failures,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1210,2,['failure'],['failures']
Availability,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1909:718,failure,failures,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909,2,['failure'],['failures']
Availability,"Trying to implement strict type for setValue() and stumbled on ClusteringEngine which was setting wrong values (copy-paste I suppose). \+ fix other strict type usages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3398:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3398,2,['failure'],['failures']
Availability,"Trying to include the SofaExporter module in an external project (out-of-tree build of a plugin || test) was not functional since include directories were not exposed properly. I took inspiration from CImgPlugin for this PR, which uses CMAKE_CURRENT_SOURCE_DIR to expose the target's include directory.. but I believe this is actually wrong as this corresponds to the path to the sources (`/home/bruno/dev/sofa/modules/SofaExporter/src/` in my case for instance) and not to the installed include directory, (which should be `/home/bruno/dev/sofa/build/install/include/SofaExporter/src/SofaExporter` on my machine). I took a look at other plugins & pluginized modules & they all seem to do this, so Idk if it's a mistake or done on purpose..?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/975:999,failure,failures,999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/975,2,['failure'],['failures']
Availability,"Trying to list automatable tests we could/should implement.; Feel free to complete it!. - ProjectiveConstraint:; - ""projectResponse"" could be tested by finite differences on ""projectPosition""; - MultiMapping:; - ""getK"" (assembled API) could be compared to ""applyDJT"" (non assembled API); - ForceField:; - masks: all the non-null lines of the stiffness matrix should have an entry in the mask vector (conservative test, i.e. the mask can contain more entries); - the compliance matrix should be equal to the inverse of the stiffness matrix (maybe with a different sign); - {Multi}Mapping; - masks: all the non-null columns of the Jacobian matrices should have an entry in the parent mask vectors (conservative test, i.e. the masks can contain more entries)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/111:305,mask,masks,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/111,6,['mask'],"['mask', 'masks']"
Availability,Turn ForceField init method as final and internally call a delegate fonction doInit which can be overide. This is to avoid adding a call super in each forcefield as ForceField::init has to be called in the current api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506:475,failure,failures,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506,2,['failure'],['failures']
Availability,"Tutorials were not configuring. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3200:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3200,2,['failure'],['failures']
Availability,"Two change needed by the SofaPython3 plugin. . - In BaseData Some method have two version, one without arguments the other with an ExecParm. In pybind11 we need to differentiate explicitely the two version making the code more complex. As I see no good reason why to keep the two version in Sofa I merged these two into one by using a default param = nullptr. . - I have added a join/split function in the StringUtils class. . - In SimpleAPI I found allowing BaseObjectDescription useful to create object and node. So I added new functions.; _____________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/860:797,failure,failures,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/860,2,['failure'],['failures']
Availability,"Two events are launched during the constraint solver pipeline:; - `BuildConstraintSystemEndEvent` is launched after the constraint system has been built; - `SolveConstraintSystemEndEvent` is launched after the constraint system has been solved. This allows a Python controller to subscribe automatically to those events if the controller implements `onBuildConstraintSystemEndEvent` and `onSolveConstraintSystemEndEvent`:. ```python; class MyController(Sofa.Core.Controller):; def __init__(self, *args, **kwargs):; Sofa.Core.Controller.__init__(self, *args, *kwargs); ; def onBuildConstraintSystemEndEvent(self, params):; print(""BuildConstraintSystemEndEvent event received ""+str(params)). def onSolveConstraintSystemEndEvent(self, params):; print(""SolveConstraintSystemEndEvent event received ""+str(params)); ```. In collaboration with @TanguyNav and @EtienneMenager. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3418:1413,failure,failures,1413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3418,2,['failure'],['failures']
Availability,"Two forcefields were existing and very similar:; - UniformVelocityDampingForceField : real applied similarly in a isotropic on each dofs (x, y, z); - DiagonalVelocityDampingForceField : possibly anisotropic vector of damping coefficient per node. Unify these two with the NodalLinearDampingForceField. One question : which input do we want ; - a real; - a vector of real (which not existing so far); - a vector of Deriv (allowing for anistropic damping while we do not do much anistropy in SOFA). Remaining TODO; - [ ] Update all tests; - [ ] Update all examples. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4920:1108,failure,failures,1108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4920,2,['failure'],['failures']
Availability,Two minor changes:; - Remove FixedConstraint redundant with LinearMovementConstraint (on same DOFs); - Improve warning comment in MeshMMass when using explicit resolution (accFromF) with non-lumped sparse matrix. NOTE: I realized no sparse MassMatrix can therefore be used in explicit formulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/983:45,redundant,redundant,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/983,3,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"Two minor cleanings:; - clean dirty codes using `NDEBUG` to avoid warning and use `SOFA_UNUSED`; - remove last occurrence of SOFA_DEBUG . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4971:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4971,2,['failure'],['failures']
Availability,"Two new components:; - ComplianceMatrixExporter: Exports the compliance matrix of a constraint solver into a file; - ComplianceMatrixImage: visualization of the compliance matrix in the GUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2782:735,failure,failures,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2782,2,['failure'],['failures']
Availability,"Two new menu entry are added in the SceneGraph view to jump to the source file location corresponding to the selected object. This PR is based on #1012 to get the file location. ; By default qtcreator will be used to open the file. ; But this can be changed by editting the config file saved by the QSetting mecanism. . NB: The ""Go To implementation"" really make sense when using STLIB as it allows ; to jump where a prefab is implemented. It would be nice if we could do the same for c++ ; but this is of lesser interest ...because we need to compile sofa to see a change :) . EDIT: small video show how it works ; [![video](http://img.youtube.com/vi/zzOY-Lt0vgM/0.jpg)](http://www.youtube.com/watch?v=zzOY-Lt0vgM); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1013:973,failure,failures,973,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1013,2,['failure'],['failures']
Availability,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996:1641,failure,failures,1641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996,2,['failure'],['failures']
Availability,"Two pendulum links by their extremities. ![image](https://user-images.githubusercontent.com/10572752/226943766-038894a0-5298-4a7e-a6c1-bd5a29d2d0a8.png). [ci-depends-on https://github.com/sofa-framework/Regression/pull/40]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3742:768,failure,failures,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742,2,['failure'],['failures']
Availability,Two thing:; - @epernod some of your code includes changes not merged yet on component**S**tate; - ```Sleep()``` on Linux is not working. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1393:393,failure,failures,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1393,2,['failure'],['failures']
Availability,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1951:826,failure,failures,826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951,2,['failure'],['failures']
Availability,"Two variables with the same name in the same scope: declaration hides previous local declaration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2463:642,failure,failures,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2463,2,['failure'],['failures']
Availability,"Typo in the name of the variable in an assert, so compiled only in Debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2417:618,failure,failures,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2417,2,['failure'],['failures']
Availability,"UPDATE: SofaHelper compilation with msvc. libpng should not be forced; to be linked using pragma directive. The name of the library may vary,; and it the debug version may well not be available, and its; unavailability should not break the debug build. I fell in the same problem as the one mentionned in issue #443 while compiling; with msvc in debug, without having on my system a version of the libpng ; library called ""libpngd.lib"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/446:184,avail,available,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/446,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Uber PR. - some instanciations were still refering to Vec3dTypes (instead of Vec3Types); - confusion between double and SReal; - Vector3 used as Vec<3. SReal> (confusion with Matrix3 for example which is effectively Mat<3,3,SReal>...); - MeshMatrixMass mixing MassType and DataTypes::Real; - Fix some double* cast to a float*...; - Fix a rounding error with float in regulargrid (**realllllllly** old bug); - short demo on godbolt: https://godbolt.org/z/no6hss6jr; ; -> massive use of auto and getAccessor(). This PR should be exactly the same if SOFA_FLOATING_POINT_TYPE is set to double (hopefully); ~The only breaking things are in MeshMatrixMass~. actually it should not be. I have ported the code from the standard set of sofa modules/plugins so plugins/tests are likely to fail (with float); CI is using double so it will only test if there is no regression. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2560:347,error,error,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2560,3,"['error', 'failure']","['error', 'failures']"
Availability,"Unexpectedly enabled this option in one of my build...; This class did not follow the renaming bloc to block in #2404 (#2329) . CI result is useless as the CRSMultiMatrixAccessor is not activated on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2456:747,failure,failures,747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2456,2,['failure'],['failures']
Availability,"Unfortunately Gaurab seems to be unreachable those days. As I want to use his good work, here is a quick cherry pick of his PR #639. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/669:389,failure,failures,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/669,2,['failure'],['failures']
Availability,Unfortunately no. SofaPython3 builds without error on my Ubuntu 18.04; My config:; - SOFA v20.06 binaries unzipped in my home; - pybind11 2.4.3 installed in my system; - python 3.8.3 installed in my system,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967,1,['error'],['error']
Availability,"Uniform size type to be same type as index_type; + move index_type to sofa namespace (in sofa/config.h); (was located in defaulttype before, does not really make sense). So now : ; - index_type is defined as sofa::index_type; - size_type is defined as sofa::size_type ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1515:526,failure,failures,526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1515,2,['failure'],['failures']
Availability,"Unit should not be specified in the GUI, nothing tell us that seconds are used.; This PR just remove the secs from the GUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2742:668,failure,failures,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2742,2,['failure'],['failures']
Availability,"Unit tests for `IdentityMapping`.; `coordDifference` did not exist for `Rigid2` so it is also introduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5094:650,failure,failures,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5094,2,['failure'],['failures']
Availability,"Unix timeout command is now accessible in Windows VMs (using ""Git for Windows"" Bash). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/379:342,failure,failures,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/379,2,['failure'],['failures']
Availability,"Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1905,Error,Error,1905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['Error'],['Error']
Availability,"Update CONTRIBUTING.md further to 20170503 SOFA meeting. - Track the status of each pull request using labels.; - If an issue reports a bug or any abnormal behavior in SOFA, a test highlighting the issue must be written. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260:451,failure,failures,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260,1,['failure'],['failures']
Availability,Update ChangeLog to better guide users when facing issues with recent breaking PRs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1562:340,failure,failures,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1562,2,['failure'],['failures']
Availability,Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454:359,failure,failures,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454,2,['failure'],['failures']
Availability,Update further to work on the upcoming Optimus plugin:; thanks @guparan for solving the issue !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1498:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1498,2,['failure'],['failures']
Availability,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2172:1244,failure,failures,1244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172,2,['failure'],['failures']
Availability,"Update the guidelines so that they take into account the latest discussions and conclusion regarding the policy for:; - auto,; - epsilon,; - messaging,; - getContext(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1135:425,failure,failures,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1135,2,['failure'],['failures']
Availability,"Update the list of plugins to NOT auto-load when executing runSofa from the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3197:629,failure,failures,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3197,2,['failure'],['failures']
Availability,Update:; - Components/forcefield/BeamFEMForceField.scn fixed; - Components/constraint/BilateralInteractionConstraint.scn 100 1e-4; - ERRORBYDOF: 22.9926 ; - Demos/caduceus.scn 100 1e-3; - ERRORBYDOF: 2.68482; - Components/collision/FFDDistanceGridCollisionModel.scn 100 1e-4; - Moved into a plugin.; - Components/constraint/FrictionContact.scn 100 1e-4; - ERRORBYDOF: 1.45887; - Components/collision/RuleBasedContactManager.scn 100 1e-4; - ERRORBYDOF: 0.215011. 6/10 working!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264:133,ERROR,ERRORBYDOF,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264,4,['ERROR'],['ERRORBYDOF']
Availability,"Updating the code so that the lifecycle of SOFA is respected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3534:606,failure,failures,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534,2,['failure'],['failures']
Availability,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793:620,failure,failures,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793,2,['failure'],['failures']
Availability,"Use directly operator[] instead of BaseMatrix::element() (and avoid using virtual functions) which is used extensively in addConstraintDisplacement() which is called a lot through ConstraintSolvers.; I dont like the way how to detect if the vector is FullVector at run-time (using dynamic_cast) but I did not see a fast way to get this info at compile-time. Bench (3instruments_collis.scn from BeamAdapter), 5000 steps, MSVC2022:; - before: `74.5033 s ( 67.1111 FPS)`; - after: `61.728 s ( 81.0005 FPS)`. A nice 20% speedup. \+ some cleanups; - color array was too long (messing IDE); - print only in dev-mode in LCPConstraintSolver if it did not reach convergence (bothersome). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231:1223,failure,failures,1223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231,2,['failure'],['failures']
Availability,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2216:830,failure,failures,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216,2,['failure'],['failures']
Availability,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4631:955,failure,failures,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631,2,['failure'],['failures']
Availability,Using #ifdef all around is really bad and ugly. If you need the feature to be back; please make a PR with a non invasive design. If you don't understand why it is so bad to have #ifdef ; used that way please ask I will explain with more details. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1075:504,failure,failures,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1075,2,['failure'],['failures']
Availability,"Using `getWriteOnlyAccessor` instead of `beginEdit/endEdit`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2468:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2468,2,['failure'],['failures']
Availability,"Using a RegularGrid in 2D, a TriangleSetTopologyContainer returns the following error:; ```; Cannot find edge 1 [12, 0] in triangle 0; ```; and the structure edges in triangles is not created. I guess this would be due to the re-ordering of elements (hexa/quads/tri). Any idea @epernod ?. Example scene:; ```python; from stlib.scene import MainHeader; import Sofa; import math; from time import sleep; from splib.animation import animate, AnimationManager. def createScene(rootNode):; rootNode.gravity = [0,0,0]; rootNode.dt = 0.001; rootNode.createObject(""VisualStyle"", displayFlags=""hideVisual showBehaviorModels showForceFields""); rootNode.createObject(""RequiredPlugin"", name=""SofaPython""); ; ; returnMembrane = Membrane(rootNode, []); return 0;. class Membrane(Sofa.PythonScriptController):; def createGraph(self, rootNode):; return;. def initGraph(self, rootNode): ; self.root = rootNode; #-----------------------------------------------------------------------------------------------------------------------------------------; # Properties of the membrane; self.MembraneLength = 1.0 # in mm; self.YoungModSI = 6000.0 # in Pascal (SI); self.StiffnessSI = 300.0 # Force per unit length; self.scale = 1 # in mm; ; # Properties of the laser; self.EXModulationFreq = 1.0 # in Hz; self.EXOmega = 2*math.pi*self.EXModulationFreq; self.forceAmpl = 10.0; self.LaserspotDiameter = 0.05. # Simulation options; self.root.findData(""gravity"").value = [0,0,0]; self.positionCenter = [0,0,0] ; self.DrivingForce = [0,0,0]; self.IterationIndices = [0,0]. # Measurement options; self.nbrOfPoints = 10.0; self.LaserSpacing = self.MembraneLength/self.nbrOfPoints; self.TotalPoints = self.nbrOfPoints*self.nbrOfPoints; #------------------------------------------------------------------------------------------------------------------------------------------; #------------------------------------------------------------------------------------------------------------------------------------------; # Define squar",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1243:80,error,error,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1243,1,['error'],['error']
Availability,"Using clang -ftimetrace show that BaseObject/Data/Base are taking a lot of compilation time; because of excessive inclusion and parsing time.; PCH can help to solve this issue and there is support for that in CMake.; Let's se result. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1727:778,failure,failures,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1727,2,['failure'],['failures']
Availability,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4279:636,failure,failures,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279,2,['failure'],['failures']
Availability,"Using the newly released CMake 3.15, the configuring stage fails with:. CMake Error at SofaKernel/SofaFramework/SofaMacros.cmake:686 (message):; Missing parameter TARGETS.; Call Stack (most recent call first):; applications/plugins/SofaMiscCollision/CMakeLists.txt:82 (sofa_generate_package). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105:78,Error,Error,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105,1,['Error'],['Error']
Availability,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2103:932,failure,failures,932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103,2,['failure'],['failures']
Availability,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248:1316,failure,failures,1316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248,2,['failure'],['failures']
Availability,"Various cleanup and better checks at the init stage to make sure the topological mappings have everything they need. Only Hexa2Quad, Quad2Triangle and Tetra2Triangle for now. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1126:431,failure,failures,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1126,2,['failure'],['failures']
Availability,Various fix from my working branch:; - FIX: wrong msg_error instead of msg_info in PrecomputedConstraintCorrection; - FIX: warnings when drawing collision interaction using UnilateralInteractionConstraint; - FIX: OglAttribute handleTopologyChange method by using a PointData for value array.; - CLEAN: some logs in PointModel; - FIX: NearestPointROI to use rest_position instead of position. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1159:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1159,2,['failure'],['failures']
Availability,"Vec, Matrices and few other types have ""short name"" version. ; I added the one corresponding to fixed_array<>. I also added a BoundingBox3D so it become consistent with the other ones. . Comment for future code evolution: ; To know when to have an extern template or a short name alias it could be interesting to see if the type is used (or a consequence of a registration) in a ""factory"" (see SimpleDataWidget, TableDataWidget, ObjectFactory, ...). ; Each type used there may be extern templated and have its alias. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3298:1063,failure,failures,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3298,2,['failure'],['failures']
Availability,"Vec1 and Vec2 were supported in CUDA but only in float and not in double. Also added support for Rigid2d, which was supported in the CPU version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3688:690,failure,failures,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3688,2,['failure'],['failures']
Availability,"Vector negation does not make sense for unsigned types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2589:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2589,2,['failure'],['failures']
Availability,"Very basic PR just to let you know that the CGAL plugin is not compatible with latest CGAL.; As is, it compiles with CGAL <= 4.9.1. CI build is unnecessary for this PR.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/510:426,failure,failures,426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/510,2,['failure'],['failures']
Availability,Very simple PR to allow Windows loading MultiThreading plugin.; Will fix these errors: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64/550/warnings2Result/category.96784904/. [ci-build][with-scene-tests]; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/507:79,error,errors,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/507,3,"['error', 'failure']","['errors', 'failures']"
Availability,Very strange failure on macos_clang_options; [ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782:13,failure,failure,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782,1,['failure'],['failure']
Availability,"Very useful collection of header-only utilities : https://github.com/nothings/stb. This PR uses **stb_image** and **stb_image_write** to read/write jpeg,png,etc. images directly without any reliance on libpng or libjpeg.; Practically, This PR almost depracates the use of CImgPlugin (at least as an image loader). ; The only thing stb (compared to cimg) is that it cannot load is the TIFF format... It allows us to :; - not depend on any external library anymore (libpng, libjpeg); - not need anymore to load the CimgPlugin to get images in a scene (which was a bit weird...). **stb** licence is either MIT or even public domain (!). Some questions about this PR:; - should we fetch stb at cmake configure time ? IMO no because it would mean we really need an Internet connection to compile the core of SOFA; - should we put all the files from the stb repo ? IMO no, the other files wont be used for sure. That's why the stb dir contains only the two files we want for this PR. <img src=""https://user-images.githubusercontent.com/11028016/146752568-e4f392d5-5ecd-4f32-be92-32f48b53f5ab.PNG"" width=""400"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551:1651,failure,failures,1651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551,2,['failure'],['failures']
Availability,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2037:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037,2,['failure'],['failures']
Availability,"VisualModelImpl inherits from State which allows it to be mapped (with Mappings) .; This State is slightly specialized for Visual thing (contains positions, normals and rest_positions(?) ). It was previously located exclusively in VisualModelImpl.h, this PR renames it and moves it into Sofa.Core.Visual.; Follows the guideline one class -> one (set of) file. Slightly breaking because some includes have been removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3782:963,failure,failures,963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3782,2,['failure'],['failures']
Availability,VisualTransform moved from SofaBaseVisual to SofaGeneralVisual. ChangeLog:; - FIX: compilation LeapMotion plugin (issue since v16.12). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296:391,failure,failures,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296,2,['failure'],['failures']
Availability,"Voilà. Maybe @epernod a check on the SofaPhysicsSimulation with the various Fore/Background member variables. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5054:654,failure,failures,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5054,2,['failure'],['failures']
Availability,WAIT for #1283 (priority). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1339:283,failure,failures,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1339,2,['failure'],['failures']
Availability,"WARNING: this will break SofaPython3. I'm working on it. Before, when 2 nested packages had `RELOCATABLE ""plugins""`, the 2nd was installed in CMAKE_INSTALL_PREFIX/plugins/FirstPackage/plugins/SecondPackage. Now, the RELOCATABLE argument, if relative, will always be treated as CMAKE_INSTALL_PREFIX/<argument>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2603:854,failure,failures,854,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2603,2,['failure'],['failures']
Availability,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1919:803,failure,failures,803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919,2,['failure'],['failures']
Availability,WIP branch fixing test failures caused by warning/error/deprecated messages issued from #213. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] #213 has been merged. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/237:23,failure,failures,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/237,3,"['error', 'failure']","['error', 'failures']"
Availability,"WIP project: Add window to display Data graph using [NodeEditor](https://github.com/paceholder/nodeeditor) library. To use it, install NodeEditor.; check option in CMake: SOFA_BUILD_NODEGRAPH; and until better setup, manually set: ; - NODEEDITOR_INCLUDE_PATH to NodeEditor-install/include; - NODEEDITOR_LIBRARY_RELEASE to NodeEditor-install/lib/nodes.lib. DataGraph can be displayed in top menu: Edit->Data Graph... ![graphData_04](https://user-images.githubusercontent.com/21199245/66931696-c2e1f800-f036-11e9-91da-3f6cebcb6880.jpg); ![graphData_03](https://user-images.githubusercontent.com/21199245/66757188-e45aac80-ee9b-11e9-8065-6f379be060b4.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1187:910,failure,failures,910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1187,2,['failure'],['failures']
Availability,"Wait for #4058 to be merged to solve the failure. [ci-depends-on https://github.com/sofa-framework/ManifoldTopologies/pull/7]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065:41,failure,failure,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065,3,['failure'],"['failure', 'failures']"
Availability,"Waiting for a fix, Multithreading and THMPGSpatialHashing plugins have been disabled in MacOS jobs. Error output for THMPGSpatialHashing:; ```; [214/302] Building CXX object applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o; FAILED: applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o ; /usr/local/bin/ccache clang++ -Qunused-arguments -Wno-deprecated-declarations -DTHMPGSpatialHashing_EXPORTS -I../SofaKernel/SofaBase/../modules -Iinclude -I../SofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -isystem /usr/local/include -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_BUILD_THMPGSPATIALHASHING -std=gnu++11 -MD -MT applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o -MF applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o.d -o applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o -c ../applications/plugins/THMPGSpatialHashing/THMPGHashTable.cpp; In file included from ../applications/plugins/THMPGSpatialHashing/THMPGHashTable.cpp:1:; ../applications/plugins/THMPGSpatialHashing/THMPGHashTable.h:5:10: fatal error: 'boost/unordered/detail/util.hpp' file not found; #include <boost/unordered/detail/util.hpp>; ^; 1 error generated.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316#issuecomment-313105904:100,Error,Error,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316#issuecomment-313105904,3,"['Error', 'error']","['Error', 'error']"
Availability,"Waiting the final version of the release for merging it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3998:601,failure,failures,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3998,2,['failure'],['failures']
Availability,Warning EXTERMINATOR .. or almost !; I also created a dedicated issue ( #1166 ) on deprecated to remove at v19.12 release ! Get ready for the coding sprint !. Log of important changes:; - ImageTypes: update use of constant indice; - BarycentricMapper : use of new templates on friend class; - AttachConstraint : Add delegate function instead of using twice the same name. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1167:628,failure,failures,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1167,2,['failure'],['failures']
Availability,"Warning specific to windows fixed for function specialization (class templated, set the specialization in cpp), fix some headers (Mapping & MultiMapping). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/738:411,failure,failures,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/738,2,['failure'],['failures']
Availability,Warnings flags were declared in add_definitions (instead of cxx_flags). It is messing with projects using the new CUDA language feat. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1368:390,failure,failures,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1368,2,['failure'],['failures']
Availability,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2132:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132,2,['failure'],['failures']
Availability,Warnings were due to unused function and overwriting function (clang). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/229:301,failure,failures,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/229,1,['failure'],['failures']
Availability,"Warnings were triggered from the gcc flag `-Wdelete-non-abstract-non-virtual-dtor `. https://devblogs.microsoft.com/oldnewthing/20200618-00/?p=103874. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4020:695,failure,failures,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4020,2,['failure'],['failures']
Availability,"Warns the user when a non-symmetric matrix is produced by a non-linear mapping while a symmetric linear solver is used. The message looks like:; ```; [ERROR] [RigidMapping(RigidMapping1)] The geometric stiffness of this mapping is a non-symmetric matrix. It means a linear solver supporting non-symmetric matrices must be used, but it is not the case here. To fix your scene, you have two options: 1) Use a linear solver supporting non-symmetric matrices, 2) stabilize the geometric stiffness with the Data 'geometricStiffness' set to 'Stabilized'; ```. Note that the detection was already considered in the past through a `bool` in the `MechanicalParams`, but not used at all. Note that even if a linear system supporting non-symmetric matrices is used, the exact geometric stiffness computed in `RigidMapping` leads to large stability issues in `examples/Component/LinearSystem/MatrixLinearSystem.scn`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3838:151,ERROR,ERROR,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3838,3,"['ERROR', 'failure']","['ERROR', 'failures']"
Availability,"Warns the user when setting the `contactStiffness` data while using a Lagrange-based constraint resolution! Because it's **useless** :godmode: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3843:689,failure,failures,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3843,2,['failure'],['failures']
Availability,"Was changed in https://github.com/sofa-framework/sofa/pull/637. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3622:608,failure,failures,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3622,2,['failure'],['failures']
Availability,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2156:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156,2,['failure'],['failures']
Availability,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4591:791,failure,failures,791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591,2,['failure'],['failures']
Availability,"We check the values of Young's modulus and Poisson's ratio in the base class of all elastic FEM. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4853:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4853,2,['failure'],['failures']
Availability,"We got this error many times in the past, and I never had the chance to dig into the issue. There was actually two issues:. 1. SOFA was unable to find some GL extensions on Intel drivers with the Qt viewer while they were supposed to be there (they were correctly found when using the qglviewer); 2. When no extensions at all were found by Glew, SOFA tried to convert a null pointer to a std::string, which created a segmentation fault. This PR fixes both of these issues. It first make sure that the pointer returned by Glew isn't null before converting it to a std::string. It also asks Qt to enable deprecated functions, which are used by SOFA. In addition, I've removed the part of the Qt viewer that was forcing the environment variable `MESA_GL_VERSION_OVERRIDE` on Linux. I've also remove the error when this environment variable wasn't set with Intel driver (which was never the case because we were forcing it...) and added a warning instead (Qt viewer works fine on Intel drivers, maybe this was an old bug?). . Will most probably fix https://github.com/sofa-framework/sofa/issues/1567. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1690:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1690,5,"['error', 'failure', 'fault']","['error', 'failures', 'fault']"
Availability,We had some errors while compiling sofa 17.06 on macos with Apple LLVM 9.0.; This was caused by two oddly inlined functions. So here's a PR removing the inline declaration.; We hope it'll be useful. Cheers.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/444:12,error,errors,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/444,3,"['error', 'failure']","['errors', 'failures']"
Availability,We ran into some more compile errors on windows using MSVC 2015. libQGLViewer wouldn't compile without those missing headers. Here's a quick fix but you might want to update libQGLViewer to the latest version (2.7.0). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/461:30,error,errors,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/461,3,"['error', 'failure']","['errors', 'failures']"
Availability,We would like to get an Eigen sparse matrix wrapper (e.g. the one from Caribou plugin).; SOFA already contains such wrappers: EigenMatrix and EigenVector. Existing Eigen wrapper are also available in Caribou: it could be copied in SOFA (sofa.linearalgebra) to have this unique wrapper. Would you mind @jnbrunet ?. **TODO**; - What does the existing wrapper today? and What are the differences? → issue ??,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2474:187,avail,available,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2474,1,['avail'],['available']
Availability,Weird in the CI there is also failure on BoundingBox.cpp (that I fixed in previous pR),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2006#issuecomment-819479147:30,failure,failure,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006#issuecomment-819479147,1,['failure'],['failure']
Availability,"Weird to get the error:; _No topology component found at path: _ with no path given, it should say : _No path to topology given in the scene_. Strange that AddingTetra2TriangleProcess AddingTrianglesProcess return:; _Object must have a Triangular Set Topology._",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199#issuecomment-547827389:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199#issuecomment-547827389,1,['error'],['error']
Availability,"Welcome to v22.06 development phase. ![](https://media.giphy.com/media/W9lzJDwciz6bS/giphy.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2546:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2546,2,['failure'],['failures']
Availability,Well @untereiner ; the CI is not passing due to an issue of cmake version:. ```; 5.4_options_release/build/external_directories/fetched/CGoGN/CGoGN-prefix/src/CGoGN-stamp/CGoGN-configure; CMake Error at CMakeLists.txt:1 (cmake_minimum_required):; CMake 3.7.2 or higher is required. You are running version 3.5.1; ```; we will investigate this next week,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-427426994:194,Error,Error,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-427426994,1,['Error'],['Error']
Availability,"Well I found a fix, it involves `sys.excepthook` to register a toplevel handler for uncaught python errors. In this case I simply abort the test. We should be fine now, but just in case we should also:. 1. limit logging size; 2. limit simulation time for tests. I'll look into the second part. And again, my deepest apologies.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371:100,error,errors,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371,2,['error'],['errors']
Availability,"Well after a quick look in the scene you provided:. I'm not surprised the BarycentricMapping is not able to work . . Let's me explain: ; - Object.DoFs is of type Rigid3d; - Object.Mechanical model.collisionDofs is of type Vec3d. What your are specifying by setting the input & output field of BarycentricMapping is that you are driving the collisionDofs(type Vec3d) from the one from the one of type Dofs(type Rigid3). So the corresponding mapping should be Rigid3d, Vec3d (an not Vec3d, Rigid3d). ; The possible available templates shows that this is not supposed to work, because a BarycentricMapping can only have Vec3 as input. Overriding the template values with one that exists in BarycentricMapping will not work because this will lead to a mismatch between the input/output types and thes type manually set in the template. . Now about the BeamLinearMapping...the situation is a bit different. There is a valid template from Rigid3 to Vec3. This is why:; ```xml; <BeamLinearMapping template=""Rigid3d,Vec3d""/>; ```; And; ```xml; <BeamLinearMapping""/>; ```; Work the same. ; You get an error in your case because there is a typo ""@collisionDOFs"" instead of ""@collisionDoFs"".; ; Now I have no idea why the BeamLinearMapping is not working as you expect:; - maybe there is a real issue there ? . NB to anyone:; It would be nice to have PRs to improve the error messages as they are mis-leading.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487545297:513,avail,available,513,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487545297,3,"['avail', 'error']","['available', 'error']"
Availability,Well done to fix errors introduced in recent previous merge ( not detected in the reviews 😭),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-706017298:17,error,errors,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-706017298,1,['error'],['errors']
Availability,"Well initially I just reported the error and did not necessarily plan to look for the fix, so yes the the error still holds. It was just to try out the option but it was not a blocking issue as, I think, people uses double option or both.; So in the end, I decided to take a look at that. I think I solved the issue. PR to come.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2#issuecomment-299291784:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2#issuecomment-299291784,2,['error'],['error']
Availability,"Well, actually the 3.24 version only provide a fully working mechanism.The mechanism exists in 3.22 (I am currently using the 3.22 and it works) the only downside is that the macro `FetchContent_MakeAvailable` doesn't make it available for every target of the project a it does in the 3.24. That is why for instance I had to add this same mechanism into the `SofaMatrix` plugin. But it works fine anyway because it pull it in the same folder and compile it only once and make it available for both of the projects. . Why 3.22 you might ask ? Well because it is the version shipped in Ubuntu 22.04 LTS, so we will not require a CMake version that is greater than this one...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2003222894:154,down,downside,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2003222894,3,"['avail', 'down']","['available', 'downside']"
Availability,"Well, it's now compiling on linux since @bcarrez installed a new version of some ffmpeg libs.; The failure on the ubuntu build is due to the lack of X. @damienmarchal @guparan @hugtalbot do we need to test this ""gui"" ? I means, others gui are not tested and the problem would be the same as we encounter with the headless recorder if we consider testing it. On centos, we need to install newer version of ffmpeg libs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714:99,failure,failure,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714,1,['failure'],['failure']
Availability,"Well, that is a fully labeled PR! ; LGTM (ignoring VS-2015 failure due to side effect).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296#issuecomment-307724174:59,failure,failure,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296#issuecomment-307724174,1,['failure'],['failure']
Availability,"Well, this PR does not change the status of `SofaPython`. It is still a deprecated external plugin and available on GitHub. This PR just remove the possibility to fetch it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436:103,avail,available,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436,1,['avail'],['available']
Availability,"Well:; - `doLoad()` was called three times, without clearing the lists (e.g. d_position, d_tetra...). So I had duplicated positions, triangles and tetra in my scene, which caused failures. Those calls seemed to be triggered by `addUpdateCallback` in `MeshLoader`.; - the transforms wasn't called three times, so the last positions were not transformed.... but that's not really important I guess. After digging, I found that using `getWriteOnlyAccessor()` to access the `d_positions`... instead of `beginEdit()`, like it was done in most other loaders, reduced this number of calls, which fixed everything for me. I should also mention that my scene was failing at init (when loading the scene).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804:179,failure,failures,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804,2,['failure'],['failures']
Availability,"What I would suggest :; 1. add big visible warnings generated in load() or parse() if `filename` is not empty, stating that this direct loading feature is deprecated as it is redundant with the `MeshXyzLoader` components and will be removed SOON. Bonus point if the warning message show the equivalent xml or python syntax to instantiate the corresponding component and link it.; 2. add an entry in the changelog saying this is now deprecated and will be removed SOON; 3. wait about a year; 4. then finally remove both these methods and the associated `sofa::helper::io::*` classes. It's long in calendar time, but quick and easy in term of code changes !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546:175,redundant,redundant,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546,1,['redundant'],['redundant']
Availability,"What about an isOptional() flag...? It may sounds redundant with the isRequired() flag, but a data may not be required and still have a default value. ; Otherwise, what I’m really looking for is a way to say that my data has no default value. It could also just be a hasDefaultValue() flag.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762250139:50,redundant,redundant,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762250139,1,['redundant'],['redundant']
Availability,What do you mean by available? no option on the cmake? not compiling?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146275689:20,avail,available,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146275689,1,['avail'],['available']
Availability,"When I configure the source sofa/src in cmake, the error is as:; ![Cmake_error](https://user-images.githubusercontent.com/22396672/93750818-b135a700-fc2e-11ea-996d-ac6cf1acb4df.png). CMake Error at CMakeLists.txt:121 (message):; Boost (1.54.0 or higher) is mandatory. Note that Boost autodetection on Windows was removed. Please follow CMake documentation to find Boost on your system. Hint: set BOOST_ROOT to your Boost location. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1494:51,error,error,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1494,2,"['Error', 'error']","['Error', 'error']"
Availability,When I have free time but cannot be concentrated I do trivial 'cleaning' changes resulting in this kind of PR where I replaced the std::cout by msg_info. CHANGELOG for @hugtalbot :; Trivial replacement of std::cout by msg_info; - [SofaUserInteraction] ; - [SofaValidation]; - [SofaVolumetricData]; - [SofaOpenGl]; - [SofaNonUniformFem]; - [SofaPython]; - [SofaSparseSolver]; - [SofaSphFluid]; - [SofaTopology]; - [SofaUserInteraction]. I also replaced this code pattern:; ```cpp; #ifndef NDEBUG; std::cout << blahblah; #endif; ```. into this pattern:; ```cpp; dmsg_info() << ; ....; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255:818,failure,failures,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255,1,['failure'],['failures']
Availability,"When I try to compile SOFA (on Windows), I observed that apparently some part of the build system (CMake? Or some pre/post-build event) tries to create output folders in the `bin` subfolder of the CMake cache for all the different MSVC build configurations created by Cmake (i.e. Debug, MinSizeRel, Release, RelWithDebInfo), **but instead of creating folders generates some obscure binary files with the same name**. This seems to be ok for the first compilation, where MSVC seems to be faster than the faulty script. E.g. when starting with Debug, I do not see any issues, however after finishing that and trying to compile in Release, MSVC compiler complains that e.g. (same for all other targets). > Error	MSB3191	Unable to create directory ""E:\work\dev\SOFA\sofa\build\bin\Release\"". Cannot create ""E:\work\dev\SOFA\sofa\build\bin\Release"" because a file or directory with the same name already exists.	. until I manually remove this useless extra **""Release"" file** (which was meant to be a folder). ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331:503,fault,faulty,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331,2,"['Error', 'fault']","['Error', 'faulty']"
Availability,"When a display flag is unknown, the closest existing flags are printed to help the user to fix the scene. Example:. ```; [WARNING] [DisplayFlags] Unknown token 'showForceField'. The closest existing flags are:; - showForceFields (96% match); - hideForceFields (75% match); - showInteractionForceFields (69% match); Complete list is: [""hideAdvancedRendering"", ""hideAll"", ""hideBehavior"", ""hideBehaviorModels"", ""hideBoundingCollisionModels"", ""hideCollision"", ""hideCollisionModels"", ""hideForceFields"", ""hideInteractionForceFields"", ""hideMapping"", ""hid; eMappings"", ""hideMechanicalMappings"", ""hideNormals"", ""hideOptions"", ""hideRendering"", ""hideRoot"", ""hideVisual"", ""hideVisualModels"", ""hideWireframe"", ""showAdvancedRendering"", ""showAll"", ""showBehavior"", ""showBehaviorModels"", ""showBound; ingCollisionModels"", ""showCollision"", ""showCollisionModels"", ""showForceFields"", ""showInteractionForceFields"", ""showMapping"", ""showMappings"", ""showMechanicalMappings"", ""showNormals"", ""showOptions"", ""showRendering"", ""showRoot"", ""showV; isual"", ""showVisualModels"", ""showWireframe""]; ```. For some reasons, `msg_error` does not print anything. I had to use `msg_warning`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575:1695,failure,failures,1695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575,2,['failure'],['failures']
Availability,When a message does not have an 'suggestion' text then sofa will; crash. Because of Index out of bound.; This PR fix that.; Fixes #491 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/479:393,failure,failures,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/479,2,['failure'],['failures']
Availability,"When a plugin is loaded, the ObjectFactory is populated of Components from this plugin. However, when this plugin is ""unloaded"", it was still possible to create a component from the plugin. This PR detects that the ObjectFactory tries to instantiate an object that is from an unloaded plugin.; It is particularly useful when the initialization of the plugin fails (SofaCUDA for example). When the initialization fails, the plugin is unloaded.; A unit test is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722:1013,failure,failures,1013,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722,2,['failure'],['failures']
Availability,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2207:58,avail,available,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207,4,"['avail', 'failure']","['available', 'failures']"
Availability,"When a texture cannot be loaded the OglModel will crash. This PR fix that. ; As the image loader are now ""optional"" through CImgPlugin. . NB: I cannot prevent myself to clean a bit the commented code because I; cannot do bug tracking in the middle of the mess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/474:517,failure,failures,517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/474,2,['failure'],['failures']
Availability,"When addChild, removeChild, addObject, removeObject etc. are public. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1470:325,failure,failures,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1470,2,['failure'],['failures']
Availability,"When applying a filter when copying from a matrix to another, the matrix size was not appropriately set. The introduced unit test would fail without the fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4063:702,failure,failures,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063,2,['failure'],['failures']
Availability,"When building runsofa (master version 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:361,ERROR,ERROR,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,5,['ERROR'],['ERROR']
Availability,"When compiling a project/plugin with c++17, it fails due to std::binder used in Sofa and Eigen. This functionality was depreciated in c++11 and was removed in c++17 (lambda expressions are now the cool way to do this). This PR removes the use of std::binder and, as a side effect, brings us closer to be able to compile Sofa with c++ > 11 if we wish to do some modern c++ someday :-) . Small note: The version of Eigen used in Sofa is a little bit old (2015)... Might be a good idea to add this in the Sofa's to do list. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908,2,['failure'],['failures']
Availability,"When compiling image, you might now have an issue when updating since DiffusionSolver has been made a separate plugin. This PR provides a warning for the users. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1067:417,failure,failures,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1067,2,['failure'],['failures']
Availability,"When doing `make install`, the RPATH of the libraries is set to ""../lib:$ORIGIN/../lib:$$ORIGIN/../lib"", and does not include the path to its relocated dependencies:. ```; $ ./bin/runSofa; ./runSofa: error while loading shared libraries: libSofaValidation.so.1.0: cannot open shared object file: No such file or directory; ```. ```; $ find . -name libSofaValidation.so.1.0; ./plugins/SofaValidation/lib/libSofaValidation.so.1.0; ```. Same thing happen if we link our project to some of SOFA's core library:; ```; $ lddtree my_plugin.so; my_plugin.so; libSofaMisc.so.20.06.99 => /sofa/build/install/lib/../lib/libSofaMisc.so.20.06.99; libSofaMiscEngine.so.20.06.99 => /sofa/build/install/lib/../lib/../lib/libSofaMiscEngine.so.20.06.99; libSofaNonUniformFem.so.1.0 => not found; ```; and again.; ```; $ find . -name libSofaNonUniformFem.so.1.0; ./plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so.1.0; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:200,error,error,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,1,['error'],['error']
Availability,"When doing `make install`, the installation fails for components SofaGuiQt et QGLViewer because the Qt ""plugins"" directory is not found. A more robust way to do it would be to query the path for each needed plugin (as in http://doc.qt.io/qt-5/cmake-manual.html), but I'm not sure which plugins are needed, or if their installation is really necessary (it is not, on my system). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/794:144,robust,robust,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/794,1,['robust'],['robust']
Availability,"When new messages are received or the message log is clear the componentState is changed. ; This allows the GUI (or other component) to detect that the object has changed (because its message log grew up). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397:752,failure,failures,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397,2,['failure'],['failures']
Availability,"When reading https://github.com/sofa-framework/sofa/pull/2567, I did not understand immediately how to read:. ```cpp; typedef typename VecCoord::template rebind<TriangleInfo>::other VecTriangleInfo;; ```. I did not know this technique to rebind templates, as since C++11, it is possible to template an alias. So, instead of writing. ```cpp; template<class T2> struct rebind; {; typedef vector< T2,CPUMemoryManager<T2> > other;; };; ```; I propose to write:; ```cpp; template<class T2>; using rebind_to = vector< T2, CPUMemoryManager<T2> >;; ```. To define `VecTriangleInfo`, we would write:. ```cpp; using VecTriangleInfo = typename VecCoord::template rebind_to<TriangleInfo>;; ```. IMO, it is a bit more readable. But we can do better. I introduced convenience aliases in Rebind.h. With that, I can define `VecTriangleInfo` with:; ```cpp; using VecTriangleInfo = sofa::type::rebind_to<VecCoord, TriangleInfo>;; ```. `sofa::type::rebind_to` works with types having a `rebind_to` typedef (such that the one I introduced in vector_T.h), or on types having one template parameter. Useful links:. - https://stackoverflow.com/a/58789407; - https://rvarago.github.io/2020/10/28/rebinding-template-template-parameter.html. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2570:1760,failure,failures,1760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2570,2,['failure'],['failures']
Availability,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2164:1038,failure,failures,1038,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164,2,['failure'],['failures']
Availability,When running : ```examples/Components/visualmodel/OglShader_tessellation.scn``` the scene is crashing due to the component ``` <OglShader>``` leading to the following segfault; ```########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); Segmentation fault (core dumped); ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3525:278,fault,fault,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3525,1,['fault'],['fault']
Availability,When running ```examples/Demos/caduceusOculus.scn``` the following error occurs. ```; [ERROR] [GLSLShader] ERROR: Compilation of Fragment shader failed:; [ERROR] [GLSLShader] From File: /home/arnaud/dev/sofa/build/install/share/sofa/shaders/phong.frag; [ERROR] [GLSLShader] 0:27(6): error: could not implicitly convert operands to relational operator; 0:27(6): error: LHS of `||' must be scalar boolean; 0:28(6): error: could not implicitly convert operands to relational operator; 0:28(6): error: LHS of `||' must be scalar boolean. [ERROR] [GLSLShader] SHADER compilation failed.; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3530:67,error,error,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3530,10,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"When running a simulation where a node as some specified / set Data, the SimpleAPI does not allow to recover the information since the `m_isSet` data flag is not properly propagated. The problem arose in https://github.com/sofa-framework/sofa/pull/4910. Still digging into it, but it's some kind of blocking",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4911:101,recover,recover,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4911,1,['recover'],['recover']
Availability,"When setting a breakpoint with `pdb` in python, Sofa objects' attributes tend to arranged in a strange way. ; For instance, in the screenshot attached, I typed `obj.` + TAB to visualize the different methods/attributes available for `obj` where `obj` is a `Sofa.Node` object, and everything get mixed up in the terminal. Note: I tested with other native python classes and numpy objects, and everything is displayed fine in my terminal in those cases. <img width=""1214"" alt=""Screenshot 2020-05-08 at 12 13 39"" src=""https://user-images.githubusercontent.com/24277749/81396283-686cce00-9125-11ea-936b-34b66e67cfb2.png"">. ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1374:219,avail,available,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1374,1,['avail'],['available']
Availability,"When size mismatche. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4060:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4060,2,['failure'],['failures']
Availability,"When sofa is compiled in debug mode, if the positions are initialized manually in the _position data attribute_ of the MechanicalObject, the later will always output an error stating that the position state vector contains a bad size. This message is called because the `MechanicalObject::init()` method calls `MechanicalObject::write(VecCoordId::position())` before setting the `vsize` member (with .`MechanicalObject::resize()`). One solution would be to first set the size accordingly to the _position data attribute_ of the MechanicalObject in the `MechanicalObject::init()` method before the `MechanicalObject::write()` is called. To reproduce the error, first compile Sofa in debug mode, and try with the following scene:; ```; <Node>; <MechanicalObject position=""0 0 -2.5 0 0 7.5 10 0 -2.5 10 0 7.5"" />; </Node>; ```; It should output something like:; `[WARNING] [MechanicalObject(mObject1)] Writing to State vector position(V_COORD) with incorrect size : 4 != 1`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/344:169,error,error,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/344,2,['error'],['error']
Availability,When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/869:1208,failure,failures,1208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/869,2,['failure'],['failures']
Availability,When the Data texcoord is not set using a Mesh file or using a Data link from another component no mechanism is present in VisualModel to compute default UV texcoord leading to incompatible buffer size between vertices and texcoords. This PR add a method to compute default texcoords using a sphere projection. Not perfect but at least create texcoords for volumique mesh with surface mapping. Here are some results examples:. ![liver-tetra2triangle_00000001](https://user-images.githubusercontent.com/21199245/52704903-ed4c5480-2f81-11e9-894d-e6d2f74291eb.png); ![liver-tetra2triangle_00000002](https://user-images.githubusercontent.com/21199245/52704905-ef161800-2f81-11e9-9c5f-4eccabe53085.png). Mesh sphere projection used:; ![liver-tetra2triangle_00000003](https://user-images.githubusercontent.com/21199245/52707910-1f14e980-2f89-11e9-9de5-23d0f899f1d7.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/933:1121,failure,failures,1121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/933,2,['failure'],['failures']
Availability,When the parent folder of the output file of an OBJExporter does not exist : ; - a message is output like this one: [INFO] [OBJExporter(ObjExporter)] Exporting OBJ as: /path/to/my/mesh.obj; - no obj file is written. I think the user either expect : . 1. either to have an error/warning message instead of a success message; 2. or to have the parent folder(s) created properly (and silently or not) and the mesh file written as expected. I am in favor of 2. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/355:272,error,error,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/355,1,['error'],['error']
Availability,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1824:1350,failure,failures,1350,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824,2,['failure'],['failures']
Availability,"When the scene `GlobalSystemMatrixExporter.scn` was moved, the CI settings were not moved. Because of that, it causes a timeout on Windows on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2579:694,failure,failures,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2579,2,['failure'],['failures']
Availability,When the source path is from the root the path is empty.; This results in returning @ instead of @/; This fix it. This fix issue #375 ; This is a reviewer friendly version of #376 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/377:438,failure,failures,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/377,2,['failure'],['failures']
Availability,"When this is the case, it is impossible to access data of both components. - In the first place a warning could be issued when attempting to add two components with the same name; - In the end the should be an error, but this is a breaking change. I labeled it as a bug, it is rather a *design* issue. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362:210,error,error,210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362,1,['error'],['error']
Availability,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2223:698,failure,failures,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223,2,['failure'],['failures']
Availability,"When trying to re-enable SofaCUDA on our Linux CI, I faced some namespace errors due to NG work.; Hope my fixes are good. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935:74,error,errors,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935,3,"['error', 'failure']","['errors', 'failures']"
Availability,"When trying to serialize / desserialize custom binary data structures (non-native / non-scalar Sofa types) as byte arrays from C++ to Python, PyString_FromStirng is called, which stops the input stream at the first \0 it encounters.; PyString_FromStringAndSize retrieves the full stream instead, which is more likely to be what we want here.; @damienmarchal could you tell me what you think of this?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/416:657,failure,failures,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/416,2,['failure'],['failures']
Availability,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1749:1123,failure,failures,1123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749,2,['failure'],['failures']
Availability,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961:555,failure,failure,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961,1,['failure'],['failure']
Availability,"While assisting people on GH Discussions noticed this issue from OglLabel . Example scene : `examples/Demos/rigidifiedSectionsInBeam.scn` ; Before fix:; ![](https://github.com/sofa-framework/sofa/assets/17544719/d903f7ee-bb9c-4225-aa8e-21c996d8e650). After fix:; ![rigidifiedSectionsInBeam_00000001](https://github.com/sofa-framework/sofa/assets/17544719/879ef541-cf58-4051-a8d2-5ec37f8d09dd). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4142:938,failure,failures,938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4142,2,['failure'],['failures']
Availability,"While doing #3401 , I noticed that; ```; 11512 ms: std::set<sofa::core::objectmodel::Tag>::insert (688 times, avg 16 ms); ```; insert() from Tagset does not really require to be inlined, so I moved the two inline def into the associated cpp; Then:; ```; 3256 ms: std::set<sofa::core::objectmodel::Tag>::insert (209 times, avg 15 ms); ```; not extraordinary but _ca ne mange pas de pain_. Note that TagSet directly inherits from `std::set<Tag>` which is really not recommended... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3403:1023,failure,failures,1023,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3403,2,['failure'],['failures']
Availability,"While implementing a binding factory for Data types in SofaPython3, I realised there's no DataTypeName for the BoundingBox data type in Sofa... So here we have it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1086:420,failure,failures,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1086,2,['failure'],['failures']
Availability,"While investigating the error in image/examples/distanceFieldFilter.scn (raised in #3329 for example),; Eigen3 was throwing an assertion in Debug (and surely throwing unexpected errors in Release). https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=debug/3967/testReport/SceneTests/applications_plugins_image_examples/MeshToImageMultipleRoi_scn/; for an example of the dump on the CI. The problem was that if one wants to compute matrices ThinU & ThinV for Eigen::SVD, the given matrices need to be set with a dynamic size.; -> https://gitlab.com/libeigen/eigen/-/blob/3.4/Eigen/src/SVD/JacobiSVD.h#L640. So the solution are either:; - compute full V and full U and keep fixed size matrices; - or set the matrices dynamic and resize to 3x3. It appeared that this combination EigenSVD, ThinU/V and fixed-size matrices was used in PlasticMaterial (FEM.HyperElastic), TriangularFEMForceField (FEM.Elastic) and SVDLinearSolver (LinearSolver.Direct). \+ the use of SVD in MeshToImage was a little weird (doing it on matrix filled of Zeros). It appears that the code fillling the matrix did disappear while the code was converted from NewMat to Eigen3, so I restored it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3452:24,error,error,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3452,4,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"While making out-of-tree builds with SofaGLFW, which entrypoint is a a cmakelists with two add_sofa_something(), cmake is throwing this kind of error while reading the second project:; ```cmake; CMake Error at C:/Work/sofa/install/master_fredroy/lib/cmake/Sofa.DefaultType/Sofa.DefaultTypeConfig.cmake:44 (set_target_properties):; Attempt to promote imported target ""Sofa.DefaultType"" to global scope (by; setting IMPORTED_GLOBAL) which is not built in this directory.; ```; which appears (after some headaches) to be linked with the fact that the Sofa.DefaultTypeConfig is read twice and cmake tries to set a flag (imported global) on something which has already the flag, and more generally to do twice the job of aliasing. So this PR adds a test on the four ""legacy"" SofaFramework targets to only make aliases if it was not done before.; ; And for good measure, update the date for the removal of the aliases to v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2566:144,error,error,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2566,4,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4529:621,failure,failures,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529,2,['failure'],['failures']
Availability,"While trying to understand how forcefields work... I initially noticed that there was a bad handling of cases where `stiffness.size() != indices.size()` in the RestShapeSpringsForceField and tried to improve the overall error management on this component. I ended up doing the following changes:. - Call reinit() in bwdInit; - Using componentState to set the state to invalid when necessary (no stiffness set, out of bounds indices etc & check for component state in addForce / addDForce / addKToMatrix ..); - Improvement of warning messages (IMHO); - refactor code duplication; - remove warnings by changing int -> size_t for BaseMatrix::Index (got carried away here, sorry about that). **### BREAKING because:**. - Change in behavior in specific cases:. 1. empty stiffness vector: **Before:** setting arbitrary stiffness at 100.0 for all indices ; **Now:** msg_error & invalid state. ; 2. stiffness.size() != indices.size(): **Before:** applying stiffness[0] to all indices ; **Now:** ; ```py; if len(stiffness) > len(indices): ; crop(stiffness); else if len(stiffness) == 1:; stiffness.resize(len(indices), stiffness[0]); else if len(stiffness < len(indices):; ```; Generalized to angularStiffness on Rigids. - size_t in methods signature break API compatibility. I wouldn't call this component ""clean"" after those changes though, but it's a start. As stuff still to do to improve, I see:. - Using DataTrackers to call reinit() when necessary; - get rid of bwdInit by using componentState + datatrackers to reinit component; - remove those ugly getContext to retrieve the external mstate used for rest shape, by replacing them with a data or a link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1103:220,error,error,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1103,1,['error'],['error']
Availability,While working in interactive mode the scenechecker is executed each time the file is reloaded. This is ; not really convenient.. Thus this fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/547:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/547,2,['failure'],['failures']
Availability,"Who is *we*?; The feature was used ; removing it has already been discussed many times and refused. I think the problem was: our code (e.g. CGSolver) is not numerical robust in single precision so we need to use double precision implementations, but some part of the code is (was) single precision only (e.g. Cuda forcefields). Once again the real point is why using double precision when single float should be enough?; So if you want to save compilation time and have lighter code => instantiate components only on SReal-based types (what it is already done in Flexible for example).; If you really want to make a change => clean every components that need to be robust in single float and compile sofa always in float only!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340407493:167,robust,robust,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340407493,2,['robust'],['robust']
Availability,"Why it is not possible to have with?. Solution:; The installer can detect:; - if there is on the machine, good; - if not, inform the user to download the good package...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765:141,down,download,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765,1,['down'],['download']
Availability,Why not using the normal git submodule for this one?; It won't be linked to cmake config/build. Just like downloading the source code and its dependencies when you clone the repository.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510056252:106,down,downloading,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510056252,1,['down'],['downloading']
Availability,"With SofaNG now, the mandatory libs are neither plugin nor the deprecated ""module"" notion,. So while trying to configure SOFA for a minimum build (i.e no plugin) and without the compat layer (so no module), I stumbled in this error which was trying to generate the list of plugins/modules. ; There was no check on the list itself (as the empty modules/plugins could never have been empty before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3069:226,error,error,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3069,3,"['error', 'failure']","['error', 'failures']"
Availability,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4509:1283,failure,failures,1283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509,2,['failure'],['failures']
Availability,With the purpose to override it in a child class in a plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1444:318,failure,failures,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1444,2,['failure'],['failures']
Availability,With this PR you can `find_package(CImgPlugin)` in an other cmake project. Quite useful since this plugin is indeed part of the *core*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/544:392,failure,failures,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/544,2,['failure'],['failures']
Availability,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4226:765,failure,failures,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226,2,['failure'],['failures']
Availability,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4453:612,failure,failures,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453,2,['failure'],['failures']
Availability,"With:; - guidelines,; - symbols export (for Windows); - example of mandatory dep and optional dep in Cmake; - cleaning (pragma/nested namespace); - updated init (with data from CMake); - installable (and usable as dep); - add test mechanism (with BaseTest); - Readme as markdown. Remove useless python files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1356:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1356,2,['failure'],['failures']
Availability,"Within recent version of Eigen installed on most OS, there is already a cmake find_package(Eigen3) available. By create a FindEigen3.cmake you will override this. I've seen a couple of projects dealing with this kind of problem with, for example:. SofaKernel/cmake/Modules/**FindEigen3Sofa**.cmake:; ```; # try to find ""FindEigen3.cmake"" from system Eigen; find_package(Eigen3) . if (not Eigen3); # do your thing here; else(); # use system Eigen3; endif(); ```. CMakeLists.txt; `find_package(Eigen3Sofa)`. pybind11 do this for example with find_package(PythonNew) which point to their PythonNew.cmake which trigger a system find_package(Python). Maybe it could be a solution for us?. Edit: Sorry I'm polluting this fast-merge PR for that, we can discuss this elsewhere ;-D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978:99,avail,available,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978,1,['avail'],['available']
Availability,Work done further to a doc update:; - example scene of Newmark solver is improved; - example scene for the PointsFromIndices engine is added; - clean Newmark c++ code. FYI doc is [here](https://www.sofa-framework.org/community/doc/components/integrationscheme/newmarkimplicitsolver/); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1398:541,failure,failures,541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1398,2,['failure'],['failures']
Availability,Work of clean further to PR #625 on WriteState and also done for ReadState with:; - check on all data at init and remove unused data; - export with msg; - add tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/714:422,failure,failures,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/714,2,['failure'],['failures']
Availability,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4310:624,failure,failures,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310,2,['failure'],['failures']
Availability,"Write access (copy-less), the data counter is updated after the 'with' block; with c.position.writeable() as w:; o = numpy.ones((len(c.position), 3))) ; w += o ; w *= 2.0; ```. Wrap around types (copy-less) to typify the data fields on demand; ```python; # syntax 1; c = o.showColor.as(RGBAColor); # syntax 2; c = RGBAColor(o.showColor); c.setFromHSC(1,2,3); c.setFromHSV(1,2,3); ```. Implement your own ForceField in python:; ```python; class MyForceField(Sofa.Core.BaseForceField):; def __init__(self, *args, **kwargs):; Sofa.Core.BaseForceField.__init__(self, *args, **kwargs); ; def init(self):; self.refx = self.position.toarray().copy(). def addForce(self, m, f, x, v):; n = numpy.ones((len(self.position),1)); f = (self.refx-x) * 2 + n; ```; ; To test the binding you need to de-activate SofaPython and activate SofaPython3. ; Then; - runSimu.py to launch a sofa simulation from the command line eg: ; python3 runSimu.py mySimulation.py; - or runSofa. . General guidelines:; - Fix existing API consistency issues; - Improve the performance of the binding by supporting supporting the different python protocols (sequence, buffer+memoryview, copy-less mechanism).; - unified data access and API.; - implementation is currently done with pybind11 and cython.; - modular design. About the tools we use: ; - pybind because it is very consistent with our code base ; - cython becaues it is much more powerful and general and so we can accelerate python code by un-warping the warped object in other part of the code base. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771:2505,failure,failures,2505,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771,2,['failure'],['failures']
Availability,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:220,error,errors,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444,1,['error'],['errors']
Availability,"Yes @damienmarchal . My opinion is that introducing exception can not be done in one PR without taking the time to design a global API. If we do not only rely on the stl exceptions, we need to define the specs of the desired exception API: for documentation purposes, and most importantly to avoid having two error management systems in parallel and the exception not being well propagated and used. Let 's discuss this tomorrow ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-929278545:309,error,error,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-929278545,1,['error'],['error']
Availability,"Yes I actually fixed it in https://github.com/sofa-framework/sofa/pull/905, see https://github.com/sofa-framework/sofa/commit/c608d441edd35f6e8eb90ebfc420cb941c3bd750 and https://github.com/sofa-framework/sofa/commit/e1b55cba5ff200c7a11f6992974159b55cec000f. The error is printed on CI but you have to open the output of a scene test to see it (Jenkins only shows the first line of an error in the ""SOFA SceneTest Errors"" view). See for example the [output of failing scene Components/forcefield/ForceMaskOff.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/636/artifact/parent_dir/build/scene-tests/examples/Components/forcefield/ForceMaskOff.scn/output.txt) (latest master build).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086:263,error,error,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086,3,"['Error', 'error']","['Errors', 'error']"
Availability,"Yes I have an idea... . The problem is probably because currently there is two approaches to interpret the messages send with the Message API as test failure. Fixing should be easily, will do that this evening. . More in-depth... I think this is a good opportunity to discuss how the component messages are interpreted as test...currently we have two different approaches. . One of the approach is a global message handler that interprets all errors as test failure. This handler can be ""explicitely"" deactivated when we don't need this behavior. But if we forgot to do so this behavior propagates to each _test in the same test suite (I think this is what is happening here). . I found this behavior not precise enough so I develop ExpectMessage & MessageAsTestFailure which are RAII classes to finely select which message generates test failure with the granulary of the RAII; (so it is automatically removed when the RAII is destroy). ; The good point about this approach is that:; - we can raise test failure for any kind of message (this depend on the test); - we can raise test failure is a message is expected but not send (like using a wrong filename must generate a message). ; - we behavior is only active during the RAII lifetime. . I don't know if we need to keep them both. What is your opinion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/83#issuecomment-265156642:150,failure,failure,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/83#issuecomment-265156642,6,"['error', 'failure']","['errors', 'failure']"
Availability,Yes I'm using that fix and I do not see errors but I didn't run all the tests.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-688179583:40,error,errors,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-688179583,1,['error'],['errors']
Availability,"Yes it will, but not for 'default' configurations, but - - for 'options' one. Those are the same as the one compiled by the PRs. It actually changes nothing but removes regression errors for 'default' configuration (only on the dashboard) because the lib was not found, which is normal because it is not compiled. . This PR comes along with two other ones on Regression and ci to remove the regression files and add the fetching for 'option' configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990:180,error,errors,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990,1,['error'],['errors']
Availability,"You can actually refer to the issue #1243 ; The result is that this failure, leads to no creation of the edgesInTriangle structure, ie no TriangleSetAlgorithms, ie crashes in some components relying on it in the scene (MeshMatrixMass, DampingForceField etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577243956:68,failure,failure,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577243956,1,['failure'],['failure']
Availability,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:226,down,down,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258,1,['down'],['down']
Availability,"You suggest to avoid wasting time normalizing a unit vector in order to speed up computations. The solution requires not to slow down the other operations. For example, adding a bool in Vec.h would add an extra instruction on any vector operation that would modify the length of the vector in order to invalidate the current length. I've checked how Eigen handles this. It does not. Eigen has a clever lazy evaluation mechanism (https://eigen.tuxfamily.org/dox/TopicLazyEvaluation.html), but I don't think it's used for vector normalization. In practice, it is hard to know that the result of a binary operation on vectors provides a normalized vector or not. For example, the cross product requires that both vectors are orthogonal AND unit. Even if you know for sure that your vectors are unit (e.g. with a bool in Vec.h), you also need to know that they are orthogonal. See https://github.com/sofa-framework/sofa/pull/2647",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2700#issuecomment-1046608127:129,down,down,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2700#issuecomment-1046608127,1,['down'],['down']
Availability,"[""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.0",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5197,ERROR,ERROR,5197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,[ALL] FIX all scenes failures 17.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565:21,failure,failures,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565,1,['failure'],['failures']
Availability,[All] FIX a bunch of static-analysis errors (cppcheck),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/782:37,error,errors,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/782,1,['error'],['errors']
Availability,[All] Fix example scenes showing warnings or errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3526:45,error,errors,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526,1,['error'],['errors']
Availability,[All] Overridden 'canCreate' methods should always log an error message when they fail,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1294:58,error,error,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1294,1,['error'],['error']
Availability,[All] uniformize epsilons in Sofa framework fix issues 799 #STC7 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1049:323,failure,failures,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1049,2,['failure'],['failures']
Availability,"[BeamAdapter](https://github.com/sofa-framework/beamadapter/) shall now be fetchable from SOFA CMake configuration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890,2,['failure'],['failures']
Availability,[Build] FIX Sofa installation failure (tries to install non-existing files),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/470:30,failure,failure,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/470,1,['failure'],['failure']
Availability,[CGALPlugin] FIX build error with CGAL > 4.9.1,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/515:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/515,1,['error'],['error']
Availability,[CGAL] Fix compilation errors related to SOFA.GL and types converted to DataTypes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2065:23,error,errors,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065,1,['error'],['errors']
Availability,[CI] FIX wget certificate error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/236:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/236,1,['error'],['error']
Availability,[CI] Replace 'make' by 'ninja' when available.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/141:36,avail,available,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/141,1,['avail'],['available']
Availability,[CMake] use ccache if available,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692:22,avail,available,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692,1,['avail'],['available']
Availability,[Collision] Optimization: it prevents the normals of the triangles to be recomputed everytime a topological change happens.; The normals of the triangles are computed only once after all the topology changes occur (on the topology::ENDING_EVENT). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/839:503,failure,failures,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/839,2,['failure'],['failures']
Availability,[Core] Convert warning to error in object factory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404,1,['error'],['error']
Availability,[Core] Replace non-utf8 chars by special char with error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4900:51,error,error,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4900,1,['error'],['error']
Availability,[ERROR] [Node(visualNode)] Component 'Visual' of type 'OglModel' failed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614,1,['ERROR'],['ERROR']
Availability,[ERROR] [PluginManager] Plugin loading failed (/home/dou/Downloads/SOFA_robosoft2022_python-3.9_Linux/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.9.so.1.0: cannot open shared object file: No such file or directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192,2,"['Down', 'ERROR']","['Downloads', 'ERROR']"
Availability,"[ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier.; import sys; import Sofa. def createScene(rootNode):. rootNode.addObject('RequiredPlugin', pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver'); rootNode.addObject('VisualStyle', displayFlags='hideVisualModels hideBehaviorModels showCollisionModels hideMappings showInteractionForceFields'). rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). rootNode.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase', name='N2'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', contactDistance='1', alarmDistance='5', name='localmindistance', angleCone='0.02'); rootNode.addObject('DefaultContactManager', name='Response', response='FrictionContact'). topoLines_cath = rootNode.addChild('EdgeTopology'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',; straightLength=600.0, length=1000.0,; numEdges=200, youngModulus=12000,; spireDiameter=1000, numEdgesCollis=[50, 10],; printLog=True, template='Rigid3d', spireHeight=0.0,; densityOfBeams=[30, 10], youngModulusExtremity=12000); topoLines_cath.addObject('EdgeSetTopologyContainer', name='meshLinesCath'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'); topoLines_cath.addObject('MechanicalObject', template='Rigid3d', name='dofTopo'). CatheterMechanics = rootNode.addChild('CatheterModel'); CatheterMechanics.addObject('EulerImplicitSolver', rayleighStiffness=0.2, rayleighMass=0.1, printLog='false'); CatheterMechanics.addObject('BTDLinearSolver',verification=False, subpartSolve=False, verbose=False); CatheterMechanics.addObject('RegularGridTopology', name=",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,2,"['ERROR', 'toler']","['ERROR', 'tolerance']"
Availability,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. 方得始终; ***@***.***. &nbsp;. ------------------&nbsp;原始邮件&nbsp;------------------; 发件人: ""sofa-framework/sofa"" ***@***.***&gt;;; 发送时间:&nbsp;2022年11月8日(星期二) 晚上7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; 主题:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793,3,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,[FEM.Elastic] Fix typo in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4062:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4062,1,['error'],['error']
Availability,[GLSLShader] ERROR: Compilation of Fragment shader failed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3530:13,ERROR,ERROR,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3530,1,['ERROR'],['ERROR']
Availability,[GUI.Qt] Notice user a new version is available,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4648:38,avail,available,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648,1,['avail'],['available']
Availability,[GUI] Improve Error Handling in createPerformer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880:14,Error,Error,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880,1,['Error'],['Error']
Availability,[Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/898:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/898,1,['error'],['error']
Availability,[Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4576:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576,1,['error'],['error']
Availability,[HeadlessRecorder] Handle errors in target config,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/608:26,error,errors,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/608,1,['error'],['errors']
Availability,[Helper] Deprecate error-prone resize and add emplace_back,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3373:19,error,error-prone,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3373,1,['error'],['error-prone']
Availability,"[Here](https://github.com/sofa-framework/sofa/blob/33690ee02117a875f4332996932a327736d6d7ea/applications/projects/runSofa/Main.cpp#L323). The single quote mark is LEFT SINGLE QUOTATION MARK U+2018, which causes error in my compiler(VS2015). ; It's better to use APOSTROPHE U+0027. Error:; ```; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C3688: invalid literal suffix '鈥for'; literal operator or literal operator template 'operator """"鈥for' not found; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C2146: syntax error: missing ';' before identifier '鈥'; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C2065: '鈥': undeclared identifier; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C2065: 'formatting鈥': undeclared identifier; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/323:211,error,error,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/323,7,"['Error', 'error']","['Error', 'error']"
Availability,[How-to] Error with SOFA_*_API,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1670:9,Error,Error,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1670,1,['Error'],['Error']
Availability,[INFO] Error while compiling AdvancedTimer with Visual Studio 2015,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/420:7,Error,Error,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/420,1,['Error'],['Error']
Availability,[IO.Mesh] More debug info in the error message in MeshSTLLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3949:33,error,error,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3949,1,['error'],['error']
Availability,[LinearAlgebra] Robustify accesses to empty matrices,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4236:16,Robust,Robustify,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236,1,['Robust'],['Robustify']
Availability,[LinearAlgebra] Trigger error on the Eigen version,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4630:24,error,error,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630,1,['error'],['error']
Availability,[LinearSolver.Direct] More details in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4060:38,error,error,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4060,1,['error'],['error']
Availability,[LinearSystem.Direct] More details in the error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3985:42,error,error,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3985,1,['error'],['error']
Availability,[MSVC/Windows] Generation error about exceeding path limit,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1716:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1716,1,['error'],['error']
Availability,[MeshGmsh]Fixed false error detection in MeshGmsh.cpp file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030:22,error,error,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030,1,['error'],['error']
Availability,"[Modeler] :: warning and print cleaned. deprecated function removed; [Modeler] :: Set modeler cmake ON; ___________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2081487375:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2081487375,2,['failure'],['failures']
Availability,[Modeler] FIX link error on Windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1282:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1282,1,['error'],['error']
Availability,[MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3574:61,error,error,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3574,1,['error'],['error']
Availability,[MultiThreading] TaskScheduler Interface. Decompose the TaskScheduler in an abstract class and a default implementation.; DefaultTaskScheduler provides a default implementation of the TaskScheduler interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/774:465,failure,failures,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/774,2,['failure'],['failures']
Availability,[MultiThreading] TaskScheduler Interface. Decompose the TaskScheduler in an abstract class and a default implementation.; TaskSchedulerDefault class provides a default implementation of the TaskScheduler interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/775:471,failure,failures,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/775,2,['failure'],['failures']
Availability,[Multithreading] FIX compiling error on Mac,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727,1,['error'],['error']
Availability,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4589:1818,failure,failures,1818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589,2,['failure'],['failures']
Availability,[S.C.Topology.Container.Dynamic] Fix assert error in QuadSetTopologyContainer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2990:44,error,error,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2990,1,['error'],['error']
Availability,[SOFACUDA]: Generating Error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808:23,Error,Error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808,1,['Error'],['Error']
Availability,[SceneCreator] FIX build error with AppleClang 6.0.0.6000051,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/483:25,error,error,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/483,1,['error'],['error']
Availability,"[See ComponentState Diagram here](https://imgur.com/a/qylPAWX). This PR sets up a Component State Checking mechanism that allows to know if a call to init / reinit is necessary, and whether or not the component took into account any change applied to its data fields. The idea is that Each component's state can be:; - **Unspecified**: The component has just been created, init has not been called; - **Valid**: The component is ready to be used, and should behave as expected; - **Dirty**: The component is ready to be used, but requires a call to reinit() to update some of its datafields.; - **invalid**:; 1. An error happened during init, reinit or any of the methods called during the simulation step. A call to reinit might fix it; 2. A call to reinit has been made, but the method is improperly implemented, such as one or more Data field has not been updated (call to getValue / updateIfDirty etc...). Because I don't trust programmes to implement the mechanism in their own components, and because it would require all already-implemented component to perform checks in order to get a consistent idea of what's happening, I decided to (try to) embed the state setting mechanisms inside the simulation:. - **setDirtyValue()** on a data sets the dirty state on its owner; - **cleanDirty()** on a data looks at all its owner's data fields and if they're all clean, sets the Valid state on it; - **initVisitor() / init / bwdInit python binding** uses the MessageHandler API to verify that no msg_error has been triggered, and sets either the Valid or Invalid state on the component; - **reinit pythonBinding / the Qt GUI's ModifyObject** calls reinit, and that call is wrapped the same MessageHandling mechanism to set or unset the Valid / Invalid flag. _**LIMITATIONS**_; There is a weak link in this approach:; reinit() will NOT unset the Invalid flag from a component if it is called from elsewhere than the GUI's ModifyObject api. This can happen often: when calling reinit from a c++ program",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823:615,error,error,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823,1,['error'],['error']
Availability,[Sensable] Fix compilation error when using a const context node for the creation of the visual node,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/22:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/22,1,['error'],['error']
Availability,[Simulation.Common] Fix downstream project compilation with tinyXML2,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4506:24,down,downstream,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506,1,['down'],['downstream']
Availability,[Simulation] Error when trying to load a non-existing file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3677:13,Error,Error,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677,1,['Error'],['Error']
Availability,[SofaBaseTopology] Clearer error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2638:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2638,1,['error'],['error']
Availability,[SofaBaseTopology] Fix ambiguity causing compilation error with MSVC,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577:53,error,error,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577,1,['error'],['error']
Availability,[SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991,1,['error'],['error']
Availability,[SofaCUDA] Fix symbol definition at run time and compilation error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2634:61,error,error,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2634,1,['error'],['error']
Availability,[SofaCUDA] Redundant namespace,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2538:11,Redundant,Redundant,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2538,1,['Redundant'],['Redundant']
Availability,[SofaCore] Fix potential memory failure on TopologyData Add method,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2459:32,failure,failure,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2459,1,['failure'],['failure']
Availability,[SofaCuda] FIX linking error : needed the code of the destructor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2708:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2708,1,['error'],['error']
Availability,[SofaDefaultType][SofaCUDA] FIX compilation errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:44,error,errors,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,1,['error'],['errors']
Availability,[SofaGraphComponent] FIX Fix suggested by SceneChecker contains an error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/573:67,error,error,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/573,1,['error'],['error']
Availability,[SofaGuiQt] Error handling when exporting graph,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2771:12,Error,Error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2771,1,['Error'],['Error']
Availability,[SofaGui] No GUI available on Ubuntu,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006:17,avail,available,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006,1,['avail'],['available']
Availability,[SofaHelper] Add the obj id to labels when available,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1256:43,avail,available,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1256,1,['avail'],['available']
Availability,[SofaHelper] Fix out of bounds error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1868:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868,1,['error'],['error']
Availability,[SofaHelper] More robust method to test end of string,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617:18,robust,robust,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617,1,['robust'],['robust']
Availability,[SofaHelper] Throw a compilation error if using AdvancedTimer end(Node*),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1774:33,error,error,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774,1,['error'],['error']
Availability,[SofaKernel] Factorize some code for maintenance,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1569:37,mainten,maintenance,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1569,1,['mainten'],['maintenance']
Availability,[SofaKernel] Fix compilation errors when working with transform class,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/506:29,error,errors,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/506,1,['error'],['errors']
Availability,[SofaKernel] Fix error in MapperHexahedron and MapperQuad barycentric coef computation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1057:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1057,1,['error'],['error']
Availability,[SofaKernel] Fix the Filemonitor_test random failure on MacOs,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143:45,failure,failure,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143,1,['failure'],['failure']
Availability,[SofaKernel] Improve File:line info in error message (for python and xml error reporting),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:39,error,error,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,2,['error'],['error']
Availability,[SofaKernel] Improve error message when a component cannot be created.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1332:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1332,1,['error'],['error']
Availability,[SofaKernel] Write template list in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2207:36,error,error,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207,1,['error'],['error']
Availability,[SofaKernel] re-open PR #330 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/332:287,failure,failures,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/332,2,['failure'],['failures']
Availability,[SofaLoader] Change error into warning in MeshVTKLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1037:20,error,error,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1037,1,['error'],['error']
Availability,[SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:25,error,error,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,1,['error'],['error']
Availability,[SofaPreconditioner] Introduce a scene for each available preconditioner,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2492:48,avail,available,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2492,1,['avail'],['available']
Availability,[SofaPython] FIX error in script for plotting advancedTimer output,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/519:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/519,1,['error'],['error']
Availability,[SofaPython] Make cython available as an plugin.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/176:25,avail,available,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/176,1,['avail'],['available']
Availability,[SofaPython] proper error handling,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156:20,error,error,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156,1,['error'],['error']
Availability,[SofaSparseSolver] Fix compilation error due to namespace change,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2543:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2543,1,['error'],['error']
Availability,[SofaTest] ADD a PrintTo method so test failure shows human readable informations.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/730:40,failure,failure,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/730,1,['failure'],['failure']
Availability,[SofaTest] repair the minor API breaks introduced by PR #213,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/269:11,repair,repair,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/269,1,['repair'],['repair']
Availability,[SofaTest] sofa errors do not generate gtest errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211:16,error,errors,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211,2,['error'],['errors']
Availability,[SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2908:48,error,error,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2908,1,['error'],['error']
Availability,[Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3636:52,error,errors,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3636,1,['error'],['errors']
Availability,[WIP]; - I try to figure out how to fix the issue : https://github.com/sofa-framework/sofa/issues/561. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/564:359,failure,failures,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/564,2,['failure'],['failures']
Availability,[all] Avoid redundant printLog check,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2102:12,redundant,redundant,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102,1,['redundant'],['redundant']
Availability,[all] Simple robustification,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3685:13,robust,robustification,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3685,1,['robust'],['robustification']
Availability,[all] Unifying the way we report file related errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/197:46,error,errors,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/197,2,['error'],['errors']
Availability,[all] Various small changes in error messages & bugfix from defrost branches,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/660:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/660,1,['error'],['error']
Availability,[all] promote deprecation messages as error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1643:38,error,error,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1643,1,['error'],['error']
Availability,[all] template alias sptr for downsizing the include graph,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436:30,down,downsizing,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436,1,['down'],['downsizing']
Availability,[ci-build] (because of weird CI-failure),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/840#issuecomment-446145645:32,failure,failure,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/840#issuecomment-446145645,1,['failure'],['failure']
Availability,[ci-build]. EDIT: After using std::unique the windows compilation fails... the error seems to be this one: ; https://tousu.in/qa/?qa=634250/c-deleted-function-in-std-pair-when-using-a-unique_ptr-inside-a-map. So I propose to implement the std::unique version in a future pr :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027#issuecomment-1158899131:79,error,error,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027#issuecomment-1158899131,1,['error'],['error']
Availability,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651:621,failure,failures,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/145]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070:621,failure,failures,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/22]. - One existing scene is added to the list of regression tests (`Components/forcefield/TetrahedronFEMForceField_plasticity.scn`); - One scene is introduced (`Components/forcefield/TetrahedronFEMForceField_assemble.scn`) so it is also added to the regression tests. The scene is the same than `Components/forcefield/TetrahedronFEMForceField.scn` except that the data `computeGlobalMatrix` from `TetrahedronFEMForceField` is set to `true`. Only methods `large` and `small` are introduced. The others don't support `computeGlobalMatrix=true`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2540:1153,failure,failures,1153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2540,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/26]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/35]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3326:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/37]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3367:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/41]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/43]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3756:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4420:1533,failure,failures,1533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106:622,failure,failures,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/309]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402:616,failure,failures,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402,2,['failure'],['failures']
Availability,[cmake] Remove error in Findcxxopt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554,1,['error'],['error']
Availability,[examples] Fix scenes errors and crashes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/505:22,error,errors,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/505,1,['error'],['errors']
Availability,[google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29102,redundant,redundant-member-init,29102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-member-init']
Availability,[modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15892,redundant,redundant-void-arg,15892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-void-arg']
Availability,[runSofa] Fix CMake error if all plugins are disabled,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3069:20,error,error,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3069,1,['error'],['error']
Availability,[runSofa] OpenGL performance droped down after release 18.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1070:36,down,down,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1070,1,['down'],['down']
Availability,[runSofa] error in caduceus.scn sofa scene.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/571:10,error,error,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/571,1,['error'],['error']
Availability,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:2078,failure,failures,2078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,2,['failure'],['failures']
Availability,"] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim()",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5409,ERROR,ERROR,5409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,](https://clang.llvm.org/extra/clang-tidy/checks/readability-misleading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readabi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28229,redundant,redundant-control-flow,28229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-control-flow']
Availability,](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [re,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29243,redundant,redundant-smartptr-get,29243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-smartptr-get']
Availability,"_(clicking on ""Edit"" you will see the whole scene description, here you only see a sub-part of it)_ ; `<Node dt=""0.04"" gravity=""0 -0.1 0"" name=""root"">; <VisualStyle displayFlags=""showVisual showCollisionModels hideBehaviorModels showForceFields showInteractionForceFields showWireframe"" />. <Node name=""Topo"">; 		<RegularGridTopology name=""RGT"" min=""-6 -6 -6"" max=""6 6 6"" n=""4 4 4"" /> ; 	 <Node name=""Surface"">; 			<!-- <MeshObjLoader name=""loader"" filename=""mesh/cube.obj"" /> -->; 			<MeshObjLoader name=""loader"" filename=""mesh/liver.obj"" />; 			<MechanicalObject name=""DOF"" src=""@loader"" showObject=""false""/> ; 		</Node>; 	</Node>. <Node name=""Cube"">; 		<EulerImplicit />; 		<CGLinearSolver iterations=""500"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. 		<HexahedronSetTopologyContainer name=""HSTC"" src=""@../Topo/RGT"" />; 		<HexahedronSetGeometryAlgorithms name=""HSGA"" />; 		<MechanicalObject name=""DOF"" position=""@../Topo/RGT.position"" showObject=""true""/>; 		<HexahedronFEMForceField name=""HFF"" youngModulus=""20"" poissonRatio=""0.2"" />; 		<DiagonalMass totalMass=""5"" />. 		<PlaneForceField normal=""0 1 0"" d=""-7"" draw=""true""/>; 	 <Node name=""Cube"">; 	 	 <VisualStyle displayFlags=""hideWireframe"" />; 			<TriangleSetTopologyContainer name=""TSTC"" src=""@../../Topo/Surface/loader"" />; 			<TriangleSetGeometryAlgorithms name=""HSGA"" />; 			<MechanicalObject name=""DOF"" position=""@../../Topo/Surface/loader.position"" showObject=""true""/> ; 			<Triangle/>; 			<BarycentricMapping />; 		</Node>; 	</Node>. </Node>`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/988#issuecomment-482015505:731,toler,tolerance,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/988#issuecomment-482015505,1,['toler'],['tolerance']
Availability,"_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1925,error,error,1925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008,1,['error'],['error']
Availability,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4525:535,failure,failures,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525,2,['failure'],['failures']
Availability,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3344:544,failure,failures,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3344,562,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/340:256,failure,failures,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/340,86,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] do generate LESS warnings.; - [x] do generate LESS unit test failures.; - [x] do generate LESS scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548:246,failure,failures,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548,2,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/207:230,failure,failures,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/207,1,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/826:256,failure,failures,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/826,2,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399:256,failure,failures,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399,12,['failure'],['failures']
Availability,"__set_python_directory__ was writing a ""hard-coded"" _CMAKE_CURRENT_SOURCE_DIR/python_ path in _etc/sofa/python.d/_ instead of the provided path. ; So if your python code was located in, say, _<plugin_dir>/src/python_ instead of _<plugin_dir>/python_ the macro would write an invalid path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/763:545,failure,failures,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/763,2,['failure'],['failures']
Availability,"_init__(self, *args, **kwargs); self.forceMagnitude = 0; self.createGraph(node); self.root = node. def createGraph(self, rootNode):; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('VisualStyle', name=""visualStyle"", displayFlags=""showBehaviorModels showForceFields""); ; self.static = rootNode.addChild('StaticBeam', activated=True); self.static.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.static.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.static.addObject('EdgeSetGeometryAlgorithms', name='TriangleTopo', src='@loader'); self.MO_static = self.static.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.static.addObject('StaticSolver', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.dynamic.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.MO_dynamic = self.dynamic.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.dynamic.addObject('UniformMass', name='mass', totalMass = 0.000001); self.dynamic.addObject('EulerImplicitSolver', name='ODE'); self.dynamic.addObject('SparseLDLSolver', name='LDL',",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:1440,toler,tolerance,1440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,1,['toler'],['tolerance']
Availability,"` EIGEN3_VERSION` needed a `find_package` on Eigen before being used.; `target_link_libraries(${PROJECT_NAME} PUBLIC OpenMP::OpenMP_CXX)` is called twice, and the first time it's too early because the target is not defined yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2669:772,failure,failures,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2669,2,['failure'],['failures']
Availability,` fatal error: 'SofaGui/initSofaGui.h'` ; I am afraid it is not as easy as only changing the CMakeFiles @hugtalbot 😅,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3624#issuecomment-1420096440:8,error,error,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3624#issuecomment-1420096440,1,['error'],['error']
Availability,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1969:574,failure,failures,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969,2,['failure'],['failures']
Availability,`${CMAKE_BINARY_DIR}/bin/$<CONFIG>/` does not exist if using MSVC without Visual Studio IDE. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/451:349,failure,failures,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/451,2,['failure'],['failures']
Availability,"`; - Is functionnaly equivalent to the old code (if the application have installed an handler routing the message to std::cout); - It will print message in a totally consistant way with other sofa componant (which very important for users); - It is shorter to write (very important for the developer :)), ; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended or whatever GUI in the end user application); - All developpers immediately know that the message is not for the end user of Sofa but for a developers. Consequently the message can be very drafty. It can also be remove by setting SOFA_DEVTOOLS to false and thus it should have a zero cost in a release . A second example: ; ```cpp; - if(this->f_printLog.getValue()) if(pos.size()) ; - std::cout<<""TopologyGaussPointSampler: ""<< pos.size() <<"" generated samples""<<std::endl;; +msg_info_when(pos.size()!=0) << "" topologyGaussPointSampler: ""<< pos.size() <<"" generated samples"" ;; ```; - Is functionnaly equivalent to the old code; - Shorter to write; - Consistant behavior with other component,; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended into Backlog depending on the end user application). And one with an error:; ```cpp; if( inv.info() != Eigen::Success ){; - std::cerr << SOFA_CLASS_METHOD<<""non invertible block Schur."" << std::endl;; - std::cerr << schur << std::endl;; + msg_error(SOFA_CLASS_METHOD) << ""non invertible block Schur."" << msgendl; + << schur ;; ```; - Shorter to write (using msg_error_when() it would have to be even shorter); - Consistant way to present message to the user; - All the text is considered is a single message with a single call to msg_* ; - Is functionnaly equivalent to the old code ; - Uou can write tests that check that the message; is emitted (ExpectMessage/MessageAsTestFailure) so it become possible to test how components behave when they are ""mis-used"".... while with the old code it was just 'not done' at all.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960:2308,error,error,2308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960,2,['error'],['error']
Availability,"`BoxStiffSpringForceField` was a force field, deriving from `StiffSpringForceField`. Its only difference is in the `init()` step, where there is a matching of pairs of points, based on the minimal distances. This behavior could be achieved with a `StiffSpringForceField` along with components which the goal is to compute the matching of pairs of points. This is done with 2 `BoxROI` and a `NearestPointROI`.; Therefore, `BoxStiffSpringForceField` is now a simple `BaseObject` that instantiates a pack of components that mimics the previous behavior. Based on:; - https://github.com/sofa-framework/sofa/pull/2595; - https://github.com/sofa-framework/sofa/pull/2620. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2621:1210,failure,failures,1210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2621,2,['failure'],['failures']
Availability,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041:799,failure,failures,799,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041,2,['failure'],['failures']
Availability,"`CGLinearSolver::init()` did not call `init()` of its base class. The result is that the check of the required Data, which is in `BaseObject::init()`, is never called. `CGLinearSolver` has required Data, therefore the error never triggered when one of the required Data was not set. [ci-depends-on https://github.com/sofa-framework/Compliant/pull/4]; [ci-depends-on https://github.com/sofa-framework/Flexible/pull/3]; [ci-depends-on https://github.com/sofa-framework/SofaPython/pull/2]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/211]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419:218,error,error,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419,3,"['error', 'failure']","['error', 'failures']"
Availability,"`CompressedRowSparseMatrix::mulTranspose` now supports scalar blocks.; It did not support scalars, because it called `multTranspose` on an object of type `TBloc`, which can be a `float` or a `double`. Unit tests are updated to compile and test the function on scalar blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2331:819,failure,failures,819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2331,2,['failure'],['failures']
Availability,"`DistanceMultiMapping` was not tested, and it's the first example of a tested non-linear multi mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5077:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5077,2,['failure'],['failures']
Availability,"`EdgeTopologyFrom2PointSets` is an edge topology built from 2 point sets. It computes pairs of points based on the nearest distance from one point to the other point set. It is very useful to be used in combination with springs and SubsetMultiMapping. This component may change depending on the work in #2554 . ![image](https://user-images.githubusercontent.com/10572752/147271052-fa2f162e-72f2-4cc9-816f-6f64a0307f87.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2562:968,failure,failures,968,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2562,2,['failure'],['failures']
Availability,"`FIXME: 0 unit, 757 scenes, 0 regression `; I guess something went wrong 😅. it seems that the destination of the lib is wrong, so the CI and runSofa cannot find the lib (hence the errors)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586383704:180,error,errors,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586383704,1,['error'],['errors']
Availability,"`FindEigen3.cmake` is defining the cmake variable **EIGEN3_VERSION**, whereas `SofaEigen2Solver` was using **Eigen3_VERSION** to get the version of Eigen (which was; empty). Hence, **SOFAEIGEN2SOLVER_HAVE_OPENMP** was always true (given **SOFA_OPENMP**=ON), which was making the compilation fail when using Eigen > 3.2.9. Fixes #1412 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1416:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1416,2,['failure'],['failures']
Availability,"`GetFileNameWithoutExtension` currently finds the first dot in the filename to deduce the plugin name from a path. However, the filename `SoftRobots.Inverse.dll` deduces to `SoftRobots`, which is another existing plugin. To fix this behavior, I propose to rely the deduction on the extension of a dynamic library, which is known. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2961:874,failure,failures,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2961,2,['failure'],['failures']
Availability,"`MechanicalAccumulateJacobian` is initially implemented in `MechanicalMatrixMapper.h`. This PR extract this class into its own files in Sofa.SimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2481:701,failure,failures,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2481,2,['failure'],['failures']
Availability,"`MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` has a link to the mechanical state instead of a raw pointer.; - Some constructors marked `explicit`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:2644,failure,failures,2644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,2,['failure'],['failures']
Availability,`MessageDispatcher::clearHandlers()` can have side effects on other tests in same suite.; See #83 for error case. SofaTest API should ensure that each test starts with a clean MessageDispatcher containing always the same set of MessageHandlers.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/94:102,error,error,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/94,1,['error'],['error']
Availability,"`NearestPointROI` is now compatible with 3d Cuda types. It is still executed on the CPU though. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2620:640,failure,failures,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2620,2,['failure'],['failures']
Availability,"`NewmarkImplicitSolver` never accumulated forces in a mapped Node. This PR fixes it. What I think happened:; Initially (before 2011), the ODE solvers did not accumulated mapped forces, because ""_accumulation through mappings is disabled as it will be done by addMBKv after all factors are computed_"" (quote from a [comment](https://github.com/sofa-framework/sofa/commit/0943c8fa75490d0a1d3dc50ba3b22df4ae7d7f07)). This behavior changed in https://github.com/sofa-framework/sofa/commit/0943c8fa75490d0a1d3dc50ba3b22df4ae7d7f07, but `NewmarkImplicitSolver` was never updated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2578:1118,failure,failures,1118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2578,2,['failure'],['failures']
Availability,"`PairInteractionConstraint` inherits multiple times from `StateAccessor`. `StateAccessor` constructor can be called multiple times. Therefore it initializes the Data multiple times. To prevent that the solution is virtual inheritance. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2488:779,failure,failures,779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2488,2,['failure'],['failures']
Availability,`SofaKernel\modules\SofaHelper\..\SofaDefaultType\src\sofa/defaulttype/Ray.h(6): error C2429: language feature 'nested-namespace-definition' requires compiler flag '/std:c++17'`. Dependency on #1249 @damienmarchal ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1253#issuecomment-598093384:81,error,error,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1253#issuecomment-598093384,1,['error'],['error']
Availability,"`SofaNonUniformFem` is required by `SofaMiscEngine`. This needed to be; propagated back to the `SofaMiscConfig.cmake` in order to let external; projects find the target. Also, since `SofaGui` calls `find_package(SofaMisc)`, `SofaNonUniformFemConfig.cmake.in`; needs to be configure before `SofaGui`. The problem was raised [here](https://www.sofa-framework.org/community/forum/topic/setting-up-out-of-tree-build-sofapython-3-plugin/#post-16198) by Sander. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1384:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1384,2,['failure'],['failures']
Availability,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4513:691,failure,failures,691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513,2,['failure'],['failures']
Availability,"`SpringForceField` is updated to handle topological changes properly. It now uses callbacks.; A scene example is introduced to test topological changes on a `SpringForceField`. To make the example working, point removal was needed but not implemented. That is why I had to implement `PointSetTopologyModifier::removeItems`, and added the support of points in `TopologicalChangeProcessor`. The use of callbacks fixes the application of the topological changes in `SpringForceField`. Before the use of callbacks, the topological changes were not applied because the force field was not in the same Node than the topology. The new code also supports a change in both input topologies. Previously, changes only in the second topology were possible. Without having testing it, I think the previous code did not handle properly multiple springs connected on a single DoF. This is now fixed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2653:1429,failure,failures,1429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2653,2,['failure'],['failures']
Availability,"`StiffSpringForceField<DataTypes>::addForce` was duplicated from `SpringForceField<DataTypes>::addForce`, its base class. Only the resize of `dfdx` differed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3594:702,failure,failures,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3594,2,['failure'],['failures']
Availability,"`SubsetMultiMapping` resizes the target `State` according to the provided input Data. However, it did not update the topology.; For example, a `PointSetTopologyContainer` associated to the target `State` kept a number of vertices equal to zero. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2720:789,failure,failures,789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2720,2,['failure'],['failures']
Availability,"`TClass<T, Parents>` was instantiated on the heap and never free, causing memory leaks. An option is to instantiate the class on the stack so it is destroyed at the end of the program. But currently, the compilation fails if `TClass<T, Parents>` is instantiated on the stack with T an abstract class. That is why there are now two implementations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3178:892,failure,failures,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3178,2,['failure'],['failures']
Availability,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1972:950,failure,failures,950,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972,2,['failure'],['failures']
Availability,"`TriangleFEMForceField::addToMatrix` was a copy/paste of `ForceField::addToMatrix`, which is a base class: it is unnecessary.; Note it is used in `TriangleFEMForceField::addKToMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2421:729,failure,failures,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2421,2,['failure'],['failures']
Availability,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2002:835,failure,failures,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002,2,['failure'],['failures']
Availability,"`_rotatedInitialElements` is not used in the `small` method. It is not resized (size = 0), therefore it leads to a crash. This instruction has been introduced in https://github.com/sofa-framework/sofa/pull/2287. I reverted this line only by the original code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4780:804,failure,failures,804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4780,2,['failure'],['failures']
Availability,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2221:6,ERROR,ERROR,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221,5,"['ERROR', 'avail', 'failure']","['ERROR', 'available', 'failures']"
Availability,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1755:825,failure,failures,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755,2,['failure'],['failures']
Availability,```; modules/SofaMiscFem/TriangularAnisotropicFEMForceField.inl:97:5: error: ‘_topology’ was not declared in this scope; _topology = this->getContext()->getMeshTopology();; ^; ```; Why? :confused:. EDIT: fixed by https://github.com/sofa-framework/sofa/pull/782/commits/b3117ad2cec31a1fcd78ee5c838f78703440dc5d but my question remains... EDIT 2: Tried to build without ccache but result was the same. EDIT 3: answer: https://github.com/SofaDefrost/SoftRobots/blob/master/component/constraint/CableConstraint.h#L141-L152 (thanks @damienmarchal),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/782#issuecomment-424250648:70,error,error,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/782#issuecomment-424250648,1,['error'],['error']
Availability,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1779:995,failure,failures,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779,2,['failure'],['failures']
Availability,"```cpp; /// Method to check if points stored inside the Tetrahedron, given by the tetrahedron id, are in the right order (by checking the cross products between edges).; bool checkNodeSequence(const TetraID tetraId) const;. /// Method to check if the dihedral angles of the tetrahedron have correct values (between 20 and 160 degrees).; bool checkTetrahedronDihedralAngles(const TetraID tetraId) const;. /// Method to check if Tetrahedron is elongated, meaning the longest edge > 10x min edge; bool isTetrahedronElongated(const TetraID tetraId) const;. /// Return false if one of the test method: @sa isTetrahedronElongated, @sa checkTetrahedronDihedralAngles and @sa checkNodeSequence return false for the given Tetrahedron Id.; bool checkTetrahedronValidity(const TetraID tetraId) const;. /// Will call @sa checkTetrahedronValidity for each Tetrahedron of the mesh and store the bad tetrahedron ID in @sa m_badTetraIds; const sofa::helper::vector <TetraID>& computeBadTetrahedron();; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1160:1247,failure,failures,1247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1160,2,['failure'],['failures']
Availability,"```text; /builds/workspace/sofa-framework/PR-1980/ubuntu_gcc-7_options_release/src/SofaKernel/modules/SofaBaseTopology/src/SofaBaseTopology/TopologyData.inl:91:57: error: 'class sofa::component::topology::TopologyData<unsigned int, sofa::type::vector<double, sofa::type::CPUMemoryManager<double> > >' has no member named 'm_topology'; this->m_topologyHandler->registerTopology(this->m_topology);; ~~~~~~^~~~~~~~~~; /builds/workspace/sofa-framework/PR-1980/ubuntu_gcc-7_options_release/src/SofaKernel/modules/SofaBaseTopology/src/SofaBaseTopology/TopologyData.inl:92:21: error: 'class sofa::component::topology::TopologyData<unsigned int, sofa::type::vector<double, sofa::type::CPUMemoryManager<double> > >' has no member named 'm_topology'; else if (!this->m_topology); ~~~~~~^~~~~~~~~~ ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1980#issuecomment-814756029:164,error,error,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980#issuecomment-814756029,2,['error'],['error']
Availability,"``cmake --install``` on a freshly built Sofa repo, the header files for libQGLViewer are not properly copied to the install/include directory.; First of all the install path is too long and has at least one ${PROJECT_NAME}, i.e. ""QGLViewer"" too much in the path. Also there are header files missing which are relevant for using the provided libQGLViewer in external projects/plugins. This is caused by the now modified ```Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - The last argument for the ```sofa_create_package_with_targets``` macro adds too many ```/${PROJECT_NAME}``` causing the long install path (line 118); - For some reason the ```sofa_create_package_with_targets``` macro does not copy the ```MOC_HEADER_FILES``` (line 21 ff.). ## Solution:; This PR shortens the output path and copies the contents of ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES``` which causes them to be copied to the install/include directory. This does not affect the build but ensures that all headers are copied. This was tested on Windows and two different Linux installations. I am aware that simply re-mentioning the MOC_HEADERS may look redundant, but I could not find a solution to convince the ```sofa_create_package_with_targets``` macro to also consider the MOC_HEADERS for copying. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198:1279,redundant,redundant,1279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198,3,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"`addDForce` is now divided in 2 steps:; 1) Elements are visited in parallel: a force derivative is computed inside each element; 2) Vertices are visited in parallel: the force derivative in all adjacent hexahedra are accumulated in the vertices. This new organization allows to write the force derivative such as it maximize coalescing memory access. Benchmark (the cantilever beam in the examples):. ```; before (8x8x40); 4.62651 s ( 216.146 FPS). before (16x16x80); 73.1133 s ( 13.6774 FPS). ; after (8x8x40); 3.9425 s ( 253.646 FPS). after (16x16x80); 65.4055 s ( 15.2892 FPS). ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3572:1130,failure,failures,1130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3572,2,['failure'],['failures']
Availability,"`asin` might be undefined, it is still better to have it crashing instead of working were it should not - again, if `y` contains a ""big"" error (greater than 10e-15 upon @raffaellatrivisonne comment). ; The question is: could `y` contain such a ""big"" error? If no, let's just assume that and round this way. If yes or don't know, let's add a tiny security with something like; ```cpp; const double epsilon = 1e-15;; Real y = Real(2.)*(q[3]*q[1] - q[2]*q[0]);; if( std::abs( double(y) ) - 1.0 > epsilon ); {; msg_error(""Quat"") << ""Unexpectedly out of bounds argument for asin: "" << y << msgendl;; }; ```; or; ```cpp; const double epsilon = 1e-15;; Real y = Real(2.)*(q[3]*q[1] - q[2]*q[0]);; if( std::abs( double(y) ) - 1.0 > epsilon ); {; Real force_round = std::max( Real(-1.0), std::min(Real(1.0), y) );; msg_warning(""Quat"") << ""Unexpectedly out of bounds argument for asin: "" << y; << ""Force rounding to "" << force_round << msgendl;; y = force_round;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-338594103:137,error,error,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-338594103,2,['error'],['error']
Availability,"`canCreate` can be called several times by the object factory. It makes more sense to detect if the template parameter is empty in the `parse` method, i.e. once the object is instantiated. Header of the message depends whether the component name is empty or not. Remove hard coded string of the component class, as it does not apply to derived types. Remove hard coded template strings. ![image](https://user-images.githubusercontent.com/10572752/172868099-18fb7a50-ecb2-40e4-b8b4-11fdac2be70d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3029:1044,failure,failures,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3029,2,['failure'],['failures']
Availability,"`distanceType` is an OptionsGroup, and it is cannot be initialized using a single value. In this case, the wrong overload of `initData` was picked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4711:692,failure,failures,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4711,2,['failure'],['failures']
Availability,"`getValue` has a side effect. `BaseData::typeName` allows to use only the type, without a parameter. So, by expliciting the type, we can remove the call to `getValue`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4816:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4816,2,['failure'],['failures']
Availability,"`index` and `ext_index` were already defined, and I think they referred to the same thing. The difference is only on the condition with `useRestMState`. ; It follows changes from https://github.com/sofa-framework/sofa/pull/3175. Strangely, we can see that the condition on `useRestMState` was implemented only for rigids. Now it is also for vecs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3754:891,failure,failures,891,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3754,2,['failure'],['failures']
Availability,"`l_topology` already exists in `BaseLinearElasticityForceField`, and it was already initialized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4890:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4890,2,['failure'],['failures']
Availability,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2095:616,failure,failures,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095,2,['failure'],['failures']
Availability,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2105:945,failure,failures,945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105,2,['failure'],['failures']
Availability,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430,2,['failure'],['failures']
Availability,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2211:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211,2,['failure'],['failures']
Availability,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4476:643,failure,failures,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476,2,['failure'],['failures']
Availability,"`sofa/helper/set.h` is not required if we just need `std::set`. `TagSet` also no longer inherits from `std::set`. Composition instead. Note that there is still a contaminating include in `Sofa/framework/DefaultType/src/sofa/defaulttype/DataTypeInfo.h`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4820:797,failure,failures,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4820,2,['failure'],['failures']
Availability,"`sofa` is repeated in `sofa::sofa::core::topology::PointData`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2538:607,failure,failures,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2538,2,['failure'],['failures']
Availability,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4352:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352,2,['failure'],['failures']
Availability,"`type::invertMatrix` is specialized. Only 2x2 matrices were tested (specialized). 3x3 matrices are now tested (also specialized), and 5x5 matrices (using the generic implementation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2343:727,failure,failures,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2343,2,['failure'],['failures']
Availability,"`valuesIndexedInTopology` should not be initialized with `initData`: it duplicates the Data name of `d_valuesIndexedInTopology`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4843:673,failure,failures,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4843,2,['failure'],['failures']
Availability,"a (master version 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:971,ERROR,ERROR,971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,2,['ERROR'],['ERROR']
Availability,"a `StiffSpringForceField` between 2 objects in C++. Instead a utility function is provided. To maintain the backward compatibility and to facilitate the design of a simulation scene, `StiffSpringForceField` continues to accept two Data attributes ('object1' and 'object2') corresponding to two different objects. However, they don't correspond to any Data or Link in the component. Actually, during its creation, the component will instantiate other components in order to link both objects into one. In the end, the component is able to work on a single mechanical state while keeping the same physical behavior. The component now instantiates:. 1. A new Node; 2. A new mechanical state which will be the fusion of the provided objects, ; 3. A `SubsetMultiMapping` that will make the link between the two provided objects and the new mechanical state; 4. The spring force field. Since `SubsetMultiMapping` was initially in SofaMiscMapping, it has been moved into SofaBaseMechanics. A compatibility layer is available. Other components using `StiffSpringForceField` had to be adapted to create also the extra components. An example is `AttachBodyPerformer` which creates the spring between an object and the mouse (shift + clic). WARNING:; Since `StiffSpringForceField` is now necessarily located in a mapped node, its stiffness matrix is not mapped in case of a built linear system. The forces are then computed explicitly only. This issue will be addressed in the new design of the matrix assembly. TODO:. - [x] A description for this PR; - [ ] Handle topological changes in `SpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2653 and https://github.com/sofa-framework/sofa/pull/2729; - [x] Deal with `BoxStiffSpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2621; - [x] Compilation and tests issues on CI (CUDA); - [x] In `AttachBodyPerformer`, a Node remains in the scene when `AttachBodyPerformer` is destroyed. [ci-depends-on https://github.com/sofa-frame",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554:1506,avail,available,1506,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554,1,['avail'],['available']
Availability,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:2317,failure,failures,2317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,2,['failure'],['failures']
Availability,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2270:2669,failure,failures,2669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270,2,['failure'],['failures']
Availability,"a1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; ```. I guess the shaders needs to be updated for version >=",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:1102,ERROR,ERROR,1102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,3,['ERROR'],['ERROR']
Availability,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4522:35,error,errors,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522,5,"['Error', 'error', 'failure']","['Error', 'error', 'errors', 'failures']"
Availability,"ad Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1044,ERROR,ERROR,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,add SphereActiver class in SphereModel so that some controller inheriting from this class can compute sphere(s) de/activation during execution. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1259:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1259,2,['failure'],['failures']
Availability,add bounding box to hexaFemForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/289:295,failure,failures,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/289,2,['failure'],['failures']
Availability,"addObject(""IdentityMapping"", input=""@.."", output=""@VisualBody""). soft_bead_node = composite_node.addChild(""soft bead""); soft_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_1"", filename=""mesh/bubille_in1.obj"", handleSeams=True); soft_bead_node.addObject(""OglModel"", name=""VisualBody1"", src=""@meshLoader_1"", normals=""0"", color=[1, 0, 0, 1]); soft_bead_node.addObject(""HexahedronCompositeFEMMapping"", input=""@.."", output=""@VisualBody1""). stiff_bead_node = composite_node.addChild(""stiff bead""); stiff_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_3"", filename=""mesh/bubille_in2.obj"", handleSeams=True); stiff_bead_node.addObject(""OglModel"", name=""VisualBody2"", src=""@meshLoader_3"", normals=""0"", color=[0, 0, 1, 1]); stiff_bead_node.addObject(""HexahedronCompositeFEMMapping"", input=""@.."", output=""@VisualBody2""). ball_node = root.addChild(""ball""); ball_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); ball_node.addObject(""CGLinearSolver"", iterations=100, tolerance=1e-5, threshold=1e-5). ball_node.addObject(""MechanicalObject"", template=""Rigid3d"", position=[0, 5, 0, 0, 0, 0, 1], showObject=True, showObjectScale=2.0); ball_node.addObject(""UniformMass"", totalMass=10000.0); ball_node.addObject(""SphereCollisionModel"", radius=0.5, group=1); ball_node.addObject(""UncoupledConstraintCorrection""); ```. As a side question: Am I even using the right components? How would you model this scene of a liver with an embedded tumor? I also tested the Heterogeneous-TetrahedronFEMForceField.scn example, but that is even more unstable. When you interact with the object through the mouse, it applies a huge force in the opposite direction. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/dc863ba3-7e55-48e1-8b5d-30d078fd5b88; "" width=""200"" height=""auto"">. I also simplified the liver scene to just the SOFA liver. Same problem with the instability. ```python; import Sofa; import Sofa.Core. PLUGINS = [; ""Sofa.Component.AnimationLoop"",; ""Sof",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:6896,toler,tolerance,6896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,2,['toler'],['tolerance']
Availability,added deprecation message where needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1197:296,failure,failures,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1197,2,['failure'],['failures']
Availability,"adding instantiation with RigidType + removal of ""hard"" usage of VecTypes. In my case, it was to support grabbing a beam (BeamAdapter) with the mouse and constraints. https://github.com/sofa-framework/sofa/assets/11028016/8eeb22ff-396d-4d87-8d9e-22e2849eefec. Reminder: BilateralConstraint needs a GenericConstraintSolver (+FreeMotionAL), LCPConstraintSolver is not usable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4801:918,failure,failures,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4801,2,['failure'],['failures']
Availability,ading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-ti,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28312,redundant,redundant-control-flow,28312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-control-flow']
Availability,"ame=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). membrane.addObject('MeshGmshLoader', name='membraneCoarse', ; filename='FossaOvalisV2.msh'); ; membrane.addObject('TetrahedronSetTopologyContainer', ; name='membraneTopo', src='@membraneCoarse'); membrane.addObject('TetrahedronSetTopologyModifier'); membrane.addObject('TetrahedronSetGeometryAlgorithms',; name='membraneAlgo'). membrane.addObject('MechanicalObject', name='mechMembrane',template='Vec3d', showObject='1'); membrane.addObject('TetrahedronFEMForceField', name='FEM', ; youngModulus='100000', poissonRatio='0.4'); membrane.addObject('MeshMatrixMass', massDensity=""1"", name=""density""); #membrane.addObject(""FixedConstraint"", name = ""fix"", nodes = which_node(mesh )). membrane.addObject(""LinearSolverConstraintCorrection"", name='solvConstrMemb', template='Vec3d'). # Constraints; membrane.addObject('BoxROI', template='Vec3d', box=""-10.5 9.5 -0.5 10.5 10.5 1.5"", drawBoxes=""1"", position=""@mechMembrane.rest_position"", name=""FixedROI1""); membrane.a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:2659,toler,tolerance,2659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['toler'],['tolerance']
Availability,amples\Tutorials\OldTutorials\demo7Triangle.scn; examples\Tutorials\OldTutorials\demo8.scn; examples\Tutorials\OldTutorials\demo8Triangle.scn; examples\Tutorials\OldTutorials\demo9.scn; examples\Tutorials\OldTutorials\tutorial4.scn; examples\Tutorials\StepByStep\FullObject\0_FullObject.scn; examples\Tutorials\StepByStep\FullObject\1_FullObject.scn; examples\Tutorials\StepByStep\FullObject\2_FullObject.scn; examples\Tutorials\StepByStep\FullObject\3_FullObject.scn; examples\Tutorials\StepByStep\FullObject\4_FullObject.scn; examples\Tutorials\StepByStep\FullObject\5_FullObject.scn; examples\Tutorials\StepByStep\FullObject\6_FullObject.scn; examples\Tutorials\StepByStep\FullObject\7_FullObject.scn; examples\Tutorials\StepByStep\FullObject\8_FullObject.scn; examples\Tutorials\StepByStep\Pendulum\0_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\1_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\2_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\3_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\4_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\5_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\6_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\7_Pendulum.scn; examples\Tutorials\StepByStep\TopologicalMapping\2_TopoMapping.scn; examples\Tutorials\StepByStep\TopologicalMapping\5_TopoMapping.scn; examples\Tutorials\StepByStep\TopologicalMapping\6_TopoMapping.scn; examples\Tutorials\StepByStep\Visual\3_Visual.scn; examples\Tutorials\Topologies\TopologyDynamicSurfaceMesh.scn; examples\Tutorials\Topologies\TopologyHexa2QuadTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyHexa2TetraTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyQuad2TriangleTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyTetra2TriangleTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyTriangle2EdgeTopologicalMapping.scn. [INFO] [PluginFinder] Found 1 files with error:; examples\Benchmark\Accuracy\cylinder_PhantomSolution.scn; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:9269,error,error,9269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['error'],['error']
Availability,"ance using a tag class:; ; ``` c++; class BaseData {; public:; struct no_init {};; ; protected:; BaseData(no_init) : // ...; };; ```; ; This one should be easy.; 3. Add a public `Data` constructor that only initializes value, something like:; ; ``` c++; template<class T>; class Data {; public: ; Data(BaseData::no_init, const T& value = T() ) : // ...; };; ```; ; Again, easy.; 4. Provide component constructors that do not initialize their `Data` so that optimized components can be derived:; ; ``` c++; Base::Base(BaseData::no_init) : name(BaseData::no_init), //...; BaseObject::BaseObject(BaseData::no_init) : f_listening(BaseData::no_init), //... ; ; // ... BaseMapping, Mapping, etc.; ```; ; this one is tedious but not that hard. Now if all of this can be done, a derived component class will be able to manage its data on a per-class basis, and only initialize data lazily when they are actually needed (i.e. when `findData` or `getDataFields` are called). Adding/removing data would be no-ops or errors in these derived classes. ## Performance. Changing the iteration strategy incurs an extra copy of the existing `DataVec` when accessing data, but since we are likely to iterate the vector anyways there should be no visible change in; complexity. Careful allocation on the caller side should also be able to avoid most allocations during vector copy. Finally, data iteration does not seems to happen during computationally intensive sections. Should this remain an issue, it is always possible to iterate using a callback instead, which is acceptable using c++11 lambdas/`std::function`, but probably too cumbersome using c++98. **To summarize I think the performance hit for current code path is minimal.**. On the other hand, a component using `BaseData::no_init` with per-class data managemenent potentially saves up to 6 heap allocations per data per constructor call, and a fraction of this during destruction. FYI, I counted 10 `Data` members in base class `Mapping<In, Out>` alone, `",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923:2309,error,errors,2309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923,2,['error'],['errors']
Availability,and I also propose to update the APIChange file .. ; I did two in one (but separate commits) since it's super minor!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1414:374,failure,failures,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1414,2,['failure'],['failures']
Availability,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4235:1327,failure,failures,1327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235,2,['failure'],['failures']
Availability,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:3085,failure,failures,3085,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,2,['failure'],['failures']
Availability,"and add potential qt6 support.; But image_gui does not support qt6 at the c++ level (deprecated API & co). Fix #2542 . (remaining code using qt4 is the qtsofa application/projects but is not supported anymore and is doomed to be deleted/removed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2663:791,failure,failures,791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2663,2,['failure'],['failures']
Availability,"and add unit tests; The case `(this->mstate1 != this->mstate2)` is not tested. Note that this implementation is not yet useful when the force field is associated to a mapped mechanical object. However, it will become useful for #2777 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3626:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3626,2,['failure'],['failures']
Availability,"and also removed the attributes associated to the deprecated macros. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3265:613,failure,failures,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265,2,['failure'],['failures']
Availability,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2271:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271,2,['failure'],['failures']
Availability,"and delegate constructor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2911:570,failure,failures,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2911,2,['failure'],['failures']
Availability,"and lots of cleaning. #1527. Based on master. Deprecates SofaBaseLinearSolver, SofaGeneralLinearSolver, SofaPreconditioner, SofaDenseSolver, SofaSparseSolver. Re-organise Linear Solvers into 3 categories:; - Direct; - Iterative; - Preconditioner. Move Implementations of MatrixAccessors along its API in SofaCore (could be the occasion to definitely ditch CRSMultiMatrixAccessor), as they are not components + the utility class BlocMatrixWriter; And cleaning (namespaces, pragma, explicite instanciations, symbol export for windows, SReal instead of double, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2717:1108,failure,failures,1108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2717,2,['failure'],['failures']
Availability,"and replace MapMapSparseMatrix. Continuation of #3515 . Breaking because one or two functions have been deleted (for perf reasons), especially the batch clear function. Some benchs, where constraints are supposedly the bottleneck. caduceus.scn; ```; before: 5000 iterations done in 48.2532 s ( 103.62 FPS).; after: 5000 iterations done in 22.042 s ( 226.839 FPS).; ```. TorusFall.scn; ```; before: 5000 iterations done in 47.5045 s ( 105.253 FPS).; after: 5000 iterations done in 37.8749 s ( 132.014 FPS).; ```. 3instruments_collis.scn; ```; before: 5000 iterations done in 63.3632 s ( 78.9101 FPS).; after: 5000 iterations done in 53.7899 s ( 92.9542 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3894:1208,failure,failures,1208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3894,2,['failure'],['failures']
Availability,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2276:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276,2,['failure'],['failures']
Availability,"and some fixes in tetra FEM. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4832:573,failure,failures,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4832,2,['failure'],['failures']
Availability,anyone available for a merge?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1145#issuecomment-543905626:7,avail,available,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1145#issuecomment-543905626,1,['avail'],['available']
Availability,"arSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5027,ERROR,ERROR,5027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,are you sure the additionnal scenes errors and crashes compare to master are false positive (or wrong negative... I never know)?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950#issuecomment-480168434:36,error,errors,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950#issuecomment-480168434,1,['error'],['errors']
Availability,arf compilation errors,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4238#issuecomment-1764557115:16,error,errors,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238#issuecomment-1764557115,1,['error'],['errors']
Availability,arf you have a compilation error in https://github.com/sofa-framework/SofaGLFW,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308741024:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308741024,1,['error'],['error']
Availability,as discussed in meeting. So it is done. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1179:296,failure,failures,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1179,2,['failure'],['failures']
Availability,as promised since long time ago... There is still a lot of work to do but here is a first set of tests on the topology containers.; - Do not test yet the topological changes.; - Neither more complex algo like incision.; - Nor TopologicalData... it is just the beginning !. FIX #43 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/708:539,failure,failures,539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/708,2,['failure'],['failures']
Availability,"as said by Damien the wise in PR #407 . ""Module are systematically compiled which have a sensible impact to Sofa.; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they; don't need."". This PR is about putting SofaMiscForceField in a plugin.; It implied conditional activation of some unit tests to build properly when the plugin is switched off. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/408:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/408,2,['failure'],['failures']
Availability,as the consortium is hosted by Inria since 2019. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1451:305,failure,failures,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1451,2,['failure'],['failures']
Availability,"assertion was using an undeclared variable so the debug build was failing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2989:619,failure,failures,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2989,2,['failure'],['failures']
Availability,"at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1481,Down,Downloads,1481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Down'],['Downloads']
Availability,"ating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1474,failure,failure,1474,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['failure'],['failure']
Availability,"ator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:1382,error,error,1382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['error'],['error']
Availability,"ay_defaultconstruct<sofatypefixedarray3f>/32768 38.1 us 38.5 us ; ```. I dont really know why (after spending lots of time on cppreference, stackoverflow, etc) as both of them should not have any initialization on the C-array inside. It seems with the `=default`, MSVC does default-initialization or something like that.; This behavior can be seen with vec3() and vec3(NOINIT). ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 32.5 us 33.0 us ; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 32.7 us 32.2 us ; BM_FixedArray_defaultconstruct<sofa::type::Vec3f>/32768 73.3 us 73.2 us ; BM_FixedArray_defaultconstruct_vec3noinit/32768 33.0 us 33.0 us ; ```; Bench on caduceus (10k steps); - before : `10000 iterations done in 23.5033 s ( 425.471 FPS)`; - after: : `10000 iterations done in 21.5335 s ( 464.393 FPS)`. Nice 10% speedup for a really trivial change. ### Ubuntu/gcc; Actually on Ubuntu/gcc, the change does nothing as std::array/fixed_array/vec as the same timing (which is good); ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 15.6 us 15.6 us ; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 15.2 us 15.2 us ; BM_FixedArray_defaultconstruct<sofa::type::Vec3f>/32768 15.3 us 15.3 us ; BM_FixedArray_defaultconstruct_vec3noinit/32768 15.2 us 15.2 us ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2764:2660,failure,failures,2660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2764,2,['failure'],['failures']
Availability,"b/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2600,ERROR,ERROR,2600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,"b/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2433,ERROR,ERROR,2433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,"based on #2339 . Description: Matrix\Vector has been moved to Sofa.LinearAlgebra in #2339, the only remaining component is SVDLinearSolver.; This linear solver is a (very slow) dense matrix solver so it would be more logical for this component to be in SofaDenseSolver.; Moreover the sole existence of SofaEigen2Solver was the Eigen dependency. ; Now Eigen is a proven dependency in the SofaFramework so at the end SofaEigen2Solver is not useful anymore. This PR:; - moves SVDLinearSolver in SofaDenseSolver; - remove the SofaEigen2Solver dependencies from various modules; - add some deprecations warning here and there; ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2368:1168,failure,failures,1168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2368,2,['failure'],['failures']
Availability,"based on #4028 . Add method to detect intersection between 2 edges in 2D and 3D.; Add tests with tricky cases; Will update version in EdgeSetTopologyContainer which is not really working later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4029:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4029,2,['failure'],['failures']
Availability,"based on PR #3327 . - Remove option `merge` which was added as a test in 2011 and never finished. According to a quick test on example. The behavior is less stable when activating the option with the same speed. **Result of BilateralConstraint between 2 deformable models.** ; Current behavior: single constraint working fine; ![RemovingBilateralInteractionConstraint_00000001](https://user-images.githubusercontent.com/21199245/191688055-b0f0af8a-a657-4d9f-b477-6d712542a48a.png). Result when activating merge option: Some vibration and constraint is duplicated; ![RemovingBilateralInteractionConstraint_00000002](https://user-images.githubusercontent.com/21199245/191688314-22cd8674-ce2c-40d9-a6c1-f77267cbb471.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3328:1263,failure,failures,1263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3328,2,['failure'],['failures']
Availability,"based on:; - #2813 (which is itself based on #2790 ). All OBB/Capsule code-related into its own plugin.; Has kind of the same file structure as Sofa.Component.Collision. Tests were adapted as well. [ci-depends-on https://github.com/sofa-framework/THMPGSpatialHashing/pull/1]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820:820,failure,failures,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820,2,['failure'],['failures']
Availability,"beginEdit was used without endEdit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2778:580,failure,failures,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2778,2,['failure'],['failures']
Availability,"big, big fatass PR (because of moves mainly). ~~First, check if not breaking with the CI~~. Cleanup of framework's modules, in the same way as the components. What have been done in this PR (a picture better than a thousand words). ![Screenshot 2022-04-19 at 14 26 58](https://user-images.githubusercontent.com/11028016/164003830-d6ea438d-ed1f-47ac-9902-82e182544620.png). - no more Sofa.* folder; - all gathered in the same folder; - clean and tidy; - all Simulation modules in a Simulation Folder (no more weird split Sofa.SimulationCore in framework and SimulationCommon/Graph modules); - all modules names are Sofa.ModuleName (with compat or aliases) ; - not breaking (💦). # Discussions; - I put all the modules in a Framework but modules name, folders and namespaces (i.e like SofaNG) does not take into account that (and IMO I dont want). Thing is, I would find weird to put those modules directly into the root/ . But it is just an opinion.; - No Sofa.Framework nor Sofa.Simulation meta module (like SofaFramework now). I prefer this way but more opinions are welcome. ****. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2876:1626,failure,failures,1626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2876,2,['failure'],['failures']
Availability,"bilateralinteractionconstraint was in it's own namespace: `sofa::component::constraint::lagrangian::model::bilateralinteractionconstraint`; with some using to declare it in `sofa::component::constraint::lagrangian::model`. I don't know if it was done on purpose?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3468:808,failure,failures,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3468,2,['failure'],['failures']
Availability,"boost::filesystem is the last dependency on a (compiled) boost library.; However, SOFA is still dependent on header-only boost libraries (for graph, stable_vector and intrusive_ptr especially); (config of the target Boost::boost is in Sofa.Type). The change is really easy. just replace boost::filesystem with std::filesystem.; The only non trivial 1-1 replacement was for managing unicode path (not sure on the change actually). This is finally possible because minimum requirement is ubuntu 20.04 (with an updated version of gcc supporting std::filesystem instead of std::experimental::filesystem) and macOS 10.15 (same with its clang version/mac SDK). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/177]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342:1271,failure,failures,1271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342,2,['failure'],['failures']
Availability,"boost::locale was only once in FileRepository ; and since we can use std::locale from the STL, this library seems not useful anymore. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1033:390,failure,failures,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1033,2,['failure'],['failures']
Availability,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1848:1254,failure,failures,1254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848,2,['failure'],['failures']
Availability,"bou/discussions/139. **Description**; It is not possible to create a CMake project that depends on the latest SOFA release on MacOS. The following error happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Cont",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1103,Down,Downloads,1103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,1,['Down'],['Downloads']
Availability,btw why have you redundant values? This is not logical for an indice map.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114760464:17,redundant,redundant,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114760464,1,['redundant'],['redundant']
Availability,"build error on the master branch of SOFA. Using Eigen v3.3.7. ```; Building CXX object SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/BarycentricMapping.cpp.o; In file included from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:35,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:11: error: ‘ProductBase’ was not declared in this scope; 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^~~~~~~~~~~; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:67: error: wrong number of template arguments (3, should be 1); 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^; In file included from /usr/include/eigen3/Eigen/Core:365,; from /usr/include/eigen3/Eigen/SparseCore:11,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MultiMatrixAccessor.h:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:30,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; f",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1412:918,error,error,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1412,1,['error'],['error']
Availability,"build fail on mac ?; ```; src/modules/SofaMiscCollision/src/SofaMiscCollision/TetrahedronFrictionContact.cpp:55:40: error: duplicate explicit instantiation of 'FrictionContact<sofa::component::collision::TetrahedronCollisionModel, sofa::component::collision::SphereCollisionModel<defaulttype::Vec3Types>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >'; template class SOFA_MISC_COLLISION_API FrictionContact<TetrahedronCollisionModel, SphereCollisionModel<sofa::defaulttype::Vec3Types>>;; ^; /Volumes/Jenkins/workspace/sofa-framework/PR-2453/macos_clang_options_release/src/modules/SofaMiscCollision/src/SofaMiscCollision/TetrahedronFrictionContact.cpp:49:40: note: previous explicit instantiation is here; template class SOFA_MISC_COLLISION_API FrictionContact<TetrahedronCollisionModel, SphereCollisionModel<sofa::defaulttype::Vec3Types>>;; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2453#issuecomment-954502045:116,error,error,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2453#issuecomment-954502045,1,['error'],['error']
Availability,"busb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plu",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2396,ERROR,ERROR,2396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"by filtering duplicates warnings/errors/crashes. This should fix JVM heap problems on small VMs when parsing scene-testing/warnings.txt, scene-testing/errors.txt and scene-testing/crashes.txt. Please don't forget the real problem is that we have 60k+ scene-test warnings... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555:33,error,errors,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555,4,"['error', 'failure']","['errors', 'failures']"
Availability,"c/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:17:29: note: provided for ‘template<class T> struct Eigen::internal::traits’; 17 | template<typename T> struct traits;; | ^~~~~~; In file included from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:35,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:69: error: expected ‘{’ before ‘>’ token; 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:457:23: error: expected template-name before ‘<’ token; 457 | : public ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs>; | ^; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:457:23: error: expected ‘{’ before ‘<’ token; make[2]: *** [SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/build.make:206: SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/BarycentricMapping.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1325: SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1412:3272,error,error,3272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1412,6,"['Error', 'error']","['Error', 'error']"
Availability,"c\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; ```. I guess the shaders needs to be updated for version >= 140",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:1315,ERROR,ERROR,1315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,7,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1868:574,failure,failures,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868,2,['failure'],['failures']
Availability,cherry-pick only the fix in TopologicalChangeProcessor submitted by @fangzhouzisb in PR #1217 ; The other fix needs further discussion. Fix #1213. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1247:403,failure,failures,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1247,2,['failure'],['failures']
Availability,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1906:993,failure,failures,993,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906,2,['failure'],['failures']
Availability,cmake error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:6,error,error,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['error'],['error']
Availability,"coefficient is always zero (since for no strain we have no stress). For examples the coefficients for polynomials [3,2,4] will be put as [a1,a2,a3,b1,b2,c1,c2,c3,c4].; The dedication of jacobian matrix for PolynomialSpringForceField is given below; ![Pol1](https://user-images.githubusercontent.com/28653498/79741283-45f34c00-8301-11ea-8472-778b8b4c4dc4.JPG); ![Pol2](https://user-images.githubusercontent.com/28653498/79741289-4855a600-8301-11ea-86fc-b1a2aa29b92c.JPG); ![Pol3](https://user-images.githubusercontent.com/28653498/79741294-4ab80000-8301-11ea-8ef9-ff2a29603218.JPG); ![Pol4](https://user-images.githubusercontent.com/28653498/79741295-4be92d00-8301-11ea-9ef8-a444c6d23f44.JPG); I guess the dedication has to be added as documentation, but I do not know how to add it. For RestShapeSpring I added an exponetial addition to the denominator to avoid Nan problems for cases when spring has a zero length. As a result, the stress simulation is shifted compared with polynomial values, but it keeps its nonlinearity. Here is the dedication of a derivative; ![RestPol1](https://user-images.githubusercontent.com/28653498/79741632-de89cc00-8301-11ea-95a5-72803bb1d259.JPG); ![RestPol2](https://user-images.githubusercontent.com/28653498/79741636-e0ec2600-8301-11ea-87f6-fd7ce1e8c3d1.JPG); ![RestPol3](https://user-images.githubusercontent.com/28653498/79741643-e34e8000-8301-11ea-8ce7-5e44658d802d.JPG); ![RestPol4](https://user-images.githubusercontent.com/28653498/79741646-e3e71680-8301-11ea-9d20-5c1327fb4080.JPG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342:2477,failure,failures,2477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342,2,['failure'],['failures']
Availability,"compilation passed with GCC v.7.3 (default in fedora 27). I did not checked at which GCC version between those two this starts to happen. ```; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp: In instantiation of ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponseT(const sofa::core::MechanicalParams*, DataDeriv&) [with DataDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >; DataTypes = sofa::defaulttype::StdRigidTypes<3, double>]’:; /home/vm-fedora-28/sofa/SofaGeneral/../modules/SofaBoundaryCondition/FixedPlaneConstraint.inl:173:31: required from ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponse(const sofa::core::MechanicalParams*, sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv&) [with DataTypes = sofa::defaulttype::StdRigidTypes<3, double>; sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv = sofa::core::objectmodel::Data<sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > > >; typename DataTypes::VecDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >]’; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:58:44: required from here; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:74:100: internal compiler error: in type_dependent_expression_p, at cp/pt.c:25100; ed int > ::const_iterator it = this->indices.getValue().begin(); it != this->indices.getValue().end(); ++it); ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/673:1909,error,error,1909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/673,1,['error'],['error']
Availability,"concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:1907,failure,failures,1907,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,2,['failure'],['failures']
Availability,"conditioner for ShewchukPCGLinearSolver; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-NoPreconditioner.scn`: ShewchukPCGLinearSolver with no preconditioner. Similar to the classical CG. Can be used for comparison.; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-WarpedAsyncSparseLDLSolver.scn`: AsyncSparseLDLSolver used as a preconditioner for ShewchukPCGLinearSolver. When the matrix has not been assembled, it is warped using a RotationFinder. This is done using an intermediate component: WarpPreconditioner. All the other scenes from the `examples/Components/linearsolver` folder have been modified so it is easy to change the resolution of the deformable beam. `totalMass` instead of `vertexMass`, and `BoxROI` instead of raw indices. In WarpPreconditioner, an additional Data is introduced to request matrix assembly at a given frequency. This is to minimize the cost of matrix assembly. Instead of assembling the matrix, the old one is used, taking into account the rotations compared to the previous time step. The same mechanism exists in ShewchukPCGLinearSolver. There are some refactoring in SparseLDLSolver to make more elegant code (without duplicated code) in AsyncSparseLDLSolver, but no changes are introduced.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2661:2462,failure,failures,2462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2661,2,['failure'],['failures']
Availability,"config.h must be included before ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4740:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4740,4,['failure'],['failures']
Availability,"contains #2534 . Just restore from old repository and update the files to compile with up to date master branch. ; No optimization or cleaning done yet. In term of performances, simulation of a Beam of 3645 Hexahedra:; - CPU: ~42.2 fps; - CUDA: ~180 fps. Using those scenes : ; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CPU.scn; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CUDA.scn. ![image](https://user-images.githubusercontent.com/21199245/145564675-5c399ecc-93ab-4fee-8135-b4c1b5459e2d.png). NB: simulations were performed without rendering the forcefield.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2535:1176,failure,failures,1176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2535,2,['failure'],['failures']
Availability,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4639:817,failure,failures,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639,2,['failure'],['failures']
Availability,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4641:796,failure,failures,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641,2,['failure'],['failures']
Availability,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1794:3518,failure,failures,3518,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794,2,['failure'],['failures']
Availability,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2118:2284,failure,failures,2284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118,2,['failure'],['failures']
Availability,"ction. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 100 iterations done in 12.9731 s ( 7.70827 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.41 1 0.01 121.72 98.03 20.57 98.03 77.48 .....Get Compliance; ```. - This PR (without parallelization). The benchmark should be similar to the master branch. ```; 100 iterations done in 13.1572 s ( 7.6004 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 16.31 1 0.01 134.76 98.34 22.21 98.34 76.54 .....Get Compliance; ```. - This PR (with parallelization). ```; 100 iterations done in 5.94345 s ( 16.8253 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.76 1 0.01 30.62 26.85 5.55 26.85 47.91 .....Get Compliance; ```. On my machine there is a nice speedup of x3.66 on the `Get Compliance` timer, and x2.18 in terms of global FPS. # Additional Benchmarks. I wanted to make sure that the usual solve of SparseLDLSolver did not regress in terms of performances. I benchmarked `examples/Component/LinearSolver/Direct/FEMBAR_SparseLDLSolver.scn` on 10000 steps. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 10000 iterations done in 28.2657 s ( 353.785 FPS).; ```. - This PR. ```; 10000 iterations done in 28.3223 s ( 353.078 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986:2184,failure,failures,2184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986,2,['failure'],['failures']
Availability,"ctions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1893:2131,error,error,2131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893,1,['error'],['error']
Availability,"cxxopts throws exceptions when same names are added, which obviously crashes the whole program because they are uncaught. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4947:666,failure,failures,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4947,2,['failure'],['failures']
Availability,"cy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; Python:; Version: 3.9.7; Executable: D:/11631/miniconda3/python.exe; Headers: D:/11631/miniconda3/include; Libraries: D:/11631/miniconda3/libs/python39.lib; User site: C:\Users\11631\AppData\Roaming\Python\Python39\site-packages; pybind11:; Version: 2.8.1; Config: E:/GitHub/vcpkg/installed/x64-windows/share/pybind11/pybind11Config.cmake; Adding plugin LMConstraint; SofaDistanceGrid not found: DistanceLM codes will not be compiled; Adding application runSofa; Write Plugin list at J:/GitHub/sofa/build/bin/plugin_list.conf.default; Configuring incomplete, errors occurred!; See also ""J:/GitHub/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""J:/GitHub/sofa/build/CMakeFiles/CMakeError.log"". how can i solve this problem，thank you",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:4939,error,errors,4939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['error'],['errors']
Availability,"d objects, ; 3. A `SubsetMultiMapping` that will make the link between the two provided objects and the new mechanical state; 4. The spring force field. Since `SubsetMultiMapping` was initially in SofaMiscMapping, it has been moved into SofaBaseMechanics. A compatibility layer is available. Other components using `StiffSpringForceField` had to be adapted to create also the extra components. An example is `AttachBodyPerformer` which creates the spring between an object and the mouse (shift + clic). WARNING:; Since `StiffSpringForceField` is now necessarily located in a mapped node, its stiffness matrix is not mapped in case of a built linear system. The forces are then computed explicitly only. This issue will be addressed in the new design of the matrix assembly. TODO:. - [x] A description for this PR; - [ ] Handle topological changes in `SpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2653 and https://github.com/sofa-framework/sofa/pull/2729; - [x] Deal with `BoxStiffSpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2621; - [x] Compilation and tests issues on CI (CUDA); - [x] In `AttachBodyPerformer`, a Node remains in the scene when `AttachBodyPerformer` is destroyed. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/224]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554:3070,failure,failures,3070,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554,2,['failure'],['failures']
Availability,"d paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1266,failure,failure,1266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,3,"['Error', 'failure']","['Error', 'failure']"
Availability,"damned I need to recompile it to get the full error message, sorry I will get back to you",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110594936:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110594936,1,['error'],['error']
Availability,dant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29326,redundant,redundant-smartptr-get,29326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-smartptr-get']
Availability,"ded '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtrac",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:2067,ERROR,ERROR,2067,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['ERROR'],['ERROR']
Availability,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1775:2113,failure,failures,2113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775,2,['failure'],['failures']
Availability,dex](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [re,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28492,redundant,redundant-declaration,28492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-declaration']
Availability,"different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:5720,ERROR,ERROR,5720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['ERROR'],['ERROR']
Availability,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:4519,failure,failures,4519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,['failure'],['failures']
Availability,"dvancedTimer_deepTreeDisabled/16/2 0.016 ms 0.016 ms 40727 nbTimers=272; BM_AdvancedTimer_deepTreeDisabled/32/2 0.078 ms 0.078 ms 8960 nbTimers=1056; BM_AdvancedTimer_deepTreeDisabled/64/2 0.502 ms 0.516 ms 1000 nbTimers=4.16k; BM_AdvancedTimer_deepTreeDisabled/1/3 0.000 ms 0.000 ms 3733333 nbTimers=3; BM_AdvancedTimer_deepTreeDisabled/2/3 0.001 ms 0.001 ms 1120000 nbTimers=14; BM_AdvancedTimer_deepTreeDisabled/4/3 0.004 ms 0.004 ms 194783 nbTimers=84; BM_AdvancedTimer_deepTreeDisabled/8/3 0.029 ms 0.029 ms 24889 nbTimers=584; BM_AdvancedTimer_deepTreeDisabled/16/3 0.256 ms 0.255 ms 2635 nbTimers=4.368k; BM_AdvancedTimer_deepTreeDisabled/32/3 2.84 ms 2.85 ms 236 nbTimers=33.824k; BM_AdvancedTimer_deepTreeDisabled/64/3 63.2 ms 62.5 ms 11 nbTimers=266.304k; BM_AdvancedTimer_deepTreeDisabled/1/4 0.000 ms 0.000 ms 3200000 nbTimers=4; BM_AdvancedTimer_deepTreeDisabled/2/4 0.001 ms 0.001 ms 560000 nbTimers=30; BM_AdvancedTimer_deepTreeDisabled/4/4 0.016 ms 0.015 ms 44800 nbTimers=340; BM_AdvancedTimer_deepTreeDisabled/8/4 0.248 ms 0.246 ms 2800 nbTimers=4.68k; BM_AdvancedTimer_deepTreeDisabled/16/4 7.14 ms 7.08 ms 75 nbTimers=69.904k; BM_AdvancedTimer_deepTreeDisabled/32/4 203 ms 203 ms 3 nbTimers=1082.4k; BM_AdvancedTimer_deepTreeDisabled/64/4 4035 ms 4031 ms 1 nbTimers=17.0435M; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2645:8047,failure,failures,8047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2645,2,['failure'],['failures']
Availability,"e anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:2094,failure,failures,2094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,2,['failure'],['failures']
Availability,"e following error happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Context**. - System: MacOS; - Version of SOFA: release 22.06.00. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10013148/CM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1240,Down,Downloads,1240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,1,['Down'],['Downloads']
Availability,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2599,ERROR,ERROR,2599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"e name=""root"" gravity=""0 -9.81 0"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this gravity data is not null, mass components automatically create a GravityForceField in the node; - GravityForceField have a link towards the mass to avoid recomputing the M matrix; - gravity contribution is added in the matrix system by a ForceField; - GravityForceField must be in the node to compute the gravity. #### Typical scene; old scene works and now you also can write:. ``` xml; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:1300,toler,tolerance,1300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,1,['toler'],['tolerance']
Availability,"e regular grid of hexahedras and this grid is automatically exported as the filename you precised in the .scn/.xml file; - Import/open the .obj in ANY mesh editor (Blender, Unity or whatever); - Display the vertex normals : their orientation are wrong. **Expected behavior**; The normals should have had an orientation which is perpendicular to the local surface around each vertex (should be straight perpendicular to a planar surface around the center and around 45 degrees in the borders, since the vertices touch two different faces there). ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v20.12 branch at commit ee7664e, v20.12.00 binaries; - State: build directory. **Command called (to copy in a .scn/xml file)**. ```txt. <?xml version=""1.0"" ?>. <Node name=""root"" dt=""0.1"" gravity=""0 0 0"">. 	<VisualStyle displayFlags=""showBehavior hideVisual hideCollision"" />. 	<EulerImplicit name=""cg_odesolver"" printLog=""false"" />; 	<CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />; 	; 	<RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; 	<RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->; 	<RequiredPlugin pluginName='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]-->; 	<RequiredPlugin pluginName='SofaOpenglVisual'/> <!-- Needed to use components [OglModel, ]-->; 	; 	; 	<!-- The object to export -->; 	<Node name=""MyRegularGrid"">. 		<MechanicalObject name=""mo""/> ; 		<UniformMass vertexMass=""0.2"" />; 		<RegularGrid name=""hexaGrid"" nx=""6"" ny=""6"" nz=""4"" xmin=""-10.0"" xmax=""10.0"" ymin=""-10.0"" ymax=""10.0"" zmin=""0"" zmax=""0.50""/>; 		<HexahedronSetTopologyContainer name=""Topo"" src=""@hexaGrid"" />		; 		<HexahedralFEMForceField name=""FEM"" youngModulus=""1e13"" poissonRatio=""0.3"" method=""large"" />; 		; 		<!-- Visual node to allow the exportation -->; 		<Nod",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:2092,toler,tolerance,2092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['toler'],['tolerance']
Availability,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1893:3037,failure,failures,3037,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893,2,['failure'],['failures']
Availability,"e the timings for the `MechanicalMatrixMapper.pyscn` scene for 1000 time steps measured on my computer:. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 74.24 112.80 77.26 2.76 77260.7 100 TOTAL; ...; 4 0.80 1 41.79 62.15 44.22 1.53 44.22 57.23 ....MBKBuild; 5 0.99 1 40.91 61.06 43.32 1.47 43.32 56.07 .....MMM-addKToMatrix; 6 0.99 1 1.69 3.69 1.89 0.17 1.89 2.45 ......jacobian; 6 2.88 1 6.29 9.88 6.85 0.34 6.85 8.86 ......stiffness; 6 9.73 1 16.17 23.13 16.55 0.50 16.55 21.42 ......compressStiffnessMatrix; 6 26.28 1 2.74 4.50 2.98 0.16 2.98 3.86 ......copyKToEigen; 6 29.26 1 0.24 0.54 0.28 0.02 0.28 0.36 ......copyJ1J2ToEigen; 7 29.48 1 0.05 0.14 0.06 0.01 0.06 0.08 .......copyJ2ToEigen; 6 29.54 1 9.06 18.67 10.47 0.75 10.47 13.55 ......Multiplication; 7 29.54 1 4.59 9.56 5.44 0.36 5.44 7.04 .......J1tKJ1; 7 34.98 1 0.76 2.15 0.88 0.11 0.88 1.14 .......J2tKJ2; 7 35.86 1 2.73 5.90 3.28 0.35 3.28 4.24 .......J1tKJ2; 7 39.14 1 0.77 1.77 0.86 0.10 0.86 1.12 .......J2tKJ1; 6 40.01 1 2.62 4.70 2.78 0.19 2.78 3.59 ......J1tKJ1-copy; 6 42.79 1 0 0 0 0 0 0 ......J2tKJ2-copy; 6 42.79 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 42.80 1 0.01 0.04 0.02 0 0.02 0.03 ......J2tKJ1-copy; ```. Work on the `MechanicalMatrixMapper` has been done in collaboration with @Esther-R. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2362:2157,failure,failures,2157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2362,2,['failure'],['failures']
Availability,"e to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] T",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2016,ERROR,ERROR,2016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"e. This assumption was problematic as it favor the testing of code paths that does not generate warning or errors instead of testing all the possible paths. To favor both valid and invalid paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1133,error,error,1133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['error'],['error']
Availability,e.g. Eigen among others. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/397:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/397,2,['failure'],['failures']
Availability,"ecified in a Sofa_test<> as well as in fact into any object or function body; - it is stack based so we restore the context when an area is left. To give you a look of how it is (the V2 stuff are just transitional of course):; ```cpp; #include <SofaTest/Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_err",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1342,Error,Error,1342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,1,['Error'],['Error']
Availability,"ected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions when you want to test some important concepts of a component, like what SofaTest wanted to do, but without the dependency bloat. A potential non exhaustive list of abstactions such a library could provide ; - Mapping ; - linearisation, ; - applyJ applyJT equivalence ; - ForceField; - linearisation; - addDForce addKToMatrix equivalence ; - addKToMatrix must give a SPD matrix (well actually in Sofa convention I think internal forcefields actually give a SND matrix but the idea remains... Nothing of this testing API would require the initialisation of a simulation / node. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:3632,failure,failures,3632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,['failure'],['failures']
Availability,"ectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaLis",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1258,Down,Downloads,1258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Down'],['Downloads']
Availability,"ed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1825,ERROR,ERROR,1825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"ed; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2322,Error,Error,2322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['Error'],['Error']
Availability,"ely on the call super pattern to work.; ; That said I strongly support the idea of cleaning the data validation mechanism. . Damien,; Nota bene:; I disagree about your saying ""I think this ""true/false implying other data fields"" mechanism is a bad design and for this case no checking solution will be clean. "" . Having complex relationship between input fields is a very common situation in user interfaces and it is not restricted to""true/false implying other data fields"" but also having mutually exclusive fields and other cases. It is so common that UI frameworks have dedicated support for that (QGroupBox (http://doc.qt.io/qt-5/qtwidgets-widgets-groupbox-example.html in Qt). And from an User interface perspective not exposing such constraints to the user is actually a bad design. So, these kind of constraint are good design, the problem is on how to implement them in Sofa :) . In Sofa the current state is that:; - the constraints resulting from the type are encoded into the read method of the field (eg: RGBAColor accept inputs like #FFAABBCC or ""red"", the input validation and error message reporting is done in the 'read' field, a dynamic cast can be used to display a color selector widget instead of a text field). ; - the ""isRequired"" constraint is encoded with a boolean in the Data field and checked in BaseObject::init(); - the ""isReadOnly"" constraint is encoded with a boolean in the Data field, it is not checked in BaseObject::init() and writing to it is allowed but it used to gray out things in the GUI. ; - other constraints (including one making relation between multiple data) are encoded with if() in the overriden init() and of course these constraints are not visible in the UI. ; - in some case it seems that using a common prefix in the field's name is used to group input together (I have only a vague remembering about that with drawEnable then drawColor and drawLine but I cannot find back the example). For that I have not solution...but we can think about one.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416637832:1389,error,error,1389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416637832,1,['error'],['error']
Availability,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:3800,failure,failures,3800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,2,['failure'],['failures']
Availability,"eneralExplicitOdeSolver; Adding plugin SofaGeneralImplicitOdeSolver; Adding plugin SofaGeneralLinearSolver; Adding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3036,Error,Error,3036,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,1,['Error'],['Error']
Availability,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2210:1963,failure,failures,1963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210,2,['failure'],['failures']
Availability,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2137:972,failure,failures,972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137,2,['failure'],['failures']
Availability,"equiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [SparseLDLSolver] -->; <RequiredPlugin name=""Sofa.Component.Mapping.NonLinear""/> <!-- Needed to use components [RigidMapping] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [ConstantForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.Setting""/> <!-- Needed to use components [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4234:2218,toler,tolerance,2218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234,1,['toler'],['tolerance']
Availability,"er/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the compilation of ""/tmp/tmpxft_0000044c_00000000-6_CudaStandardTetrahedralFEMForceField.cpp1.ii"".; CMake Error at SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake:275 (message):; Error generating file; /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:2073,error,error,2073,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"ere the different steps of the solving process for a dynamic solver. Hopefully this could be useful at some point. I have described this further in the documentation of Caribou's backward Euler solver [here](https://caribou.jnbrunet.com/classSofaCaribou_1_1ode_1_1BackwardEulerODESolver.html). The last two equations are the one that will be fully assembled, given any solver other than the SOFA's [un-preconditioned] conjugate gradient (this one doesn't assemble any matrices). We can simplify them for the case of only one Newton iteration, which is the same as the SOFA's EulerImplicit component:. ```; [(1+h r_m)M + hB + h(h+r_k)K] da = [r_mM + B + r_k K] v + [F - T]; (1) (2) (3); ```; where `h = dt`, `F` is the internal force vector computed by the elastic forcefields, and `T` is the external force vector computed by pressure fields, gravitational fields, collisions, etc. Here is what happens during the solve:. (1) A = [(1+h r_m)M + hB + h(h+r_k)K]. Building step:; Here we go down on the current context sub-graph and call :; 1. `ff->addKToMatrix(&A)` and `f->addBToMatrix(&A)` for every force field ""ff"" found.; 2. `pc->applyConstraint(&A)` for every BaseProjectiveConstraintSet ""pc"" found. This will set to 0 lines and columns of fixed constraints.; If a mechanical mapping ""m"" is found during the traversal, and m->areMatricesMapped() is false, the traversal stops before entering the subgraph of the mapping. Mechanical mappings step:; In case we have mapped matrices, which is, system matrix of a slave mechanical object, accumulate its contribution to the global system matrix with:; [A]ij += Jt * [A']ij * J; where `A` is the master mechanical object's matrix (top level), `A'` is the slave mechanical object matrix (linked to the top level MO using a mapping) and `J=m.getJ()`; is the mapping relation between the slave and its master. (2) [r_m M + B + r_k K] v; Go down in the current context tree calling `addMBKdx` on every force field components, then go up from the leaves ca",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263:1020,down,down,1020,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263,2,['down'],['down']
Availability,error,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/75#issuecomment-263594700:0,error,error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/75#issuecomment-263594700,1,['error'],['error']
Availability,error when trying to open a SOFA scene via command line,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/569:0,error,error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/569,1,['error'],['error']
Availability,"error: Plugin not found:""SofaMiscForceFieldDev""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:0,error,error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,1,['error'],['error']
Availability,"etection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Cor",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4252,ERROR,ERROR,4252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"everything is in the PR title. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2816:575,failure,failures,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2816,2,['failure'],['failures']
Availability,everything is in the title.; This PR: ; - clean some code commented.; - remove the HAVE_NEW_HEXA macro which was hardcoded to true since 2009; - change the NDEBUG topology test into a c++if condition so the code is compiled. work duplicated with STC#5 branch. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/693:516,failure,failures,516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/693,2,['failure'],['failures']
Availability,"f which, in its turn, is used in TetrahedronFEMForceField (the same @links). So, without initialization, during init step, the ForceField just crashes. **Steps to reproduce**; runSofa -l libSofaPython3.so test_scene.py. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). **Expected behavior**; the scene has to run (When I replace dataset with dataset1 which I declared as:. diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp b/SofaKernel/modules/SofaCore/src/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:2309,fault,fault,2309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['fault'],['fault']
Availability,"fa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3742,ERROR,ERROR,3742,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"fa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4058,ERROR,ERROR,4058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"fa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2329,ERROR,ERROR,2329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,"fa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2004,ERROR,ERROR,2004,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scene,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2425,failure,failure,2425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,"['error', 'failure']","['error', 'failure']"
Availability,fast-merge but the CI reports a lot failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1829#issuecomment-782096370:36,failure,failure,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829#issuecomment-782096370,1,['failure'],['failure']
Availability,"ference; ```. Then anywhere (usually in the constructor body); ```; c_diff.addCallback(this,&MyComponent::myfunction1); ; c_diff.addCallback(this,&MyComponent::myfunction2); ; ```. The main difference with an existing type in sofa if the possibility to attach several functions and more importantly to specify the component on which the callback will be called. This allows to define callbacks as member functions of the component, which simplify access to parameters. Additional test are added allowing to modify the data while the callback is called (in order to avoid cyclic calls). This is usefull for linked data i.e. The callback receives a modification from the parent, the callback is then called and it is allowed to modify the data in the callback which will automatically call update of childs of the data. . The second type introduced in this PR is a wrapper allowing to easily associate a widget with a specific types of data. It can be used as follows: . in a cpp file; `sofa::helper::Creator<sofa::gui::qt::DataWidgetFactory, GenericDataWidget< Data<bool>, QtDataBoxEdit > >	DWClass_bool(""bool"",true);`. QtDataBoxEdit is a Qwidget class defined by the user that needs to define usual functions needed in sofa widgets : ; ```; void readFromData(const Data<bool>& data);; void writeToData(Data<bool>& data);; ```. And constructor must take as parameter the parent and the data as follows :; `QtDataBoxEdit(sofa::gui::qt::DataWidget* parent,const sofa::core::objectmodel::Data<bool> & data) : QCheckBox(parent);`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911:2261,failure,failures,2261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911,2,['failure'],['failures']
Availability,"few CUDA scenes are failing, all with the messages `[ERROR] [CGLinearSolver(cGLinearSolver1)] Required data ""threshold"" has not been set. (Current value is 1e-05)` so I suppose these scenes must be updated too",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949356046:53,ERROR,ERROR,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949356046,1,['ERROR'],['ERROR']
Availability,find_package(SofaGui) was failing because of SofaGuiCommon's dependency on SofaComponentAll. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1198:349,failure,failures,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1198,2,['failure'],['failures']
Availability,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2184:556,failure,failures,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184,2,['failure'],['failures']
Availability,fix #551 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1058:267,failure,failures,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1058,2,['failure'],['failures']
Availability,fix #988 . tada!; ![barycentric_00000001](https://user-images.githubusercontent.com/21199245/58172989-64d50280-7c9a-11e9-87e6-472d08feb97e.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1057:401,failure,failures,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1057,2,['failure'],['failures']
Availability,"fix shadow variable. Fix #2431 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2435:577,failure,failures,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2435,2,['failure'],['failures']
Availability,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1894:11,error,error,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894,3,"['error', 'failure']","['error', 'failures']"
Availability,fixed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/214:237,failure,failures,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/214,1,['failure'],['failures']
Availability,fixes #435 RigidMapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/441:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/441,2,['failure'],['failures']
Availability,fixes #723 . - removes copy-paste comments; - fixes horrible typos in the scene's name; - restores the scene's desired behavior . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/765:386,failure,failures,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/765,2,['failure'],['failures']
Availability,"fixing #238 ; This fix solves the segfault at startup that intel-powered linux machines experience.; It should be a linux-specific bugfix to my understanding.; If anyone knows a clean way of probing whether or not a ""Core profile"" context would be created (something better than parsing lspci to see if we're runing an intel GPU...), I'll update this PR accordingly. Anyone to review?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/526:642,failure,failures,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/526,2,['failure'],['failures']
Availability,fixing Polynomial #434 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/442:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/442,2,['failure'],['failures']
Availability,"fo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INF",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6995,ERROR,ERROR,6995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,"following-up #3550 ; (PR coming from https://github.com/sofa-framework/SofaPython3/pull/330). Among other thing, the different variables (SOFA_HAVE_BLABLA) were not set anymore (set previously by sofa_find_package() ); And it did reflect the fact that setting Sofa.GUI means setting common/component/batch/qt mandatory (contrary to the Sofa.Gui module from the former days where everything was implicit). Notable exception is HeadlessRecorder which is still optional... (but I don't even know if it still works🤔). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3595:1058,failure,failures,1058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3595,2,['failure'],['failures']
Availability,"for every BaseProjectiveConstraintSet ""pc"" found. This will set to 0 lines and columns of fixed constraints.; If a mechanical mapping ""m"" is found during the traversal, and m->areMatricesMapped() is false, the traversal stops before entering the subgraph of the mapping. Mechanical mappings step:; In case we have mapped matrices, which is, system matrix of a slave mechanical object, accumulate its contribution to the global system matrix with:; [A]ij += Jt * [A']ij * J; where `A` is the master mechanical object's matrix (top level), `A'` is the slave mechanical object matrix (linked to the top level MO using a mapping) and `J=m.getJ()`; is the mapping relation between the slave and its master. (2) [r_m M + B + r_k K] v; Go down in the current context tree calling `addMBKdx` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings. If the k mechanical parameter is not zero, the `applyDJT` will also be applied.; NOTE: This correspond to the force terms dependent on the velocity, i.e. the damping terms : ; [- r_m M - B + r_k K] v; where K is in fact -K by SOFA's convention, hence the positive (+) sign. (3) [F - T]; Go down in the current context tree calling `addForce` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings.; NOTE: This correspond to the force terms dependent on the displacement, i.e. :; (-Ku + T). Now, the damping and stiffness matrices `B` and `K` are usually sparse. Knowing in advanced that `M` is also sparse (or even diagonal), I would bet that we could optimize these operations `(aM + b B + c K) v`. This is even more important for non-linear systems since a third term of the type `(aM + bB + cK) a` appears and must be computed multiples times per time steps. . Let me know if something is not clear, this part is very un-intuitive and I spent the past 2 weeks trying to understand it to implement non-linear dynamic solvers so it is fresh in my memory !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263:2368,down,down,2368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263,2,['down'],['down']
Availability,"from SofaBaseLinearSolver to SofaMatrix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2545:585,failure,failures,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2545,2,['failure'],['failures']
Availability,from comment:; `The Data constraintForces is used to expose the intensities of constraint forces in the simulation. We use the constraint forces as the approximation of real contact forces. We use this Data to provide contact information for the catheter insertion. The user can easily check the constraint forces from the GenericConstraint component interface.; `. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/840:622,failure,failures,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/840,2,['failure'],['failures']
Availability,"function warning for user & deprecation for devs; - [x] assess again performances; - direct; - Diagonal-buildMassMatrix = 0.57%; - MeshMM-buildMassMatrix = 0.57%; - iterative; - Diagonal-addMDx = 0.45%; - MeshMM-addMDx = 0.70% -- 0.47% without the if condition for graph plotting; - TORUS Fall scene over 10 000 steps; - DiagonalMass; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.54	 1 	 0.01	 0.12	 0.01	 0 	 0.01	 0.19	.........DM-buildMassMatrix; - MeshMatrixMass lumped; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.44	 1 	 **0.0**	 **0.04**	 0.01	 0 	 0.01	 **0.18**	.........MMM-buildMassMatrix; - [ ] update all scenes ( `<DiagonalMass` :arrow_right: `<MeshMatrixMass lumping=""1""` ). **TODO (after this PR)**; - deprecate XspLoaders (see #4003). **NOTE** ; Rigid cases previously handled by the DiagonalMass are not anymore, therefore breaking.; Regarding the absence of use of xs3 formats for rigid bodies and the starting project coupling Pinocchio which should bring a more robust description/handling of rigid bodies, I would advocate to :; - deprecated associated components (XspLoader, MeshXspLoader and their impact on RigidMapping, SpringFF, VectorSpringFF) ; - take this opportunity to clean and replace OldTutorials coming with it with new ones. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912:1705,robust,robust,1705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912,3,"['failure', 'robust']","['failures', 'robust']"
Availability,"fwd.h was not in the list of HEADERS.; Therefore it seems the installation process was not copying it into the install folder (leading to a failure for projects needing it). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2337:140,failure,failure,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2337,3,['failure'],"['failure', 'failures']"
Availability,g/extra/clang-tidy/checks/misc-misplaced-const.html) |; | [clang-analyzer-core.CallAndMessage](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.CallAndMessage.html) | [misc-misplaced-widening-cast](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-widening-cast.html) |; | [clang-analyzer-core.DivideZero](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DivideZero.html) | [misc-new-delete-overloads](https://clang.llvm.org/extra/clang-tidy/checks/misc-new-delete-overloads.html) |; | [clang-analyzer-core.DynamicTypePropagation](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DynamicTypePropagation.html) | [misc-non-copyable-objects](https://clang.llvm.org/extra/clang-tidy/checks/misc-non-copyable-objects.html) |; | [clang-analyzer-core.NonNullParamChecker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonNullParamChecker.html) | [misc-redundant-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-redundant-expression.html) |; | [clang-analyzer-core.NonnilStringConstants](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonnilStringConstants.html) | [misc-sizeof-container](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-container.html) |; | [clang-analyzer-core.NullDereference](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NullDereference.html) | [misc-sizeof-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-expression.html) |; | [clang-analyzer-core.StackAddressEscape](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.StackAddressEscape.html) | [misc-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/misc-static-assert.html) |; | [clang-analyzer-core.UndefinedBinaryOperatorResult](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.UndefinedBinaryOperatorResult.html) | [misc-string-compare](https://clang.llvm.org/extra/clang-tidy/checks/misc-string-compare.htm,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:9076,redundant,redundant-expression,9076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-expression']
Availability,gcc 10 is showing a lot of warning for the use of visibility specifier on already defined types saying it is not needed. So I remove them...let's see if the behavior is the same on windows or if the declspec has a more general scope or if everything is fine. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1456:517,failure,failures,517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1456,2,['failure'],['failures']
Availability,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2131:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131,2,['failure'],['failures']
Availability,"getEdge() from EdgeSetTopologyContainer does bound-checking and the compiler cannot really optimize that.; EDIT: and moreover, getNbEdges() (edges, etc) used in the getEdge is extremely non-optimized... In a nutsheel, it is much faster to do; ```; const auto& edges = topo.getEdges();; for(const auto& e : edges) ; { ; blabla(e);; }; ```; than; ```; for(auto i = 0; i < topo.getNbEdges() ; i++) ; { ; blabla(topo.getEdge(i));; }; ```. Some idea to keep the getEdge() (and others) would be either to remove the bound-check (maybe enable only in debug like std::vector), or do an unsafe version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2516:1138,failure,failures,1138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2516,2,['failure'],['failures']
Availability,"getHeaderFileLocation() won't probably ever be overridden, so the virtual keyword is removed from the macro (and remove literally thousands lines of warnings in logs). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1062:424,failure,failures,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1062,2,['failure'],['failures']
Availability,"great @damienmarchal , unfortunately ci is down for the day !; Let's rebuild tomorrow",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314#issuecomment-315995143:43,down,down,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314#issuecomment-315995143,1,['down'],['down']
Availability,"h00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:11: error: ‘ProductBase’ was not declared in this scope; 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^~~~~~~~~~~; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:67: error: wrong number of template arguments (3, should be 1); 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^; In file included from /usr/include/eigen3/Eigen/Core:365,; from /usr/include/eigen3/Eigen/SparseCore:11,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MultiMatrixAccessor.h:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:30,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1412:1183,error,error,1183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1412,1,['error'],['error']
Availability,"hDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10235,ERROR,ERROR,10235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,hasChanged methods were not const. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1488:291,failure,failures,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1488,2,['failure'],['failures']
Availability,"havior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1568,failure,failure,1568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,['failure'],['failure']
Availability,"he Datas and the Links. Example with:; ```py; print(dir(myMechanicalObject)); ```; Will prints:; ```; ['__class__', '__delattr__', '__dir__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'addData', 'addNewData', 'applyRotation', 'applyScale', 'applyTranslation', 'bbox', 'bwdInit', 'cleanup', 'computeBBox', 'constraint', 'context', 'derivX', 'downCast', 'drawMode', 'externalForce', 'findData', 'findLink', 'force', 'free_position', 'free_velocity', 'getAsACreateObjectParameter', 'getCategories', 'getClassName', 'getContext', 'getData', 'getDataFields', 'getLink', 'getLinkPath', 'getListOfDataFields', 'getListOfLinks', 'getMaster', 'getName', 'getPathName', 'getSize', 'getSlaves', 'getTarget', 'getTemplateName', 'init', 'isToPrint', 'listening', 'mappingJacobian', 'master', 'name', 'position', 'printLog', 'reinit', 'reserve', 'reset', 'reset_position', 'reset_velocity', 'resize', 'restScale', 'rest_position', 'rotation', 'rotation2', 'scale3d', 'setSrc', 'showColor', 'showIndices', 'showIndicesScale', 'showObject', 'showObjectScale', 'showVectors', 'showVectorsScale', 'size', 'slaves', 'storeResetState', 'tags', 'topology', 'translation', 'translation2', 'useTopology', 'velocity']; ```. NB: There is minimal test to be sure this work.; NB2: I'm not found of this big list but didn't want to change the semantics to visually separate the links, the data and the methods. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/762:1952,failure,failures,1952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/762,2,['failure'],['failures']
Availability,"he Sofa 'DataEngine' in a scripted way. In the second example provided it is shown how a versatile ROI functionality can be implemented with the help of the PSDE. Two examples with some documentation are provided in: ; applications/plugins/SofaPython/examples/PSDEExamples/. Example of use (01-basic/PSDEBasic.pyscn):; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; import Sofa; import os. path = os.path.dirname(os.path.abspath(__file__))+'/../../../../../../share/mesh/'; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename=path+'liver.vtk'); rootNode.createObject('PythonScriptDataEngine', name='PSDE', filename=""DataEngine.py"", classname=""MyDataEngine"")	 . ```; Example for DataEngine class in Python (01-basic/DataEngine.py):. ```python; class MyDataEngine(Sofa.PythonScriptDataEngine): ; ; def parse(self): ; # this is the correct place to define inputs and outputs! (linking will not work in init() for instance); self.addNewInput('Positions',datatype='p',value='@loader.position') ; self.addNewOutput('NumPoints',datatype='d', value='0') . def init(self):; 	pass. def update(self): ; self.NumPoints = len(self.Positions); ```. What it does NOT provide: A new form of parsing from Python data to Sofa data. It uses the available mechanism that uses string conversion and parsing. Also, the type of the Data has to be declared/selected with a parameter in Python, because there is no logic to automatically derive the type desired by the user (could be future work). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/583:2177,avail,available,2177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/583,3,"['avail', 'failure']","['available', 'failures']"
Availability,"he implementation of BaseObject::init() will not change. . This kind of pattern can be replace with the ""delegate pattern"" (not sure this is its official name). Which leads to:; ```cpp; class BaseObject; {; public:; void init(); { ; checksDataFields(); ; doBaseObjectInit();; setComponentStateOnError();; }; ; void draw(); {; if(componentState != valid); return; doBaseObjectDraw(); ; }; private:; virtual void doBaseObjectInit() {}; virtual void doBaseObjectDraw() {}; };. class MyObject : public BaseObject; {; public:; void doBaseObjectInit() override final; {; /// do here the object specific initialization without bothering of what your parent is doing. ; }; ; void doBaseObjectDraw() override final; {; /// do here the object specific drawing without bothering of what your parent is doing. ; }; }; ```; The latter pattern allows to implement a general behavior in a parent class and be sure this behavior is never broken up by ; the child. . In the PR i tried it to see what would be the change have a look at.; The change in BaseObject is at commit https://github.com/sofa-framework/sofa/commit/5dd2761c7920775e81672cc9a5a12bcaf27b9ee2. Suggestion and improvement welcom :) . EDIT: yes I'm perfectly aware this is a radical refactoring if we are going to deploy it on the whole code base ;); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317:2826,failure,failures,2826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317,2,['failure'],['failures']
Availability,"he project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:2208,failure,failures,2208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,2,['failure'],['failures']
Availability,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4490:2303,failure,failures,2303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490,2,['failure'],['failures']
Availability,"hello @Ant0nin , are you speaking about the option: ; SOFACUDA_DOUBLE; or; SOFA_GPU_CUDA_DOUBLE_PRECISE. my version with SOFACUDA_DOUBLE activated compile on windows 10 with recent cudaToolkit. ; Maybe can you put here the error log.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484086528:223,error,error,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484086528,1,['error'],['error']
Availability,"helper::system::atomic<int> was introduced long time ago (before std::atomic I guess).; This code is compiling only for i386 and x86_64 code with gcc/clang (and msvc); Now that std::atomic is here (and we are using c+>11), I guess it is time to use std::atomic where we can. Those modifications mostly appeared in multithreading-related code, so it would be good that @fspadoni could take a look :octocat: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1035:664,failure,failures,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1035,2,['failure'],['failures']
Availability,hey @EulalieCoevoet will you be available to review this PR by next week ?; This PR starts being a bit old. Thanks !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-360076166:32,avail,available,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-360076166,1,['avail'],['available']
Availability,hey @damienmarchal ; I just tried with the macro at the top of the cpp file and I still get the error (for static function):; `sofa/helper/logging/Messaging.h:177:24: note: expanded from macro 'msg_error'; #define msg_error(...) MSGERROR_CHOOSER(__VA_ARGS__)(__VA_ARGS__); `; Any idea why ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503#issuecomment-344637137:96,error,error,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503#issuecomment-344637137,1,['error'],['error']
Availability,"hey @guparan @alxbilger ; after investigation, the problem is the same than the one identified in #2927; the lib is generated in _build/applications/plugins/BeamAdapter/lib/_ and no example from BeamAdapter is also available ; moreover, when I do `ninja install` only BeamAdapter get installed in its own location (_build/applications/plugins/BeamAdapter/linstall/_). do you have any idea what's going on @guparan ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183:215,avail,available,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183,1,['avail'],['available']
Availability,"hi @fredroy, thanks for getting back. I am using Ubuntu 18.04.6 LTS. In `sofaframework/sofabuilder_ubuntu`, I clone the repo `git clone -b v22.06.00 https://github.com/sofa-framework/sofa.git sofa/src` and followed the procedure for `build SOFA on [Linux](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)` and got the same error while running ./runSofa. while using `sofaframework/sofa_nightly_ubuntu:v22.06-full`, I first directly run ./runSofa without building sofa and then with building as earlier but again same error. ; Please also guide me if I have even have to build in second case `(sofaframework/sofa_nightly_ubuntu:v22.06-full)`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671:349,error,error,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671,4,['error'],['error']
Availability,"hing if the CPU supports respectively either AVX2 or AVX or nothing (SSE2 is the fallback in msvc/x64); - deprecates SOFA_VECTORIZE , which enables the 2 previous options if checked. More lecture for the curious: https://devblogs.microsoft.com/cppblog/do-you-prefer-fast-or-precise/; fpfast enables auto-vectorisation (among other stuff), thats why they are usually enabled together. On my setup, with SOFA_ENABLE_FAST_MATH + SOFA_ENABLE_SIMD, I can get around 0 to 10% of speedup. Nothing revolutionary anyway. ; TorusFall.scn (1000steps):; - fastfp+avx2: `7.90001 s ( 126.582 FPS)`; - fastfp `8.3388 s ( 119.921 FPS)`; - avx2 `8.49847 s ( 117.668 FPS)`; - ss2 `8.56825 s ( 116.71 FPS)`; We can see that it should be either both of them enabled, or not. That's why it will not be enabled by default, except if we want fp:fast by default. SIde note, seems Eigen3 is quite optimized with SIMD (w/o vs w/):; - `BM_Matrix_eigenmat33_invert/512` : 4.45 us vs 3.40 us; - `BM_Matrix_eigenmat33_determinant/512` : 1.09 us vs 0.882 us ; - `BM_Matrix_eigenmatf_vecmult<24>/512` : 98.0 us vs 76.0 us. In a separate PR, we could do the same for gcc/clang (with `march=native` and fast_math as well). EDIT: `SOFA_ENABLE_SIMD` was originally `DSOFA_ENABLE_AVX` but change the name for the future PR for gcc/clang; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652:2396,failure,failures,2396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652,2,['failure'],['failures']
Availability,"his PR includes all changes and adds of the incoming [PSL] branch that can be merged directly. It includes some Python bindings, additional tests, and various cleanings.; Hopefully, it should not break anything. in BaseContext add variants of getObjects() which ease the syntax (eg: for(auto& i : getNodeObjects()){...} + corresponding tests. . - in Node add variants of getNodeObjects() and getTreeObjects that does not force to ease the syntax+ corresponding tests. . - in BaseLink add a setFlag method and a setPersistant...this makes things more consistent with BaseData. - in Binding_Base add the methods: addNewData, addData, getData, getLink, getListOfDataFields, getListOfLinks. The function are documented with docstring and tested in test_BindingBase.py. - in Binding_Data add methods: isSet, isPersistant, setPersistant, hasParent, getParentPath, setValueString. The function are documented with docstring and tested in test_BindingData.py; ; - in Binding_Link add methods: setValueString, isPersistant, setPersistant. The function are documented with docstring and tested in test_BindingLink.py. . - in Binding_SofaModule add methods: getAliasesFor. The function are documented with docstrings & tested in test_BindingSofa.py. - in SofaPython add functions: sendMessageFromException, getSofaFormattedStringFromException. - in SofaTest/_init_.py add ASSERT_* functions that generates real gtest failure. . - in runSofa in QDataSimpleEdit & QLinkSimpleEdit correctly prevent writing when the data field is readOnly; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410:1472,failure,failure,1472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410,3,['failure'],"['failure', 'failures']"
Availability,"hmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 1.48 us 1.46 us 448000; BM_MapMapSparseMatrix_writeLine/1024 2.95 us 2.95 us 248889; BM_MapMapSparseMatrix_writeLine/2048 6.29 us 6.28 us 112000; BM_MapMapSparseMatrix_writeLine/4096 12.0 us 12.0 us 64000; BM_MapMapSparseMatrix_addCol/512/512 1.08 ms 1.07 ms 640; BM_MapMapSparseMatrix_addCol/1024/512 2.26 ms 2.26 ms 373; BM_MapMapSparseMatrix_addCol/2048/512 3.45 ms 3.45 ms 195; BM_MapMapSparseMatrix_addCol/4096/512 6.93 ms 6.94 ms 90; BM_MapMapSparseMatrix_addCol/512/1024 1.68 ms 1.71 ms 448; BM_MapMapSparseMatrix_addCol/1024/1024 3.43 ms 3.37 ms 213; BM_MapMapSparseMatrix_addCol/2048/1024 6.65 ms 6.70 ms 112; BM_MapMapSparseMatrix_addCol/4096/1024 13.2 ms 13.1 ms 50; BM_MapMapSparseMatrix_addCol/512/2048 3.36 ms 3.37 ms 218; BM_MapMapSparseMatrix_addCol/1024/2048 6.44 ms 6.60 ms 90; BM_MapMapSparseMatrix_addCol/2048/2048 13.5 ms 13.4 ms 50; BM_MapMapSparseMatrix_addCol/4096/2048 27.1 ms 26.9 ms 25; BM_MapMapSparseMatrix_addCol/512/4096 6.64 ms 6.70 ms 112; BM_MapMapSparseMatrix_addCol/1024/4096 12.6 ms 12.6 ms 56; BM_MapMapSparseMatrix_addCol/2048/4096 26.0 ms 26.2 ms 28; BM_MapMapSparseMatrix_addCol/4096/4096 51.2 ms 51.6 ms 10; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641:3665,failure,failures,3665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641,2,['failure'],['failures']
Availability,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:16,error,error,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836,1,['error'],['error']
Availability,"hon3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.di",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:3162,error,error,3162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['error'],['error']
Availability,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4469:668,failure,failures,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469,2,['failure'],['failures']
Availability,"https://en.wikipedia.org/wiki/Subtraction. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5016:587,failure,failures,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5016,2,['failure'],['failures']
Availability,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2062:1572,failure,failures,1572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/issues/1527. Deprecates **SofaHaptics** and **SofaValidation** (and a bit of **SofaGeneralObjectInteraction**). **SofaHaptics** was more or less renamed to Sofa.Component.Haptic; **SofaValidation** only has 2 useful components (CompareState and CompareTopology) which have been moved to S.C.Playback (along the Read and Write ones); **SofaGeneralObjectInteraction** had an interactiveEllipsoidFF which has been moved to S.C.MechanicalLoad. The remaining components in the modules/ are now either deprecated (gravity), bogus (monitor&co, collisiongroupmanager) or could be replaced with two components (boxstiffFF). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3041:1198,failure,failures,1198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3041,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/issues/1527. based on; - #2679 . Deprecates SofaOpenglVisual; Deprecates partially SofaGeneralEngine. This PR creates an independent plugin, with all the OpenGL-related components + API (previous Sofa.GL module in SofaKernel).; So it comes with the Sofa.GL library (API, utilities, etc) and 3 loadable module:; - ~~Model~~ **Rendering3D**: components drawing stuff in the 3D world; - ~~OnScreen~~ **Rendering2D**: utility components to draw stuff on screen, usual debugging or informations; - ~~Rendering~~ **Shader** : components involves with shadering; - **Engine**: engine doing stuff with OpenGL (only one for now). As it (should?) be considered as a plugin, it put it in applications/plugins but this is a matter of discussion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2709:1317,failure,failures,1317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2709,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316:904,failure,failures,904,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/pull/3242 removes some code related to the `getTemplateName` method. This PR adds some unit tests to make sure that #3242 won't break them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3380:723,failure,failures,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3380,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/pull/3266 removed `importPlugin(""SofaComponentAll"") ;` in `NodeContext_test.cpp`, but did not replace it by anything else. I don't know why the CI did not detect it, but the problem can be seen in https://github.com/sofa-framework/sofa/pull/3280. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3322:830,failure,failures,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3322,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4044:618,failure,failures,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4044,2,['failure'],['failures']
Availability,i.e. to easily define bracket x[] and len(x) operators to a python type defined in c++. (a concrete usage is coming in another PR). <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/165:306,failure,failures,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/165,1,['failure'],['failures']
Availability,"ib/python2.7/plat-mac; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Extras/lib/python; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; [ERROR] [PythonScript] ImportError:; Importing the multiarray numpy extension module failed. Most; likely you are trying to import a failed build of numpy.; If you're working with a numpy git repo, try `git clean -xdf` (removes all; files not under version control). Otherwise reinstall numpy. Original error was: cannot import name multiarray. File ""test.py"", line 20, in <module>; import numpy; File ""/usr/local/lib/python2.7/site-packages/numpy/__init__.py"", line 142, in <module>; from . import add_newdocs; File ""/usr/local/lib/python2.7/site-packages/numpy/add_newdocs.py"", line 13, in <module>; from numpy.lib import add_newdoc; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/__init__.py"", line 8, in <module>; from .type_check import *; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/type_check.py"", line 11, in <module>; import numpy.core.numeric as _nx; File ""/usr/local/lib/python2.7/site-packages/numpy/core/__init__.py"", line 26, in <module>; raise ImportError(msg). [ERROR] [SofaPython] Script (file:test) import error; [ERROR] [SofaPython] scene script load error.; [INFO] [BatchGUI] Computing 1000 iterations. [INFO] [BatchGUI] Processing. [INFO] [BatchGUI] 1000 iterations done in 0.004765 s ( 209864 FPS). [INFO] [BatchGUI] 1000 iterations done in 0.004766 s ( 209820 FPS).; ```. When ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:5568,error,error,5568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['error'],['error']
Availability,"ibSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img width=""686"" alt=""截屏2022-10-25 下午11 56 58"" src=""https://user-images.githubusercontent.com/56861752/197808646-732fe9ee-f7db-49b0-8aea-3de77834ed11.png"">. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9633,fault,fault,9633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['fault'],['fault']
Availability,"id""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <MechanicalObject name=""dofs"" />; <UniformMass totalMass=""100"" />; <UncoupledConstraintCorrection />; <Node name=""T"">; <include href=""Objects/TriangleSetTopology.xml"" />; <Quad2TriangleTopologicalMapping input=""@../Container"" output=""@Container"" />; <TriangularFEMForceField name=""FEM"" youngModulus=""60"" poissonRatio=""0.3"" method=""large"" />; <TriangularBendingSprings name=""FEM-Bend"" stiffness=""300"" damping=""1.0"" />; <TriangleCollisionModel contactStiffness=""20.0""/>; <PointCollisionModel />; <Node name=""Visu"">; <OglModel name=""Visual"" material=""mat1 Diffuse 1 0.5 1.0 0.75 0.8 Ambient 1 0.2 0.2 0.2 1 Specular 1 0.6 0.6 0.6 0.6 Emissive 0 0 0 0 0 Shininess 0 45"" />; <IdentityMapping input=""@../../dofs"" output=""@Visual"" />; </Node>; </Node>; </Node>; </Node>. ```. For some reasons, the free position and veloc",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:3164,toler,tolerance,3164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['toler'],['tolerance']
Availability,idy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modern,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15969,redundant,redundant-void-arg,15969,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-void-arg']
Availability,ield; - TrianglePressureForceField; - [SofaConstraint]; - DistanceLMConstraint; - DOFBlockerLMConstraint; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaDeformable] ; - MeshSpringForceField; - [SofaExporter] ; - WriteTopology; - [SofaGeneralDeformable]; - FastTriangularBendingSprings; - QuadBendingSprings; - QuadularBendingSprings; - TriangleBendingSprings; - TriangularBendingSprings; - TriangularBiquadraticSpringsForceField; - TriangularQuadraticSpringsForceField; - TriangularTensorMassForceField; - VectorSpringForceField; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaGeneralLoader] ; - ReadTopology; - [SofaGeneralSimpleFem]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaMeshCollision]; - LineModel; - PointModel; - TriangleModel; - TriangleLocalMinDistanceFilter; - [SofaMiscCollision] ; - TetrahedronModel; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - TriangleFEMForceField; - TriangularAnisotropicFEMForceField; - TriangularFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaMiscMapping]; - DistanceMapping; - DistanceMapping; - [SofaMiscTopology] ; - TopologicalChangeProcessor; - [SofaNonUniformFem] ; - NonUniformHexahedronFEMForceFieldAndMass; - [SofaOpenglVisual] ; - DataDisplay; - [SofaSimpleFem]; - HexahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1223:3639,failure,failures,3639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1223,2,['failure'],['failures']
Availability,"if `collisionModel1`, the `collModelPath1` is affected to `nullptr`, which leads to a crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4710:637,failure,failures,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4710,2,['failure'],['failures']
Availability,"if msgInfoVerbosity is a level,and you have s.t. like ; > msg_info_when(printLog > 5) ; then the level is not homogeneous : first name of the macro (error, warning, info - isn't there a msg_debug() macro too ?), and then in the condition in msg_info_when() . well, this might be ""my"" concept of level (this is also the one in the qt libs I am familiar with) . about the automatic switch between ""this"" and ""string"" versions, this would be awesome, however I have no idea on how to achieve this with c++ macro (maybe a special include that would replace the string version by the this version when you are in a component source file ?) . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Mention""; > <mention@noreply.github.com>; > Envoyé: Mercredi 8 Février 2017 16:01:36; > Objet: Re: [sofa-framework/sofa] Cleaning printLog mis-usage (#160). > My dream would be to have:; > msg_warning (); > msg_error(); > msg_info(). > msg_info_when(printLog > 5 ); > msg_warning_when( fileNotFound); > msg_error_when(toto==tata). > With an an automatic selection between the 'this' and 'string' version. > I in my mind msgInfoVerbosity was not a boolean but something with different; > levels (NONE, LOW, MEDIUM, HIGH) . Maybe useful as well as overkilling. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278600119:149,error,error,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278600119,1,['error'],['error']
Availability,"if the attribute ""src"" is found, a link is dynamically added to the object. If the link is resolved right away, it links the Data. If the link is not resolved, it will try later in the `updateLinks` function. It allows to write:. ```xml; <OglModel name=""OglModel"" src=""@SOFA_pod"" />; <MeshOBJLoader name=""SOFA_pod"" filename=""mesh/SOFA_pod.obj"" handleSeams=""1"" />; ```. Before this PR, the src object must be declared before the `src` attribute. It was not possible to declare it after, such as in the previous example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3151:1063,failure,failures,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151,2,['failure'],['failures']
Availability,ighten the plugin a little bit. New structure:. ```; SofaPython; ├── Binding.cpp; ├── Binding.h; ├── Bindings; │   ├── BaseContext.cpp; │   ├── BaseContext.h; │   ├── Base.cpp; │   ├── Base.cpp.orig; │   ├── Base.h; │   ├── Base.h.orig; │   ├── BaseLoader.cpp; │   ├── BaseLoader.h; │   ├── BaseMapping.cpp; │   ├── BaseMapping.h; │   ├── BaseMechanicalState.cpp; │   ├── BaseMechanicalState.h; │   ├── BaseMeshTopology.cpp; │   ├── BaseMeshTopology.h; │ └── ...; ├── CMakeLists.txt; ├── initSofaPython.cpp; ├── PythonCommon.h; ├── PythonEnvironment.cpp; ├── PythonEnvironment.h; ├── PythonFactory.cpp; ├── PythonFactory.h; ├── PythonMacros.cpp; ├── PythonMacros.h; ├── PythonToSofa.inl; ├── PythonVisitor.cpp; ├── PythonVisitor.h; ├── SceneLoaderPY.cpp; ├── SceneLoaderPY.h; ├── scn2python.py; ├── ScriptController; │   ├── PythonMainScriptController.cpp; │   ├── PythonMainScriptController.h; │   ├── PythonScriptController.cpp; │   ├── PythonScriptController.h; │   ├── PythonScriptControllerHelper.cpp; │   ├── PythonScriptControllerHelper.h; │   ├── PythonScriptDataEngine.cpp; │   ├── PythonScriptDataEngine.h; │   ├── PythonScriptEvent.cpp; │   ├── PythonScriptEvent.h; │   ├── PythonScriptFunction.cpp; │   ├── PythonScriptFunction.h; │   ├── ScriptController.cpp; │   ├── ScriptController.h; │   ├── ScriptDataEngine.cpp; │   ├── ScriptDataEngine.h; │   ├── ScriptEvent.cpp; │   ├── ScriptEvent.h; │   ├── ScriptFunction.cpp; │   └── ScriptFunction.h; ├── SofaPythonConfig.cmake.in; ├── SofaPython.txt; └── ...; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/616:1857,failure,failures,1857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/616,2,['failure'],['failures']
Availability,"ignored scene: DistanceGridForceField-liver.scn. This way, the scene has to remain ignored to build the plugin in default mode (we need it for SofaImplicitField, which is needed for a bunch of examples). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/594:460,failure,failures,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/594,2,['failure'],['failures']
Availability,"image plugin had the choice at one moment to compile just its classes with a subset of image type (Byte, etc); The macro was always activated right now, so there was no choice but to compile always ALL the image types, and the image plugin was really long to compile. This PR restores this behavior, with a third choice: to not compile any instanciations.; Some people would like to use some headers (especially CImgData.h) for other plugin, without dragging the whole compilation. Anyway this PR introduces a new cmake option called PLUGIN_IMAGE_COMPILATION_SET restrained to 3 values (a combo box in cmake-gui actually); - standard: a few selected types of image is chosen; - full: all the the instanciations will be compiled; - none: no instanciation, so you will only compile initImage.cpp effectively. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2340:1351,failure,failures,1351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2340,2,['failure'],['failures']
Availability,"in DataExchange component, add exchanges of image data types (ImageUC, ImageUS, ImageF), requiring a depedency with the image plugin; + add a simple example passing an image from an ImageContainer (Thread 1) to an ImageViewer (Thread 2); + fix OpenGL issues in the draw() function in the Kinect component in the image plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/769:582,failure,failures,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/769,2,['failure'],['failures']
Availability,"in ForceField_test, {Multi,Multi2}Mapping_test.; (+ minor cleaning). EDIT: I also added a missing automatic test for MultiMapping::getK. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/209:367,failure,failures,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/209,1,['failure'],['failures']
Availability,"in FreeMotionAnimationLoop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2770:572,failure,failures,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2770,2,['failure'],['failures']
Availability,"in TetrahedronHyperelasticityFEMForceField.inl , gl.h was included before anything, so the macros defined in build_option_opengl.h were ignored.; The inclusion of gl.h was useless anyway so it was removed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1193:462,failure,failures,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1193,2,['failure'],['failures']
Availability,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4317:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317,2,['failure'],['failures']
Availability,"in loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5994,avail,available,5994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,"['avail', 'failure']","['available', 'failures']"
Availability,"in not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Comp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2576,ERROR,ERROR,2576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"in order to be informed when a scene is loaded. WARNING: each SceneLoader's loading function must call ""notifyLoadingScene"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/204:355,failure,failures,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/204,1,['failure'],['failures']
Availability,"in sofa_install_libraries:. cyclic recursions when globbing for external libraries due to symlinks resolution.; I have done this fix for about a month and a half now, without noticing any side effects, but I can't tell if there are any. ______________________________________________________ ; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/766:494,failure,failures,494,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/766,2,['failure'],['failures']
Availability,"in the graph display, name and class name were inverted compared to classical objects. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2371:631,failure,failures,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2371,2,['failure'],['failures']
Availability,inManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSyste,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:3737,error,error,3737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['error'],['error']
Availability,"iner"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). membrane.addObject('MeshGmshLoader', name='membraneCoarse', ; filename='FossaOvalisV2.msh'); ; membrane.addObject('TetrahedronSetTopologyContainer', ; name='membrane",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1876,toler,tolerance,1876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['toler'],['tolerance']
Availability,"iner""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Comp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2779,ERROR,ERROR,2779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"iner.Dynamic',; 'Sofa.Component.Visual',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.Component.SolidMechanics.Spring',; 'Sofa.Component.MechanicalLoad',; 'Sofa.Component.Topology.Container.Constant'; ]). root.addObject('DefaultAnimationLoop'). root.addObject('VisualStyle', displayFlags=""showCollisionModels""); root.addObject('CollisionPipeline', name=""CollisionPipeline""); root.addObject('BruteForceBroadPhase', name=""BroadPhase""); root.addObject('BVHNarrowPhase', name=""NarrowPhase""); root.addObject('DefaultContactManager', name=""CollisionResponse"", response=""PenalityContactForceField""); root.addObject('DiscreteIntersection'). root.addObject(""MeshSTLLoader"", name=""LiverSurface"", filename = r""C:\Users\monta\Desktop\Materie\Altro\Tirocinio\Liver_Database\3D_Slicer\liver_sofa\Liver_Target_2.stl""). liver = root.addChild('Liver'); liver.addObject('EulerImplicitSolver', name=""cg_odesolver"", rayleighStiffness=""0.1"", rayleighMass=""0.1""); liver.addObject('CGLinearSolver', name=""linear_solver"", iterations=""25"", tolerance=""1e-09"", threshold=""1e-09""); liver.addObject(""MeshGmshLoader"", name=""meshLoader"", filename = r""C:\Users\monta\Desktop\Materie\Altro\Tirocinio\Liver_Database\3D_Slicer\liver_gmsh\Liver_Target_2.msh"") ; liver.addObject('TetrahedronSetTopologyContainer', name=""tetra"", src=""@meshLoader""); liver.addObject('MechanicalObject', name=""dofs"", src=""@meshLoader""); liver.addObject('TetrahedronSetGeometryAlgorithms', template=""Vec3d"", name=""TetraGeomAlgo""); liver.addObject('DiagonalMass', name=""Mass"", massDensity=""1.0""); FEM = liver.addObject('TetrahedralCorotationalFEMForceField', template=""Vec3d"", name=""TetraFEM"", method=""large"", poissonRatio=""0.48"", youngModulus=""3000"", computeGlobalMatrix=""0""); . liverCapsule = liver.addChild('GlissonCapsule'); liverCapsule.addObject('MeshSTLLoader', name='CapsuleMesh', filename = r""C:\Users\monta\Desktop\Materie\Altro\Tirocinio\Liver_Database\3D_Slicer\liver_segmentation\Liver_Target_2.stl""); liverCapsule.addObject('MechanicalObject', name=",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4861:3382,toler,tolerance,3382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4861,1,['toler'],['tolerance']
Availability,"ing for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information... Done; **libboost-dev is already the newest version (1.71.0.0ubuntu2).**; The following packages were automatically installed and are no longer required:; libdrm2:i386 libexpat1:i386 libglapi-mesa:i386 libglvnd0:i386 libx11-xcb1:i386 libxcb-dri2-0:i386 libxcb-dri3-0:i386 libxcb-glx0:i386 libxcb-present0:i386 libxcb-sync1:i386 libxdamage1:i386 libxfixes3:i386; libxshmfence1:i386 libxxf86vm1:i386; Use 'sudo apt autoremove' to remove them.; 0 upgraded, 0 newly installed, 0 to remove and 107 not upgraded. Alban. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:2148,error,errors,2148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['error'],['errors']
Availability,"initTaskScheduler() was not called so m_sceduler was nullptr. And removes compilation warnings and some scenes warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3676:665,failure,failures,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3676,2,['failure'],['failures']
Availability,"int.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3211,ERROR,ERROR,3211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"ion. . I recently wrote a lot test for sofa component and it appears to me that more than half of my tests cases are in fact verifying that component correctly rise errors or warnings when they are used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virtual instead ? ; 3) Should the warnin",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:978,failure,failure,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,2,['failure'],['failure']
Availability,"ir<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 25 ms); 9245 ms: std::__detail::_Insert_base<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::a... (527 times, avg 17 ms); 9002 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 17 ms); 8232 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 15 ms); ... after; ...; 6836 ms: std::_Hashtable<int, std::pair<const int, int>, std::allocator<std::pair<const int, int>>, std::__detail::_Select1st, ... (844 times, avg 8 ms); 5064 ms: std::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, unsigned int>, std::allocator<std::p... (679 times, avg 7 ms); 4954 ms: std::unordered_map<sofa::core::VecType, std::basic_string<char>> (527 times, avg 9 ms); 4075 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 7 ms). (limited output so the others are lower); ```. In practical, on the same config/setup, compilation time was shorter of about ~15sec (not that much but still). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3401:2358,failure,failures,2358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401,2,['failure'],['failures']
Availability,"iredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->; <RequiredPlugin name=""Sofa.GL.Component.Rendering3D""/> <!-- Needed to use components [OglModel] -->; <RequiredPlugin name=""SofaDistanceGrid""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <Mechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:2308,toler,tolerance,2308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['toler'],['tolerance']
Availability,isplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/cla,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28574,redundant,redundant-declaration,28574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-declaration']
Availability,"issue sofa-framework/sofa#2 Fix compilation when option SOFA_FLOATING_POINT_TYPE in CMake selected as float. The problem arising when trying to compile with float was due to missing declaration from newmat external library.; The library has been modified for sofa to use a #define SOFA_FLOAT in include.h; However the SOFA_FLOAT was never defined for the extlib since the current procedure is to set CMake variable SOFA_FLOAT and SOFA_DOUBLE to 1. This was done anyway AFTER processing the cmake of the extlibs. Therefore, this pr moves the option for floating point type in sofa in the root CMakeLists and adds the #define for the newmat library to actually create the float type functions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262:922,failure,failures,922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262,1,['failure'],['failures']
Availability,"issue with the config.h / macro _API I guess : ; ``` bash; error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __cdecl sofa::core::future::ObjectFactoryInstance::ObjectCreator<class sofa::simulation::DefaultAnimationLoop>::ObjectCreator<class sofa::simulation::DefaultAnimationLoop>(void)"" ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1056779082:59,error,error,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1056779082,1,['error'],['error']
Availability,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4505:1016,failure,failures,1016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505,2,['failure'],['failures']
Availability,it was agreed during the meeting that this one should be merged despite it contains new failure and may cause compilation problem.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457#issuecomment-335759427:88,failure,failure,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457#issuecomment-335759427,1,['failure'],['failure']
Availability,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4408:874,failure,failures,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408,2,['failure'],['failures']
Availability,it was reported on the forum that there is problem since we switch to c++17.; https://www.sofa-framework.org/community/forum/topic/sofa-generating-error/#post-15666. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1324:147,error,error,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1324,1,['error'],['error']
Availability,"it would impact something else. Do you have any idea ? ; 2) Fatal is already part of the default mode. ; 3) I removed Warning&Deprecated by default ; 4) There is no need to change all the tests if in the future if we want to reactivate Warning&Deprecated by default, we will just have to change few lines in Sofa_test.h.; Maybe my scoping examples was not clear but the whole system is scoped per type of message so EXPECT_MSG_NOEMIT(Error) in tests have not consequence on the fact that you can add EXPECT_MSG_NOEMIT(Warning) in Sofa_test to catch all warnings. ; Do you see what I mean ? . About explicit test vs default mode... ; To me if the only aspect we care is how fast we can disable/re-enable tests failures then the default mode in Sofa_test is great. But is this the only aspect we care ? ; What about the fact that default mode is reporting useless filename&line (.../Sofa_test:93). Because of that I loose time each time I have to investigate test failures. On the contrary explicit messages specifications reports real file&line and allow to narrow the problem to very precise code location which save time. And these savings sums up each time someone is looking at tests failures. . In general I write a test once... but investigate failures several time... so I find it worth the effort of spending a bit more time on writing a good test with narrow message catching because they proved to saves time while investigating failure. . This is a totally different story with the time saving of changing the default mode by changing Sofa_test. It saves time as long as we are hesitating on what should be the default mode but after that it will slow down all failure investigations. . So... I made my best to explain why I care of explicit test but the important things to me are:; - what do I have to change so that PR can be be merged so that I can close it and move forward ? ; - do we have the time & courage to fix the 200 failing tests if we activate failure on Warning&Deprecated ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008:1317,failure,failures,1317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008,12,"['down', 'failure']","['down', 'failure', 'failures']"
Availability,ity-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28717,redundant,redundant-smartptr-get,28717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['redundant'],['redundant-smartptr-get']
Availability,ix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/collections:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib; [INFO] [runSofa] DataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs6,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1078,ERROR,ERROR,1078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['ERROR'],['ERROR']
Availability,"just for quick debugging visualization. ![NearestPointROI_00000001](https://github.com/user-attachments/assets/cce22e5c-263b-4ba5-8d39-050963967f30). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4944:694,failure,failures,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4944,2,['failure'],['failures']
Availability,"kefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:2235,failure,failures,2235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,2,['failure'],['failures']
Availability,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4296:2047,failure,failures,2047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296,2,['failure'],['failures']
Availability,"l; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [ERROR] [HexahedronFEMForceField(FEM)] No topology component found at path: , nor in current context: Snake. Object must have a MeshTopology.; [ERROR] [BarycentricMapping(barycentricMap1)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap2)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap3)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap4)] No input topology found. Consider setting the 'inp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10954,ERROR,ERROR,10954,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,lang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-memb,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23683,down,downcast,23683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['down'],['downcast']
Availability,"lassname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:2182,failure,failures,2182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,2,['failure'],['failures']
Availability,"lection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8296,Error,Error,8296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Error'],['Error']
Availability,"led to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4690,ERROR,ERROR,4690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"led to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue usin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4827,ERROR,ERROR,4827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"lename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/7425743/CMakeCache.txt)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:7088,ERROR,ERROR,7088,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['ERROR'],['ERROR']
Availability,"libQGLViewer is only used by SofaGuiQt for QtGLViewer.; So this lib should be moved into it from extlibs (which is/was supposed to be used for sharing libraries across modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1617:722,failure,failures,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1617,2,['failure'],['failures']
Availability,"libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2696,fault,faulty,2696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['fault'],['faulty']
Availability,"lines, I wont share if not needed. . ```FAILED: bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o; /usr/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_PROGRAM_OPTIONS_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_THREAD_DYN_LINK -DBindings_SofaRuntime_EXPORTS -DNDEBUG -DSOFA_HAVE_SOFAPYTHON3 -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/Plugin/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/Sofa/src -isystem /usr/include/python3.8 -isystem /usr/local/include/SofaSimulation -isystem /usr/local/include/SofaFramework -isystem /usr/local/include/extlibs/json -isystem /usr/local/include/eigen3 -isystem /usr/local/include/SofaBase -fPIC -fvisibility=hidden -std=c++17 -flto -fno-fat-lto-objects -Dregister= -fvisibility=hidden -std=c++17 -MD -MT bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -MF bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o.d -o bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -c /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp; In file included from /usr/local/include/SofaFramework/sofa/simulation/Node.h:59,; from /usr/local/include/SofaFramework/sofa/simulation/Simulation.h:25,; from /usr/local/include/SofaFramework/sofa/helper/AdvancedTimer.h:25,; from /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp:28:; /usr/local/include/SofaFramework/sofa/simulation/MutationListener.h:37:32: error: variable ‘sofa::simulation::SOFA_SIMULATION_CORE_API sofa::simulation::MutationListener’ has initializer but incomplete type; 37 | class SOFA_SIMULATION_CORE_API MutationListener; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429:1946,error,error,1946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429,1,['error'],['error']
Availability,link to issue #1538 . to be discussed.. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1546:296,failure,failures,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1546,2,['failure'],['failures']
Availability,"ll fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2088,failure,failure,2088,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,"['error', 'failure']","['error', 'failure']"
Availability,"ltAnimationLoop to the root node of scene file to remove this warning; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). ```. **Content of build_dir/CMakeCache.txt**; [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/8566052/CMakeCache.txt); [test_scene.zip](https://github.com/sofa-framework/sofa/files/8566055/test_scene.zip)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:37285,fault,fault,37285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['fault'],['fault']
Availability,"lude); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :VCEnd"" exited with code 1.; 1>Done building project ""INSTALL.vcxproj"" -- FAILED.; ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. ```. #1114; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:3314,error,error,3314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,6,['error'],"['error', 'errorlevel']"
Availability,"ly one line that disable them in Sofa_test.cpp and I don't see why it would impact something else. Do you have any idea ? ; 2) Fatal is already part of the default mode. ; 3) I removed Warning&Deprecated by default ; 4) There is no need to change all the tests if in the future if we want to reactivate Warning&Deprecated by default, we will just have to change few lines in Sofa_test.h.; Maybe my scoping examples was not clear but the whole system is scoped per type of message so EXPECT_MSG_NOEMIT(Error) in tests have not consequence on the fact that you can add EXPECT_MSG_NOEMIT(Warning) in Sofa_test to catch all warnings. ; Do you see what I mean ? . About explicit test vs default mode... ; To me if the only aspect we care is how fast we can disable/re-enable tests failures then the default mode in Sofa_test is great. But is this the only aspect we care ? ; What about the fact that default mode is reporting useless filename&line (.../Sofa_test:93). Because of that I loose time each time I have to investigate test failures. On the contrary explicit messages specifications reports real file&line and allow to narrow the problem to very precise code location which save time. And these savings sums up each time someone is looking at tests failures. . In general I write a test once... but investigate failures several time... so I find it worth the effort of spending a bit more time on writing a good test with narrow message catching because they proved to saves time while investigating failure. . This is a totally different story with the time saving of changing the default mode by changing Sofa_test. It saves time as long as we are hesitating on what should be the default mode but after that it will slow down all failure investigations. . So... I made my best to explain why I care of explicit test but the important things to me are:; - what do I have to change so that PR can be be merged so that I can close it and move forward ? ; - do we have the time & courage to fix t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008:1092,failure,failures,1092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008,2,['failure'],['failures']
Availability,"make; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2568,error,error,2568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['error'],['error']
Availability,meshconv needs miniflowVR in order to compile.; But the oblivious user is not supposed to know that.... So this fix:; - avoids building meshconv if SOFA_BUILD_MINIFLOWVR is not activated.; - warns the user he needs to activate the previous cmake option. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/358:510,failure,failures,510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/358,2,['failure'],['failures']
Availability,"method `computePrincipalStress `and `computePrincipalStrain` where used inside loop such as this:; ```; type::vector<TriangleInformation>& triangleInf = *(triangleInfo.beginEdit());; for (unsigned int i = 0; i < nbTriangles; ++i); computePrincipalStress(i, triangleInf[i].stress);; triangleInfo.endEdit();; ```; but computePrincipalStress is accessing triangleInfo in write mode as well inside its code. (same for computePrincipalStrain); It was not blocking because writeOnlyAccessor were used and therefore no updateIfDirty was call but this design is dangerous. . Change to Use only one accessor and pass ref to one element to the method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3412:1186,failure,failures,1186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3412,2,['failure'],['failures']
Availability,"mic Sofa.Component.IO.Mesh Sofa.Component.Constraint.Lagrangian.Solver Sofa.Component.Constraint.Lagrangian.Correction Sofa.Component.Collision.Response.Contact Sofa.Component.Collision.Geometry Sofa.Component.Collision.Detection.Intersection Sofa.Component.Collision.Detection.Algorithm Sofa.Component.AnimationLoop"" />; <DefaultVisualManagerLoop/>. <FreeMotionAnimationLoop />; <!-- <LCPConstraintSolver tolerance=""0.001"" maxIt=""1000""/> -->; <GenericConstraintSolver tolerance=""0.001"" maxIterations=""1000"" />. <DefaultPipeline name=""CollisionPipeline"" verbose=""0"" />; <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""collision response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection/>. <MeshOBJLoader name=""LiverSurface"" filename=""mesh/liver-smooth.obj"" />. <Node name=""Liver"" gravity=""0 -9.81 0"">; <EulerImplicitSolver name=""cg_odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver name=""linear solver"" iterations=""25"" tolerance=""1e-09"" threshold=""1e-09"" />; <MeshGmshLoader name=""meshLoader"" filename=""mesh/liver.msh"" />; <TetrahedronSetTopologyContainer name=""topo"" src=""@meshLoader"" />; <MechanicalObject name=""dofs"" src=""@meshLoader"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; <DiagonalMass name=""computed using mass density"" massDensity=""1"" geometryState=""@dofs"" topology=""@topo""/>; <TetrahedralCorotationalFEMForceField template=""Vec3d"" name=""FEM"" method=""large"" poissonRatio=""0.3"" youngModulus=""3000"" computeGlobalMatrix=""0"" />; <FixedConstraint name=""FixedConstraint"" indices=""3 39 64"" />. <UncoupledConstraintCorrection />. <Node name=""Visu"" tags=""Visual"" gravity=""0 -9.81 0"">; <OglModel name=""VisualModel"" src=""@../../LiverSurface"" />; <BarycentricMapping name=""visual mapping"" input=""@../dofs"" output=""@VisualModel"" />; </Node>; <Node name=""Surf"" gravity=""0 -9.81 0"">; <SphereLoader filename=""mesh/liver.sph"" />; <MechanicalObject name=""spheres"" position=""@[-1].position"" />; <SphereCollisionMo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916:1526,toler,tolerance,1526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916,1,['toler'],['tolerance']
Availability,"miniFlowVR, an extlib of Sofa, is used for ; - managing a file format for DistanceGrid (component of plugin SofaDistanceGrid); - as a dependency for meshconv, a commandline utility for meshes and used mainly to create the previous file format for DistanceGrid. So as it seems all was related to DistanceGrid:; - miniFlowVR was moved into SofaDistanceGrid (and thus depolluting the main tree of Sofa with the extlib thing); - as a small consequence, move meshconv into SofaDistanceGrid. It is deemed OK as:; - it seems not a lof of people uses meshconv as it is (I remember fixing the compilation ages ago and nobody said anything). Moreover, even its CMakefile was quite ill-formed. ; - meshconv was originally a part of FlowVR itself apparently, so it makes sense to regroup of all of these codes. Additionnally, SofaDistanceGrid was cleanup (reorganizing files like the template, cleaner CMake etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1616:1446,failure,failures,1446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1616,2,['failure'],['failures']
Availability,"missing libs in target_link_libraries for SofaBase, SofaCommon and SofaGeneral after ""modularization"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1381:359,failure,failures,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1381,2,['failure'],['failures']
Availability,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2616,Down,Downloads,2616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,5,['Down'],['Downloads']
Availability,"move all tests related to BaseMatrix into Sofa.LinearAlgebra.test, ; and create Sofa.LinearAlgera.Testing (testing toolkit related to Sofa.LinearAlgebra). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2383:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2383,2,['failure'],['failures']
Availability,"mpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:1766,error,error,1766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['error'],['error']
Availability,"my fault, I didn't understand your point at the first time. I agree with you that managing the deprecation with specific sets in a CMakeLists can be efficient.; In my mind the place you put the code and its management are somehow connected especially when lighten ""sofa"" because nobody is defining what sofa is/contains/is reduced to. ; More I think about more I think that there is no sofa core or whatever. There are files which have a meaning to be together.; Instead of removing files/classes/components I suggested to think about moving files/classes/components and then evaluate their stage of deprecation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332180994:3,fault,fault,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332180994,1,['fault'],['fault']
Availability,"n 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:1495,ERROR,ERROR,1495,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help me！. Thanks so much！",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2791,ERROR,ERROR,2791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,2,"['ERROR', 'recover']","['ERROR', 'recovers']"
Availability,"n, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMakeCache.txt). ---------------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4622:2590,Error,Error,2590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622,2,['Error'],['Error']
Availability,"n, the problem is that by default access to the static version (so the one that need the full inclusion of involved data types) to generate the dynamic one in the VirtualTypeInfo::get() method. As this function is needed to implement Data<T>::getAbstractTypeInfo it means that the complete static version is needed everytime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to implement an opt-in solution ... by default and for most of our code base, dynamic typeinfo (aka the one following the AbstractTypeInfo interface) are available because they only requires opaque data types. And it is only on purpose that developper can include (most of the time in a .cpp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:2151,avail,available,2151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['avail'],['available']
Availability,"n/vendor_perl:/usr/bin/core_perl; --- SOFA_ROOT ---; /home/sergei/Source_code/Sofa_development/sofa/build_release/install; --- PYTHONPATH ---; /home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages; --- sys.path ---; ['', '/home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/sergei/.local/lib/python3.10/site-packages', '/usr/lib/python3.10/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [sergei@sergei-20hd0000fr sofa]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so /home/sergei/Optimus_test/test_scene.py ; [ERROR] [FileSystem::isDirectory()] /home/sergei/Source_code/Sofa_development/sofa/build_release/share/sofa/gui/runSofa: No such file or directory; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:7323,ERROR,ERROR,7323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['ERROR'],['ERROR']
Availability,"n2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; [ERROR] [PythonScript] ImportError:; Importing the multiarray numpy extension module failed. Most; likely you are trying to import a failed build of numpy.; If you're working with a numpy git repo, try `git clean -xdf` (removes all; files not under version control). Otherwise reinstall numpy. Original error was: cannot import name multiarray. File ""test.py"", line 20, in <module>; import numpy; File ""/usr/local/lib/python2.7/site-packages/numpy/__init__.py"", line 142, in <module>; from . import add_newdocs; File ""/usr/local/lib/python2.7/site-packages/numpy/add_newdocs.py"", line 13, in <module>; from numpy.lib import add_newdoc; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/__init__.py"", line 8, in <module>; from .type_check import *; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/type_check.py"", line 11, in <module>; import numpy.core.numeric as _nx; File ""/usr/local/lib/python2.7/site-packages/numpy/core/__init__.py"", line 26, in <module>; raise ImportError(msg). [ERROR] [SofaPython] Script (file:test) import error; [ERROR] [SofaPython] scene script load error.; [INFO] [BatchGUI] Computing 1000 iterations. [INFO] [BatchGUI] Processing. [INFO] [BatchGUI] 1000 iterations done in 0.004765 s ( 209864 FPS). [INFO] [BatchGUI] 1000 iterations done in 0.004766 s ( 209820 FPS).; ```. When running it with default python in verbose mode, multiarray appears as follows:; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ cat test.out | grep multiarray; dlopen(""/usr/local/lib/python2.7/site-packages/numpy/core/multiarray.so"", 2);; import numpy.core.multiarray # dynamically loaded from /usr/local/lib/python2.7/site-packages/numpy/core/multiarray.so; # cleanup[2] numpy.core.multiarray; ```. But `/usr/local/lib/python2.7/site-packages` is in `sys.path` when running with SofaPython so **why does it fail**?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:6262,ERROR,ERROR,6262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"n27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Extras/lib/python; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; [ERROR] [PythonScript] ImportError:; Importing the multiarray numpy extension module failed. Most; likely you are trying to import a failed build of numpy.; If you're working with a numpy git repo, try `git clean -xdf` (removes all; files not under version control). Otherwise reinstall numpy. Original error was: cannot import name multiarray. File ""test.py"", line 20, in <module>; import numpy; File ""/usr/local/lib/python2.7/site-packages/numpy/__init__.py"", line 142, in <module>; from . import add_newdocs; File ""/usr/local/lib/python2.7/site-packages/numpy/add_newdocs.py"", line 13, in <module>; from numpy.lib import add_newdoc; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/__init__.py"", line 8, in <module>; from .type_check import *; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/type_check.py"", line 11, in <module>; import numpy.core.numeric as _nx; File ""/usr/local/lib/python2.7/site-packages/numpy/core/__init__.py"", line 26, in <module>; raise ImportError(msg). [ERROR] [SofaPython] Script (file:test) ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:5266,ERROR,ERROR,5266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['ERROR'],['ERROR']
Availability,"n: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8922,ERROR,ERROR,8922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,"ne is used for the benchmarks on 1000 time steps. The timer to focus on is `buildStiffness`. But be aware that this timer also includes the computation of the contributions in addition to the assembly itself. 1. The scene without modification, i.e. with `<ConstantSparsityPatternSystem template=""CompressedRowSparseMatrixd"" name=""A"" printLog=""true""/>`. ```; [INFO] [BatchGUI] 1000 iterations done in 12.3859 s ( 80.7368 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.82 1 1.57 8.67 1.81 0.34 1.81 14.74 .......buildStiffness; ```. 2. The scene with a regular matrix assembly, i.e. with `<MatrixLinearSystem template=""CompressedRowSparseMatrixd"" name=""A"" printLog=""true""/>`. ```; [INFO] [BatchGUI] 1000 iterations done in 15.0063 s ( 66.6387 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.69 1 4.69 6.45 4.95 0.18 4.95 33.30 .......buildStiffness; ```. 3. The scene with a regular matrix assembly, i.e. with `<MatrixLinearSystem template=""CompressedRowSparseMatrixMat3x3d"" name=""A"" printLog=""true""/>` (blocks of 3x3). ```; [INFO] [BatchGUI] 1000 iterations done in 16.765 s ( 59.648 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.84 1 4.71 13.93 5.51 1.11 5.51 33.16 .......buildStiffness; ```. In benchmark 1, we have a x2.7 speed-up compared to benchmark 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4158:3450,failure,failures,3450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158,2,['failure'],['failures']
Availability,"ne.py from 'd' to 'int' already fixes the problem. For PSDEExamples/02-advanced/ I couldn’t find the error immediately. . - Regarding the question of linking and automatic deriving of data-types for Inputs my opinion is similar to Damien’s:. > Sure...what we want to do is to create a new data with the exact same type of the data pointed by a link. So making a clone of an existing data (to get its type) and then initialize its parent would do the trick without needed all the factory and datatypename things. . I also do think that the existing linking mechanism could be complemented by a cloning feature that creates a copy of a BaseData object. Probably just a clone()-function in BaseData. This would avoid the implementation of a “heavy-weight” factory, like Damien said. To add this data to the correct object (the PSDE) it is only necessary to set the owner, I think. Finally, linking is done by using setParent(). In this way the user can program freely in C++ without worrying about whether his newly defined compound type needs to be made available in the factory. - Regarding the question of linking and automatic deriving of data-types for Outputs my ideas are not as concrete, but maybe helpful. For me there exist two cases:. 1) The Output of the PSDE is connected to an Input of a sofa-object that has static datas, e.g., sofa-objects whose code is written in C++. An example for such an object would be MechanicalObject (MO) that always has the same data (position, velocity, force, …). 2) The Output of the PSDE is connected to a scripted sofa-object, like another PSDE or similar. For case 1.:. It could be possible to define a special BaseData with a name but vacant type. This is a kind of “forward declaration” for the Output. Then, by extending the linking mechanism one could think of the following: At the time of parsing, a sofa-object (e.g. MO) will establish the link between one of its Inputs to the Output of a PSDE (i.e. PSDE->MO). Since the type of the Input is clear",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416:1353,avail,available,1353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416,2,['avail'],['available']
Availability,"nent.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 230, in _init_sim; self.scene_creation_result = getattr(self._scene_description_module, ""createScene"")(self._sofa_root_node, **self.crea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5579,ERROR,ERROR,5579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"nent.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3423,ERROR,ERROR,3423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"new bug found : . > [libx264 @ 0x561e20af02c0] height not divisible by 2 (1574x965); > Error initializing output stream 0:0 -- Error while opening encoder for output stream #0:0 - maybe incorrect parameters such as bit_rate, rate, width or height",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/883#issuecomment-467911971:87,Error,Error,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/883#issuecomment-467911971,2,['Error'],['Error']
Availability,"ng a scene. In these tests you hardly need a concrete instance of node or simulation. If you need this it may be nice to have a class to derive from which does it for you, but then again it should stay optional, because you should really think again about how you designed your component if you need a full fledged simulation to actually make some basic testing on your component. ; No matter what, these tests should be executed at each build (even for devs) and must pass. Failing in this kind of tests must be equal to a compilation error.; In that respect there is something that I am reluctant to allow for this type of tests is a lose coupling approach where you instantiate components using keys from the object factory. You may end up writing tests that in fact do not compile from a scratch build because this allows you to not take care about the dependencies between the libs. That is to say a test may instantiate a component that is not available yet, because it belongs to a library which is deeper in the build dependency tree at the time the unit test is built and executed during the compilation. - Functional tests, that require a working scene with probably more components than the one actually tested. These tests can be longer and therefore should not be mandatory during the compilation. ; They will be run only in ci machines, but can be also easily executed by any developers on its machine mostly to debug what is the nature of a new regression in these kind of tests. ; From our experience at InSimo these kinds of tests regress quite often during the development of a new feature, because you make some optimisation in the code, and you get some epsilon difference, or because you change the approach entirely and the scene is no longer relevant for you and should be changed. So you probably do not want too many of these functional tests, but there should be enough so that it is representative of the overall kind of simulations you want to support. ; But anyway it is ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243:1097,avail,available,1097,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243,2,['avail'],['available']
Availability,ng-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uniqueptr-delete-release.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29592,redundant,redundant-string-cstr,29592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,6,['redundant'],"['redundant-string-cstr', 'redundant-string-init']"
Availability,"nique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works the following way... when a Data<Type> is used this automatically trigs the setting of the typeinfo in the repository. If no DataTypeInfo<> is available this fallback to the default one but the data info cannot be used... if in a subsequent compilation unit (.cpp) the same Data<Type> is used with the complete type, the registring is done again...and if the type is more complete...then the old (partial) type is replaced with the new one. ; - the common data type info are now in their own file in sofa/defaulttype/typeinfo/TypeInfo_XXXX.h/cpp; - the templated code shared between multiple data type info are now in the sofa/defaulttype/typeinfo/models/XXXXX.h; - there is no more dependency to some specific contained data type (eg: RGBAcolor, Vec, Matrice, Set,) in AbstractDataTypeInfo or DataTypeInfo.; - there is a mechanism to get the list of registered typeinfo and wheter the are fully defined or only partially. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:4299,failure,failures,4299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,2,['failure'],['failures']
Availability,"nk inherits DDGNode.; A DDGLink thus benefits from the whole dirty flag propagation thingy, and implements the update() function to clean its dirty flag, and update from its inputs.; Just like Datas, a DDGLink also possesses a counter, that is incremented when the link value changes. Just like BaseLinks, and SPtrs, to retrieve the object linked with a DDGLink, you need to call the get() method. The set() method will set the link. When a link is set within a DDGLink, the componentState of the linked object is set as input to that DDGLink. It's up to you to connect your DDGLink to some datas to connect your dependency graph. Contrary to the current link implementation in SOFA, these links, can be very easily manipulated as their base class (BaseDDGLink), or as DDGNodes even. DDGLinks are parsed in Base::parseField just like BaseLinks and BaseDatas, which makes them usable with the BaseObjectDescriptions. (they really mirror the behavior of all other field types.). A very simple test case is present in this PR to show you how it's used. You can reference your links with their pathnames, just like normal datas or links, by calling the getPathName() method. There's not bi-directionality implemented in this PR, (because I didn't have time in the end...) but it's not rocket science:; - all there is to do is add a vector of Base* in Base with helper methods to add, remove retrieve the list of link owners. Then in DDGLink::set(), call the add() method of your link to register`this`. (maybe in another PR...) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226:1958,failure,failures,1958,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226,2,['failure'],['failures']
Availability,"nkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; Recording test results. ####",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:2094,ERROR,ERROR,2094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,2,['ERROR'],['ERROR']
Availability,"nment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:2004,failure,failures,2004,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,1,['failure'],['failures']
Availability,"node with amechanical state and a mapping ; if(stopAtMechanicalmapping(node.mapping)); return; fwdMechanicalMapping(node.mapping,);; fwdMappedMechanicalState(node.mstate); ; else; /// We are in a node with amechanical state but without a mapping ; fwdMechanicalState(node.mstate); ...; /// plenty of other scenarios..; ...; for(constraint : node.constraints); fwdConstraintSet(constriant); for(forcefield : node.forcefield); fwdForceField(forcefield); ....; ```; The general idea in this BaseMechanicalVisitor is to implement custom behavior that are triggered wen specific scene ""patterns"" are recognized. The custom behavior are the virtual function (eg: fwdMechanicalState). By default these functions do nothing. It is the responsability of the visitors in-heriting from BaseMechanicalVisitor to override them to match implement the behavior they needs. In the drafted code before... you can notice the line:; ```cpp; stopAtMechanicalmapping(node.mapping); ```; This is also a function implemented in BaseMechanicalVisitor that by default, check the data fields in the provided node.mapping to control if the mechanical action has to be done or stopped. . Let's narrow now down to the constraints. To process the constraints different visitors are used, these visitors inherits from BaseMechanicalVisitors without changing the processNodeTopDown() but instead overiding things in the method fwdConstraintSet(), ; - MechanicalGetConstraintResolutionVisitor ; - MechanicalGetConstraintInfoVisitor; - MechanicalGetConstraintViolationVisitor; - MechanicalAccumulateConstraint2; - MechanicalSetConstraint; - MechanicalAccumulateJacobian. These constraint specific methods are called at the end of the processNodeTopDown() these lines are reached only if the call to stopAtMechanicalMapping() returns false. To make that happens ; all these visitors are overriding stopAtMechanicalMapping() so it returns always false. . The storeLambda was the only one not doing that (which is now fixed with the PR).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409:2200,down,down,2200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409,1,['down'],['down']
Availability,"node_1 = articulation_center_node_1.addChild(""articulation_1""); articulation_node_1.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=0,; ). articulation_center_node_2 = articulation_hierarchy_node.addChild(""center_2""); articulation_center_node_2.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=2,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_2 = articulation_center_node_2.addChild(""articulation_2""); articulation_node_2.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=1,; ). # place light and a camera; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[0, 1, 0]); root.addObject(""InteractiveCamera"", name=""camera"", position=[0, 0, 5], lookAt=[0, 0, 0], distance=37, fieldOfView=45, zNear=0.63, zFar=55.69). if __name__ == ""__main__"":; root = Sofa.Core.Node(""myroot""); createScene(root); Sofa.Simulation.init(root); init_display(root); try:; while True:; Sofa.Simulation.animate(root, root.getDt()); Sofa.Simulation.updateVisual(root); simple_render(root); time.sleep(root.getDt()); except KeyboardInterrupt:; pass; ```. To reproduce the issue, run `python3 test_articulation.py` and `runSofa test_articulation.py`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:6080,failure,failures,6080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,2,['failure'],['failures']
Availability,non-ASCII chars caused problems in some platform when compiling; Discussed in [Issue323](https://github.com/sofa-framework/sofa/issues/323). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/327:397,failure,failures,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/327,2,['failure'],['failures']
Availability,normals and vectors to Legacy vtk import. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536:298,failure,failures,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536,2,['failure'],['failures']
Availability,"ns*); sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection(sofa::core::ExecParams const*, sofa::core::ConstraintParams const&, double, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::node::animate(sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:12514,Down,Download,12514,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['Down'],['Download']
Availability,"nsition, so it should be as least breaking as possible. - sofa::defaulttype::Mat becomes sofa::type::Mat; - sofa::defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new sce",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1775:1150,error,error,1150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775,1,['error'],['error']
Availability,"nt code which impact maintainability of our code base. The second problem is the lack of consistency in the way warning and errors are reported. In sofa some component rise en exception while others prints a message and return None which is very problematic to users. . In this PR we addressed these two issues through a major cleaning set of changes:; - [SofaPython]: ; * refactor the way to get get Sofa object from their PyObject equivalent (hundred of changes). ; * add dedicated easing function (unwrap, get, get_baseobject) ; * replace wherever possible copy-pasted code with these function. ; * refactor the way we report error from binding (hundred of changes) (API BREAK). ; * returning NULL with a correctly set exception type as it is the way of handling error in python. ; * when returning NULL it is mandatory to preceed the return with an exception type & message specification. This can be done either with PyExc_SetString() or Py_BaddArgument(), ; * when returning after a failing Py_ParseTuple is an exception, as the function sets itself a very ; descriptive and standardized error message.; * add macros (SP_PYERR_SETSTRING_INVALIDTYPE and SP_PYERR_SETSTRING_OUTOFBOUND) to report consistant message with PyErr_SetString ; * add SP_CLASS_METHOD_DOC() and SP_CLASS_METHOD_KW_DOC() to declare method with their docstring (if you don't know what are docstring read: http://sametmax.com/les-docstrings/); * add new bindings:; * BaseState::getSize ; * BaseMapping::applyJT; * BaseMapping::applyDJT; * Data::getCounter ; * Data::isDirty; * Node::getMass; * Node::getForceField; * STLExporter; * Sofa.unload; * Sofa.path; * Sofa.getAvailableComponents; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a string with the ; python file/line info to add report them in msg_* ; * adds 'override' keyword when needed (more info => http://en.cppreference.com/w/cpp/language/override); * adds tests on P",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:1283,error,error,1283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,1,['error'],['error']
Availability,"nt.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2284,ERROR,ERROR,2284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"o 2019 SOFA v23.06 C++17 Windows10]; ```console; [ERROR] [Node(visualNode)] Component 'Visual' of type 'OglModel' failed:; Object type OglModel<> was not created; The object 'OglModel' is not in the factory.; This component has been MOVED from SofaOpenglVisual to Sofa.GL.Component.Rendering3D since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.GL.Component.Rendering3D'/>. [ERROR] [Node(visualNode)] Component 'Visual' of type 'BarycentricMapping' failed:; Object type BarycentricMapping<Vec3d,Vec3d> was not created; The object is in the factory but cannot be created.; Requested template : Vec3d,Vec3d; Used template : Vec3d,Vec3d (default); Reason(s) : Data attribute 'output' does not point to a mechanical state of data type 'Vec3d' and none can be found in the parent node context.; Also tried to create the object with the template 'Vec3d,Rigid3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of data type 'Rigid3d' and none can be found in the parent node context.; ; [ERROR] [Node(Visu)] Component 'Mapping Visual' of type 'RigidMapping' failed:; Object type RigidMapping<> was not created; The object is in the factory but cannot be created.; Requested template : None; Used template : None; Also tried to create the object with the template 'Rigid2d,Vec2d' but failed for the following reason(s):; 1. Data attribute 'input' does not point to a mechanical state of data type 'Rigid2d' and none can be found in the parent node context.; Also tried to create the object with the template 'Rigid3d,Vec3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of data type 'Vec3d' and none can be found in the parent node context. [ERROR] [ObjectFactory::addAlias()] Target class for alias 'OglModel' not found: VisualModel; [14196:3124:0202/172118.106:ERROR:broker_win.cc(59)] Error reading broker pipe; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614:1355,ERROR,ERROR,1355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614,4,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"o that the un-catched exceptions are sended as msg_error instead of being printed on the console. ; * cosmetic changes like replacing 'using namespace a;' with the precise 'using a:TheClass', removing in-consistant line spacing. ; * replace ""extern C"" with static. - [Flexible/python] Fix the examples & the tests to take into account the changes in SofaPython; - [Compliant/python] Fix the examples & the tests to take into account the changes in SofaPython. To simplify the submitter's life (and don't waste their time) some extras (read not really relevant) changes are also added to the PR:; - remove a virtual in-heritance on BaseController and plugin/optitracknet. ; - adds a << operator to Message.h to handle file:line information (now in PR: #314 ) ; - made some changes in STLExporter to stay consistant with Sofa guidelines. . There is still some work todo (if you have free time to offer):; Eg: ; in Compliant there is still patterns like:; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: wrong arguments"" );; return NULL;; ```; The SP_MESSAGE_ERROR is probably not needed as it duplicate the one provided by the python exception. . While in ; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: first argument is not a BaseNode"" );; PyErr_BadArgument();; return NULL;; ```; PyExc_SetString() should replace the message error & the bad argument. . More generally there is still a lot of SP_MESSAGE_*() instead of msg_* and there is a lot of method that haven't their docstring. ; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:3642,error,error,3642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,3,"['error', 'failure']","['error', 'failures']"
Availability,"oadSceneWithArguments(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allo; cator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, boost::intrusive_ptr<sofa::simulation::Node>*) S; ceneLoaderPY.cpp:128; #12 0x14a8a6287 in sofa::simulation::SceneLoaderPY::load(char const*) SceneLoaderPY.cpp:88; #13 0x13a76cdee in sofa::simulation::Simulation::load(char const*) Simulation.cpp:472; #14 0x10f83fc80 in main Main.cpp:388; #15 0x7fffa5650234 in start (libdyld.dylib:x86_64+0x5234). 0x00013d5e5ee3 is located 0 bytes to the right of global variable '<string literal>' defined in '/Users/krasin/src/github.com/sofa-framework/sofa/src/SofaKernel/framework/sofa/core/; objectmodel/Context.cpp:37:37' (0x13d5e5ee0) of size 3; '<string literal>' is ascii string 'dt'; SUMMARY: AddressSanitizer: global-buffer-overflow Base.cpp:128 in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, unsigned int); ```. The code to blame (as pointed in the first message) is Base.cpp:128:. ```; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; ```. I propose to fix it in a simple, though, not very elegant way:. ```; if (strlen(name) >= 3) {; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; }; ```. Shall I create a PR like that?. I am currently tracking down some real issue with SOFA crashing on a VTU input, and having this buffer overflow on my way is a distraction. While it's not hard to fix it locally, this thread shows that I am not the first bitten by it, and suggests I won't be the last. It will save everyone time and effort, if we fix trivialities. Let me know, what would be the next steps here. I will be glad to follow your guidance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566:4210,down,down,4210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566,2,['down'],['down']
Availability,"ocal/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/create/.local/lib/python3.10/site-packages', '/usr/local/lib/python3.10/dist-packages', '/usr/lib/python3/dist-packages']; #################; create@create-AMX-X57. ```. ---------------------------------------------. ### Logs. **Output from make**. ```; ...; [ 89%] Linking CXX shared library ../../../lib/libSofaCUDA.so; /usr/bin/ld: CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/CudaHexahedronFEMForceField.cpp.o: in function `sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::HexahedronFEMForceField()':; CudaHexahedronFEMForceField.cpp:(.text._ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev[_ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev]+0x269): undefined reference to `sofa::core::behavior::ForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::ForceField(sofa::core::behavior::MechanicalState<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >*)'; collect2: error: ld returned 1 exit status; make[2]: *** [applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/build.make:9130: lib/libSofaCUDA.so.0.1] Error 1; make[1]: *** [CMakeFiles/Makefile2:18762: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/all] Error 2; make: *** [Makefile:156: all] Error 2. ```. **Content of build_dir/CMakeCache.txt**; ------------; [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10970149/CMakeCache.txt); ------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726:2243,error,error,2243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726,4,"['Error', 'error']","['Error', 'error']"
Availability,"ocations at every step of the loops. Same benchs as ; - https://github.com/sofa-framework/sofa/pull/4132. ```; (mu=0.1); LCP : 5000 iterations done in 58.1724 s ( 85.9514 FPS); GCS before: 5000 iterations done in 83.4733 s ( 59.8994 FPS); GCS after: 5000 iterations done in 69.2669 s ( 72.1846 FPS); ```; ```; (mu=0.0); LCP : 5000 iterations done in 44.0637 s ( 113.472 FPS); GCS before: 5000 iterations done in 69.1173 s ( 72.3408 FPS); GCS after: 5000 iterations done in 53.8957 s ( 92.7719 FPS); ```. Speedup of ~20-30% but still slower than LCP (but much less though ).; But this improvement should be felt whenever the GCS is using the unbuilt method (contrary to #4132 which was specialized for LinearConstraintCorrection with wire optimization). Other bench on caduceus (5000 steps); ```; LCP; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.11 1 0 0.69 0.14 0.04 0.14 9.10 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt before; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 33.01 0.24 1.45 0.24 13.24 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt after; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 19.89 0.16 0.98 0.16 9.38 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4195:1908,failure,failures,1908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4195,2,['failure'],['failures']
Availability,"oduces a new API for targets and packages management, following this scheme:. ```cmake; sofa_create_package_with_targets() # replacing sofa_generate_package. sofa_create_package() # replacing sofa_write_package_config_files. sofa_add_targets_to_package() # replacing sofa_install_targets; if(AUTO_SET_TARGET_PROPERTIES); sofa_auto_set_target_properties() # from a part of sofa_install_targets; endif(); sofa_install_targets_in_package() # from a part of sofa_install_targets; ; if(RELOCATABLE); sofa_set_target_install_relocatable() # replacing sofa_set_install_relocatable; endif(); ```. You can now use only what you need. ; The mega-master-calling-all-the-others macro is sofa_create_package_with_targets (replacing sofa_generate_package). ## Usual examples. To create a ""plugin"" package like SofaExporter:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaExporter; PACKAGE_VERSION ${SofaExporter_VERSION}; TARGETS SofaExporter AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaExporter""; RELOCATABLE ""plugins""; ); ```. To create a ""legacy meta-module"" package like SofaGeneral:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaGui; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaGui AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaGui""; ); ```. To register a ""legacy module"" target like SofaGeneralEngine:; ```cmake; sofa_add_targets_to_package(; PACKAGE_NAME SofaGeneral; TARGETS SofaGeneralEngine AUTO_SET_TARGET_PROPERTIES; ); ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1433:2090,failure,failures,2090,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1433,2,['failure'],['failures']
Availability,ofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:4677,Error,Error,4677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,5,"['Error', 'error']","['Error', 'error']"
Availability,"ofa::helper::io::Mesh*, boost::intrusive_ptr<sofa::component::topology::RegularGridTopology>, sofa::helper::vector<sofa::component::topology::SparseGridTopology::Type, sofa::helper::CPUMemoryManager<sofa::component::topology::SparseGridTopology::Type> >&) const+0x1f2) [0x7f67a0b49082]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildFromTriangleMesh(sofa::helper::io::Mesh*)+0x2c8) [0x7f67a0b4a3d8]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildAsFinest()+0x2d8) [0x7f67a0b4ac58]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(+0x2d2a2b) [0x7f67a0b3fa2b]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x1a3) [0x7f67a054e5b3]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*)+0x3a5) [0x7f67a5421455]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool)+0x15f) [0x7f67a542187f]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::initNode(sofa::simulation::Node*)+0xaa) [0x7f67a05b8b4a]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::init(sofa::simulation::Node*)+0xb0) [0x7f67a05b8620]; -> runSofa() [0x40f3a3]; -> /lib64/libc.so.6(__libc_start_main+0xf2) [0x7f679ef201e2]; -> runSofa() [0x4105de]; [1] 36378 segmentation fault (core dumped) runSofa /tmp/test.scn; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1748:2724,fault,fault,2724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748,1,['fault'],['fault']
Availability,"ofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1655:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) volatile = delete;; ^; 1 error generated.; ```. This plugin should either be updated with the new boost API, or get rid of boost dependency.; I don't know this plugin enough... ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:1566,error,error,1566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,2,['error'],['error']
Availability,"ofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1315,ERROR,ERROR,1315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,"ojects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :VCEnd"" exited with code 1.; 1>Done building project ""INSTAL",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2967,error,error,2967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['error'],['error']
Availability,ok I thought I had understood the ArticulatedSystemMapping but... it seems to works fine with different input and output sizes...; I removed that check and error case.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-679205362:156,error,error,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-679205362,1,['error'],['error']
Availability,"ok fine, just could you explain why the error is sometime sent directly and sometimes it remains conditional to the _checkTopology_ data ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1353#issuecomment-631272998:40,error,error,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1353#issuecomment-631272998,1,['error'],['error']
Availability,"ok, as long as it doesn't crash and the user has error message. 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824:49,error,error,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824,1,['error'],['error']
Availability,"ok, it works if I don't build cgal, so in header only (only execute cgal-setup.exe, no visual build after this step); Otherwise it fails at compilation: error: cannot open input file 'CGal.lib' when building plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476729206:153,error,error,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476729206,1,['error'],['error']
Availability,"olver name=""cs"" tolerance=""0.001"" maxIt=""500""/-->; 	<GenericConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/>; 	<MyTestController name=""body"" modelName=""patient.scn"" />; </Node>; ```. I dynamically load ""patient.scn"" in the MyTestController component, the code is as follows:. ```; sofa::simulation::SceneLoader *loader = sofa::simulation::SceneLoaderFactory::getInstance()->getEntryFileName(modelPath);; if (loader); {; 	m_node = loader->load(modelPath.c_str());; 	m_node->init(sofa::core::ExecParams::defaultInstance());; }; ```; The content of ""patient.scn"" is as follows:; ```; <?xml version=""1.0""?>; <Node name=""root"" gravity=""0 0 0"" dt=""0.005"" >. 	<RequiredPlugin name=""MeshFbxLoader"" />; 	<Node name=""Patient"">; 		<MechanicalObject name=""Articulations"" template=""Vec1d"" size=""1"" />; 		<Node name=""PatientBone"">; 			<MeshFbxLoader name=""fbxloader"" filename=""Body-Bone.FBX"" />		; 			<MechanicalObject name=""Bones"" template=""Rigid3d"" position=""@fbxloader.bonePos"" showObject=""0"" />; 			<Node name=""skinning"">; 				<OglModel name=""body"" src=""@../fbxloader"" />; 				<SkinningMapping name=""skinMap"" template=""Rigid3d,ExtVec3d"" input =""@../Bones"" output =""@body"" nbRef =""@../fbxloader.nbref"" indices =""@../fbxloader.boneIds"" weight=""@../fbxloader.boneWeights""/>; 			</Node>	; 			<ArticulatedSystemMapping input1=""@../Articulations"" output=""@Bones""/>; 		</Node>; 		<ArticulatedHierarchyContainer/>; 		<Node name=""articulationCenters"">; 			<Node name=""articulationCenter1"">; 				<ArticulationCenter parentIndex=""0"" childIndex=""1"" posOnParent=""294 22 0"" posOnChild=""0 0 0"" />; 				<Node name=""articulations"">; 					<Articulation translation=""0"" rotation=""1"" rotationAxis=""0 0 -1"" articulationIndex=""0""/>; 				</Node>; 			</Node>; 		</Node>; 	</Node>; 	; </Node>; ```. When my application is started, the above pointer is empty error appears, but when the component ""GenericConstraintSolver"" is changed to ""LCPConstraintSolver"" in ""test.scn"", the above pointer is empty problem no longer occurs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696:2372,error,error,2372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696,1,['error'],['error']
Availability,"olver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; T",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9412,ERROR,ERROR,9412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,"om/56633656/234046608-193dee0f-9771-4526-be96-6987aa0b87d1.png). However, my desired color map of the stress is like the following image (using node stress data):; ![VisualStress04](https://user-images.githubusercontent.com/56633656/234047053-0d382e09-243c-470b-8f49-ebbc6b756482.png); Compared to the visualization with ""_showVonMisesStressPerElement_"", this color map accords more with my intuition of the stress forces (while the feet are pressed).; Therefore, I would like to add a new option ""_showVonMisesStressPerNodeColorMap_"" to show this color map. 2) I would like to add an option ""_showGapBetweenElements_"" to activate/deactivate drawing the gap between the elements, in order to show a smooth color map:; ![VisualStress07](https://user-images.githubusercontent.com/56633656/234049502-781340eb-e323-402d-8aeb-fc4f14c0e722.png). 3) I would like to add an option ""_showForceField_"" to decide if we draw the forcefield of the current object or not. This will be useful when we have several soft tissues and we want to focus on one of the objects:; ![VisualStress08](https://user-images.githubusercontent.com/56633656/234050359-c2c27e3b-ba45-48b9-98dc-337757e25b6d.png); ![VisualStress09](https://user-images.githubusercontent.com/56633656/234050426-38c84e34-49f8-4c2c-bcea-b8d4e2acef59.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3820:2332,failure,failures,2332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3820,2,['failure'],['failures']
Availability,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:2615,failure,failures,2615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,2,['failure'],['failures']
Availability,"ompiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information... Done; **libboost-dev is already the newest version (1.71.0.0ubuntu2).**; The following packages were automatically installed and are no longer req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:1583,Error,Error,1583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['Error'],['Error']
Availability,"on my machine:. > [==========] Running 2 tests from 1 test case.; > [----------] Global test environment set-up.; > [----------] 2 tests from Monitor_test; > [ RUN ] Monitor_test.testInit; > [ OK ] Monitor_test.testInit (21 ms); > [ RUN ] Monitor_test.testModif; > [ OK ] Monitor_test.testModif (17 ms); > [----------] 2 tests from Monitor_test (38 ms total); > ; > [----------] Global test environment tear-down; > [==========] 2 tests from 1 test case ran. (38 ms total); > [ PASSED ] 2 tests. The purpose of this PR was initially to create a test to uncover a bug that some people in our team went through.; I personally never had the problem on my machine, but I know that @IPeterlik had it for instance.; It would be interesting to investigate deeper into this issue, but without being able to reproduce it on my workstation, I don't really know how I could do it. :/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323369942:408,down,down,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323369942,1,['down'],['down']
Availability,"on my side it is ready whenever you want, the fact SofaPython2 was throwing did an error at the compilation because it was calling the end(...Node*) perfectly showed the principle 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1774#issuecomment-773302067:83,error,error,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774#issuecomment-773302067,1,['error'],['error']
Availability,"on""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4410,ERROR,ERROR,4410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"on::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::Simulation::animate(sofa::simulation::Node*, double); sofa::gui::qt::RealGUI::step(); QMetaObject::activate(QObject*, int, int, void**); QTimer::timeout(QTimer::QPrivateSignal); QObject::event(QEvent*); QApplicationPrivate::notify_helper(QObject*, QEvent*); QApplication::notify(QObject*, QEvent*); QCoreApplication::notifyInternal2(QObject*, QEvent*); QTimerInfoList::activateTimers(); g_main_context_dispatch; g_main_context_iteration; QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>); QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>); QCoreApplication::exec(); sofa::gui::qt::RealGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; zsh: segmentation fault (core dumped) ~/repos/sofa/build/master/bin/runSofa ; ```; </details>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:9682,fault,fault,9682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['fault'],['fault']
Availability,"onent.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not f",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3110,ERROR,ERROR,3110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"onstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UnilateralInteractionConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMContactConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: LMConstraintSolver; [WARNING] [ObjectFactory] Class already registered: LMConstraintDirectSolver; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.so; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:6585,failure,failures,6585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,['failure'],['failures']
Availability,"ontainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this gravity data is not null, mass components automatically create a GravityForceField in the node; - GravityForceField have a link towards the mass to avoid recomputing the M matrix; - gravity contribution is added in the matrix system by a ForceField; - GravityForceField must be in the node to compute the gravity. #### Typical scene; old scene works and now you also can write:. ``` xml; <Node name=""root"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""To",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:1697,error,error,1697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,1,['error'],['error']
Availability,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:2173,failure,failures,2173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,2,['failure'],['failures']
