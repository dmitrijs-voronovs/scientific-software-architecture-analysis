quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,Can you add this to the release notes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3917#issuecomment-499788630:24,release,release,24,https://root.cern,https://github.com/root-project/root/pull/3917#issuecomment-499788630,1,['release'],['release']
Deployability,"Can you also backport this to v6-26-patches, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9691#issuecomment-1022007167:36,patch,patches,36,https://root.cern,https://github.com/root-project/root/pull/9691#issuecomment-1022007167,1,['patch'],['patches']
Deployability,Can you also update the release and include there a summary of the specification?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7068#issuecomment-764639351:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/7068#issuecomment-764639351,2,"['release', 'update']","['release', 'update']"
Deployability,Can you also update the release notes? (at https://root.cern.ch/root-version-v5-34-00-patch-release-notes),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1012#issuecomment-330670864:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/1012#issuecomment-330670864,3,"['patch', 'release', 'update']","['patch-release-notes', 'release', 'update']"
Deployability,Can you check that it really compiles? ; `civetweb` is designed and tested with OpenSSL 3.0 - see https://github.com/civetweb/civetweb/releases; But may be it will work with 3.1.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12766#issuecomment-1536267519:135,release,releases,135,https://root.cern,https://github.com/root-project/root/issues/12766#issuecomment-1536267519,1,['release'],['releases']
Deployability,Can you enforce the same exact binning in both and also try with raw TTree and raw TTreeReader? If RDF or TTree is producing wrong histograms it's a critical issue if not a release blocker.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-712715473:173,release,release,173,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-712715473,1,['release'],['release']
Deployability,Can you open an issue we need a new clad release. I don’t think we should drag these patches along for too long.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833#issuecomment-1551633897:41,release,release,41,https://root.cern,https://github.com/root-project/root/pull/12833#issuecomment-1551633897,2,"['patch', 'release']","['patches', 'release']"
Deployability,"Can you please try to build the PCH and try again? Also, can you run with GDB and post the stack trace? Maybe there are other missing dependencies in the test, which then tries to load them at runtime from the PCH. I wonder why there is a dependency on the PCH for the other test in any case, as I pointed out [here](https://github.com/root-project/root/blob/master/tmva/sofie/test/CMakeLists.txt#L96-L103)? Since the build is parallel, the order may slightly change after my changes, but these changes passed all tests before. I am a bit bummed that a test that is broken on master is holding off these changes after it has passed all the tests before several times, and has been held off twice already, for the LLVM upgrade, and the branching of 6.28, and that is not counting the first time these changes were proposed, back in 2019, when it was held for later because CMake was too old... It's hard to get motivated to contribute when this sort of hurdle keeps getting in the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1403838311:718,upgrade,upgrade,718,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403838311,1,['upgrade'],['upgrade']
Deployability,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12621#issuecomment-1926386146:37,configurat,configuration,37,https://root.cern,https://github.com/root-project/root/issues/12621#issuecomment-1926386146,2,['configurat'],['configuration']
Deployability,Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14293#issuecomment-1866590700:126,upgrade,upgrade,126,https://root.cern,https://github.com/root-project/root/pull/14293#issuecomment-1866590700,1,['upgrade'],['upgrade']
Deployability,"Can you rebase, please? (Also to get an update from Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606#issuecomment-833558491:40,update,update,40,https://root.cern,https://github.com/root-project/root/pull/6606#issuecomment-833558491,1,['update'],['update']
Deployability,"Can you squash all commits but ""Added Warning to TString constuctor"" into one, such that this branch ends up having two commits? You can do that with interactive rebase, making all commits *after* the second (!) as ""fixup"", such that they just modify / update the second commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-863082850:253,update,update,253,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-863082850,1,['update'],['update']
Deployability,Can you try to add the `/DNOMINMAX ` compilation flag and try again?; And check also the output of `root-config --cflags`:; ```; C:\root-dev\rootdev>root-config --cflags; -nologo -Zc:__cplusplus -std:c++17 -GR -FIw32pragma.h -FIsehmap.h -MD -EHsc -wd4141 -wd4291 -wd4244 -wd4049 -wd4146 -wd4250 -wd4624 -wd4267 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -O2 -IC:\root-dev\build\x64\release\include; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638#issuecomment-2413089945:500,release,release,500,https://root.cern,https://github.com/root-project/root/issues/16638#issuecomment-2413089945,1,['release'],['release']
Deployability,Can't install root on ubuntu 23,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:6,install,install,6,https://root.cern,https://github.com/root-project/root/issues/14479,1,['install'],['install']
Deployability,Cannot be seen/tested before publish-unit-test-result-action's `master` is updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12663#issuecomment-1514504136:75,update,updated,75,https://root.cern,https://github.com/root-project/root/pull/12663#issuecomment-1514504136,1,['update'],['updated']
Deployability,Cannot install root-framework from snap,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11338:7,install,install,7,https://root.cern,https://github.com/root-project/root/issues/11338,1,['install'],['install']
Deployability,"Cannot reproduce, here is my system configuration. ```; ╰─➤ uname -a; Darwin vpadulan-macbook.dyndns.cern.ch 23.4.0 Darwin Kernel Version 23.4.0: Fri Mar 15 00:12:25 PDT 2024; root:xnu-10063.101.17~1/RELEASE_ARM64_T6030 arm64; (root-dev) ╭─vpadulan@vpadulan-macbook ~/Programs/rootproject/mybuild; ╰─➤ cmake --version; cmake version 3.28.1. CMake suite maintained and supported by Kitware (kitware.com/cmake).; (root-dev) ╭─vpadulan@vpadulan-macbook ~/Programs/rootproject/mybuild; ╰─➤ clang --version; Apple clang version 15.0.0 (clang-1500.1.0.2.5); Target: arm64-apple-darwin23.4.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16149#issuecomment-2262187026:36,configurat,configuration,36,https://root.cern,https://github.com/root-project/root/issues/16149#issuecomment-2262187026,2,"['Install', 'configurat']","['InstalledDir', 'configuration']"
Deployability,"Canvas name was used as identifier to track HTML element. ; If new canvas with same name was created, old HTML name was overwritten.; Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15943:223,update,update,223,https://root.cern,https://github.com/root-project/root/pull/15943,1,['update'],['update']
Deployability,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14040:713,update,update,713,https://root.cern,https://github.com/root-project/root/pull/14040,1,['update'],['update']
Deployability,"Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4014:286,Release,ReleasePage,286,https://root.cern,https://github.com/root-project/root/pull/4014,1,['Release'],['ReleasePage']
Deployability,"Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/367:115,integrat,integration,115,https://root.cern,https://github.com/root-project/root/pull/367,1,['integrat'],['integration']
Deployability,Changed install location for builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8732:8,install,install,8,https://root.cern,https://github.com/root-project/root/pull/8732,1,['install'],['install']
Deployability,Changes for 6.18 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3764:17,release,release,17,https://root.cern,https://github.com/root-project/root/pull/3764,1,['release'],['release']
Deployability,Changing default compression algorithm for 6-14-patches to zlib,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492:48,patch,patches,48,https://root.cern,https://github.com/root-project/root/pull/2492,1,['patch'],['patches']
Deployability,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }; Traceback (most recent call last):; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>; raise SystemExit(main()); ^^^^^^; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main; print(ROOT.myvec); ^^^^^^^^^^; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute myvec from ROOT; ```. ### ROOT 6.30.02 (LCG105); ```; [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus959 ~]$root --version; ROOT Version: 6.30/02; Built for linuxx8664gcc on Dec 20 2023, 18:59:44; From heads/master@tags/v6-30-02; [vpadulan@lxplus959 ~]$python repro_libphysics.py; Name: TVectorT<float> Title:; ```. ### Reproducer. ```python; import ROOT. def main():; ROOT.gInterpreter.Declare('''; #include <TVectorT.h>; //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear; const auto myvec = TVectorT<float>();; '''); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:3627,Install,Installation,3627,https://root.cern,https://github.com/root-project/root/issues/16601,1,['Install'],['Installation']
Deployability,"Checked for duplicates: not found. Discussion started here:; https://root-forum.cern.ch/t/validity-health-checking-for-a-tfile-content-tfile-ok-but-ttree-corrupted-and-no-error/47304. ### Describe the bug; Using from python:; A TFile not isZombie() and not TestBit(ROOT.TFile.kRecovered) throw these error when parsing a TTree:; ```; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:0, badread=1, nerrors=1, basketnumber=0; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:1905651, badread=1, nerrors=2, basketnumber=0; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 5760784, fKeylen = 74, fObjlen = 7615836, noutot = 0, nout=0, nin=5760710, nbuf=7615836; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:460579199, branch:fSnp, entry:0, badread=1, nerrors=3, basketnumber=0; ```. ### Expected behavior; Any catch-able error either at TFile opening or at least when parsing and error is encounter ...; At this point i cannot check and asses the health of the file from within python. ### To Reproduce; https://gist.github.com/adriansev/5274de723333cd0afff774cb4d48d202; a test file can be provided through private communication. ### Setup; fedora 34/ ROOT git v6-24-00-patches @5af1fa4d3d; manual build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154:1794,patch,patches,1794,https://root.cern,https://github.com/root-project/root/issues/9154,1,['patch'],['patches']
Deployability,"Checksum is now excluded from the on-disk representation and it's not; stored in the anchor. This allows to leverage the ROOT I/O machinery for; schema evolution rather than having to rely entirely on custom code in; RNTuple::Streamer(). The RNTuple class version gets bumped from 4 to 5. This is a breaking change, but backwards compatibility with version 4; will be preserved for a while for easing the transition. Support for; version 4 will be dropped before stabilization. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15553:529,update,updated,529,https://root.cern,https://github.com/root-project/root/pull/15553,1,['update'],['updated']
Deployability,Cherry pick `fix max template recursion depth reached` to 6.10-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/743:63,patch,patches,63,https://root.cern,https://github.com/root-project/root/pull/743,1,['patch'],['patches']
Deployability,Cherry picked from Ivana's commit f245cb4; Ivana needs this in the patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4833:67,patch,patches,67,https://root.cern,https://github.com/root-project/root/pull/4833,1,['patch'],['patches']
Deployability,Cherry picked in #2716 to integrate with root-project/roottest#220,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2346#issuecomment-425665457:26,integrat,integrate,26,https://root.cern,https://github.com/root-project/root/pull/2346#issuecomment-425665457,1,['integrat'],['integrate']
Deployability,Cherry-picked from Ivana's commit f245cb4; Ivana needs this also in v6-18-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4835:77,patch,patches,77,https://root.cern,https://github.com/root-project/root/pull/4835,1,['patch'],['patches']
Deployability,Cherry-picked into v6-18-00-patches as aed00fdc16ed4e299b191d964a80ab9ef4257770,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4246#issuecomment-523191525:28,patch,patches,28,https://root.cern,https://github.com/root-project/root/pull/4246#issuecomment-523191525,1,['patch'],['patches']
Deployability,Cherrypicked into v6-14-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2037#issuecomment-390143726:27,patch,patches,27,https://root.cern,https://github.com/root-project/root/pull/2037#issuecomment-390143726,1,['patch'],['patches']
Deployability,"Clad currently has problems with some new headers in `MacOSX15.0.sdk` and crashes / errors due to `__builtin_pow`. Disable it for now while a solution is worked on, so we can upgrade the nodes and keep the build green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15910:175,upgrade,upgrade,175,https://root.cern,https://github.com/root-project/root/pull/15910,1,['upgrade'],['upgrade']
Deployability,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176:70,release,releases,70,https://root.cern,https://github.com/root-project/root/pull/16176,4,"['Release', 'configurat', 'release', 'upgrade']","['ReleaseNotes', 'configuration', 'releases', 'upgrade']"
Deployability,"Clang 4.0.1 is the version used by the current version used by Anaconda when building packages for macOS. I use C++17 for the Linux builds (that use gcc 7.3) so it’s nice to be consistent between platforms given that Clang 4 supports almost everything. This PR doesn’t need to be merged as it can happily stay as a patch that is applied by conda-build. (Alternatively, I could use C++ 14 for macOS only but we already discussed that on Mattermost.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3096#issuecomment-446506011:315,patch,patch,315,https://root.cern,https://github.com/root-project/root/pull/3096#issuecomment-446506011,1,['patch'],['patch']
Deployability,"Clang allows third party shared libraries to provide user-defined; extensions. For example, a custom libTemplateInstantiation.so can; visualize all template instantiation chains in clang. To enable it; one needs to pass a set of options such as -fplugin. Cling should be able to inherently work with clang plugins. However,; cling still does not make full use of the clang driver where the plugin; setup is handled. This patch enables plugins in cling and extends them in some aspects.; In particular, cling allows loading of plugins from shared libraries; but also if they are linked to the same library where cling is. This is; very useful in cases where cling runs itself in a shared library (eg; libCling). Users of libCling (such as ROOT) prefer to keep all llvm and; clang related symbols local to avoid symbol clashes if there is another; version of clang and llvm linked against a package. This can be done by; dlopen-ing libCling with RTLD_LOCAL visibility mode. Then the only way; for clang plugins to work in this scenario is to be linked to libCling. Patch by Aleksandr Efremov (@efremale) and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2371:421,patch,patch,421,https://root.cern,https://github.com/root-project/root/pull/2371,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7651:450,patch,patch,450,https://root.cern,https://github.com/root-project/root/pull/7651,2,['patch'],['patch']
Deployability,"Class to preserve `gPad` from the position where TContext is created. Supports two modes - interactive and fast. In interactive mode `pad->cd()` call is used. ; In the fast modes `gPad = saved_value` uses which should not invoke any graphics update. Use this class mainly in `TPad.cxx` and `TCanvas.cxx`, but also in several other sources",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11878:242,update,update,242,https://root.cern,https://github.com/root-project/root/pull/11878,1,['update'],['update']
Deployability,"Class.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 583 | static DictFuncPtr_t GetDict (const char *cname);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 584 | static DictFuncPtr_t GetDict (const std::type_info &info);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```. ### To Reproduce; Steps to reproduce the behavior:; 1. I am building root through the CMake program with the command as recommended:; ```; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src ; $ cmake --build .; ```. ### Setup; 1. ROOT version = 6.26.00; 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4; 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:3819,release,releases,3819,https://root.cern,https://github.com/root-project/root/issues/10155,2,['release'],"['release-', 'releases']"
Deployability,Clean up all accumulated redundant files over the llvm upgrades.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1296:55,upgrade,upgrades,55,https://root.cern,https://github.com/root-project/root/pull/1296,1,['upgrade'],['upgrades']
Deployability,Cling fixes after the LLVM upgrade,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/625:27,upgrade,upgrade,27,https://root.cern,https://github.com/root-project/root/pull/625,1,['upgrade'],['upgrade']
Deployability,"Cling has already basic support for CUDA: ; The CUDA mode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/seh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:750,install,install,750,https://root.cern,https://github.com/root-project/root/issues/7518,2,['install'],['install']
Deployability,"Cling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:5264,install,install,5264,https://root.cern,https://github.com/root-project/root/issues/12673,2,['install'],['install']
Deployability,"Cling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:9368,release,releases,9368,https://root.cern,https://github.com/root-project/root/issues/15511,1,['release'],['releases']
Deployability,Cling: prevent double release of Transactions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7752:22,release,release,22,https://root.cern,https://github.com/root-project/root/pull/7752,2,['release'],['release']
Deployability,"Cling: prevent double release of Transactions, take 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7773:22,release,release,22,https://root.cern,https://github.com/root-project/root/pull/7773,1,['release'],['release']
Deployability,Clone roottest from release tag when configuring with release tarball,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4101:20,release,release,20,https://root.cern,https://github.com/root-project/root/pull/4101,2,['release'],['release']
Deployability,"Closed and opened to check the new container images, where TF 2.4 is installed, and not 2.5 that does not work on ARM64.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16709#issuecomment-2424099272:69,install,installed,69,https://root.cern,https://github.com/root-project/root/pull/16709#issuecomment-2424099272,1,['install'],['installed']
Deployability,Closed in favor of an actual backport:; * https://github.com/root-project/root/pull/13990. It's always good to have better compatibility of the old branches. It's quite useful also for devs that want to build old releases for debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13974#issuecomment-1787402516:213,release,releases,213,https://root.cern,https://github.com/root-project/root/pull/13974#issuecomment-1787402516,1,['release'],['releases']
Deployability,Closes #15104. Thank you very much @wlav for helping out here!. Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:; 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed; 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625; 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15151:81,patch,patches,81,https://root.cern,https://github.com/root-project/root/pull/15151,1,['patch'],['patches']
Deployability,Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15310:122,release,release,122,https://root.cern,https://github.com/root-project/root/pull/15310,1,['release'],['release']
Deployability,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15467#issuecomment-2105876797:194,configurat,configuration,194,https://root.cern,https://github.com/root-project/root/pull/15467#issuecomment-2105876797,1,['configurat'],['configuration']
Deployability,Closing the issue given the explanation given by @vepadulano . Feel free to look for help on the forum in case issues are encountered with ROOT installations!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158#issuecomment-1833338676:144,install,installations,144,https://root.cern,https://github.com/root-project/root/issues/12158#issuecomment-1833338676,1,['install'],['installations']
Deployability,"Closing this PR as we understood that there is no proper way to treat special characters in build directories in cmake. Possibly, a different PR with a patch to throw an error if special characters are used will be open",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13733#issuecomment-1740812065:152,patch,patch,152,https://root.cern,https://github.com/root-project/root/pull/13733#issuecomment-1740812065,1,['patch'],['patch']
Deployability,Closing this as the patch was applied in #11459,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11642#issuecomment-1303551970:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/pull/11642#issuecomment-1303551970,1,['patch'],['patch']
Deployability,"Closing this as v6.24.06 is not tested/released for Ubuntu 22, and @ezradlesser is happy with our pre-compiled binaries for v6.26. I am not completely sure whether a future v6.24.08 will support Ubuntu 22 or not, but that's a different issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518#issuecomment-1121027098:39,release,released,39,https://root.cern,https://github.com/root-project/root/issues/10518#issuecomment-1121027098,1,['release'],['released']
Deployability,"Closing this issue because the thread was inactive, and problem was very likely fixed by the cppyy upgrade. @cozzyd, if you ever have time to check this again, and if the problem is still there with ROOT master, feel free to re-open this issue or create a new one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694#issuecomment-2035331021:99,upgrade,upgrade,99,https://root.cern,https://github.com/root-project/root/issues/13694#issuecomment-2035331021,1,['upgrade'],['upgrade']
Deployability,Closing: these changes are being integrated in https://github.com/root-project/root/pull/8770 (which solves #6347 ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6361#issuecomment-889718031:33,integrat,integrated,33,https://root.cern,https://github.com/root-project/root/pull/6361#issuecomment-889718031,1,['integrat'],['integrated']
Deployability,Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13948:227,update,updated,227,https://root.cern,https://github.com/root-project/root/pull/13948,1,['update'],['updated']
Deployability,Co-authored-by: sa35. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10062,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12327:117,update,updated,117,https://root.cern,https://github.com/root-project/root/pull/12327,1,['update'],['updated']
Deployability,Code formatting and release notes for recent lock contention improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7680:20,release,release,20,https://root.cern,https://github.com/root-project/root/pull/7680,1,['release'],['release']
Deployability,"Code from ROOT R project,; -> New features added. now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import. Best Regards",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74:263,update,updated,263,https://root.cern,https://github.com/root-project/root/pull/74,1,['update'],['updated']
Deployability,Collection of documentation updates that accumulated over a few weeks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5841:28,update,updates,28,https://root.cern,https://github.com/root-project/root/pull/5841,1,['update'],['updates']
Deployability,Collection of small patches that piled up during work on a larger branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6653:20,patch,patches,20,https://root.cern,https://github.com/root-project/root/pull/6653,1,['patch'],['patches']
Deployability,Collection of various documentation updates/fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3510:36,update,updates,36,https://root.cern,https://github.com/root-project/root/pull/3510,1,['update'],['updates']
Deployability,"Coming back to the HTTPS issue: together with @radupopescu we checked two Mac builders with different versions and Radu's MacBook with the latest binary release from the download page; all of them cannot open `TFile::Open(""https://..."")`. I'll create a JIRA ticket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2608#issuecomment-423507751:153,release,release,153,https://root.cern,https://github.com/root-project/root/pull/2608#issuecomment-423507751,1,['release'],['release']
Deployability,"Comment addressed, RN updated, tests added. Ready to go if jenkins agrees.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1071#issuecomment-333032164:22,update,updated,22,https://root.cern,https://github.com/root-project/root/pull/1071#issuecomment-333032164,1,['update'],['updated']
Deployability,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14395#issuecomment-1900607675:106,patch,patched,106,https://root.cern,https://github.com/root-project/root/pull/14395#issuecomment-1900607675,2,"['patch', 'update']","['patched', 'updated']"
Deployability,"Comments addressed, see the updated docs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9766#issuecomment-1026710672:28,update,updated,28,https://root.cern,https://github.com/root-project/root/pull/9766#issuecomment-1026710672,1,['update'],['updated']
Deployability,"Commit 785c9df34d (""Restore symbol lookup in child interpreters"") added a `DefinitionGenerator` to allow symbol lookup in the parent `IncrementalJIT` after the upgrade to LLVM 13. It appears that instead of the unmangled name, we need to lookup already linker mangled names. This fixes the tests `CodeUnloading/AtExit.C` and `MultipleInterpreters/MultipleInterpreters.C` on macOS, which adds an underscore during linker mangling. No change on Linux because there is no additional linker name mangling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16268:160,upgrade,upgrade,160,https://root.cern,https://github.com/root-project/root/pull/16268,1,['upgrade'],['upgrade']
Deployability,"Commit log updated, with a link to the (already existing) bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11742#issuecomment-1323417415:11,update,updated,11,https://root.cern,https://github.com/root-project/root/pull/11742#issuecomment-1323417415,1,['update'],['updated']
Deployability,"Common.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:2036,release,release,2036,https://root.cern,https://github.com/root-project/root/pull/10247,1,['release'],['release']
Deployability,"Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:2788,release,release,2788,https://root.cern,https://github.com/root-project/root/pull/6143,2,['release'],['release']
Deployability,"Compared with latest dev version, new fixes:. 1. Fix v7 hist updates, repair draw_mt.cxx tutorial; 2. Fix TH2 col drawing (small bins were not shown at all); 3. Fix text drawing in TPave - not always draw completion was done properly; 4. Fix axes context menu in the frame; 5. Small performance optimization. Only JavaScript code, therefore skipping CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6652:61,update,updates,61,https://root.cern,https://github.com/root-project/root/pull/6652,1,['update'],['updates']
Deployability,"Compilation failure in branch v6-26-00-patches with gcc11, el8 and amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12110:39,patch,patches,39,https://root.cern,https://github.com/root-project/root/issues/12110,1,['patch'],['patches']
Deployability,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12746:201,configurat,configuration,201,https://root.cern,https://github.com/root-project/root/pull/12746,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4892:267,patch,patch,267,https://root.cern,https://github.com/root-project/root/pull/4892,1,['patch'],['patch']
Deployability,"Complete code reformatted to use JS classes.; Makes layout more clear and compact.; Optimize io code - use more internal constants, which; very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script; Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9779:204,integrat,integrated,204,https://root.cern,https://github.com/root-project/root/pull/9779,2,"['Update', 'integrat']","['Update', 'integrated']"
Deployability,Conda root-feedstock link to this bug https://github.com/conda-forge/root-feedstock/issues/261. I didn't find conda variant of libvdt so the solution 2 there seems not working for conda. . Update. Conda PR https://github.com/conda-forge/root-feedstock/pull/262,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038#issuecomment-2248420933:189,Update,Update,189,https://root.cern,https://github.com/root-project/root/issues/16038#issuecomment-2248420933,1,['Update'],['Update']
Deployability,Configuration fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/153:0,Configurat,Configuration,0,https://root.cern,https://github.com/root-project/root/pull/153,1,['Configurat'],['Configuration']
Deployability,"Consequently a more complete instruction would read:; ```; if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi; export JUPYTER_ALLOW_INSECURE_WRITES=true; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242#issuecomment-2292484709:856,Integrat,Integration,856,https://root.cern,https://github.com/root-project/root/issues/16242#issuecomment-2292484709,3,"['Integrat', 'release']","['Integration', 'release']"
Deployability,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12817:255,patch,patches,255,https://root.cern,https://github.com/root-project/root/issues/12817,2,"['patch', 'release']","['patches', 'releases']"
Deployability,"Consider:; 1. Build A.pcm; 2. Build B.pcm which imports A.pcm; 3. Rebuild A.pcm (without rebuilding B.pcm); 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2680#issuecomment-424736217:127,patch,patch,127,https://root.cern,https://github.com/root-project/root/pull/2680#issuecomment-424736217,1,['patch'],['patch']
Deployability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-28-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15859:403,patch,patches,403,https://root.cern,https://github.com/root-project/root/pull/15859,1,['patch'],['patches']
Deployability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-30-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15858:403,patch,patches,403,https://root.cern,https://github.com/root-project/root/pull/15858,1,['patch'],['patches']
Deployability,Content of install directory with this PR: ; https://gist.github.com/oshadura/7737bdcc90fed501869656808a5c514a. Next step will be to move installation of PCMs in ROOT_GENERATE_DICTIONARY().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4783:11,install,install,11,https://root.cern,https://github.com/root-project/root/pull/4783,2,['install'],"['install', 'installation']"
Deployability,"Convert back slashes into forward slashes. This fixes the following errors on Windows:; input_line_12(12,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\GSL\2.5\include"",; ^~; input_line_12(13,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\libxml2\2.7.8\include"",; ^~; CUSTOMBUILD : error : .\bin\rootcling: compilation failure (./allDictd5c5124b81_dictContent.h) [C:\Users\bellenot\build\release\onepcm.vcxproj]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4376:188,release,release,188,https://root.cern,https://github.com/root-project/root/pull/4376,3,['release'],['release']
Deployability,"Convert the backslashes into forward slashes in the include path for rootcling on Windows. This fixes the following errors:; input_line_12(12,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\GSL\2.5\include"",; ^~; input_line_12(13,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\libxml2\2.7.8\include"",; ^~; CUSTOMBUILD : error : .\bin\rootcling: compilation failure (./allDictd5c5124b81_dictContent.h) [C:\Users\bellenot\build\release\onepcm.vcxproj]. And (when using ACLiC):; Info in <TWinNTSystem::ACLiC>: creating shared library C:/Users/bellenot/build/debug/core/dictgen/test/myextramacro_C.dll; input_line_12:7:4: error: \U used with no following hex digits; ""C:\Users\bellenot\build\debug\include"",; ^~; Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4381:225,release,release,225,https://root.cern,https://github.com/root-project/root/pull/4381,3,['release'],['release']
Deployability,"Converters and executors for ROOT fixed-width integer types are important for ""long long"" support for the cppyy inside ROOT (see https://github.com/root-project/root/issues/15872). This PR is an alternative to understanding what is actually going on with ""long long"" in PyROOT, and can be considered even for backporting to 6.32.02 if desired. However, since this only serves the niche usecase of using `cppyy` in ROOT via `import cppyy` without using ROOT at all, I don't this this should block the release. @dpiparo @vepadulano @hahnjo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15873:500,release,release,500,https://root.cern,https://github.com/root-project/root/pull/15873,1,['release'],['release']
Deployability,"Cool, good to hear that the PR goes in the right direction then!. > It is still not entirely clear in advance which features require connectivity. All features of builtins that do require network note this in their description:; * https://root.cern/install/build_from_source/#all-build-options; * https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L87. I agree that `builtin_openui5` should explicitly say that it requires network if `OFF`. For the confusing name with `builtin_`, do you have a suggestion to make this clearer? I don't think there are many options there, we meant of course builtin to the ROOT build, not the source tree :slightly_smiling_face: . About the pre-populating of FetchContent locations: I was facing the same problem recently for nix packages. I fixed it in the end by patching the CMake code of ROOT:; https://github.com/NixOS/nixpkgs/pull/308497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603#issuecomment-2102765857:249,install,install,249,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102765857,4,"['install', 'patch']","['install', 'patching']"
Deployability,Copy the stl.cppmap modulemap now during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/425:41,configurat,configuration,41,https://root.cern,https://github.com/root-project/root/pull/425,1,['configurat'],['configuration']
Deployability,"Correct! But it didn't affect any release fortunately, as it was me who introduced this bug in https://github.com/root-project/root/pull/7719 after 6.24 was branched off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9150#issuecomment-948853419:34,release,release,34,https://root.cern,https://github.com/root-project/root/pull/9150#issuecomment-948853419,1,['release'],['release']
Deployability,"Correct, 6-26-00-patches is building fine.; We also applied a patch for building root master (https://gitlab.cern.ch/sft/lcgcmake/-/commit/f50af97822f3fc4dba9fd56bee3cb76c39fe5aeb), just let us know when we can test a fix from your side for the master branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1026071985:17,patch,patches,17,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1026071985,2,['patch'],"['patch', 'patches']"
Deployability,"Correct, RDF was not used at all -- flamegraphs show the full call stacks. These are Jakob's I/O benchmarks from ACAT 2017, which showed TTreeReader's excessive overhead for the first time (as far as I know). There is a version that uses RDF but I did not run it, this is TTree vs TTreeReader (pre- and post-patch). It would be great if you could confirm that there is no sensible difference in performance with the patch, at least for this benchmark. A simplified version of Jakob's setup with (hopefully clear enough) instructions in the README can be found in my rootonly branch that I linked above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-456478794:308,patch,patch,308,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-456478794,4,['patch'],['patch']
Deployability,"Correct, overrides are not applied for nightly builds and release binaries",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615#issuecomment-2134690484:58,release,release,58,https://root.cern,https://github.com/root-project/root/issues/15615#issuecomment-2134690484,1,['release'],['release']
Deployability,"Correct, this is a duplicate of https://github.com/root-project/root/issues/12993. The short summary of https://github.com/root-project/root/issues/12993#issuecomment-1590752593 is that LLVM 13 in ROOT 6.30 didn't implement `__builtin_source_location`. It works after the upgrade to LLVM 16 that is not yet in a ROOT release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14601#issuecomment-1929594160:272,upgrade,upgrade,272,https://root.cern,https://github.com/root-project/root/issues/14601#issuecomment-1929594160,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,Correctly call TF1::Save with full range to be sure storing is correct; Support functions in TMultiGraph; Create real histogram for TGraph2D when `tri` option is configured; Update JSROOT with several fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13978:174,Update,Update,174,https://root.cern,https://github.com/root-project/root/pull/13978,1,['Update'],['Update']
Deployability,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3730#issuecomment-487955821:171,patch,patches,171,https://root.cern,https://github.com/root-project/root/pull/3730#issuecomment-487955821,2,"['patch', 'update']","['patches', 'update']"
Deployability,Could you also add an update of the Release Notes? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2179#issuecomment-396203730:22,update,update,22,https://root.cern,https://github.com/root-project/root/pull/2179#issuecomment-396203730,2,"['Release', 'update']","['Release', 'update']"
Deployability,Could you also create a patch for cppyy in our cppyy/patches directory with these changes and add it as another commit here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11441#issuecomment-1259504320:24,patch,patch,24,https://root.cern,https://github.com/root-project/root/pull/11441#issuecomment-1259504320,2,['patch'],"['patch', 'patches']"
Deployability,Could you also update the Release Notes and the TFIle documentation to announce this feature?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-525029223:15,update,update,15,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-525029223,2,"['Release', 'update']","['Release', 'update']"
Deployability,Could you augment the commit to include the new version number and maybe even a link to the LZ4 release notes? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4429#issuecomment-535129841:96,release,release,96,https://root.cern,https://github.com/root-project/root/pull/4429#issuecomment-535129841,1,['release'],['release']
Deployability,Could you move the changes in `clingutils` and `dictgen` into a separate PR that we look at once the llvm upgrade is in? I'm afraid of the conflicts we get from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11350#issuecomment-1245001088:106,upgrade,upgrade,106,https://root.cern,https://github.com/root-project/root/pull/11350#issuecomment-1245001088,1,['upgrade'],['upgrade']
Deployability,Could you try this patch https://reviews.llvm.org/rG638d84b60b7e7b7fa9099939ab4de2ec1e0c52c3 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8060#issuecomment-831498659:19,patch,patch,19,https://root.cern,https://github.com/root-project/root/issues/8060#issuecomment-831498659,1,['patch'],['patch']
Deployability,"Could you update Wim's entry in the CREDITS to reflect his cppyy ""contribution""? And please add ""PyROOT"" to your's, Enric!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2161#issuecomment-396859063:10,update,update,10,https://root.cern,https://github.com/root-project/root/pull/2161#issuecomment-396859063,1,['update'],['update']
Deployability,"Cppyy allows to add custom pythonisations for classes, but it does not yet provide an API for adding custom type converters. Until that API exists, we need to patch Cppyy with a converter Python string -> `TString`, so that we do not have to create a `TString` in Python when calling a C++ method that expects it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3534:159,patch,patch,159,https://root.cern,https://github.com/root-project/root/pull/3534,1,['patch'],['patch']
Deployability,Create `http` group for related classes; Re-format doxygen documentation of all related classes; Update JSROOT.md and THttpServer.md; Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10733:97,Update,Update,97,https://root.cern,https://github.com/root-project/root/pull/10733,2,['Update'],['Update']
Deployability,"Create a struct holding the flag, `HANDLE`, and `WIN32_FIND_DATA` used by `OpenDirectory`, `GetDirEntry`, and `FreeDirectory`, so each thread creates its own instance of it. This fixes randome failures in mutithreaded applications on Windows, like for example in the `R__USE_IMT` part of the `datasource-root` test:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13472:607,INSTALL,INSTALL,607,https://root.cern,https://github.com/root-project/root/pull/13472,1,['INSTALL'],['INSTALL']
Deployability,"Create notebooks from fit, add jsroot integration",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/207:38,integrat,integration,38,https://root.cern,https://github.com/root-project/root/pull/207,1,['integrat'],['integration']
Deployability,"Created a new class in _function_utils to obtain function signature and jit the function. This will be further reused for Defines, which can may make _numbadeclare more modular. # This Pull request:. ## Changes or fixes:; 1. Added Filter pythonizations to RDF.; Filter now directly works with python functions.; 2. Resolved comments: 1,2 on repeated imports.; 3. Resolved comment: 3 on lazy imports; 4. Resolved comment: 4 on comments.; 5. Resolved comment: 5 on using a single pythonizer.; 6. Resolving comment: 7 on using multiple commits. Future commits will include test cases, Defines, and Tutorial changes.; 7. Resolved comment: 8 added docs for internal functions.; 8. Resolving comment: 9 on Pydefine. NOt implemented in this branch.; 9. The remaining comments are on the organisation of the test cases and tutorials which will be done in the different branches and will be addressed there. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10896:950,update,updated,950,https://root.cern,https://github.com/root-project/root/pull/10896,1,['update'],['updated']
Deployability,"Creating a new pull request since I force-pushed to the old branch. This PR improves VecCore integration into ROOT. Before we copied all VecCore and Vc headers into the build directory, since rootcling did not get the right includes when Vc or VecCore were builtin. Now the right includes are propagates by calling set_property() with the necessary include directories. Ideally, in the future we should take the includes not from the DIRECTORY property, but from the target dependencies for each subcomponent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/851:93,integrat,integration,93,https://root.cern,https://github.com/root-project/root/pull/851,1,['integrat'],['integration']
Deployability,"Cross validation has been integrated through a different PR. Remaining are the Hyper param opt and variable importance.; I refer to @lmoneta for the future plan there. It is my understanding however that if we integrate them we do it through new PR’s, indicating that this PR can be closed. I will make sure to update the PR after discussion with Lorenzo during next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/858#issuecomment-408062694:26,integrat,integrated,26,https://root.cern,https://github.com/root-project/root/pull/858#issuecomment-408062694,3,"['integrat', 'update']","['integrate', 'integrated', 'update']"
Deployability,"Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version.; Fully avoids jQuery in the GUI, replace it by HTML5 code; Reduce significantly used code from d3.js (factor 3); Improve flexible layout in the GUI. Add support of many new classes/draw options; Like CANDLE/VIOLIN plots, TEfficiency,; Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9638:63,release,release,63,https://root.cern,https://github.com/root-project/root/pull/9638,2,"['Upgrade', 'release']","['Upgrade', 'release']"
Deployability,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11178:141,release,released,141,https://root.cern,https://github.com/root-project/root/pull/11178,1,['release'],['released']
Deployability,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit https://github.com/root-project/root/commit/ac36d879629fd67cf6fc9e955923ec9f98a2361c. An alternative solution appears to be replacing `EProperty` (which refers; to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. This PR fixes #11128",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148:141,release,released,141,https://root.cern,https://github.com/root-project/root/pull/11148,1,['release'],['released']
Deployability,"Current issues. **Critical**; - [ ] Update tests (no need to check raw values, only fitting batch vs scalar); - [ ] Use more complicated tests with bigger computation graphs for testing the driver; - [ ] Identify and implement important integrals in the batch compute library; - [ ] Identify and implement more complex use cases; - [ ] Use realistic fit models as tests and benchmarks for roofit; - [ ] Implement multithreading. **Side projects**; - [ ] Properly vectorize RooLandau; - [ ] Explore the possibility of vectorizing the gamma function; - [ ] Implement PDFs and functions in the library; - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::; - [ ] Cleanup of obsolete defines, options and code in general; - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8240#issuecomment-848578368:36,Update,Update,36,https://root.cern,https://github.com/root-project/root/pull/8240#issuecomment-848578368,1,['Update'],['Update']
Deployability,Current state:; ```; 18:10:43 Performing patch step for 'clad'; 18:10:43 clad_array_size_type.patch:25: trailing whitespace.; 18:10:43 CUDA_HOST_DEVICE T& operator[](std::ptrdiff_t i) { return m_arr[i]; }; 18:10:43 clad_local_array.patch:50: trailing whitespace.; 18:10:43 m_arr[i] = arr ? arr[i] : 0;; 18:10:43 clad_local_array.patch:62: trailing whitespace.; 18:10:43 double func6(double seed) {; 18:10:43 clad_local_array.patch:63: trailing whitespace.; 18:10:43 double sum = 0;; 18:10:43 clad_local_array.patch:64: trailing whitespace.; 18:10:43 for (int i = 0; i < 3; i++) {; 18:10:43 fatal: corrupt patch at line 149; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833#issuecomment-1552055360:41,patch,patch,41,https://root.cern,https://github.com/root-project/root/pull/12833#issuecomment-1552055360,7,['patch'],['patch']
Deployability,"Current v7 canvas cannot be stored in the file - I/O for shared_ptr<> not working. Because of that remove transfer of Pad/Canvas to the clients.; Actually, it was not required at all.; Also adjust extraction of attributes (line color) from the drawables. Repair all relevant macros in tutorials/v7. Update JSROOT, which now supports LZ4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1647:299,Update,Update,299,https://root.cern,https://github.com/root-project/root/pull/1647,1,['Update'],['Update']
Deployability,"Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16096:391,update,updated,391,https://root.cern,https://github.com/root-project/root/pull/16096,1,['update'],['updated']
Deployability,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170:400,integrat,integration,400,https://root.cern,https://github.com/root-project/root/pull/6170,1,['integrat'],['integration']
Deployability,"Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11245",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16082:374,update,updated,374,https://root.cern,https://github.com/root-project/root/pull/16082,1,['update'],['updated']
Deployability,Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally; - [] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8433:127,update,updated,127,https://root.cern,https://github.com/root-project/root/pull/8433,1,['update'],['updated']
Deployability,"Currently we rebuilt LTO everytime you rerun cmake, as CMake; touches the vcsrevision file that LTO depends on. Make isn't; smart enough to realise it's still just an empty file, so it; retriggers the LTO compilations whenever you run CMake. Again, this patch will be obsolete on the next LLVM upgrade; as this CMake code is refactored upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/842:254,patch,patch,254,https://root.cern,https://github.com/root-project/root/pull/842,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/332:112,patch,patch,112,https://root.cern,https://github.com/root-project/root/pull/332,1,['patch'],['patch']
Deployability,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084:15,install,installed,15,https://root.cern,https://github.com/root-project/root/pull/5084,2,"['deploy', 'install']","['deployed', 'installed']"
Deployability,"Currently when reading data which isn't of a basic data type, sometimes it calls `PopulatePage` without calling `Releasepage` later. (Making it incompatible with RPageSourceChain). Will investigate this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4344#issuecomment-537454690:113,Release,Releasepage,113,https://root.cern,https://github.com/root-project/root/pull/4344#issuecomment-537454690,1,['Release'],['Releasepage']
Deployability,"Currently, 36 tests are failing for runtime modules:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/; We want to make these test pass so that we can say that the runtime modules is; finally working. This patch enables ROOT to preload all modules at startup time. In my; environment, this patch fixes 14 tests for runtime cxxmodules. Preloading all the modules has several advantages. 1. We do not have to; rely on rootmap files which don't support some features (namespaces and; templates) 2. Lookup would be faster because we don't have to do; trampoline via rootmap files. The only disadvantage of preloading all the modules is the startup time performance.; `root.exe -q -l memory.C`; This is a release build without modules:; ```; cpu time = 0.091694 seconds; sys time = 0.026187 seconds; res memory = 133.008 Mbytes; vir memory = 217.742 Mbytes; ```; This is a release build with modules, with this patch:; ```; cpu time = 0.234134 seconds; sys time = 0.066774 seconds; res memory = 275.301 Mbytes; vir memory = 491.832 Mbytes; ```; As you can see, preloading all the modules makes both time and memory 2; to 3 times worse **at a startup time**. **Edit** : With hsimple.C; `root.exe -l -b tutorials/hsimple.C -q ~/CERN/ROOT/memory.C`; Release build without modules:; ```; Processing tutorials/hsimple.C... ; hsimple : Real Time = 0.04 seconds Cpu Time = 0.05 seconds ; (TFile *) 0x555ae2a9d560 ; Processing /home/yuka/CERN/ROOT/memory.C... ; cpu time = 0.173591 seconds ; sys time = 0.011835 seconds ; res memory = 135.32 Mbytes ; vir memory = 209.664 Mbytes ; ```; Release build with modules, with this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; (TFile *) 0x55d1b036d230; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.290742 seconds; sys time = 0.043851 seconds; res memory = 256.844 Mbytes; vir memory = 438.484 Mbytes; ```. However, it is a matter of course that we get slower startup t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814:234,patch,patch,234,https://root.cern,https://github.com/root-project/root/pull/1814,5,"['patch', 'release']","['patch', 'release']"
Deployability,"Currently, `gSystem->GetHomeDirectory()` will prefer to use the value from `etc/passwd` on Linux systems. In the Snap packaging, this causes issues due to the sandboxing permissions and is currently worked around by using LD_PRELOAD to hijack `getpwuid()` and force it to respect $HOME. From what I see, every other instance in the ROOT repository already prefers the $HOME variable, apart from this one instance here. I wouldn't expect most users to notice this patch, but I would expect users who might have a need to change this value to assume simply changing $HOME is sufficient and expect this behaviour, which can be done without any real complexities; rather than changing /etc/passwd which is a much more involved task and relies upon legacy knowledge of Unix systems.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7083:463,patch,patch,463,https://root.cern,https://github.com/root-project/root/pull/7083,1,['patch'],['patch']
Deployability,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288:240,patch,patch,240,https://root.cern,https://github.com/root-project/root/pull/5288,1,['patch'],['patch']
Deployability,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019:52,integrat,integration,52,https://root.cern,https://github.com/root-project/root/pull/8019,7,['integrat'],['integration']
Deployability,"DA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-26T19:15:54.928Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-767769935:2365,install,installation,2365,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-767769935,1,['install'],['installation']
Deployability,"DA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-27T20:55:05.573Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-768575448:2365,install,installation,2365,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-768575448,1,['install'],['installation']
Deployability,"DA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-03T18:32:22.804Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-772781466:2365,install,installation,2365,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-772781466,1,['install'],['installation']
Deployability,"DA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-04T18:11:39.761Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773543254:2365,install,installation,2365,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773543254,1,['install'],['installation']
Deployability,"DA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T11:10:55.739Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773997337:2365,install,installation,2365,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773997337,1,['install'],['installation']
Deployability,"DA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T16:35:12.117Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-774182513:2365,install,installation,2365,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-774182513,1,['install'],['installation']
Deployability,"DE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/all] Error 2; gmake: *** [Makefile:166: all] Error 2; ```. ### Reproducer. cmake ../../src/root -Droottest=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo; cmake --build . ### ROOT version. master@0afffc6fc9. ### Installation method. source. ### Operating system. FreeBSD 14.0-RELEASE. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2646,install,installation,2646,https://root.cern,https://github.com/root-project/root/issues/14492,4,"['Install', 'RELEASE', 'Release', 'install']","['Installation', 'RELEASE', 'Release', 'installation']"
Deployability,DManager.cxx:858; 6: Left side of '||' is false in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 7: Assuming 'count' is not equal to 0 in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 9: Assuming 'data' is non-null in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 10: Taking false branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 11: Assuming 'kNone' is equal to field 'fSource' in /opt/root_src/gui/gui/src/TGDNDManager.cxx:864; 12: Taking false branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:864; 13: Assuming field 'fLocalTarget' is non-null in /opt/root_src/gui/gui/src/TGDNDManager.cxx:868; 14: Taking true branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:868; 15: Calling default constructor for 'TDNDData' in /opt/root_src/gui/gui/src/TGDNDManager.cxx:869; 16: Calling default constructor for 'TObject' in /opt/root_src/gui/gui/inc/TGDNDManager.h:71; 17: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 18: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 19: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TGClient::HandleInput' in /opt/root_src/gui/gui/src/TGClient.cxx:116; 2: Calling 'TGClient::ProcessOneEvent' in /opt/root_src/gui/gui/src/TGClient.cxx:702; 3: Assuming field 'fRoot' is non-null in /opt/root_src/gui/gui/src/TGClient.cxx:651; 4: Taking false branch in /opt/root_src/gui/gui/src/TGClient.cxx:651; 5: Assuming the condition is true in /opt/root_src/gui/gui/src/TGClient.cxx:652; 6: expanded from macro 'gVirtualX' in /opt/root_src/core/base/inc/TVirtualX.h:338; 7: Taking true branch in /opt/root_src/gui/gui/src/TGClient.cxx:652; 8: Assuming 'kNone' is not equal to field 'fWaitForWindo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:15068,Update,UpdateIsOnHeap,15068,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,"DS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr&lt;ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;&gt; ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr&lt;ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;&gt; ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153#issuecomment-1209201215:1829,release,release,1829,https://root.cern,https://github.com/root-project/root/pull/11153#issuecomment-1209201215,1,['release'],['release']
Deployability,"Data {; std::unique_ptr<RBrowserDataCleanup> fCleanupHandle; ///<! cleanup handle for RecursiveRemove; };. // RBrowserData.cxx; class RBrowserDataCleanup : public TObject {};; ```. Which leads to failures in `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`:. ```; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 1 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; ```. As per the discussion in the linked PR, it seems that `TClass` is always generating dictionaries for the `std::unique_ptr` data member, even if it's transient. As things stand, the only ""fix"" is to move the `RBrowserDataCleanup` class from the implementation file to the header, and adding `ClassDef` macro since it inherits from `TObject`. An alternative workaround was changing `std::unique_ptr<RBrowserDataCleanup>` to `RBrowserDataCleanup *`, which is treated transparently in case of a transient member. ### Reproducer. 1. Revert the changes in #13134 ; 2. Run the following macro; ```cpp; void rbrowserdatacleanup(){; gSystem->LoadAllLibraries();; ROOT::Detail::TStatusBitsChecker::CheckAllClasses();; }; ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13361:2255,Install,Installation,2255,https://root.cern,https://github.com/root-project/root/issues/13361,1,['Install'],['Installation']
Deployability,"Data\Local\Temp\_CL_bab041f1sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\cppyy\CPyCppyy\cppyy3_8.vcxproj] ; - [2020-09-20T12:04:08.916Z] C:\Users\sftnight\AppData\Local\Temp\lnk{49E99F8E-A90C-4C9B-9A08-1F729F94A92E}.tmp : fatal error LNK1106: invalid file or disk full: cannot seek to 0x4E0 [C:\build\workspace\root-pullrequests-build\build\gui\guihtml\GuiHtml.vcxproj] ; - [2020-09-20T12:04:09.189Z] C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1995,5): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_6c6a49daex': No space left on device [C:\build\workspace\root-pullrequests-build\build\build\bindexplib.vcxproj] ; - [2020-09-20T12:04:09.189Z] C:\build\workspace\root-pullrequests-build\root\io\sql\src\TSQLStructure.cxx : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\io\sql\SQLIO.dir\Release\TSQLStructure.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\io\sql\SQLIO.vcxproj] ; - [2020-09-20T12:04:10.072Z] C:\build\workspace\root-pullrequests-build\root\geom\geom\inc\TGeoPatternFinder.h(420,42): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_54c8c494ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\geom\geombuilder\GeomBuilder.vcxproj] ; - [2020-09-20T12:04:10.072Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(4549,9): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ee597bbddb': No space left on device [C:\build\workspace\root-pullrequests-build\build\graf3d\eve7\ROOTEve.vcxproj] ; - [2020-09-20T12:04:10.072Z] C:\build\workspace\root-pullrequests-build\root\gui\sessionviewer\src\TSessionDialogs.cxx(539,1): fatal error C1088: Cannot flush compiler inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6386#issuecomment-695779738:1588,Release,Release,1588,https://root.cern,https://github.com/root-project/root/pull/6386#issuecomment-695779738,1,['Release'],['Release']
Deployability,"Davix interprets certain parameters that are passed in the anchor part of the URL (after the `#`). The anchor, however, is also used by `TChain` to pass the treename. This patch looks at the anchor and if it contains an equal sign (`=`), it assumes that it is a parameter list for Davix and not a treename. See also https://root-forum.cern.ch/t/problem-with-tchain-and-https-turls/53545/7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12405:172,patch,patch,172,https://root.cern,https://github.com/root-project/root/pull/12405,1,['patch'],['patch']
Deployability,"Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drpath=on"" ""-Druntime_cxxmodules=on"" ""-Dshadowpw=off"" ""-Dshared=on"" ""-Dsoversion=off"" ""-Dspectrum=on"" ""-Dsqlite=on"" ""-Dssl=on"" ""-Dtcmalloc=off"" ""-Dtest_distrdf_dask=on"" ""-Dtest_distrdf_pyspark=on"" ""-Dtesting=on"" ""-Dtmva-cpu=off"" ""-Dtmva-gpu=off"" ""-Dtmva-pymva=on"" ""-Dtmva-rmva=off"" ""-Dtmva-sofie=off"" ""-Dtmva=on"" ""-Dunfold=on"" ""-Dunuran=on"" ""-During=off"" ""-Dvc=off"" ""-Dvdt=on"" ""-Dveccore=off"" ""-Dvecgeom=off"" ""-Dwebgui=on"" ""-Dwin_broken_tests=off"" ""-Dwinrtdebug=off"" ""-Dx11=on"" ""-Dxml=on"" ""-Dxrootd=on""; ```. I do not know to how many builds this applies, I just noticed it on this one. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615:2670,Install,Installation,2670,https://root.cern,https://github.com/root-project/root/issues/15615,1,['Install'],['Installation']
Deployability,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment!. I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14427#issuecomment-1909772736:453,update,update,453,https://root.cern,https://github.com/root-project/root/issues/14427#issuecomment-1909772736,1,['update'],['update']
Deployability,"Dear @Josiah1 ,. Thanks for your message. The recently released Mac version brought some changes that we had to adapt to (see this recent [forum post](https://root-forum.cern.ch/t/root-stopped-yesterday-working-on-osx/61693) for example). . Can I ask you to try to compile the release candidate https://github.com/root-project/root/tree/v6-32-06-rc1 and tell us whether this is working on your machine?. Also, could you post the full MacOS version, as well as the XCode version?. Cheers,; Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498#issuecomment-2365251752:55,release,released,55,https://root.cern,https://github.com/root-project/root/issues/16498#issuecomment-2365251752,2,['release'],"['release', 'released']"
Deployability,"Dear @PPaye, thank you for this contribution! Now that the 6.32 release has happened, we can focus on nice documentation improvements like these. Before I can run the CI, would you mind to:. * Move all the files into the `tutorials/roostats` folder? We also don't have the few existing Python tutorials in `roostats-py`, so it would be better to stay consistent. Once this change is done, we can do a CI run and I will do a deeper review. You should also consider rebasing your commit onto the tip of the `master` branch, which advanced quite a bit in the meantime. Sorry for coming back to this so late!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15371#issuecomment-2144582952:64,release,release,64,https://root.cern,https://github.com/root-project/root/pull/15371#issuecomment-2144582952,1,['release'],['release']
Deployability,"Dear @eguiraud,. I tried to play a bit with it and apparently one of the problem is that `CMAKE_SOURCE_DIR` and `CMAKE_BINARY_DIR` have to be changed to `CMAKE_CURRENT_SOURCE_DIR` and `CMAKE_CURRENT_BINARY_DIR` in some places. I'm able to enter in the configuration step but then it crashes because of `RootMacros.cmake` :. ```cmake; CMake Error at build/_deps/root-src/cmake/modules/RootMacros.cmake:442 (message):; Cannot find header ROOT/TErrorDefaultHandler.hxx to generate dictionary; G__Core for. Did you forget to set the INCLUDE_DIRECTORIES property for; the current directory?; Call Stack (most recent call first):; build/_deps/root-src/core/CMakeLists.txt:237 (ROOT_GENERATE_DICTIONARY); ```; I tried to change them in `RootMacros.cmake` but it is a difficult part. . At least the use of `CMAKE_CURRENT_SOURCE_DIR` and `CMAKE_CURRENT_BINARY_DIR` in the right places should solve a lot of errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8923#issuecomment-907318235:252,configurat,configuration,252,https://root.cern,https://github.com/root-project/root/issues/8923#issuecomment-907318235,1,['configurat'],['configuration']
Deployability,"Dear @etejedor ; I have no local built of ROOT - it is too heavy for me - I am always rely on LCG releases or nightlies. ; The problem appeared not earlier than a week ago. There was a few days break in tests of my project, ; and restarting tests after this pause, couple of days ago, I've observed this behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-839744359:98,release,releases,98,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-839744359,2,['release'],['releases']
Deployability,"Dear @guitargeek ,; thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine.; I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15585#issuecomment-2123267444:74,patch,patches,74,https://root.cern,https://github.com/root-project/root/issues/15585#issuecomment-2123267444,2,['patch'],['patches']
Deployability,"Dear @pcanal, ; This is a kind reminder of this issue, it would be very nice to have a fix for it in an incoming ROOT release. ; Many thanks in advance!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13531#issuecomment-1838160334:118,release,release,118,https://root.cern,https://github.com/root-project/root/issues/13531#issuecomment-1838160334,1,['release'],['release']
Deployability,"Dear @smuzaffar , also thanks to your help, we converged. This PR merged the changes that for us are an improvement wrt the fix provided in December 2023. This the commit we would propose to CMS for the CMSSW 14 release: would you be so kind to give it another try to verify once again the code works as expected for CMS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14358#issuecomment-1896127237:212,release,release,212,https://root.cern,https://github.com/root-project/root/pull/14358#issuecomment-1896127237,1,['release'],['release']
Deployability,"Dear @sponce I propose to close this issue since the move to ROOT 6.30.04 happened for LHCb. Do not hesitate to signal that something has to be followed up by reopening the issue or by submitting a newer, updated one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12758#issuecomment-1966312174:205,update,updated,205,https://root.cern,https://github.com/root-project/root/issues/12758#issuecomment-1966312174,1,['update'],['updated']
Deployability,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14902#issuecomment-1982792542:211,update,update,211,https://root.cern,https://github.com/root-project/root/issues/14902#issuecomment-1982792542,1,['update'],['update']
Deployability,"Dear @xkzl ,. Indeed, I can see the same thing with the following simple example ; ```cpp; // myheader.hxx; #ifndef myheader; #define myheader. enum class MyEnum; {; kFirst,; kSecond,; kThird; };. template <MyEnum T>; class MyClass; {; };. #endif ; ```. ```cpp; // LinkDef.h; #ifdef __CLING__; #pragma link C++ enum MyEnum;; #pragma link C++ class MyClass < MyEnum::kFirst> + ;; #pragma link C++ class MyClass < MyEnum::kSecond> + ;; #pragma link C++ class MyClass < MyEnum::kThird> + ;; #endif; ```. ```; $: rootcling -f myheaderdict.cxx myheader.hxx LinkDef.h -rmf myheader.rootmap; ```. ```; # myheader.rootmap; { decls }; template <MyEnum> class MyClass;. [ ]; # List of selected classes; class MyClass<(MyEnum)0>; class MyClass<(MyEnum)1>; class MyClass<(MyEnum)2>; class MyClass<MyEnum::kFirst>; class MyClass<MyEnum::kSecond>; class MyClass<MyEnum::kThird>; # List of selected enums and outer classes; enum MyEnum; ```. I am unsure whether we are missing some different configuration or spelling. @pcanal might be able to help here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16496#issuecomment-2365069147:977,configurat,configuration,977,https://root.cern,https://github.com/root-project/root/issues/16496#issuecomment-2365069147,2,['configurat'],['configuration']
Deployability,"Dear Bertrand,. Here is the entire log of the cmake output and the make output. Here I used the C++17 standard. Please note, the command with which I called cmake is specified in the first line of the log file.; [cmake_debug.log](https://github.com/root-project/root/files/10993550/cmake_debug.log); [make_debug.log](https://github.com/root-project/root/files/10993551/make_debug.log). Here are also CMakeError.log and CMakeOutput.log.; [CMakeError.log](https://github.com/root-project/root/files/10993778/CMakeError.log); [CMakeOutput.log](https://github.com/root-project/root/files/10993780/CMakeOutput.log). I've also compiled the release mode with C++14, and it works just fine. Here are the output logs.; [cmake_release.log](https://github.com/root-project/root/files/10993654/cmake_release.log); [make_release.log](https://github.com/root-project/root/files/10993655/make_release.log). After this, I tried to compile the release mode with the C++17 standard, but it fails. Meanwhile, I cannot use C++14 with the debug mode.; Here is the cmake output if I'm trying to configure the project in debug mode with C++14. ```; CMake Error at cmake/modules/RootBuildOptions.cmake:405 (message):; >>> At least C++17 standard required with root7, please enable it using; CMake option: -DCMAKE_CXX_STANDARD=17; Call Stack (most recent call first):; CMakeLists.txt:157 (include); ```. So I suggest that the problem rather is with C++17. With best regards,; Denys.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1472390460:634,release,release,634,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1472390460,2,['release'],['release']
Deployability,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099:339,patch,patch,339,https://root.cern,https://github.com/root-project/root/pull/5099,1,['patch'],['patch']
Deployability,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11750:447,install,installed,447,https://root.cern,https://github.com/root-project/root/issues/11750,6,"['install', 'patch']","['install', 'installed', 'patch']"
Deployability,"Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro); ```c++; TGeoManager::Import(""Geometry.root""); gGeoManager->GetMasterVolume()->Draw(""ogl""); ```; and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed?. My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6556:116,upgrade,upgraded,116,https://root.cern,https://github.com/root-project/root/issues/6556,1,['upgrade'],['upgraded']
Deployability,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12458:768,release,releases,768,https://root.cern,https://github.com/root-project/root/issues/12458,1,['release'],['releases']
Deployability,"Dear ROOT team,. while integrating some CMake functionality provided by ROOT through the `ROOT_USE_FILE` include into our project, some small issues came up. If we are mistaken and there are better solutions than the one I provided, your advice is very welcome. Our `FindROOT.cmake` implementation looks like this:; ```cmake; find_package(ROOT QUIET CONFIG; HINTS; ${ROOT_ROOT} # aliBuild; ${ROOTSYS} # upstream; $ENV{ROOTSYS} # upstream; ${SIMPATH} # FairSoft; ); include(FindPackageHandleStandardArgs); find_package_handle_standard_args(ROOT CONFIG_MODE); include(${ROOT_USE_FILE}); ```; which is called in a `CMakeLists.txt` like this; ```cmake; find_package(ROOT 6.10.04 REQUIRED); ```. Please see the commit messages for more details about the issues we had. Best regards,; Dennis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916:23,integrat,integrating,23,https://root.cern,https://github.com/root-project/root/pull/916,1,['integrat'],['integrating']
Deployability,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 .; I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,; Danilo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327#issuecomment-280628922:79,patch,patch,79,https://root.cern,https://github.com/root-project/root/pull/327#issuecomment-280628922,2,['patch'],"['patch', 'patches']"
Deployability,"Dear all, possibly related, a similar segfault compiling current stable (v6-26-10@de7d98c) with FreeBSD clang version 14.0.5 (FreeBSD 13.2-RELEASE) - and yes, I realize it might be a strange system to build root on...; root is (auto-) configured with c++17 support on. [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]+0x2d3); #6 0x000000082da5f7b4 strlen (/lib/libc.so.7+0x1587b4); #7 0x00000000016482c9 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<std::nullptr_t>(char const*) rootcling_stage1.cxx:0:0; #8 0x0000000001648213 GetEtcDir() rootcling_stage1.cxx:0:0; #9 0x00000000016b2792 RootClingMain(int, char**, bool) (/home/mkrzewic/src/root_build/core/rootcling_stage1/src/rootcling_stage1+0x16b2792); #10 0x00000000016c32d5 ROOT_rootcling_Driver (/home/mkrzewic/src/root_build/core/rootcling_stage1/src/rootcling_stage1+0x16c32d5); Stack dump:; 0.	Program arguments: /home/mkrzewic/src/root_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/mkrzewic/src/root_build/lib/libCore.so -excludePath /home/mkrzewic/src/root_src -excludePath /home/mkrzewic/src/root_build/ginclude -excludePath /home/mkrzewic/src/root_build/externals -excludePath /home/mkrzewic/src/root_build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/v1 -compilerI/usr/lib/clang/14.0.5/include -compilerI/usr/include -compiler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1537529063:139,RELEASE,RELEASE,139,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1537529063,1,['RELEASE'],['RELEASE']
Deployability,"Dear all,. after . git clone https://github.com/root-project/root.git; cd root; git checkout -b v6-28-02 v6-28-02; mkdir root_build; cd root_build; cmake ../root; cmake --build -j4. I get:; ...; [ 75%] Built target rootcling_stage1; [ 75%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:4:; In file included from /usr/include/c++/13/bitset:52:; In file included from /usr/include/c++/13/string:47:; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: error: redefinition of '__distance'; __distance(_InputIterator __first, _InputIterator __last,; ^; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: note: previous definition is here; __distance(_InputIterator __first, _InputIterator __last,; ^; ... This is under opensuse Tumbleweed with latest updates. The default compiler is gcc-13. . It looks similar to an previous issue with gcc-12: https://github.com/root-project/root/issues/10478. The last time I built root (v6.26.10 in December 2022) I had no problems but I don't know what the gcc version was back then. ; Could you please have a look?; Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12659:883,update,updates,883,https://root.cern,https://github.com/root-project/root/issues/12659,1,['update'],['updates']
Deployability,"Dear all,. while root-6.28.03 compiled with the patch provided in response to issue #12659 a similar problem is back now in root-6.28.04 (retrieved via latest-stable from github today). I just did (on suse TW):; ```; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; mkdir root_build; cd root_build; cmake ../root_src -j4; ```. and this produced:; ```; ...; [ 76%] Built target ClingUtils; [ 76%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 76%] Linking CXX shared library ../../../lib/libCling.so; [ 76%] Linking CXX executable src/rootcling_stage1; [ 76%] Built target rootcling_stage1; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; [ 76%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:52:; In file included from /usr/include/c++/13/memory_resource:60:; In file included from /usr/include/c++/13/bits/memory_resource.h:46:; /usr/include/c++/13/bits/utility.h:219:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp>>'; inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;; ^; ./usr/include/c++/13/bits/stl_pair.h:62:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.bits/stl_pair.h'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; ..; ```. It's not the exact same error message as in #12659 but seems rather close in nature ...; Could you please have look if the patch from 6.28.03 needs further additions to address this in 6.28.04?. Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12897:48,patch,patch,48,https://root.cern,https://github.com/root-project/root/issues/12897,2,['patch'],['patch']
Deployability,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492:755,install,install,755,https://root.cern,https://github.com/root-project/root/issues/12492,3,"['install', 'release']","['install', 'installed', 'release']"
Deployability,"Dear experts, @etejedor, . I think I am facing a similar memory usage problem in PyROOT (ROOT 6.24/06). Do you know if this issue has been fixed? If yes, in which release?. Thanks a lot!; Cheers,; Alberto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10454#issuecomment-1248174147:163,release,release,163,https://root.cern,https://github.com/root-project/root/issues/10454#issuecomment-1248174147,1,['release'],['release']
Deployability,"Dear jknedlik,; The agreement with Peter Hristov and Dario Berzano, early 2018, was that the code in net/alien would have been moved to AliRoot, where it pertains (and should have been from the beginning).; So, before merging this patch, I think you should check with them what the situation is and provide; a roadmap for removal?. G Ganis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2754#issuecomment-427337931:231,patch,patch,231,https://root.cern,https://github.com/root-project/root/pull/2754#issuecomment-427337931,1,['patch'],['patch']
Deployability,Debug builds in nightlies (and releases),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6430:31,release,releases,31,https://root.cern,https://github.com/root-project/root/issues/6430,1,['release'],['releases']
Deployability,"DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #7 0x00007f060a3cf4cb in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<clang::Expr*> const&, bool, clang::ASTContext&, cling::Interpreter*, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #8 0x00007f060a3c8760 in cling::LookupHelper::findAnyFunction(clang::Decl const*, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #9 0x00007f060a3540cd in TClingClassInfo::GetMethod (this=this@entry=0x7ffd5e11dc60, fname=fname@entry=0x55db6da621c0 ""templateTest<double>""); at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingDeclInfo.h:38; #10 0x00007f060a30402f in TCling::GetFunction (this=0x55db68f2e200, opaque_cl=0x7ffd5e11dc60, method=0x55db6da621c0 ""templateTest<double>""); at /home/b/bendavid/rootdev19/root/core/metacling/src/TCling.cxx:4942; #11 0x00007f060f49a226 in TListOfFunctions::FindObject (this=0x55db6af20ca0, name=0x55db6da621c0 ""templateTest<double>""); at /home/b/bendavid/rootdev19/root/core/meta/src/TListOfFunctions.cxx:181; #12 0x00007f060f6739df in Cppyy::GetMethodIndicesFromName (scope=<optimized out>, name=""templateTest<double>""); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1450; #13 0x00007f060f6e40e4 in CPyCppyy::meta_ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010786248:5069,install,install,5069,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010786248,1,['install'],['install']
Deployability,"Declarations without the auto keyword are not part of standard C++. Even though it is a nice feature to have, it requires a patch on top of clang and is one of the hurdles preventing us from using the upstream clang. Implicit auto injection is currently only supported at the prompt (and only in the top-most function-level scope). So it should ideally not break other features. There are a few GitHub and JIRA issues related to this feature that can also be closed if we completely remove it. For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). EDIT:; Glancing through JIRA issues, these are the issues that can be closed (list might not be exhaustive):. https://its.cern.ch/jira/browse/ROOT-10309; https://its.cern.ch/jira/browse/ROOT-10593; https://its.cern.ch/jira/browse/ROOT-10284; https://its.cern.ch/jira/browse/ROOT-8828; https://its.cern.ch/jira/browse/ROOT-8538; https://its.cern.ch/jira/browse/ROOT-7970. # This Pull request:; Requires https://github.com/root-project/roottest/pull/1056 to be merged for tests to pass. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645:124,patch,patch,124,https://root.cern,https://github.com/root-project/root/pull/14645,3,"['patch', 'update']","['patch', 'patches', 'updated']"
Deployability,"Declare an install target for a mini library for unit test support, so roottest can be built standalone",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9528:11,install,install,11,https://root.cern,https://github.com/root-project/root/pull/9528,1,['install'],['install']
Deployability,Dedicated branch now created in JSROOT repository; Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2964:91,patch,patches,91,https://root.cern,https://github.com/root-project/root/pull/2964,1,['patch'],['patches']
Deployability,"Default value is on in C++ code,; but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14080:189,update,updated,189,https://root.cern,https://github.com/root-project/root/pull/14080,2,['update'],['updated']
Deployability,Delete v636 release notes [v6.34],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16835:12,release,release,12,https://root.cern,https://github.com/root-project/root/pull/16835,1,['release'],['release']
Deployability,Deploy root on pip,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14890:0,Deploy,Deploy,0,https://root.cern,https://github.com/root-project/root/issues/14890,1,['Deploy'],['Deploy']
Deployability,"Deprecate VMC, remove remnant of already removed options, and remove deprecated options not yet removed for the next release. The only remaining option is memstat, which I will do in a separate pull request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3804:117,release,release,117,https://root.cern,https://github.com/root-project/root/pull/3804,1,['release'],['release']
Deployability,"DerefProtectionTransformer::Transform; Breakpoint 1 at 0x7fb1c5732850; (gdb) continue; Continuing.; instantiating template; [Thread 0x7fb1af5b6640 (LWP 1469) exited]. Thread 1 ""python"" hit Breakpoint 1, 0x00007fb1c5732850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; (gdb) bt; #0 0x00007fb1c5732850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #1 0x00007fb1c575c9c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #2 0x00007fb1c575cb6f in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #3 0x00007fb1c575cd31 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #4 0x00007fb1c572ccd1 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #5 0x00007fb1c572d9dd in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #6 0x00007fb1c56a16c0 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #7 0x00007fb1c56a2d3a in cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&) (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #8 0x00007fb1c56a2f1c in cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #9 0x00007fb1c562d96a in TClingCallFunc::compile_wrapper (this=this@entry=0x555ecdd48270, wrapper_name=""__cf_10"", ; wrapper=""#pragma clang diagnostic push\n#pragma clang diagnosti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:3765,install,install,3765,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,1,['install'],['install']
Deployability,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; .dot file generated with RooAbsArg::graphVizTree produces an invalid .dot file if the graph title contains spaces. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; RooAbsArg::graphVizTree should produce a valid .dot file even when the names of the elements contain spaces. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ROOT macro, save to graphvizMWE.C and run with `root graphvizMWE.C`:; ```; void graphvizMWE(void){; // Create a simple dependency tree; RooRealVar x{};; RooRealVar sigma{};; RooRealVar mu{};. RooGaussian Gaussian(""my_gaussian"", ""Gaussian"", x, mu, sigma);; RooGaussian GaussianWithSpace(""my gaussian"", ""Gaussian"", x, mu, sigma);. // Create GraphViz trees; Gaussian.graphVizTree(""tree_example.dot"");; GaussianWithSpace.graphVizTree(""tree_example2.dot""); // Produces invalid output; }; ```; Then attempt to convert the produced `.dot` files to images using; `dot -Tpng tree_example.dot -o example1.png # Produces an image`; `dot -Tpng tree_example2.dot -o example2.png # Error!`. The first of these will produce a .png image, the second will fail with a message like: `Error: tree_example2.dot: syntax error in line 1 near 'gaussian'`. Can be fixed by enclosing the graph title in quotes: i.e. changing line 1 of `tree_example2.dot` from; `digraph my gaussian{`; to; `digraph ""my gaussian""{`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT built from source. ROOT Version: 6.23/01; Built for linuxx8664gcc on Jun 05 2020, 15:06:16; From heads/master@v6-23-01-229-gd4ac502837. Ubuntu 18.04.5 LTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7067:2148,install,install,2148,https://root.cern,https://github.com/root-project/root/issues/7067,1,['install'],['install']
Deployability,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7, ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11482:2191,install,install,2191,https://root.cern,https://github.com/root-project/root/issues/11482,1,['install'],['install']
Deployability,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877:1308,release,releases,1308,https://root.cern,https://github.com/root-project/root/issues/10877,2,['release'],['releases']
Deployability,"Detaching after vfork from child process 2341]; [Detaching after vfork from child process 2345]; [Detaching after vfork from child process 2347]; [New Thread 0x7f05f42cb640 (LWP 2349)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007f060ffb6201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDerefProtectionTransformer::Transform; Breakpoint 1 at 0x7f060a447850; (gdb) continue; Continuing.; instantiating template. Thread 1 ""python"" hit Breakpoint 1, 0x00007f060a447850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; (gdb) bt; #0 0x00007f060a447850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #1 0x00007f060a4719c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #2 0x00007f060a471b6f in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #3 0x00007f060a471d31 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #4 0x00007f060a9d06d4 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #5 0x00007f060b465268 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #6 0x00007f060a3ce218 in cling::findAnyFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) (); from /home/b/bendavid/rootdev19/install/lib/libCling.so; #7 0x00007f060a3cf4cb in clang::FunctionDecl const* cling::findFunction<cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010786248:3409,install,install,3409,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010786248,1,['install'],['install']
Deployability,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14920#issuecomment-1986909083:60,patch,patch,60,https://root.cern,https://github.com/root-project/root/pull/14920#issuecomment-1986909083,1,['patch'],['patch']
Deployability,"Dirty flag propagation appeared to be unnecessary in the batch mode; because the RooFitDriver manages the evaluation of nodes, but some nodes; have internal computation graphs that rely on the dirty flag; propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:; ```; Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK; Test 28 : P.d.f. marginalization through integration.............OK; ```. The only tests that still needs to be fixed now is:; ```; Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9458:440,integrat,integration,440,https://root.cern,https://github.com/root-project/root/pull/9458,1,['integrat'],['integration']
Deployability,Disable pymva since old ROOT version will not support the latest versions of the python tools which are installed in the build nodes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15025:104,install,installed,104,https://root.cern,https://github.com/root-project/root/pull/15025,1,['install'],['installed']
Deployability,Disable rtcxxmodules if ROOT is already installed in the system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4512:40,install,installed,40,https://root.cern,https://github.com/root-project/root/pull/4512,1,['install'],['installed']
Deployability,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:349,release,release,349,https://root.cern,https://github.com/root-project/root/pull/9035,4,['release'],['release']
Deployability,Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3.; This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8617:97,update,update,97,https://root.cern,https://github.com/root-project/root/pull/8617,2,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,Disable tutorials failing on Windows (x86) with VS 2022 v17.8 This is needed to update the build nodes and add the new ones,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14629:80,update,update,80,https://root.cern,https://github.com/root-project/root/pull/14629,2,['update'],['update']
Deployability,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15187:147,install,installed,147,https://root.cern,https://github.com/root-project/root/pull/15187,6,['install'],['installed']
Deployability,"Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way!. ### Explain what you would like to see improved; At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved; As far as I can tell, what happens is this:. ```; THistPainter::Paint() is called; -> PaintInit() is called, this populates the Hparam structure with the old axis ranges; -> PaintFrame() is called; -> RecalculateRange() is called; -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal; -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel; -> The frame is painted with the old axis ranges; -> The histogram is drawn with old ranges; ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce; Simple macro - try zooming on the lower axis:; `; {; TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);; hist->FillRandom(""gaus"", 10000);; TF1 *func = new TF1(""func"", ""gaus"");; hist->Fit(func);; TRatioPlot *plot = new TRatioPlot(hist);; plot->Draw();; }; `. ### Setup; 1. ROOT 6.25/01; 2. macOS 11.4; 3. build from git. ### Additional context; There is a comment ; ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize""; in TRatioPlot.cxx so I assume at least one other person knows about this behavior",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9263:299,update,update,299,https://root.cern,https://github.com/root-project/root/issues/9263,3,['update'],"['update', 'updates']"
Deployability,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise; 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8295#issuecomment-852277296:891,update,update,891,https://root.cern,https://github.com/root-project/root/issues/8295#issuecomment-852277296,2,['update'],['update']
Deployability,"Discussed with @etejedor, still needs to be discussed with @oshadura.; Commit message needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5607:98,update,updated,98,https://root.cern,https://github.com/root-project/root/pull/5607,1,['update'],['updated']
Deployability,"Discussed with Danilo: We will not backport this to 6.32 because there is a risk of breaking stuff. It fixes a memory leak, but it is bounded as confirmed by Dev's tests, and was only found one and half years after it's introduction during the upgrade to LLVM 13.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16150#issuecomment-2273719008:244,upgrade,upgrade,244,https://root.cern,https://github.com/root-project/root/pull/16150#issuecomment-2273719008,1,['upgrade'],['upgrade']
Deployability,"Discussion with @eguiraud and @vepadulano:; - Rename DataSource to Dataset; - Add type and name of dataset; - Add type of datasource; - Number of slots; - Make ""Numbers of ..."" and other information a simple table; - Add it to the cheat sheet. To do so we need an additional public API:; - GetDatasetInfo, returns string like `/path/to/file:name`, TBD. I may put in all information except the dataset info first and update the output of `Describe` later. `Describe` is API-wise fixed but it's documented that the content of the returned string can change since it's meant for interactive usage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-817629082:416,update,update,416,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-817629082,2,['update'],['update']
Deployability,"Distributed RDataFrame internally checks the category an operation belongs to (e.g. transformation, action) through enums in Python. The enum package was added in Python 3.4 and can be installed in previous Python versions, so it should be added to requirements.txt with a check on the python version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7770:185,install,installed,185,https://root.cern,https://github.com/root-project/root/pull/7770,1,['install'],['installed']
Deployability,Do I understand correctly that this is an old (i.e. <v6.28) issue? Can we then fix it in a patch release of 6.30 rather than blocking 6.30/00 for it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13744#issuecomment-1761506979:91,patch,patch,91,https://root.cern,https://github.com/root-project/root/issues/13744#issuecomment-1761506979,2,"['patch', 'release']","['patch', 'release']"
Deployability,Do not install internal CMake modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4099:7,install,install,7,https://root.cern,https://github.com/root-project/root/pull/4099,1,['install'],['install']
Deployability,"Do not merge yet, I found a bug, will update on Monday.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/942#issuecomment-328383280:38,update,update,38,https://root.cern,https://github.com/root-project/root/pull/942#issuecomment-328383280,1,['update'],['update']
Deployability,"Do not set up the iterator in the ctor.; ; Many interfaces in ROOT namely TCling do not need to iterate over decls to find what they look for. They use the regular lookup facilities which are provided by cling or clang.; ; In a few cases we still use the pattern:; `TClingClassInfo(fInterpreter) ci; ci.GetDataMember(..);`; where we are supposed to look for a ROOT's definition of a data member on the global scope. In turn, this pattern does not walk the decls but performs a 'regular' lookup.; ; This patch removes the expensive setup of the iterators (triggering humongous amount of deserializations). We lazily set up the iterators only when we are about to start iterating (most notably coming from the legacy PyROOT interfaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1668:503,patch,patch,503,https://root.cern,https://github.com/root-project/root/pull/1668,1,['patch'],['patch']
Deployability,"Do we have to patch LLVM, ie is that an error or a warning? We're preparing changes to how we handle patches with LLVM, and in general we try to avoid them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12086#issuecomment-1399942669:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/12086#issuecomment-1399942669,2,['patch'],"['patch', 'patches']"
Deployability,Do we need these files in installation? ; They are used only internally and therefore I did not copy them to `${CMAKE_BINARY_DIR}/include` directory.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5450#issuecomment-618879725:26,install,installation,26,https://root.cern,https://github.com/root-project/root/pull/5450#issuecomment-618879725,1,['install'],['installation']
Deployability,Do you know which release/commit it last worked?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14963#issuecomment-2018035054:18,release,release,18,https://root.cern,https://github.com/root-project/root/issues/14963#issuecomment-2018035054,1,['release'],['release']
Deployability,"Do you meaning this patch? [[clang-repl] Support statements on global scope in incremental mode](https://reviews.llvm.org/D127284) ; It looks almost identical to unnamed macro support. So I assumed clang-repl (and later cling) will have that feature soon.; However, both ""on load"" feature implemented with that patch or unnamed macro bring a problem that the script file is not a valid c++ source file anymore so a compiler, not an interpreter like cling, cannot compile it. While my proposed approaches do not have this limitation. But of course, we can `#include ""a_valid_cxx_file.cpp""` in a `.C` script file containing unnamed macro for ""on load"". Just a little indirect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1235284590:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235284590,2,['patch'],['patch']
Deployability,"Do you need this also in 6.24, or will the next release (6.26) be sufficient?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8778#issuecomment-953795719:48,release,release,48,https://root.cern,https://github.com/root-project/root/issues/8778#issuecomment-953795719,1,['release'],['release']
Deployability,Documentation has been updated accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10238#issuecomment-1110901468:23,update,updated,23,https://root.cern,https://github.com/root-project/root/issues/10238#issuecomment-1110901468,1,['update'],['updated']
Deployability,"Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been; pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3809:55,update,updated,55,https://root.cern,https://github.com/root-project/root/pull/3809,1,['update'],['updated']
Deployability,Documentation updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5649:14,update,updates,14,https://root.cern,https://github.com/root-project/root/pull/5649,1,['update'],['updates']
Deployability,Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5315:14,update,updates,14,https://root.cern,https://github.com/root-project/root/pull/5315,1,['update'],['updates']
Deployability,Does not work. One should update comments in the code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5814#issuecomment-640378607:26,update,update,26,https://root.cern,https://github.com/root-project/root/pull/5814#issuecomment-640378607,1,['update'],['update']
Deployability,Don't install a SIGPIPE handler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/413:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/413,1,['install'],['install']
Deployability,Don't install eve7 files if eve7 is not built,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3436:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/3436,1,['install'],['install']
Deployability,Don't install h2root.1 and g2root.1 man pages when fortran is OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11598:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/11598,1,['install'],['install']
Deployability,Don't install intermediate static lib minicern,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1675:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/1675,1,['install'],['install']
Deployability,Don't install intermediate static libs (mathtext and minicern).; Don't add JupyROOT python extension to cmake exports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1643:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/1643,1,['install'],['install']
Deployability,Don't install roofit files when roofit is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12402:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/12402,1,['install'],['install']
Deployability,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266:19,integrat,integrated,19,https://root.cern,https://github.com/root-project/root/pull/6266,1,['integrat'],['integrated']
Deployability,"Done, but I do not know if something else must be done to make the generated QCH file visible in https://root.cern/releases/release-62406/ or https://root.cern/reference/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1008906450:115,release,releases,115,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1008906450,2,['release'],"['release-', 'releases']"
Deployability,"Done:; * 646e20138a - (6 hours ago) Respect the semantic of MATH_NO_PLUGIN_MANAGER in DefaultMinimizerType — Philippe Canal (HEAD -> v6-12-00-patches, origin/v6-12-00-patches); * bd8476c068 - (18 hours ago) Protect MinimizerOptions::DefaultMinimizerType from multi-threaded calls — Philippe Canal. but too late for 6.12/06",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1611#issuecomment-364557352:142,patch,patches,142,https://root.cern,https://github.com/root-project/root/pull/1611#issuecomment-364557352,2,['patch'],['patches']
Deployability,Don’t spend time on this patch just yet. I have more local changes that I am going to upload soon-ish.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1866208247:25,patch,patch,25,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1866208247,1,['patch'],['patch']
Deployability,Doxygen fixes in integrator classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7746:17,integrat,integrator,17,https://root.cern,https://github.com/root-project/root/pull/7746,1,['integrat'],['integrator']
Deployability,Doxygen fixes in integrator classes; Typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7746:17,integrat,integrator,17,https://root.cern,https://github.com/root-project/root/pull/7746,1,['integrat'],['integrator']
Deployability,DrawClone draws in in the SelectedPad see https://root.cern/doc/master/classTObject.html#a7cd0f76ae1791c469f9472a9d4c8d6f9; It was initially meant to be used interactively to draw an object from a pad to the selected one.; The question is more: Why do we need DrawClone in these examples (a simple Draw should be fine) ? I do not have FITS installed right now. I will need to make a new ROOT install with it to try.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633400581:340,install,installed,340,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633400581,4,['install'],"['install', 'installed']"
Deployability,"Dropbox folders (among others) can contain parentheses.; Without this patch, ROOT and cling misinterpret those directories as arguments.; Instead, first find the end of the "".x"" line.; If the previous token was a closing paren, we assume that the preceding; tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3811:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/pull/3811,1,['patch'],['patch']
Deployability,Due to Oksana's update of gtest. Rebasing gave me the opportunity to add a fix and squash commits. Pushing soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502#issuecomment-623340796:16,update,update,16,https://root.cern,https://github.com/root-project/root/pull/5502#issuecomment-623340796,1,['update'],['update']
Deployability,Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:; ```; -- Looking for python; -- Looking for numpy (python package); -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option; ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:; ```; -- Looking for python; -- Looking for numpy (python package); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):; TMVA: numpy python package not found and tmva-pymva component required; (python executable:; /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python); ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:; ```; ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2972:91,configurat,configuration,91,https://root.cern,https://github.com/root-project/root/pull/2972,3,"['configurat', 'patch']","['configuration', 'patch']"
Deployability,"Due to the default behavior of CMake. https://gitlab.kitware.com/cmake/cmake/issues/17122. when using install(DIRECTORY ... PATTERN), if there are some folders; that don't contain the given PATTERN they are also created as empty; folders. This was causing the problem already addressed in 1d2e76. As suggested in. https://stackoverflow.com/questions/55451084/cmake-files-matching-pattern-copies-empty-directories/55722518#55722518. we apply the workaround consisting in addressing the '*pcm' files with; file(GLOB ...) and then install them with install(FILES ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4751:102,install,install,102,https://root.cern,https://github.com/root-project/root/pull/4751,3,['install'],['install']
Deployability,"During ROOT's build of Core.pcm, byproduct modules are built. rootcling was complaining about some headers not appearing in Core.pcm, despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers are actually in a byproduct. In the same vein, do not forcefully include them in teh pcm, as they are already included in the byproduct which should be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5cf047445a952108763adc66908a17649ba). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12097:1410,update,updated,1410,https://root.cern,https://github.com/root-project/root/pull/12097,1,['update'],['updated']
Deployability,"During ROOT's build of Core.pcm, byproduct modules are built.; rootcling was complaining about some headers not appearing in Core.pcm,; despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers; are actually in a byproduct. In the same vein, do not forcefully include; them in teh pcm, as they are already included in the byproduct which should; be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5c)# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12098:1380,update,updated,1380,https://root.cern,https://github.com/root-project/root/pull/12098,1,['update'],['updated']
Deployability,"During the upgrade to LLVM 18, we enabled JITLink for AArch64 on Linux, because we had to (there were problems with RuntimeDyld that we could not solve). In order to switch x86 as well, we need a solution for `CLING_DEBUG` and `CLING_PROFILE`. It's not clear to me how this works with JITLink, does it have an equivalent interface to `registerJITEventListener`? Maybe @lhames can comment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14209#issuecomment-2342696358:11,upgrade,upgrade,11,https://root.cern,https://github.com/root-project/root/issues/14209#issuecomment-2342696358,2,['upgrade'],['upgrade']
Deployability,"Dx2>,; 			is_constructible<_Dx2, remove_reference_t<_Dx2>>>, int> = 0>; 		unique_ptr(pointer, remove_reference_t<_Dx>&&) = delete;. 	unique_ptr(unique_ptr&& _Right) _NOEXCEPT; 		: _Mybase(_Right.release(),; 			_STD forward<_Dx>(_Right.get_deleter())); 		{	// construct by moving _Right; 		}. 	template<class _Ty2,; 		class _Dx2,; 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,; 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>,; 			conditional_t<is_reference_v<_Dx>, is_same<_Dx2, _Dx>, is_convertible<_Dx2, _Dx>>; 		>, int> = 0>; 		unique_ptr(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT; 			: _Mybase(_Right.release(),; 				_STD forward<_Dx2>(_Right.get_deleter())); 		{	// construct by moving _Right; 		}. #if _HAS_AUTO_PTR_ETC; 	template<class _Ty2,; 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,; 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>; 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT; 			: _Mybase(_Right.release()); 		{	// construct by moving _Right; 		}; #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,; 		class _Dx2,; 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,; 			is_assignable<_Dx&, _Dx2>,; 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>; 		>, int> = 0>; 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT; 		{	// assign by moving _Right; 		reset(_Right.release());; 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());; 		return (*this);; 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT; 		{	// assign by moving _Right; 		if (this != _STD addressof(_Right)); 			{	// different, do the move; 			reset(_Right.release());; 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());; 			}; 		return (*this);; 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT; 		{	// swap elements; 		_Swap_adl(this->_Myptr(), _Right._Myptr());; 		_Swap_adl(this->get_deleter(), _Right.get_deleter());; 		}. 	~unique_ptr() _NOEXCEPT; 		{	// destroy the object; 		if (get() != poin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2910#issuecomment-435381311:3771,release,release,3771,https://root.cern,https://github.com/root-project/root/pull/2910#issuecomment-435381311,1,['release'],['release']
Deployability,"DynamicLibraryManager only looks at LD_LIBRARY_PATH and friends, but for install / prefix; builds that might not point to the ROOT library dir. Make it explicit that the; DynamicLibraryManager is supposed to look at the directory containing ROOT libraries.; Fixes install-with-prefix builds with RPATH, that now do not need a fake LD_LIBRARY_PATH; anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4710:73,install,install,73,https://root.cern,https://github.com/root-project/root/pull/4710,2,['install'],"['install', 'install-with-prefix']"
Deployability,"E.g. ubu16 uses it. I like to attribute who wrote the patch. Learned that from llvm, still like it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3866#issuecomment-496149925:54,patch,patch,54,https://root.cern,https://github.com/root-project/root/pull/3866#issuecomment-496149925,1,['patch'],['patch']
Deployability,ENS_17DeclaratorContextENS_14SourceLocationES2_RS2_RNS_16ParsedAttributesENS_15AccessSpecifierE+0xb6)[0x55e94ba3d5ca]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser24ParseExternalDeclarationERNS_25ParsedAttributesWithRangeEPNS_15ParsingDeclSpecE+0xe31)[0x55e94ba49be9]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser19ParseInnerNamespaceERKN4llvm11SmallVectorINS0_18InnerNamespaceInfoELj4EEEjRNS_14SourceLocationERNS_16ParsedAttributesERNS_24BalancedDelimiterTrackerE+0xb4)[0x55e94b989360]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser14ParseNamespaceENS_17DeclaratorContextERNS_14SourceLocationES2_+0x10a1)[0x55e94b9891bb]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser16ParseDeclarationENS_17DeclaratorContextERNS_14SourceLocationERNS_25ParsedAttributesWithRangeEPS2_+0x294)[0x55e94b961e6e]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser24ParseExternalDeclarationERNS_25ParsedAttributesWithRangeEPNS_15ParsingDeclSpecE+0xb16)[0x55e94ba498ce]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser17ParseTopLevelDeclERNS_9OpaquePtrINS_12DeclGroupRefEEEb+0x5e4)[0x55e94ba48d72]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x5c5)[0x55e9490ce6a9]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18CompilationOptionsE+0x5e)[0x55e9490ce068]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZNK5cling11Interpreter15DeclareInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_18CompilationOptionsEPPNS_11TransactionE+0xcf)[0x55e9490e42ab]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192249515:9129,rolling,rolling-,9129,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192249515,1,['rolling'],['rolling-']
Deployability,"ERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:4529,Install,Install,4529,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Install'],['Install']
Deployability,ESC also works to toggle to dark mode.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13204#issuecomment-1625488907:18,toggle,toggle,18,https://root.cern,https://github.com/root-project/root/pull/13204#issuecomment-1625488907,1,['toggle'],['toggle']
Deployability,ESS_DEPRECATED_MESSAGES=1; TMVA COMPILE_FLAGS = -DTBB_SUPPRESS_DEPRECATED_MESSAGES=1; TMVA CUDA_STANDARD = 14; TMVA CXX_EXTENSIONS = FALSE; TMVA CXX_STANDARD = 17; TMVA CXX_STANDARD_REQUIRED = TRUE; TMVA DEFINE_SYMBOL = ; TMVA IMPORTED = FALSE; TMVA IMPORTED_GLOBAL = FALSE; TMVA IMPORT_PREFIX = lib; TMVA INCLUDE_DIRECTORIES = $<BUILD_INTERFACE:/build/lcgsoft/root/tmva/tmva/inc>;/build/lcgsoft/root/core/unix/inc;/build/lcgsoft/root/core/base/v7/inc;/build/lcgsoft/root/core/clingutils/inc;/build/lcgsoft/root/core/textinput/inc;/build/lcgsoft/root/core/thread/inc;/build/lcgsoft/root/core/zip/inc;/build/lcgsoft/root/core/rint/inc;/build/lcgsoft/root/core/clib/inc;/build/lcgsoft/root/core/meta/inc;/build/lcgsoft/root/core/gui/inc;/build/lcgsoft/root/core/cont/inc;/build/lcgsoft/root/core/foundation/inc;/build/lcgsoft/root/core/base/inc;/build/lcgsoft/build/projects/ROOT-fix_cuda14/src/ROOT-fix_cuda14-build/ginclude;/build/lcgsoft/releases/dev4cuda/Vc/1.4.1/x86_64-centos7-gcc8-opt/include;/build/lcgsoft/releases/dev4cuda/Vc/1.4.1/x86_64-centos7-gcc8-opt/include;/build/lcgsoft/root/tmva/tmva/inc;/build/lcgsoft/releases/dev4cuda/Vc/1.4.1/x86_64-centos7-gcc8-opt/include;/build/lcgsoft/root/tree/treeplayer/inc;/build/lcgsoft/root/core/unix/inc;/build/lcgsoft/root/core/base/v7/inc;/build/lcgsoft/root/core/clingutils/inc;/build/lcgsoft/root/core/textinput/inc;/build/lcgsoft/root/core/thread/inc;/build/lcgsoft/root/core/zip/inc;/build/lcgsoft/root/core/rint/inc;/build/lcgsoft/root/core/clib/inc;/build/lcgsoft/root/core/meta/inc;/build/lcgsoft/root/core/gui/inc;/build/lcgsoft/root/core/cont/inc;/build/lcgsoft/root/core/foundation/inc;/build/lcgsoft/root/core/base/inc;/build/lcgsoft/build/projects/ROOT-fix_cuda14/src/ROOT-fix_cuda14-build/ginclude;/build/lcgsoft/releases/dev4cuda/Vc/1.4.1/x86_64-centos7-gcc8-opt/include;/build/lcgsoft/root/hist/hist/inc;/build/lcgsoft/root/math/mathcore/v7/inc;/build/lcgsoft/root/math/mathcore/inc;/build/lcgsoft/root/core/imt/inc;/build/lcgsoft/re,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5598#issuecomment-627404942:1577,release,releases,1577,https://root.cern,https://github.com/root-project/root/pull/5598#issuecomment-627404942,1,['release'],['releases']
Deployability,"E_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix not found, switching ON 'builtin_davix' option.; -- Looking for clock_gettime; -- Looking for clock_gettime - found; -- Looking for TBB; -- Found TBB: /usr (found suitable version ""2018.0"", minimum required is ""2018""); -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib64/libopenblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disabled; -- libclc project is disabled; -- libcxx project is disabled; -- libcxxabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-libs project is disabled; -- polly project is disabled; -- pstl project is disabled; -- flang project is disabled; -- Looking for backtrace; -- Looking for backtrace - found; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:7649,install,installation,7649,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['install'],['installation']
Deployability,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h; Segmentation fault; ```; I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer; ``` bash; # Install mold and have it available in PATH, for example in /usr/bin; export LDFLAGS=""-fuse-ld=mold""; # from the root source; mkdir builddir; cd builddir; cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja; ninja; ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473:2347,Install,Install,2347,https://root.cern,https://github.com/root-project/root/issues/15473,2,['Install'],"['Install', 'Installation']"
Deployability,"Each module has a set of identifier tables which aid lookup. Based on this information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same identifier lookup tables across multiple modules. Since lookup is a heavily used operation in compilers clang tries to optimize it as much as possible. In case it sees more than 4 such lookup tables it merges them together into a single table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not be called often;. In the interpreter context where we make all module available the merging of such tables becomes CPU intense operation at runtime which produces a lot of temporary reallocations. Moreover, we have seen a lot of profiles where the merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4761:1015,patch,patch,1015,https://root.cern,https://github.com/root-project/root/pull/4761,1,['patch'],['patch']
Deployability,"Each module has a set of identifier tables which aid lookup. Based on this; information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same; identifier lookup tables across multiple modules. Since lookup is a heavily used; operation in compilers clang tries to optimize it as much as possible. In case; it sees more than 4 such lookup tables it merges them together into a single; table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not; be called often;. In the interpreter context where we make all module available the merging of; such tables becomes CPU intense operation at runtime which produces a lot of; temporary reallocations. Moreover, we have seen a lot of profiles where the; merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran; locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4774:1024,patch,patch,1024,https://root.cern,https://github.com/root-project/root/pull/4774,1,['patch'],['patch']
Deployability,Editors like VIM creates temporary files (.*.swp) that were added into the list of files to be moved or installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/528:104,install,installed,104,https://root.cern,https://github.com/root-project/root/pull/528,1,['install'],['installed']
Deployability,"Effectively do what the old comments already say should be done. Remove the indirection to TFormula in TActivationFunction and call C++ code directly. This makes the constructors and destructors trivial (might even default them,; no opinion from my side, happy to update if you have a preference). Also update the comments, where they seem just copy&paste from other files along with the skeleton. PS: I thought I had already discussed (part of?) this at some point in the past but really don't recall. And I guess in a moment from now I will see what clang-format thinks about the change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2520:264,update,update,264,https://root.cern,https://github.com/root-project/root/pull/2520,2,['update'],['update']
Deployability,Either something is wrong or we have everywhere pandas installed :thinking:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397#issuecomment-616948207:55,install,installed,55,https://root.cern,https://github.com/root-project/root/pull/5397#issuecomment-616948207,1,['install'],['installed']
Deployability,"Enable ROOT's builtin_llvm=Off. This patch allows ROOT to be built against compatible external llvm (5.0 or 5.0.1). Note that we still need to build clang (eg. we require builtin_clang=On) due to the ROOT-specific patches which are not yet upstream. Since we have externally installed llvm, we configure and build clang as a standalone project. The configuration relies on finding llvm-config-5.0 and uses an adapted version of the standard clang standalone build procedure. Clang provides dependencies such as FileCheck and not which are used by cling's testsuite and are not being installed with the standard llvm package. Cling (which depends on llvm and clang) is built as a clang tool to avoid unresolved dependencies to clang and complicating further the already complicated cmake setup.; ; This patch intends a minimal change and follows the initial (suboptimal) design to configure and build llvm, clang and cling as part of ROOT. An ultimate solution would be to have llvm, clang and cling built as separate standalone projects (following the recommended way by the LLVM cmake developers). This should reduce the compile times by approx 20% (if we have llvm-5.0-dev installed) and make cross compilation of ROOT a little easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632:37,patch,patch,37,https://root.cern,https://github.com/root-project/root/pull/1632,7,"['configurat', 'install', 'patch']","['configuration', 'installed', 'patch', 'patches']"
Deployability,Ev+0x88)[0x55e9492a3eac]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x17fabfe)[0x55e9492a5bfe]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN9textinput18TerminalConfigUnix12HandleSignalEi+0x76)[0x55e9492f41a8]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(+0x1848ed8)[0x55e9492f3ed8]; > /usr/lib/libc.so.6(+0x3e8e0)[0x7f264623e8e0]; > /usr/lib/libc.so.6(+0x8e36c)[0x7f264628e36c]; > /usr/lib/libc.so.6(raise+0x18)[0x7f264623e838]; > /usr/lib/libc.so.6(abort+0xcf)[0x7f2646228535]; > /usr/lib/libc.so.6(+0x2845c)[0x7f264622845c]; > /usr/lib/libc.so.6(+0x37366)[0x7f2646237366]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling11Transaction11forceAppendENS0_13DelayCallInfoE+0x14f)[0x55e9491826bb]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling11Transaction6appendENS0_13DelayCallInfoE+0xaa)[0x55e949182568]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5cling13DeclCollector18HandleTopLevelDeclEN5clang12DeclGroupRefE+0xc4)[0x55e948f99f2e]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang17MultiplexConsumer18HandleTopLevelDeclENS_12DeclGroupRefE+0x89)[0x55e94b42f5bf]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang4Sema23InstantiateClassMembersENS_14SourceLocationEPNS_13CXXRecordDeclERKNS_30MultiLevelTemplateArgumentListENS_26TemplateSpecializationKindE+0x2dc)[0x55e94c7a0f84]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang4Sema45InstantiateClassTemplateSpecializationMembersENS_14SourceLocationEPNS_31ClassTemplateSpecializationDeclENS_26TemplateSpecializationKindE+0x67)[0x55e94c7a190d]; > ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang4Sema26ActOnExplicitInstantiationEPNS_5ScopeENS_14SourceLocationES3_jS3_RKNS_12CXXScopeSpecENS_9OpaquePtrINS_12Temp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192249515:6038,rolling,rolling-,6038,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192249515,1,['rolling'],['rolling-']
Deployability,Eve-7 Backport of #9643 to v6-26 patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9679:33,patch,patches,33,https://root.cern,https://github.com/root-project/root/pull/9679,1,['patch'],['patches']
Deployability,Eve-7: Major update for FireworksWeb and for standalone JS renderer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4617:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/4617,1,['update'],['update']
Deployability,Eve-7: add updates in v6-20 ReleaseNotes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4849:11,update,updates,11,https://root.cern,https://github.com/root-project/root/pull/4849,2,"['Release', 'update']","['ReleaseNotes', 'updates']"
Deployability,"Even after https://github.com/root-project/root/pull/11331 reading from xrootd with RDF and many threads has some remaining lock contention. A few problematic spots are (in v6-26-00-patches). ```; #10 ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>::WriteLock (this=0x563dbbbec828) at /home/b/bendavid/rootdev25/root/core/thread/src/TReentrantRWLock.cxx:190; #11 0x00007f0a34260f7a in ROOT::TVirtualRWMutex::Lock (this=<optimized out>) at /home/b/bendavid/rootdev25/root/core/base/inc/TVirtualRWMutex.h:79; #12 0x00007f0a34937e62 in TLockGuard::TLockGuard (mutex=0x563dbbbec820, this=0x7f0822ff9b30) at /home/b/bendavid/rootdev25/root/core/base/inc/TVirtualMutex.h:80; #13 TClass::LoadClass (requestedname=0x563dc5dcf309 ""TNetXNGFile"", silent=silent@entry=false) at /home/b/bendavid/rootdev25/root/core/meta/src/TClass.cxx:5740; #14 0x00007f0a3488a1f7 in TPluginHandler::LoadPlugin (this=this@entry=0x563dc5dcf2c0) at /home/b/bendavid/rootdev25/root/core/base/src/TPluginManager.cxx:261; #15 0x00007f0a342e14d3 in TFile::Open (url=<optimized out>, options=options@entry=0x7f0a1a224b68 ""READ_WITHOUT_GLOBALREGISTRATION"", ftitle=<optimized out>, ftitle@entry=0x7f0a1a226b82 """", compress=<optimized out>, compress@entry=101, netopt=<optimized out>, netopt@entry=0) at /home/b/bendavid/rootdev25/root/io/io/src/TFile.cxx:4164; #16 0x00007f0a1a1b56fb in TChain::LoadTree (this=0x7f055c0090d0, entry=0) at /home/b/bendavid/rootdev25/root/tree/tree/src/TChain.cxx:1499; ```. and. ```; #11 0x00007f0a342e49c8 in ROOT::TVirtualRWMutex::Lock (this=0x563dbbbec820) at /home/b/bendavid/rootdev25/root/core/base/inc/TVirtualRWMutex.h:79; #12 TLockGuard::TLockGuard (mutex=0x563dbbbec820, this=0x7f09113f2b28) at /home/b/bendavid/rootdev25/root/core/base/inc/TVirtualMutex.h:80; #13 TPluginHandler::ExecPluginImpl<char const*, char const*, char const*, int, int> (this=this@entry=0x563dc5dcf2c0) at /home/b/bendavid/rootdev25/root/core/base/inc/TPluginManager.h:156; #14 0x00007f0a342e109b in TPlu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7710#issuecomment-1286316399:182,patch,patches,182,https://root.cern,https://github.com/root-project/root/issues/7710#issuecomment-1286316399,1,['patch'],['patches']
Deployability,"Even if the test collection comment is conveying it, it's important to make those platforms fail that have failing tests, for visibility reasons. This fixes https://github.com/root-project/root/issues/12307. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12812:303,update,updated,303,https://root.cern,https://github.com/root-project/root/pull/12812,1,['update'],['updated']
Deployability,"Even though it's build and can be found in the build directory, it's not installed anymore. xrdcp is the default way to download files through the CLI, so I'd vote for having it back as part of the ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7441:73,install,installed,73,https://root.cern,https://github.com/root-project/root/issues/7441,2,['install'],"['installation', 'installed']"
Deployability,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8580:1412,update,updated,1412,https://root.cern,https://github.com/root-project/root/pull/8580,3,"['patch', 'release', 'update']","['patch', 'release', 'updated']"
Deployability,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8579:1494,patch,patch,1494,https://root.cern,https://github.com/root-project/root/pull/8579,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Every platform will fail for the following reasons:. * On linux, because the images at https://github.com/root-project/root-ci-images only pick up the requirements.txt file from master, and are rebuilt nightly. The changes in this PR are not picked up by the linux images, but they are seen by the `dependency_versions.py` unit test which checks for all the packages present in the `requirements.txt`; * On other platforms, also because this addition will not trigger an actual installation of the package. The issue here is that if we merge this as-is, our nightlies will go red until every non-linux node gets this package installed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15183#issuecomment-2045613731:478,install,installation,478,https://root.cern,https://github.com/root-project/root/pull/15183#issuecomment-2045613731,2,['install'],"['installation', 'installed']"
Deployability,"Every time when sub-directory items are requested, set it as `gDirectory`; This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10164:173,update,update,173,https://root.cern,https://github.com/root-project/root/pull/10164,1,['update'],['update']
Deployability,"Exactry as it is recommended in build; instructions in https://root.cern/install/(for build; from source)!; Thanks; On 2020-10-15 16:37, Oksana Shadura wrote:; > @kurbatov-lang [1] What are a CMake flags you used for building ROOT?; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [2], or unsubscribe; > [3].; > ; > Links:; > ------; > [1] https://github.com/kurbatov-lang; > [2] ; > https://github.com/root-project/root/issues/6645#issuecomment-709329905; > [3] ; > https://github.com/notifications/unsubscribe-auth/AQQ2QXNGHFL332PDVZRNIPTSK33IDANCNFSM4SRTOZQQ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6645#issuecomment-709879288:73,install,install,73,https://root.cern,https://github.com/root-project/root/issues/6645#issuecomment-709879288,1,['install'],['install']
Deployability,Example failure:. 562/1224 Test #541: tutorial-gl-gltf3 ...................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.36 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/gl/gltf3.C...; Error in <TList::Delete>: A list is accessing an object (0x7fffd1c959a0) already deleted (list name = Functions); Error in <TList::Delete>: A list is accessing an object (0x7fffd1c95750) already deleted (list name = Functions). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10310:582,update,updated,582,https://root.cern,https://github.com/root-project/root/pull/10310,1,['update'],['updated']
Deployability,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803#issuecomment-1960963795:206,Release,Release,206,https://root.cern,https://github.com/root-project/root/pull/14803#issuecomment-1960963795,1,['Release'],['Release']
Deployability,"Example with TH1F, for reproducibility, but happens for any class accessed via ROOT. >>> class MyClass(ROOT.TH1F):; ... ""My Class""; ... ; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; KeyError: 'UpdateBinContent'. The variable with the KeyError is always the variable last in the list of private data members. ; This error appears on lxplus, CentOS Linux 7 (Core), gcc version 7.3.0, CXXFLAGS=-fPIC -g -O2 -std=c++17. This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856:222,Update,UpdateBinContent,222,https://root.cern,https://github.com/root-project/root/issues/6856,1,['Update'],['UpdateBinContent']
Deployability,"Example:; ```; #include <TROOT.h>; int main(int argc, char** argv) {; gROOT->GetInterpreter();; return 0;; }; ```; with the following command (using a system-installation of apache-arrow width gandiva):; ```; c++ -o test -O0 -ggdb `root-config --libs` -I`root-config --incdir` -std=c++17 test.cpp /usr/lib64/libgandiva.so.14.1.0 && ./test; ```; will show the `...please hide them or dlopen() them after the call to TROOT::InitInterpreter()` error. The problem with the opencl runtime is analogous.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561834413:158,install,installation,158,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561834413,1,['install'],['installation']
Deployability,"Excellent fix!!. To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:; ```; diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h; index 129ad1b078..0e44c803ed 100644; --- a/core/base/inc/TPluginManager.h; +++ b/core/base/inc/TPluginManager.h; @@ -169,6 +169,8 @@ private:; auto name = typeid(std::tuple<T...>).name();; if (!fArgTupleTypeInfo[nargs - 1].empty()); return name == fArgTupleTypeInfo[nargs - 1];; +; + R__LOCKGUARD(gInterpreterMutex);; if (!CheckExactMatch<T...>(0, params...)); return false;; fArgTupleTypeInfo[nargs - 1] = name;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14417#issuecomment-1908338202:135,patch,patch,135,https://root.cern,https://github.com/root-project/root/pull/14417#issuecomment-1908338202,1,['patch'],['patch']
Deployability,"Excellent reason. It's also likely only needed in very specific situations, i.e. usability is not really a concern here. I'll do a review the patch; looked good on a first quick glimpse!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/130#issuecomment-170829394:142,patch,patch,142,https://root.cern,https://github.com/root-project/root/pull/130#issuecomment-170829394,1,['patch'],['patch']
Deployability,"Excellent! You could use the `ROOT-patches` branch instead of `ROOT-patches-rrelease_90`; that should work better. That said, after the upcoming LLVM upgrade for cling we'll rework all of that anyway, going mono-repo, moving the repos to github, who knows what else :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1022969657:35,patch,patches,35,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022969657,3,"['patch', 'upgrade']","['patches', 'patches-', 'upgrade']"
Deployability,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13546:481,update,updated,481,https://root.cern,https://github.com/root-project/root/pull/13546,1,['update'],['updated']
Deployability,Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:; ```; if DT_FLAGS_1 dynamic section entry is present; if DF_1_PIE is set in DT_FLAGS_1:; print pie executable; else; print shared object; ```; ; See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9404:605,Patch,Patch,605,https://root.cern,https://github.com/root-project/root/pull/9404,1,['Patch'],['Patch']
Deployability,"Execute on what was announced in the 6.34 release notes and indicated by deprecation macros and doxygen tags. As ROOT 6.36 will be the next release after ROOT 6.34 and the current `master` branch is leading up to that next release, the code should be removed now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16821:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/16821,6,['release'],['release']
Deployability,Explicitly specify that integers in the RNTuple anchor are encoded in big-endian. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15700:133,update,updated,133,https://root.cern,https://github.com/root-project/root/pull/15700,1,['update'],['updated']
Deployability,"Export in ROOTConfig.cmake the list of all options, too. This patch is a prerequisite to fix ROOT-9405.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2122:62,patch,patch,62,https://root.cern,https://github.com/root-project/root/pull/2122,1,['patch'],['patch']
Deployability,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090:473,update,update,473,https://root.cern,https://github.com/root-project/root/pull/8090,2,"['patch', 'update']","['patches', 'update']"
Deployability,Externals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdProofd.so-rwxr-xr-x> 1 cvmfs cvmfs 83216 Sep 10 03:21 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdPss-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdPss-4.so-rwxr-xr-x> 1 cvmfs cvmfs 70544 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSec-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSec-4.so-rwxr-xr-x> 1 cvmfs cvmfs 220600 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSecgsi-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSecgsi-4.so-rwxr-xr-x> 1 cvmfs cvmfs 19480 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSecgsiAUTHZVO-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSecgsiAUTHZVO-4.so-rwxr-xr-x> 1 cvmfs cvmfs 23808 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSecgsiGMAPDN-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSecgsiGMAPDN-4.so-rwxr-xr-x> 1 cvmfs cvmfs 53384 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdSeckrb5-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744315185:10897,Install,InstallArea,10897,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744315185,1,['Install'],['InstallArea']
Deployability,Extra patches used by ALICE - v620 backport.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5407:6,patch,patches,6,https://root.cern,https://github.com/root-project/root/pull/5407,1,['patch'],['patches']
Deployability,"F -Dqt5web:BOOL=OFF -Dqt6web:BOOL=OFF -Dr:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=ON -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=ON -Dsqlite:BOOL=OFF -Dssl:BOOL=ON -Dtcmalloc:BOOL=OFF -Dtmva-cpu:BOOL=ON -Dtmva-gpu:BOOL=OFF -Dtmva-pymva:BOOL=ON -Dtmva-rmva:BOOL=OFF -Dtmva:BOOL=ON -During:BOOL=OFF -Dunuran:BOOL=OFF -Dvc:BOOL=OFF -Dvdt:BOOL=OFF -Dveccore:BOOL=OFF -Dvecgeom:BOOL=OFF -Dvmc:BOOL=OFF -Dwebgui:BOOL=ON -Dx11:BOOL=ON -Dxml:BOOL=ON -Dxproofd:BOOL=OFF -Dxrootd:BOOL=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_STANDARD=17 -DCMAKE_C_COMPILER=clang -DCMAKE_C_STANDARD=11 -DCMAKE_Fortran_COMPILER=gfortran -DCMAKE_Fortran_FLAGS=-std=legacy -DCLANG_DEFAULT_CXX_STDLIB=libc++ -DLLVM_ENABLE_LIBCXX:BOOL=ON -Dlibcxx:BOOL=ON /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99; ```; Notes:; * Source built is 66df8b8ee6b336197678950c4f9c83f2c479662a, attached patches recommended:; * [fermi_root_6_27_99.patch](https://github.com/root-project/root/files/10393538/fermi_root_6_27_99.patch); * [fermi_root_6.patch](https://github.com/root-project/root/files/10393540/fermi_root_6.patch); * [rootcling-verbose.patch](https://github.com/root-project/root/files/10393542/rootcling-verbose.patch); * Platform is SLF7/x64_64 with externally-built Clang14.; * ROOT is built (see CMake command line above) with libc++ and C++17.; * You'll need to tweak paths, boolean options, and `buildtin_X` for your environment as necessary. ; * Clang 14 was bootstrapped: initially built with GCC 12.2 and then itself, with lib and runtime settings (`libc++`/`compiler-rt`/`cxxabi`) set so that the resulting compiler and libraries have _no_ dependence on the original compiler/library/runtime used to build it. Also, the resulting compiler uses `libc++`/`compiler-rt`/`cxxabi` by default. This _shouldn't_ matter, and I wouldn't try to duplicate this without first trying a vanilla Clang14 build, but I include this information JiC.; * My first attempt to reproduce would be by stripping down all not-obviously-req",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1378895796:3410,patch,patch,3410,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1378895796,1,['patch'],['patch']
Deployability,"F. > There is also a; > ; > ```; > Warning in <TStreamerInfo::BuildCheck>: ; > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root; > has the same version (=1) as the active class but a different checksum.; > You should update the version to ClassDef(RooExponential,2).; > Do not try to write objects with the current class definition,; > the files will not be readable.; > ```; > ; > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5530#issuecomment-623555937:246,update,update,246,https://root.cern,https://github.com/root-project/root/pull/5530#issuecomment-623555937,1,['update'],['update']
Deployability,"F1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError: could not convert argument 2 (expected string or Unicode object, function found); TF1::TF1(const char* name, ROOT::Math::ParamFunctorTempl<double> f, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; Failed to instantiate ""TF1(std::string,function,int,double)""; ``` . <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. dev3ptython2 LCG slot (ROOT v6.25/01) ; 2. lxplus.cern.ch ; 3. ; ```; ( source /cvmfs/sft.cern.ch/lcg/views/LCG_100/${CMTCONFIG}/setup.sh ; python test.py ); ```. ### Additional context; <!--; Add any other context about the problem here.; -->. It worked for all previous versions of ROOT in all released LCG slots; and it works also for dev3 and decv3python39 LCG slots",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152:3204,install,install,3204,https://root.cern,https://github.com/root-project/root/issues/8152,2,"['install', 'release']","['install', 'released']"
Deployability,"FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95946, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95950, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14296:2584,install,install,2584,https://root.cern,https://github.com/root-project/root/issues/14296,1,['install'],['install']
Deployability,"FWIW Axel's PR https://github.com/root-project/root/pull/12833 has this change plus another patch, and still claims not to be complete. As I expressed in https://github.com/root-project/root/pull/12833#issuecomment-1551636684, I think the best solution is to just re-download all three patches...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12882#issuecomment-1562395514:92,patch,patch,92,https://root.cern,https://github.com/root-project/root/pull/12882#issuecomment-1562395514,2,['patch'],"['patch', 'patches']"
Deployability,"FWIW it's really only the `Long64_t` converter:; ```diff; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx; index 1083c92452..6ba86a5d24 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx; @@ -3470,6 +3470,7 @@ public:; gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];; gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];; gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];; + gf[""Long64_t""] = gf[""long long""];. // factories for special cases; gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };; ```; ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15872#issuecomment-2173696092:69,a/b,a/bindings,69,https://root.cern,https://github.com/root-project/root/issues/15872#issuecomment-2173696092,2,['a/b'],['a/bindings']
Deployability,FWIW the plan is to backport this to `v6-32-00-patches` because it finishes the RNTuple merging feature added in this cycle.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15111#issuecomment-2042188483:47,patch,patches,47,https://root.cern,https://github.com/root-project/root/pull/15111#issuecomment-2042188483,1,['patch'],['patches']
Deployability,"FWIW the plan is to backport this to `v6-32-00-patches` because it seems to provide a significant speedup for RNTuple merging, which is a new feature added in this cycle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15154#issuecomment-2042189691:47,patch,patches,47,https://root.cern,https://github.com/root-project/root/pull/15154#issuecomment-2042189691,1,['patch'],['patches']
Deployability,FWIW the upstream commit is https://github.com/llvm/llvm-project/commit/ff1681ddb303223973653f7f5f3f3435b48a1983 - can we backport that instead of rolling our own change?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12086#issuecomment-1399954020:147,rolling,rolling,147,https://root.cern,https://github.com/root-project/root/pull/12086#issuecomment-1399954020,1,['rolling'],['rolling']
Deployability,"FYI (to be seen after the llvm upgrade), via `-opt-bisect-limit=` I have tracked this down to an issue in the optimization pass ""X86 DAG->DAG Instruction Selection"" during codegen for the assignment statement:; ```c++; root [1] z = 1; ```. Specifically, the instructions emitted for the `-O0` version that works are; ```; renamable $xmm0 = MOVSDrm_alt $noreg, 1, $noreg, %const.0, $noreg; MOVSDmr $noreg, 1, $noreg, @""?z@__cling_N50@@3NA"", $noreg, renamable $xmm0 :: (store 8 into @""?z@__cling_N50@@3NA""); ```; while the following version (`-O1`), for some reason, does not (?); ```; MOV32mi $noreg, 1, $noreg, @""?z@__cling_N50@@3NA"" + 4, $noreg, 1072693248 :: (store 4 into @""?z@__cling_N50@@3NA"" + 4); MOV32mi $noreg, 1, $noreg, @""?z@__cling_N50@@3NA"", $noreg, 0 :: (store 4 into @""?z@__cling_N50@@3NA"", align 8); ```. Maybe this is also of interest to @vgvassilev, @hahnjo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9809#issuecomment-1047760926:31,upgrade,upgrade,31,https://root.cern,https://github.com/root-project/root/issues/9809#issuecomment-1047760926,1,['upgrade'],['upgrade']
Deployability,FYI @guitargeek @egpbos this seems to break the default configuration because `minuit2` is off by default...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-881538431:56,configurat,configuration,56,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-881538431,1,['configurat'],['configuration']
Deployability,FYI the clad update also introduces an unused parameter warning due to https://github.com/root-project/root/blob/baf092324e6e2a9301daff36a780cd064b232c2d/hist/hist/src/TFormula.cxx#L3161 . I don't know if you want to include the fix in this PR or I will just open a separate one,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15502#issuecomment-2123034061:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/15502#issuecomment-2123034061,1,['update'],['update']
Deployability,"FYI, I will merge this *right* after the tag of 6.16/00 tomorrow. I really do not want to take *any* risk - we're two months late with that tag! This will thus be part of 6.16/02, which will likely (given past experience...) be released in February.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3247#issuecomment-455907869:228,release,released,228,https://root.cern,https://github.com/root-project/root/pull/3247#issuecomment-455907869,1,['release'],['released']
Deployability,"FYI, after setting the build type to `Release` and rerunning, only these still fail:; ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed); ```; and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436#issuecomment-993356711:38,Release,Release,38,https://root.cern,https://github.com/root-project/root/issues/9436#issuecomment-993356711,1,['Release'],['Release']
Deployability,"FYI, from the release notes of the last VS update (v17.6.5):; > Fixed an issue where switches over unsigned 64-bit integers could cause a crash on x86 and ARM targets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13071#issuecomment-1632121180:14,release,release,14,https://root.cern,https://github.com/root-project/root/pull/13071#issuecomment-1632121180,2,"['release', 'update']","['release', 'update']"
Deployability,FYI: Added in Milestone 6.28. since this is the default behaviour in the RDatasetSpec when having a chain with different tree names. I should solve it if noone comes before the release of 6.28.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10928#issuecomment-1219118943:177,release,release,177,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1219118943,1,['release'],['release']
Deployability,"FYI: You might want to check `-Bsymbolic-non-weak-functions` in the future as well. It keeps the weird ELF interposition behavior for weak symbols, which can be vital for things like emulated TLS (see last comment in the review). Initial support comes with the current LLD 13 release: https://reviews.llvm.org/D102570#2915489",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-893613860:276,release,release,276,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-893613860,1,['release'],['release']
Deployability,"Factor out the URL - it's unconventional to have two URLs, and it's reasonable to just update the version number as part of the URL. Remove patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12726:87,update,update,87,https://root.cern,https://github.com/root-project/root/pull/12726,2,"['patch', 'update']","['patches', 'update']"
Deployability,"Failing because of TDataFrame tests, otherwise seems fine. Also Jenkins doesn't correctly update the link to the build status it seems...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1091#issuecomment-333785351:90,update,update,90,https://root.cern,https://github.com/root-project/root/pull/1091#issuecomment-333785351,1,['update'],['update']
Deployability,Failing test because `TLego` typefed removed from public includes. ; roottest will be updated soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4952#issuecomment-583358159:86,update,updated,86,https://root.cern,https://github.com/root-project/root/pull/4952#issuecomment-583358159,1,['update'],['updated']
Deployability,Failing test due to change in `TGFileBrowser` - I will update test once PR is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4887#issuecomment-579789734:55,update,update,55,https://root.cern,https://github.com/root-project/root/pull/4887#issuecomment-579789734,1,['update'],['update']
Deployability,"Failing test on ubuntu20 (1697:roottest-python-numba-numba) is unrelated to this PR. The mac14 run already fails on configuration (some LibXml2 path failure). I don't see how this could be caused by this PR, but it's strange that this failure doesn't seem to be present in other PRs...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202#issuecomment-2094753735:116,configurat,configuration,116,https://root.cern,https://github.com/root-project/root/pull/12202#issuecomment-2094753735,1,['configurat'],['configuration']
Deployability,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3795#issuecomment-491685041:34,patch,patch,34,https://root.cern,https://github.com/root-project/root/pull/3795#issuecomment-491685041,1,['patch'],['patch']
Deployability,Failure in filemerger is likely due to the time delay between the PR being merged and the corresponding update in roottest. @phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-479582250:104,update,update,104,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-479582250,1,['update'],['update']
Deployability,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15880#issuecomment-2259274063:78,patch,patch,78,https://root.cern,https://github.com/root-project/root/pull/15880#issuecomment-2259274063,2,"['patch', 'release']","['patch', 'release']"
Deployability,Fair enough. #15006 was updated to add in the rootrc:; ```; # Force the producing of files forward compatible with (unpatched) version; # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and; # kNotDeleted; Older releases were not explicitly setting those bits to the; # correct value but instead used verbatim the value stored in the file.; # TFile.v630forwardCompatibility: no; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793#issuecomment-2010635277:24,update,updated,24,https://root.cern,https://github.com/root-project/root/issues/14793#issuecomment-2010635277,2,"['release', 'update']","['releases', 'updated']"
Deployability,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14321#issuecomment-1894205339:59,install,install,59,https://root.cern,https://github.com/root-project/root/pull/14321#issuecomment-1894205339,1,['install'],['install']
Deployability,"Fatal error after running ""make install"" when built against LLVM 9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:32,install,install,32,https://root.cern,https://github.com/root-project/root/issues/7055,1,['install'],['install']
Deployability,"Fedora 37 reached end-of-life on 2023-12-05:; https://en.wikipedia.org/wiki/Fedora_Linux; See the section ""Releases"". We should therefore consider removing it from the CI. This commit is made now because the outdated xrootd version in the Fedora 37 repos is a problem from migrating to the XRootDConfig.cmake file shipped by XRootD itself (see #14180).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14305:107,Release,Releases,107,https://root.cern,https://github.com/root-project/root/pull/14305,1,['Release'],['Releases']
Deployability,Feel free to try this patch: https://github.com/root-project/root/pull/14913,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14910#issuecomment-1984200137:22,patch,patch,22,https://root.cern,https://github.com/root-project/root/issues/14910#issuecomment-1984200137,1,['patch'],['patch']
Deployability,"Few more details - all implementation build around `TCanvas::IsDrawn()` functionality.; This flag set every time `c.Draw()` called, but then checked and reset in jupyter via `CaptureDrawnPrimitives` function. Same logic could be implemented for `TCanvas::Update()`.; But next problem - so called `NotebookDrawer` is temporary object in Jupyter . One need to store update handle for each drawn canvas and reuse it if `c.Update()` is called. Theoretically this could be implemented, but needs some extension in C++ interface. ; @vepadulano Do we want this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13631#issuecomment-1714144864:255,Update,Update,255,https://root.cern,https://github.com/root-project/root/issues/13631#issuecomment-1714144864,3,"['Update', 'update']","['Update', 'update']"
Deployability,"FileExtension> > > const&, bool, cling::Interpreter const*) () from /home/geonwoo/root/lib/libCling.so; #16 0x00007fd7ce21b224 in TCling::TCling(char const*, char const*, char const* const*) () from /home/geonwoo/root/lib/libCling.so; #17 0x00007fd7ce21ceea in CreateInterpreter () from /home/geonwoo/root/lib/libCling.so; #18 0x00007fd7d1edeb13 in TROOT::InitInterpreter() () from /home/geonwoo/root/lib/libCore.so.6.22; #19 0x00007fd7d1edf00f in ROOT::Internal::GetROOT2() () from /home/geonwoo/root/lib/libCore.so.6.22; #20 0x00007fd7d1eebdcd in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/geonwoo/root/lib/libCore.so.6.22; #21 0x00007fd7d2263f0f in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/geonwoo/root/lib/libRint.so.6.22; #22 0x0000561a6211b174 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; i installed root from homepage, ; ```; $ wget https://root.cern/download/root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ tar -xzvf root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ source root/bin/thisroot.sh # also available: thisroot.{csh,fish,bat}; ```; i finished these steps and finally i had tried to excute root by $root and then this error message had poped up . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1.latest version 2. oracle VM VirtualBox in window 10 3.i don't know i just followed steps from cern homepage. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:9541,install,installed,9541,https://root.cern,https://github.com/root-project/root/issues/6859,2,['install'],"['install', 'installed']"
Deployability,Final update to use LZ4 as a default for ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1749:6,update,update,6,https://root.cern,https://github.com/root-project/root/pull/1749,1,['update'],['update']
Deployability,"Finally the changes in this PR are tested. The `macOS 13` node had XGBoost installed:; ```; Test #1399: tutorial-tmva-tmva101_Training-py ............................ Passed 22.84 sec; Test #1400: tutorial-tmva-tmva102_Testing-py ............................. Passed 4.02 sec; Test #1083: tutorial-tmva-tmva103_Application ............................ Passed 9.33 sec; Test #390: pyunittests-rbdt-xgboost ..................................... Passed 4.93 sec; ```; The `pyunittests-rbdt-xgboost` that had to be disabled before is passing as well. The tutorials were passing before this PR already, because the BDT scores were only plotted and printed, not validated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2046284808:75,install,installed,75,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2046284808,1,['install'],['installed']
Deployability,First Patch AutoEnoders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/686:6,Patch,Patch,6,https://root.cern,https://github.com/root-project/root/pull/686,1,['Patch'],['Patch']
Deployability,First Patch RNN,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/685:6,Patch,Patch,6,https://root.cern,https://github.com/root-project/root/pull/685,2,['Patch'],['Patch']
Deployability,First Patch for Autoencoders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/708:6,Patch,Patch,6,https://root.cern,https://github.com/root-project/root/pull/708,1,['Patch'],['Patch']
Deployability,"First introduced by #5083, a mechanism was put in place to build PyROOT for both Python 2 and Python 3. As Python 2 is not supported anymore by ROOT, this patch can be reverted. This helps to get again closer with upstream cppyy and CPyCppyy, avoids setting environment variables when importing ROOT, and reduces overhead in importing the ROOT module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14703:155,patch,patch,155,https://root.cern,https://github.com/root-project/root/pull/14703,1,['patch'],['patch']
Deployability,First patch Autoencoders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/696:6,patch,patch,6,https://root.cern,https://github.com/root-project/root/pull/696,1,['patch'],['patch']
Deployability,First patch CNN,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/664:6,patch,patch,6,https://root.cern,https://github.com/root-project/root/pull/664,1,['patch'],['patch']
Deployability,"First reported on the forum at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639 . Minimal reproducer:. ```cpp; #include <Math/Vector4D.h>; #include <ROOT/RDataFrame.hxx>. float TakeMVector(ROOT::Math::PtEtaPhiMVector &) { return 4.2; }. int main() {; ROOT::RDataFrame df(""Tree"", ""example_file.root"");. df.Define(""unused"", ""L""); // the failure disappears if this is commented out, even if ""unused"" is never used. auto dff4 = df.Define(""x"", TakeMVector, {""L""});; dff4.Max<float>(""x"").GetValue();; }; ```. with the input file at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639/3?u=eguiraud . The program errors out with:. ```; The branch L contains data of type ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >. It cannot be accessed by a TTreeReaderValue<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >>; ```. (so TTreeReaderValue cannot read a `LorentzVector<PtEtaPhiM4D<Double32_t>>` as a `LorentzVector<PtEtaPhiM4D<double>>`). The following patch by @Axel-Naumann seems to fix the problem:. ```diff; diff --git a/tree/treeplayer/src/TTreeReaderValue.cxx b/tree/treeplayer/src/TTreeReaderValue.cxx; index 2323cffee4..6d938f1b14 100644; --- a/tree/treeplayer/src/TTreeReaderValue.cxx; +++ b/tree/treeplayer/src/TTreeReaderValue.cxx; @@ -554,7 +554,8 @@ void ROOT::Internal::TTreeReaderValueBase::CreateProxy() {; auto branchActualTypeAsClass = dynamic_cast<TClass*>(branchActualType);; auto inheritance = dictAsClass && branchActualTypeAsClass && branchActualTypeAsClass->InheritsFrom(dictAsClass);. - if (fDict != branchActualType && !inheritance) {; + if (fDict != branchActualType && !inheritance; + && dictAsClass->GetTypeInfo() != branchActualTypeAsClass->GetTypeInfo()) {; TDataType *dictdt = dynamic_cast<TDataType*>(fDict);; TDataType *actualdt = dynamic_cast<TDataType*>(branchActualType);; bool complainAboutMismatch = true;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12334:1038,patch,patch,1038,https://root.cern,https://github.com/root-project/root/issues/12334,1,['patch'],['patch']
Deployability,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846:219,update,update,219,https://root.cern,https://github.com/root-project/root/pull/12846,6,['update'],['update']
Deployability,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:219,update,update,219,https://root.cern,https://github.com/root-project/root/pull/13842,3,['update'],['update']
Deployability,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7926:522,update,updated,522,https://root.cern,https://github.com/root-project/root/pull/7926,3,['update'],['updated']
Deployability,Fix 6767 missing TStreamerInfo update during a TClass reload,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6769:31,update,update,31,https://root.cern,https://github.com/root-project/root/pull/6769,1,['update'],['update']
Deployability,Fix CMake configuration and build with oneTBB,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239:10,configurat,configuration,10,https://root.cern,https://github.com/root-project/root/pull/8239,1,['configurat'],['configuration']
Deployability,Fix CMake configuration without Python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13292:10,configurat,configuration,10,https://root.cern,https://github.com/root-project/root/pull/13292,1,['configurat'],['configuration']
Deployability,"Fix Cocoa GUI for MacOS14 and Clang15. . The following collection of patches was provided by Timur Pocheptsoff <tpochep@mail.ru>. - [x] Fix TBrowser ""white window""; - [x] Fix TBrowser text editor (it does not echo text until the window is resized); - [x] Fix the OpenGL viewer. Fixes https://github.com/root-project/root/issues/13834",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885:69,patch,patches,69,https://root.cern,https://github.com/root-project/root/pull/13885,1,['patch'],['patches']
Deployability,Fix PyROOT installation on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6205:11,install,installation,11,https://root.cern,https://github.com/root-project/root/pull/6205,1,['install'],['installation']
Deployability,Fix ROOT-10552 incorrect StreamerInfoList update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5012:42,update,update,42,https://root.cern,https://github.com/root-project/root/pull/5012,3,['update'],['update']
Deployability,"Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST; (https://physics.nist.gov/cuu/Constants/index.html); with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units; Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5999:53,Update,Update,53,https://root.cern,https://github.com/root-project/root/pull/5999,1,['Update'],['Update']
Deployability,"Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever; there was a problem reading the StreamerInfo record and; introduces a useless attempt to read from file in the case; of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread; scalability the override ability of TFile::GetStreamerInfoList; is replaced by an override of TFile::GetStreamerInfoListImp with; updated return type and arguments. If a class override; TFile::GetStreamerInfoList you will now see a compilation error like:; {code}; /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function; virtual TList *GetStreamerInfoList();; ^; /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here; virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl; ^; {code}. Instead you need to override the protected method:. {code}; InfoListRet GetStreamerInfoListImpl(bool lookupSICache);; {code}. which can be implemented as; {code}; InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {; ROOT::Internal::RConcurrentHashColl::HashValue hash;; TList *infolist = nullptr;; //; // Body of the former Derived::GetStreamerInfoList with the; // return statement replaced with something like:. // The second element indicates success or failure of the load.; // (i.e. {nullptr, 0, hash} indicates the list has already been processed; // {nullptr, 1, hash} indicates the list failed to be loaded; return {infolist, 0, hash};; }; {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725:489,update,updated,489,https://root.cern,https://github.com/root-project/root/pull/2725,1,['update'],['updated']
Deployability,Fix TF1::Update which reset fHistogram attributes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14386:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/14386,1,['Update'],['Update']
Deployability,"Fix TMVAGui dialog setting number of signal/background events.; When changing the text fild and then clicking on ReDraw the numbers were not updates, because; the function setting the events was not called.; This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6501:141,update,updates,141,https://root.cern,https://github.com/root-project/root/pull/6501,1,['update'],['updates']
Deployability,Fix `TWebCanvas` update and zooming,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8659:17,update,update,17,https://root.cern,https://github.com/root-project/root/pull/8659,1,['update'],['update']
Deployability,Fix `fatal: corrupt patch at line 28` on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12882:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/pull/12882,1,['patch'],['patch']
Deployability,"Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction; can safely assume that the previous node in the chain still exists when it is; being constructed; * fPrevData is now a reference instead of a raw pointer in all classes:; a reference better indicates that we always expect fPrevData to be a valid; node of the chain. In fact, the only case when this condition might not be; met is when the TDataFrameImpl object goes out-of-scope before other nodes; of the chain; we detect this case and throw before trying to access; invalid fPrevData pointers/references.; * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/333:43,integrat,integrate,43,https://root.cern,https://github.com/root-project/root/pull/333,1,['integrat'],['integrate']
Deployability,Fix a long standing issue with popup (and context) menus popping up on wrong display on Windows with multiple display configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4062:118,configurat,configuration,118,https://root.cern,https://github.com/root-project/root/pull/4062,1,['configurat'],['configuration']
Deployability,"Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5997:20,update,update,20,https://root.cern,https://github.com/root-project/root/pull/5997,1,['update'],['update']
Deployability,Fix a warning in RNTupleSerializer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16709:87,update,updated,87,https://root.cern,https://github.com/root-project/root/pull/16709,1,['update'],['updated']
Deployability,Fix also backported to 6.22 patches here: https://github.com/root-project/root/pull/6589,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6579#issuecomment-705445362:28,patch,patches,28,https://root.cern,https://github.com/root-project/root/issues/6579#issuecomment-705445362,1,['patch'],['patches']
Deployability,Fix an access violation error when using `fscanf` on Windows 64 bit:; ```; 243: Processing C:/Users/sftnight/git/master/test/stressGraphics.cxx...; 243: **********************************************************************; 243: * Starting Graphics - S T R E S S suite *; 243: **********************************************************************; 243: * Starting Basic Graphics - S T R E S S *; 243: **********************************************************************; 243: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:227 (message):; 243: error code: Access violation; 243:; 243:; 1/1 Test #243: test-stressgraphics-interpreted ...***Failed 4.33 sec; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9959:519,release,release,519,https://root.cern,https://github.com/root-project/root/pull/9959,1,['release'],['release']
Deployability,Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10922:203,install,installing,203,https://root.cern,https://github.com/root-project/root/pull/10922,1,['install'],['installing']
Deployability,Fix axis labels tilt; Fix THStack update; Support drawing HIST and E1 for TH1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13640:34,update,update,34,https://root.cern,https://github.com/root-project/root/pull/13640,1,['update'],['update']
Deployability,Fix build of llvm in Release mode for multi-configuration generators …,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4391:21,Release,Release,21,https://root.cern,https://github.com/root-project/root/pull/4391,2,"['Release', 'configurat']","['Release', 'configuration']"
Deployability,"Fix compilation warnings on Win64, as shown below, by using proper long types; ```; gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; ...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9289:193,release,release,193,https://root.cern,https://github.com/root-project/root/pull/9289,6,['release'],['release']
Deployability,Fix configuration when builtin_glew is enabled on demand,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3983:4,configurat,configuration,4,https://root.cern,https://github.com/root-project/root/pull/3983,1,['configurat'],['configuration']
Deployability,Fix deprecation warnings when compiling cling standalone. # This Pull request:. Fix warnings in a standalone Cling build. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16408:195,update,updated,195,https://root.cern,https://github.com/root-project/root/pull/16408,1,['update'],['updated']
Deployability,Fix directory name for correct installation of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5450:31,install,installation,31,https://root.cern,https://github.com/root-project/root/pull/5450,1,['install'],['installation']
Deployability,Fix failing patch on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12882:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/12882,1,['patch'],['patch']
Deployability,Fix geometry update when drawn inside canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11926:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/11926,1,['update'],['update']
Deployability,Fix histogram stat box update; Do not use variables before define them; Remove unused variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6420:23,update,update,23,https://root.cern,https://github.com/root-project/root/pull/6420,1,['update'],['update']
Deployability,Fix installation error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3094:4,install,installation,4,https://root.cern,https://github.com/root-project/root/pull/3094,1,['install'],['installation']
Deployability,Fix installation of PCMs with pyroot_experimental,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4783:4,install,installation,4,https://root.cern,https://github.com/root-project/root/pull/4783,1,['install'],['installation']
Deployability,Fix link for modules release documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3302:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/3302,1,['release'],['release']
Deployability,"Fix merged into CMake, waiting for release of 3.19.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563#issuecomment-707930929:35,release,release,35,https://root.cern,https://github.com/root-project/root/issues/6563#issuecomment-707930929,1,['release'],['release']
Deployability,Fix modules build with install prefix (ROOT-10452),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4703:23,install,install,23,https://root.cern,https://github.com/root-project/root/pull/4703,1,['install'],['install']
Deployability,Fix option of having clang with ROOT patches as an external package (builtin_clang=OFF),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1955:37,patch,patches,37,https://root.cern,https://github.com/root-project/root/pull/1955,1,['patch'],['patches']
Deployability,Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9469:103,install,installation,103,https://root.cern,https://github.com/root-project/root/pull/9469,1,['install'],['installation']
Deployability,Fix rootls with python3 (Fixes ROOT-9299) (v6-12-00-patches),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1719:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/pull/1719,1,['patch'],['patches']
Deployability,Fix stats update in historgam when running in THttpServer; Many small fixes with usage of undefined variables -; discovered when developing jsroot v6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6419:10,update,update,10,https://root.cern,https://github.com/root-project/root/pull/6419,1,['update'],['update']
Deployability,Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5999:69,update,update,69,https://root.cern,https://github.com/root-project/root/pull/5999,1,['update'],['update']
Deployability,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10839:396,release,release,396,https://root.cern,https://github.com/root-project/root/pull/10839,4,"['Release', 'release']","['Release', 'release']"
Deployability,"Fix the following compilation error on Win64:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9387:240,release,release,240,https://root.cern,https://github.com/root-project/root/pull/9387,9,['release'],['release']
Deployability,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:247,release,release,247,https://root.cern,https://github.com/root-project/root/pull/12523,2,['release'],['release']
Deployability,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5627:126,install,installed,126,https://root.cern,https://github.com/root-project/root/pull/5627,2,['install'],['installed']
Deployability,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6009:340,release,release,340,https://root.cern,https://github.com/root-project/root/pull/6009,3,['release'],['release']
Deployability,Fix the following errors on Windows:; ```; 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist; 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms); 362: [ RUN ] TOffsetGeneration.primitiveTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms); 362: [ RUN ] TOffsetGeneration.elementsTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.elementsTest (136 ms); 362: [----------] 3 tests from TOffsetGeneration (3293 ms total); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9320:109,release,release,109,https://root.cern,https://github.com/root-project/root/pull/9320,4,"['Release', 'release']","['Release', 'release']"
Deployability,"Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:; ```; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:312,release,release,312,https://root.cern,https://github.com/root-project/root/pull/10247,4,"['Release', 'release']","['Release', 'release']"
Deployability,Fix the update of time step for DL optimizer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5042:8,update,update,8,https://root.cern,https://github.com/root-project/root/pull/5042,1,['update'],['update']
Deployability,"Fix typo in `CompressionSettings()` function declaration to match definition in `Compression.cxx`. Many thanks for reporting @mnowakgit!. This typo caused the following to fail:; ```; root [0] auto c = ROOT::RCompressionSetting::EAlgorithm::kZSTD;; root [1] CompressionSettings(c, 5);; input_line_10:2:3: error: no matching function for call to 'CompressionSettings'; (CompressionSettings(((*(enum ROOT::RCompressionSetting::EAlgorithm::EValues*)0x7f02285f4010)), 5)); ^~~~~~~~~~~~~~~~~~~; /home/jalopezg/_build/include/Compression.h:124:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'RCompressionSetting::EAlgorithm' for 1st argument; int CompressionSettings(RCompressionSetting::EAlgorithm algorithm, int compressionLevel);; ^; /home/jalopezg/_build/include/Compression.h:126:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'ROOT::ECompressionAlgorithm' for 1st argument; int CompressionSettings(ROOT::ECompressionAlgorithm algorithm, int compressionLevel);; ^; ```. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11054:1170,update,updated,1170,https://root.cern,https://github.com/root-project/root/pull/11054,1,['update'],['updated']
Deployability,Fix typos in `TVirtualCollectionProxy` class documentation accidentally introduced in #13307. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13442:115,update,updated,115,https://root.cern,https://github.com/root-project/root/pull/13442,1,['update'],['updated']
Deployability,"Fixed (in theory) the warnings, and moved to using newer style build system (will be integrated with #1680, since there's now some duplication). Uses `MINUIT2_MPI` and `MINUIT2_OMP` instead of environment variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689#issuecomment-369942972:85,integrat,integrated,85,https://root.cern,https://github.com/root-project/root/pull/1689#issuecomment-369942972,1,['integrat'],['integrated']
Deployability,"Fixed in ""not applicable"" because no ROOT release included the cppyy version without support for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15217#issuecomment-2057484188:42,release,release,42,https://root.cern,https://github.com/root-project/root/issues/15217#issuecomment-2057484188,1,['release'],['release']
Deployability,"Fixed in ""not applicable"" because no release was affected by this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15375#issuecomment-2119329060:37,release,release,37,https://root.cern,https://github.com/root-project/root/issues/15375#issuecomment-2119329060,1,['release'],['release']
Deployability,"Fixed in ""not applicable"" because the bug never affected any released ROOT version, and therefore it's not a fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13603#issuecomment-1713803975:61,release,released,61,https://root.cern,https://github.com/root-project/root/issues/13603#issuecomment-1713803975,1,['release'],['released']
Deployability,Fixed in 6.34.00 and also I'll backport it to the 6.32 branch so the fix is available in 6.32.06 when it's released.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16402#issuecomment-2344767314:107,release,released,107,https://root.cern,https://github.com/root-project/root/issues/16402#issuecomment-2344767314,1,['release'],['released']
Deployability,Fixed in master and v6-26-00-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10759#issuecomment-1190238389:29,patch,patches,29,https://root.cern,https://github.com/root-project/root/issues/10759#issuecomment-1190238389,1,['patch'],['patches']
Deployability,"Fixed switching C++ standard also with current (deprecated) options. Also, old options prevail if both are set, e.g. using `-Dcxx11=ON and -DCMAKE_CXX_STANDARD=14` will turn on C++11. By default `CMAKE_CXX_STANDARD` is set to `11` and can be overwritten by the command line. Changing standards after the initial configuration should always work now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3183#issuecomment-448609210:312,configurat,configuration,312,https://root.cern,https://github.com/root-project/root/pull/3183#issuecomment-448609210,1,['configurat'],['configuration']
Deployability,"Fixed the Travis build, moved build script, and added the cmake build-and-test test to the tests (Turns out, CMake's own source has lots of examples of that since that's what a test of CMake itself is generally doing). Fixed a bug in the calculation of the standalone directory, and simplified the CMake code a bit. `make package_source` now produces an error if in used in the wrong configuration. I've tried to avoid making any changes to the parts of Travis that are not affected, but there's a bug in the yaml: making a node anchor is also a normal definition; so if no packages are added, they get the default (which includes a non-existent timeout package). I'll see if I can make a separate PR with some improvements for Travis clarity/speed not related to Minuit2. This PR should be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-375310840:384,configurat,configuration,384,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-375310840,2,['configurat'],['configuration']
Deployability,"Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10459:409,Update,Update,409,https://root.cern,https://github.com/root-project/root/pull/10459,1,['Update'],['Update']
Deployability,"Fixes #11784. # This Pull request:; Fixes a bug in overlap checking. ## Changes or fixes:; Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11784",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11788:342,update,updated,342,https://root.cern,https://github.com/root-project/root/pull/11788,1,['update'],['updated']
Deployability,"Fixes #14132. # This Pull request:. ## Changes or fixes:; Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16550:226,update,updated,226,https://root.cern,https://github.com/root-project/root/pull/16550,1,['update'],['updated']
Deployability,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14160:643,update,updated,643,https://root.cern,https://github.com/root-project/root/pull/14160,1,['update'],['updated']
Deployability,Fixes #15703. The second commit adds a test to check that there is no memory increase using the reproducer from the linked issue. @guitargeek let me know how I should generate a patch to keep track of this change w.r.t. CPyCPPyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15777:178,patch,patch,178,https://root.cern,https://github.com/root-project/root/pull/15777,1,['patch'],['patch']
Deployability,Fixes #6376. The previous way of calculating the offset was causing a corruption in a multi-inheritance case (described in #6376). Adapted from:; https://bitbucket.org/wlav/cpycppyy/commits/7d9eb4a170ff9e3da9569232ba76ef59c9ee72fd; since CPPConstructor.cxx has changed since last update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6434:280,update,update,280,https://root.cern,https://github.com/root-project/root/pull/6434,1,['update'],['update']
Deployability,"Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO; - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour; - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570:556,Update,Update,556,https://root.cern,https://github.com/root-project/root/pull/6570,1,['Update'],['Update']
Deployability,"Fixes #6974 and also updates the way in which we check if we are in IPython in `JupyROOT/__init__.py`, to sync it with `ROOT/__init__.py`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6980:21,update,updates,21,https://root.cern,https://github.com/root-project/root/pull/6980,1,['update'],['updates']
Deployability,"Fixes #7528 ; Civetweb not touched, need to be updated soon anyway",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7593:47,update,updated,47,https://root.cern,https://github.com/root-project/root/pull/7593,1,['update'],['updated']
Deployability,"Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7832:31,integrat,integration,31,https://root.cern,https://github.com/root-project/root/pull/7832,1,['integrat'],['integration']
Deployability,"Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7833:31,integrat,integration,31,https://root.cern,https://github.com/root-project/root/pull/7833,1,['integrat'],['integration']
Deployability,Fixes #8141. This PR requires a new clad release v0.9. The clad master is incompatible with ROOT atm and the release of 0.9 depends on #8371,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8766:41,release,release,41,https://root.cern,https://github.com/root-project/root/pull/8766,2,['release'],['release']
Deployability,"Fixes #8828; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16540:228,update,update,228,https://root.cern,https://github.com/root-project/root/pull/16540,1,['update'],['update']
Deployability,Fixes Cling's nightly releases sync test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4713:22,release,releases,22,https://root.cern,https://github.com/root-project/root/pull/4713,1,['release'],['releases']
Deployability,Fixes Windows patch error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/12833,1,['patch'],['patch']
Deployability,Fixes `roottest_cling_specialobj_runf02` with the previously updated reference file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9587:61,update,updated,61,https://root.cern,https://github.com/root-project/root/pull/9587,1,['update'],['updated']
Deployability,"Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:; - using GCC 13.2.0 on Ubuntu 24.04; - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`; - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests.; If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16141:663,patch,patched,663,https://root.cern,https://github.com/root-project/root/pull/16141,1,['patch'],['patched']
Deployability,Fixes a memory corruption seen after the llvm upgrade. This is still a terrible hack;; it will be replaced by a proper fix in clang::CodeGen (coming up).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/629:46,upgrade,upgrade,46,https://root.cern,https://github.com/root-project/root/pull/629,1,['upgrade'],['upgrade']
Deployability,Fixes and updates in preparation for ROOT 6.12 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1393:10,update,updates,10,https://root.cern,https://github.com/root-project/root/pull/1393,2,"['release', 'update']","['release', 'updates']"
Deployability,Fixes as well https://github.com/root-project/root/issues/8280. (Thanks a lot to @amadio for pointing out the most reasonable for ROOT build system). Update: sadly we can't move directly to 3.16 because Debian 10 has only cmake 3.13 packaged https://pkgs.org/search/?q=cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336:150,Update,Update,150,https://root.cern,https://github.com/root-project/root/pull/8336,1,['Update'],['Update']
Deployability,"Fixes for bug ROOT-1036 (FitResult::Scan); When fitting histograms a shared_pointer of FitData must be passed to the Fitter class, in Fitter::Fit( data,...) functions instead of a row pointer !; This fixes the shared ownership of the fitting data between the Fitter and the FitResult classes and avoid that the data are deleted when exiting TH1::Fit. ; One can then use FitResult::Scan , FitResult::Contour or FitResult::GetConfidenceIntervals.; Before the data were accidentally not deleted, when multi-thread wad not enabled, because in that case a reference for the data was kept in the global TVirtualFitter class, available only in non-mt mode/. This PR also fixes the case of bin integral fit in multithreading. The problem was caused by using the GSL integrator from Mathmore. . testFit has been improved by adding test for FitResult::Scan and tests for multi-threading fitting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4557:758,integrat,integrator,758,https://root.cern,https://github.com/root-project/root/pull/4557,1,['integrat'],['integrator']
Deployability,Fixes for:; - Installation of TPyDispatcher.h. Fixes #6579 ; - Removal of pythonization files that are no longer there,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6588:14,Install,Installation,14,https://root.cern,https://github.com/root-project/root/pull/6588,1,['Install'],['Installation']
Deployability,"Fixes https://github.com/root-project/root/issues/11971. leftover from https://github.com/root-project/root/commit/b1257ba27a7139e0c927693fded3b243b3f94b33. # This Pull request:. ## Changes or fixes:. Unused variable, found by HenryDayHall. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11972:292,update,updated,292,https://root.cern,https://github.com/root-project/root/pull/11972,1,['update'],['updated']
Deployability,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15860:352,release,release,352,https://root.cern,https://github.com/root-project/root/pull/15860,6,['release'],['release']
Deployability,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15855:872,release,release,872,https://root.cern,https://github.com/root-project/root/pull/15855,1,['release'],['release']
Deployability,"Fixes https://github.com/root-project/root/issues/15610. As reported on the forum:; https://root-forum.cern.ch/t/memory-leak-in-pyroot-when-using-user-defined-c-macros-from-python-and-ttree-friends/59432. According to that post, the problem is present at least since 6.26/04, but I suspect it has been there forever (at least 6.22 with with cppyy upgrade in 2019). . I fixed the memory leak in the Pythonization is in the usual way how I fix problems with the PyROOT CPython extension: re-implementing the offending parts in Python and hoping that the problem is gone. Which it is!. Note that the code also had no obvious memory leak before. where it was; using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy; API. If similar problems appear, this function might have to be; investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic; into the Python layer is better anyway. The problem can be reproduced with a variation of the forum reproducer:; ```python; import ROOT; import numpy as np. ROOT.gInterpreter.Declare(; """"""; template<class T>; void * MyGetAddress(T * b) {; return *(void**)b->GetAddress();; }; """"""; ). def macro(tree, *args, **kwargs):. import cppyy.ll. # manually; v1 = cppyy.ll.cast[tree.GetBranch(""value1"").GetClassName() + ""*""](ROOT.MyGetAddress(tree.GetBranch(""value1""))); # using the Pythonization; v2 = getattr(tree, ""value2""); return None. pinfo = ROOT.ProcInfo_t(). def print_memory(i):; ROOT.gSystem.GetProcInfo(pinfo); print(i, ""memory usage"", pinfo.fMemResident, pinfo.fMemVirtual). class reTupler:; def __init__(self, tree_name, new_file, src_file):; self.src_file = ROOT.TFile.Open(src_file); self.src_tree = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:347,upgrade,upgrade,347,https://root.cern,https://github.com/root-project/root/pull/15608,1,['upgrade'],['upgrade']
Deployability,"Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6582:270,UPDATE,UPDATE,270,https://root.cern,https://github.com/root-project/root/pull/6582,1,['UPDATE'],['UPDATE']
Deployability,Fixes https://github.com/root-project/root/issues/7740. # This Pull request:. ## Changes or fixes:; Add tutorial about multi dimensional integrator. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/root-project/root/issues/7740,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14730:137,integrat,integrator,137,https://root.cern,https://github.com/root-project/root/pull/14730,2,"['integrat', 'update']","['integrator', 'updated']"
Deployability,Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15280:144,update,updated,144,https://root.cern,https://github.com/root-project/root/pull/15280,1,['update'],['updated']
Deployability,"Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8020:97,patch,patches,97,https://root.cern,https://github.com/root-project/root/pull/8020,1,['patch'],['patches']
Deployability,Fixes importing `JupyROOT` when `CMAKE_INSTALL_PYTHONDIR` is set to the standard site-packages directory. Fixes the failure seen in this build of the conda nightly:. https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/99/console. The builds after 100 include this patch and work as expected. (The new failure in [`roottest_python_JupyROOT_ROOT_kernel_notebook`](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/101/testReport/projectroot.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/) is a bug in `metakernel` that is fixed by https://github.com/Calysto/metakernel/pull/214.),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6248:288,patch,patch,288,https://root.cern,https://github.com/root-project/root/pull/6248,1,['patch'],['patch']
Deployability,"Fixes macOS 12 builds (no ""python"", only ""python3"").; Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10375:256,update,updated,256,https://root.cern,https://github.com/root-project/root/pull/10375,1,['update'],['updated']
Deployability,Fixes macOS 12 builds. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10275:118,update,updated,118,https://root.cern,https://github.com/root-project/root/pull/10275,1,['update'],['updated']
Deployability,"Fixes the `make distsrc` command in the release checklist, so far working until 6.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15380:40,release,release,40,https://root.cern,https://github.com/root-project/root/pull/15380,1,['release'],['release']
Deployability,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11231:583,Update,Update,583,https://root.cern,https://github.com/root-project/root/pull/11231,2,['Update'],['Update']
Deployability,"Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:; https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15058:218,configurat,configuration,218,https://root.cern,https://github.com/root-project/root/pull/15058,1,['configurat'],['configuration']
Deployability,Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3174:33,release,release,33,https://root.cern,https://github.com/root-project/root/pull/3174,1,['release'],['release']
Deployability,"Fixes ~20 from 100 existing warnings on Windows, ; remaining warnings are from llvm and clang, which is hard to patch now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4068:112,patch,patch,112,https://root.cern,https://github.com/root-project/root/pull/4068,1,['patch'],['patch']
Deployability,Fixes: https://root-forum.cern.ch/t/f26-v6-10-00-patches-invalid-preprocessing-directive/26197,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/980#issuecomment-329104203:49,patch,patches-invalid-preprocessing-directive,49,https://root.cern,https://github.com/root-project/root/pull/980#issuecomment-329104203,1,['patch'],['patches-invalid-preprocessing-directive']
Deployability,Fixing built of classic build for builtin lz4 and non-builtin case.; Updated version of PR#926 https://github.com/root-project/root/pull/926,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1012:69,Update,Updated,69,https://root.cern,https://github.com/root-project/root/pull/1012,1,['Update'],['Updated']
Deployability,"Fixing this related issue upstream : https://github.com/wlav/CPyCppyy/issues/35 will unblock this PR. Current test failures on this PR are from the string_view converter failing in calls to the RDataFrame constructor:. ```cpp; RDataFrame(std::string_view treename, const std::vector<std::string> &filenames, ; const ColumnNames_t &defaultColumns = {});; ```. Minimal reproducer:; ```py; cppyy.cppdef('''void processMessage(std::string_view A, std::vector<int> messages) {. for (const auto& msg : messages) {; std::cout << ""Message2: "" << msg << std::endl;; }} '''). cppyy.gbl.processMessage(""a"", (x for x in [1, 2, 3])); ```. This fails when:. - A generator expression is used ( `cppyy.gbl.processMessage(""a"", [1, 2, 3])` works); - We add a `string_view` in the beginning of the function signature:. The second patch that we delete in this PR adds a commit which makes this CallContext `noimp` call in the string_view converter:. ```diff; bool CPyCppyy::STLStringViewConverter::SetArg(; PyObject* pyobject, Parameter& para, CallContext* ctxt); {. // normal instance convertion (eg. string_view object passed); if (!PyInt_Check(pyobject) && !PyLong_Check(pyobject)) {; + CallContextRAII<CallContext::kNoImplicit> noimp(ctxt);; if (InstanceConverter::SetArg(pyobject, para, ctxt)) {. ```. if I remove this line and allow it to be implicit then this issue no longer happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16212#issuecomment-2311776416:811,patch,patch,811,https://root.cern,https://github.com/root-project/root/pull/16212#issuecomment-2311776416,1,['patch'],['patch']
Deployability,Follow up of #14136 . Also update JSROOT with several fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14775:27,update,update,27,https://root.cern,https://github.com/root-project/root/pull/14775,1,['update'],['update']
Deployability,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7322:202,integrat,integration,202,https://root.cern,https://github.com/root-project/root/pull/7322,2,['integrat'],['integration']
Deployability,Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur!. Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327:346,patch,patches,346,https://root.cern,https://github.com/root-project/root/pull/327,2,['patch'],['patches']
Deployability,"Following our discussions, this is the proposed change to disable the splash screen by default. Most users use `root -l` to get rid of the splash screen in any case. As mentioned in the discussions, it is still possible to see the splash screen with `root -a` or from a `TBrowser`, by going to *Browser Help* → *About ROOT*. If you want to check out this change, I have installed ROOT 6.18 with this change into CVMFS.; You can run it on Linux with (no setup required):; ```; $ /cvmfs/sft.cern.ch/lcg/contrib/gentoo/linux/x86_64/usr/lib/root/6.18/bin/root; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4187:370,install,installed,370,https://root.cern,https://github.com/root-project/root/pull/4187,1,['install'],['installed']
Deployability,Follows the changes introduced in https://reviews.llvm.org/D136030 to be more compatible with std::string and std::string_view. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14785:223,update,updated,223,https://root.cern,https://github.com/root-project/root/pull/14785,1,['update'],['updated']
Deployability,"Follows up on c58e551, updating the minor version number that is expected. Since LLVM 17, the minor version number is hardcoded to ""1"" instead of ""0"": https://releases.llvm.org/. This will also be the case for the upcoming LLVM 19 release. This PR is needed to make ROOT configure with `builtin_llvm=OFF`. I was just trying this out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16432:159,release,releases,159,https://root.cern,https://github.com/root-project/root/pull/16432,2,['release'],"['release', 'releases']"
Deployability,Followup patch for #2097; Explicitly include cling/Interpreter/Runtim…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2194:9,patch,patch,9,https://root.cern,https://github.com/root-project/root/pull/2194,1,['patch'],['patch']
Deployability,Fons's Patches for macOS 11 Big Sur,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6691:7,Patch,Patches,7,https://root.cern,https://github.com/root-project/root/pull/6691,1,['Patch'],['Patches']
Deployability,"For ""png"", ""jpg"", ""pdf"" and ""svg"" headless web browser will be used inside `TPad::Print()` method.; Fix small issue and improve `TPad::Print()`; Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11870:145,Update,Update,145,https://root.cern,https://github.com/root-project/root/pull/11870,1,['Update'],['Update']
Deployability,"For LLVM we don't have Optimized build, but only Debug, Release, RelWithDebInfo, and MinSizeRel.; Thats why to have correctly interpreted __FAST_MATH__ in ROOT macroses we need to add -ffast-math flag for LLVM default Release build type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1039:56,Release,Release,56,https://root.cern,https://github.com/root-project/root/pull/1039,2,['Release'],['Release']
Deployability,"For RooFit developers, it is unconvenient that the `override` specifier; that flags member functions as overriding on first sight is not used so; much in RooFit. Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in RooFit. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""roofit"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find roofit -type f -print | x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9808:260,pipeline,pipeline,260,https://root.cern,https://github.com/root-project/root/pull/9808,1,['pipeline'],['pipeline']
Deployability,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. ; We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-1945715411:237,install,install,237,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-1945715411,2,['install'],['install']
Deployability,For Ubuntu 22.04 we will otherwise get a build error.; See https://github.com/xrootd/xrootd/issues/1666. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10322:200,update,updated,200,https://root.cern,https://github.com/root-project/root/pull/10322,1,['update'],['updated']
Deployability,For Ubuntu 22.04 we will otherwise get a build error.; See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10374:270,update,updated,270,https://root.cern,https://github.com/root-project/root/pull/10374,1,['update'],['updated']
Deployability,"For `DO_WHATEVER_NLOHMANM_3.11.0_NEEDS` just display a message:; ```cmake; try_compile(FWD_DECLARE MYBINDIR forward_declare.cpp); try_compile(FWD_HEADER MYBINDIR forward_header.cpp); if(FWD_DECLARE); message(""Using forward declaration for nlohmann_json""); elseif(FWD_HEADER); message(""Using forward header from nlohmann_json""); else(); set(DO_WHATEVER_NLOHMANM_3.11.0_NEEDS ON); message(FATAL_ERROR ""You are probably running nlohmann_json version 3.11.0 which is deemed unusable by its creator (https://github.com/nlohmann/json/releases/tag/v3.11.0). Please install a working version of nlohmann_json. If you think you're seeing this message in error and you have a different version of nlohmann_json installed, please report it as a bug.""); endif(); ```; but the advantage of this way is that it's version independent and will work when it works, even if the default behaviour changes in the future again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1220602003:528,release,releases,528,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1220602003,3,"['install', 'release']","['install', 'installed', 'releases']"
Deployability,"For `alien`, only the build option is removed; the corresponding code will be removed in master. `gsl_shared` is unused. These are a) untested and b) to my knowledge not used by any experiment. (ALICE does not use ROOT's monalisa module.). If we don't deprecate these now we have to wait another release cycle.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12203:296,release,release,296,https://root.cern,https://github.com/root-project/root/pull/12203,1,['release'],['release']
Deployability,"For comparison, running on the full 513M events and 1000 files for the final configuration, ie Baseline + Use read-write locks in TBufferFile::ReadClassBuffer + TBBUnique for gCoreMutex + the additional changes to the task splitting to target 24 tasks per thread independent of the number of files the thread scaling is much more reasonable. (Keeping in mind also that even if the thread scaling were perfect from the application standpoint, there is significant deviations from perfect scaling expected beyond 128 threads due to hyperthreading, plus additional effects from per-core dynamic boosting etc). ```; 256 threads; Percent of CPU this job got: 19725%; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24; 192 threads; Percent of CPU this job got: 16846%; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:56.93; 128 threads; Percent of CPU this job got: 12064%; Elapsed (wall clock) time (h:mm:ss or m:ss): 3:24.70; 64 threads; Percent of CPU this job got: 6130%; Elapsed (wall clock) time (h:mm:ss or m:ss): 5:52.66; 32 threads; Percent of CPU this job got: 3082%; Elapsed (wall clock) time (h:mm:ss or m:ss): 11:11.29; 16 threads; Percent of CPU this job got: 1580%; Elapsed (wall clock) time (h:mm:ss or m:ss): 20:08.16; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-750011219:77,configurat,configuration,77,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-750011219,1,['configurat'],['configuration']
Deployability,"For completeness, this is the build error fixed by this patch:. ```; In file included from /Users/foo/alice/sw/SOURCES/ROOT/v6-10-06+git_85fcb7c2ff/85fcb7c2ff9d2c7fd836419c055d8b0fb40ffb28/net/monalisa/src/TMonaLisaWriter.cxx:51:; In file included from /Users/foo/alice/sw/BUILD/9ccb742badcdc735a7e3080c5c43edbd7b66c7dd/ROOT/include/TFile.h:31:; In file included from /Users/foo/alice/sw/BUILD/9ccb742badcdc735a7e3080c5c43edbd7b66c7dd/ROOT/include/ROOT/TRWSpinLock.hxx:19:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/condition_variable:111:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__mutex_base:17:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__threading_support:156:1: error: unknown type name 'mach_port_t'; mach_port_t __libcpp_thread_get_port();; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__threading_support:300:1: error: unknown type name 'mach_port_t'; mach_port_t __libcpp_thread_get_port() {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__threading_support:301:12: error: use of undeclared identifier 'pthread_mach_thread_np'; return pthread_mach_thread_np(pthread_self());; ^; ```. Error shows up with Xcode 9 and macOS High Sierra. I am not sure the MonaLisa writer is enabled in your build tests, so you might not have noticed so far.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1164#issuecomment-335414829:56,patch,patch,56,https://root.cern,https://github.com/root-project/root/pull/1164#issuecomment-335414829,1,['patch'],['patch']
Deployability,"For deferred columns (i.e. columns created during late model extension) for subfields that have been created after one or more clusters have already been written, their (synthetic) column ranges were not properly initialized upon read back. This resulted in incorrect metadata and problems reading back the data in the subfields only (so not the complete field they are part of). This PR partly addresses #15661. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15699:464,update,updated,464,https://root.cern,https://github.com/root-project/root/pull/15699,1,['update'],['updated']
Deployability,For enabling the building of that test (SofieCompiledModels) you need only to have Python installed with PyTorch. Just do `pip install torch` for installing pytorch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487#issuecomment-1009762254:90,install,installed,90,https://root.cern,https://github.com/root-project/root/issues/9487#issuecomment-1009762254,3,['install'],"['install', 'installed', 'installing']"
Deployability,"For me it's okay to merge *after* you add a line to the release notes calling out this change. I suspect that this is a super rare case (people relying on our fwd decl), and people should happily adapt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2908#issuecomment-435409775:56,release,release,56,https://root.cern,https://github.com/root-project/root/pull/2908#issuecomment-435409775,1,['release'],['release']
Deployability,"For now, this is just a rebase of Javier's original changes. I think I have an idea what could be wrong, but I first want to have a clean set of reports from Jenkins and the new CI. In any case, I'll try to take care of this PR now because it seems required for some recent progress I'm making regarding https://github.com/root-project/root/issues/13815, in turn blocking the upgrade to LLVM 16.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565#issuecomment-1822554266:376,upgrade,upgrade,376,https://root.cern,https://github.com/root-project/root/pull/13565#issuecomment-1822554266,1,['upgrade'],['upgrade']
Deployability,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750:1192,integrat,integrate,1192,https://root.cern,https://github.com/root-project/root/pull/16750,1,['integrat'],['integrate']
Deployability,For people still experiencing the problem right now: For me using v6-26-00-patches branch instead of latest-stable works at the moment. The final solution to the problem is here: https://github.com/root-project/root/pull/10585,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10578#issuecomment-1140191590:75,patch,patches,75,https://root.cern,https://github.com/root-project/root/issues/10578#issuecomment-1140191590,1,['patch'],['patches']
Deployability,"For reference: I just tried the ctests also locally with and without RTLD_DEEPBIND, and I can confirm that the DEEPBIND option makes some of them crash also for me.; For some reason, none of the tests in the ALICE software with ROOT have triggered this problem.; I tried also with RTLD_NOW instead of RTLD_LAZY but that doesn't change anything. So unfortunately, this patch is not working as intended.; I'd still like to understand what is the problem with it, since I still think this is the much better solution compared to requiring that all 3rd party libraries hide LLVM symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561835159:368,patch,patch,368,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561835159,1,['patch'],['patch']
Deployability,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15557:606,update,update,606,https://root.cern,https://github.com/root-project/root/pull/15557,1,['update'],['update']
Deployability,"For some algorithms like numeric integration, we want to enable PDF evaluation on the GPU with the RooFitDriver also for the case where the input arrays are already on the device and don't come from a `RooAbsData`. This is implemented in this PR, such that things like this are now possible:. ```c++; namespace CudaInterface = RooFit::Detail::CudaInterface;. // Define model; RooRealVar x{""x"", ""x"", 0, -10, 10};; RooRealVar mu{""mu"", ""mu"", 0, 0, 10};; RooRealVar sigma{""sigma"", ""sigma"", 3, 0.1, 10};. RooGaussian gauss{""gauss"", ""gauss"", x, mu, sigma};. std::size_t numBins = 20;; x.setBins(numBins);. RooArgSet normSet{x};. // Create array of observable values; std::vector<double> xValsHost;; for (std::size_t i = 0; i < numBins; ++i) {; x.setBin(i);; xValsHost.push_back(x.getVal());; }. // Copy observable values to the array; CudaInterface::DeviceArray<double> xValsDevice{numBins};; CudaInterface::copyHostToDevice(xValsHost.data(), xValsDevice.data(), numBins);. // Compile pdf for evaluation with RooFitDriver; std::unique_ptr<RooAbsReal> gaussCompiled{RooFit::Detail::compileForNormSet(gauss, normSet)};. // Instantiate RooFitDriver and set device input array; ROOT::Experimental::RooFitDriver driver{*gaussCompiled, RooFit::BatchModeOption::Cuda};; driver.setInput(""x"", {xValsDevice.data(), numBins}, /*isOnDevice=*/ true);. // Evaluate; std::span<const double> deviceOut = driver.run();. // Copy back to host and pring results; std::vector<double> hostOut(deviceOut.size());; CudaInterface::copyDeviceToHost(deviceOut.data(), hostOut.data(), numBins);; for (int i = 0; i < numBins; ++i) {; std::cout << xValsHost[i] << "" "" << hostOut[i] << std::endl;; }; ```. The `RooFitDriver.h` interface is also significantly reduced to not include anything that strictly has to do something with the evaluation. This makes the interface less confusing, which is important because I want to make this class public to the users in the next PR. The evaluation of PDFs with the RooFitDriver also on the GPU i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13389:33,integrat,integration,33,https://root.cern,https://github.com/root-project/root/pull/13389,1,['integrat'],['integration']
Deployability,For some common libraries we provide modulemaps such as tinyxml2 and boost. Independently whether implicit or fno-implicit-module-maps is selected we insert an overlay and register the modulemap directly. This patch disables this when fno-implicit-module-maps is chosen. This should resolve ROOT-10803 introduced by root-project/root#5709,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5793:210,patch,patch,210,https://root.cern,https://github.com/root-project/root/pull/5793,1,['patch'],['patch']
Deployability,"For some reason I had problems making this work on gcc > 4.9.2, but It may be my configuration. This PR will test that too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1004#issuecomment-329990026:81,configurat,configuration,81,https://root.cern,https://github.com/root-project/root/pull/1004#issuecomment-329990026,1,['configurat'],['configuration']
Deployability,"For some reason the build keeps failing on windows and travis-ci. Not sure about windows, but the travis-ci has continuously failed since the third PR. Any ideas?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780650003:112,continuous,continuously,112,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780650003,1,['continuous'],['continuously']
Deployability,"For some reason, calling `isInlined()` member function on an `operator new()` FunctionDecl does not return the expected result for an inline-defined function. This patch workarounds the aforementioned problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4222:164,patch,patch,164,https://root.cern,https://github.com/root-project/root/pull/4222,1,['patch'],['patch']
Deployability,"For some reason, the library needs to have the RPath also pointing to $ROOTSYS/lib. For example, if one patches the binary after linking with ; ```; install_name_tool foo_C.so -add_rpath $ROOTSYS/lib; ```; then, the command work w/o loading libRint by hand, i.e. the link to the lib is honoured (thanks to @vepadulano for the debugging session that led to this post!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13734#issuecomment-1737131678:104,patch,patches,104,https://root.cern,https://github.com/root-project/root/issues/13734#issuecomment-1737131678,1,['patch'],['patches']
Deployability,"For the `__file__` error you can use this patch:. ```diff; diff --git a/tutorials/dataframe/df105_WBosonAnalysis.py b/tutorials/dataframe/df105_WBosonAnalysis.py; index 00d323f472..d32bb75502 100644; --- a/tutorials/dataframe/df105_WBosonAnalysis.py; +++ b/tutorials/dataframe/df105_WBosonAnalysis.py; @@ -47,7 +47,7 @@ else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opend. # Create a ROOT dataframe for each dataset; # Note that we load the filenames from the external json file placed in the same folder than this script.; -files = json.load(open(os.path.join(os.path.dirname(os.path.abspath(__file__)), ""df105_WBosonAnalysis.json""))); +files = json.load(open(os.path.join(ROOT.gROOT.GetTutorialsDir(), ""dataframe/df105_WBosonAnalysis.json""))); processes = files.keys(); df = {}; xsecs = {}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430#issuecomment-1106197292:42,patch,patch,42,https://root.cern,https://github.com/root-project/root/issues/10430#issuecomment-1106197292,1,['patch'],['patch']
Deployability,"For the context, I belong to the team that develops the TRIPOLI-4 Monte-Carlo particle transport code, which uses ROOT as (among other things) a geometry engine. We are not in a terrible hurry (hopefully in a month or two though?), but we would greatly appreciate a new patch release on top of the v6.12 branch. That would largely cut on the amount of validation work that we need to do for our next release. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3310#issuecomment-462393996:270,patch,patch,270,https://root.cern,https://github.com/root-project/root/pull/3310#issuecomment-462393996,3,"['patch', 'release']","['patch', 'release']"
Deployability,"For the documentation of the RooFit pythonizations, we wanted to realize; two things:. * A PyROOT block in the doxygen documentation of the C++ class,; indicating the pythonizations for a given class or function. * A new doxygen page with only the content of all the RooFit PyROOT; blocks to have a one-stop place to learn everything about RooFit; pythonizations. This commit proposes a new mechanism to do this, based on the existing; RooFit pythonization mirror class infrastructure:. * Every class or member function that should get a PyROOT block gets; an can be patched with an attribute `_doxygen`, containing the; contents of the PyROOT block; * Member functions can also be patched with the attribute; `cpp_signature`, specifying the C++ overload where the PyROOT block; should go; * A new scipt `print_roofit_pyz_doctrings.py` extracts this; information, and this script is used to create a file; `_roofit.pyzdoc` with all the doxygen source to generate both the; PyROOT blocks in the existing documentation, as well as the separate; page about all the RooFit pythonizations. This is how the RooFit pythonization page would look like with this PR:. ![Screenshot_2021-08-17_15-06-40](https://user-images.githubusercontent.com/6578603/129736827-e2aadfe5-2893-48c0-a7e9-2549a136cd68.png). Writing all the documentation will be done in later PRs by @Harshalzzzzzzz , this PR is just to set up the infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8856:567,patch,patched,567,https://root.cern,https://github.com/root-project/root/pull/8856,2,['patch'],['patched']
Deployability,"For the next major release of [iminuit](https://github.com/scikit-hep/iminuit/), I finally implemented the ability to scan the function for a minimum using a brute-force grid search in N dimensions. This is very inefficient, but still a feature that users regularly request and there has been an [open issue in iminuit about it for a long time, now closed](https://github.com/scikit-hep/iminuit/issues/104). Originally this was supposed to use MnScan from C++ Minuit2, but I found some severe problems with MnScan. I would like to discuss what we want MnScan to do, then I would be happy to work on a patch. ### What MnScan currently does. It does a 1D scan with 41 steps for each parameter in sequence, so it is not actually scanning the full hypercube. It first scans one parameter, then starts the scan of the second parameter from the best value of the first and so on. Instead of a full 2D scan, it does something like this:; ```; y; B; y; xxxxxxxxxxxxxxxxxx A xxxxxx; y; y; ```; where A and B are the minima along the x and y axis respectively. This approach has the advantage that the number of function evaluations scales like with k * n, where k is the number of dimensions and n the number of steps per dimension, while a full grid search scales like n ^ k. However, this approach will fail miserably when x and y are correlated, trying this on the Rosenbrock function for instance gives terrible results (basically no improvement with respect to the starting value). ### What to do?. The current behavior of MnScan is not what people usually consider a scan, which most people understand as a full grid search over the whole N-dimensional space. It seems that MnScan is not really used in ROOT, but I may be mistaken. If it is not really used, I would suggested to keep the name MnScan and change the implemenation to do a full hypercube scan. I am strongly convinced that MnScan should do a full grid search instead of what it currently does, because the current implementation is fairly p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6862:19,release,release,19,https://root.cern,https://github.com/root-project/root/issues/6862,2,"['patch', 'release']","['patch', 'release']"
Deployability,"For the record the following issue is still left:; ```; Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing; the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit; uses of the map (or pair), there is no decl for the instantiation of thus; the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),; the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`; and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair; but it would also need to also refresh the map's CollectionProxy (size,; hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the; map ... But wait ... there is currently no support for generating a collection proxy for; an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the; map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10230#issuecomment-1078435016:585,Update,UpdateClassInfoWithDecl,585,https://root.cern,https://github.com/root-project/root/pull/10230#issuecomment-1078435016,2,"['Update', 'update']","['UpdateClassInfoWithDecl', 'update']"
Deployability,"For the record, I have done what I outlined above and updated the PR. I do see some drastic improvements for some of our workflows (250MB out of 1GB) where we have many processes initialising the interpreter. For others, where the usage of ROOT is limited to reading files in a single process, the improvement is not so obvious. Simply opening a file does show improvement as well (I am down to 49MB, when I also patch the FileInfo vector in the HeaderSearch). The PR somehow seems to die with some old memory corruption which I am pretty sure I fixed and I cannot reproduce anymore. Is there any need to clean some cache?. Notice I have also submitted the patch to llvm itself and it passes their CI (https://github.com/llvm/llvm-project/pull/66430#issuecomment-1720164026)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1720185060:54,update,updated,54,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1720185060,3,"['patch', 'update']","['patch', 'updated']"
Deployability,"For the record, one such discussion yield the following:. a) Update the merging operation (if not already done) to make sure that the output file is kept open during the length of the process (this is to avoid re-reading the output TTree from the output file) and the TTree is written to the output file only once at the end. b) CMSSW can detect when a 'merge' operation was requested by checking the return value of Fill and the number of entry: if Fill succeed and the TTree has zero entries afterwards then a merge operation was requested (the TTree was reset). c) We need to call a callback (std::function) provided at CMS when a merge operation is completed (i.e all its baskets are on the output file and the output TTree has been updated accordingly). d) When CMSSW noticed that a 'merge' operation has been requested, it will shutdown the CMSSW output module (make it unavailable to other modules). This guarantees that if CMSSW has N output modules, there will be at most N queued merge operations and while the merge are going on only 1 thread is used for it (and the other N-1 can be used for other CMSSW work). e) We need to implement a queuing of the merge operations tasks without relying on the ROOT global write lock. See for example the way something similar is done in CSMSW: https://github.com/cms-sw/cmssw/blob/master/FWCore/Concurrency/interface/SerialTaskQueue.h. f) CMSSW need to call a 'finalization' API to 'close-out' the output file (without this call the output file is useless).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1866#issuecomment-387769514:61,Update,Update,61,https://root.cern,https://github.com/root-project/root/pull/1866#issuecomment-387769514,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"For the update of LLVM 9, Cling required another patch to Clang for replacing the children of a `CompoundStmt`. Instead solve this by creating a new `CompoundStmt` with the right `Stmt`s attached.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488:8,update,update,8,https://root.cern,https://github.com/root-project/root/pull/7488,2,"['patch', 'update']","['patch', 'update']"
Deployability,"For this build, I used https://github.com/cms-sw/root repository with cms/master/be1bae0 branch ( this branch is identical to root-project/root commit be1bae0 ). You should be able to build root from root-project/root master branch too, we only add https://github.com/cms-sw/root/commit/b462cf572aebf5c4fa6057ff454b81dd85057b86 patch on top of root master branch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-815284033:328,patch,patch,328,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-815284033,1,['patch'],['patch']
Deployability,"For what concerns the integration in TDF, the cases to cover are:; 1) tdf.Histo1D(""col""); 2) tdf.Histo1D(model, ""col""); (and weighted versions). For 1), we can transparently enable bit 20 and ""pow2"" binning. Better than the current hard limit from 0 to 64.; For 2) we can enable a new model constructor, which takes name and title only. Bin suggestion is fixed to 64. For the case in which the model is created from an histo, bit 20 can be easily propagated from the histo to the model and back to the new histo based on the model.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1305#issuecomment-344598869:22,integrat,integration,22,https://root.cern,https://github.com/root-project/root/pull/1305#issuecomment-344598869,1,['integrat'],['integration']
Deployability,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430#issuecomment-993441512:58,release,release,58,https://root.cern,https://github.com/root-project/root/issues/9430#issuecomment-993441512,5,"['patch', 'release']","['patch', 'release']"
Deployability,"Force deserialization also for unevaluated ESTs.; Deserializing the decl chain (as part of the linkage spec calculation); will update the EST between Start and End EH emission, causing an; asymmetry and triggering the assert. This forces the decl chain to be; loaded. Fixes roottest/root/treeformula/stl/assertSparseSelection.C on MacOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5534:127,update,update,127,https://root.cern,https://github.com/root-project/root/pull/5534,1,['update'],['update']
Deployability,Force-pushed again just to update the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10205#issuecomment-1076491031:27,update,update,27,https://root.cern,https://github.com/root-project/root/pull/10205#issuecomment-1076491031,1,['update'],['update']
Deployability,Forgot to post an update here:. ```; Differentiating pie from shared objects needs lots of code. The most reliable thing is DF_1_PIE. eu-classify has implemented many heuristics.; It's unreasonable for llvm::identify_magic to tell pie from shared object; ```. Maybe @alexander-penev can help us with this challenge?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-948715388:18,update,update,18,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-948715388,1,['update'],['update']
Deployability,Forgot to update the copyright in FindPySpark.cmake,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7371#issuecomment-792733547:10,update,update,10,https://root.cern,https://github.com/root-project/root/pull/7371#issuecomment-792733547,1,['update'],['update']
Deployability,"Forking was necessary; not looking back. Last release I followed, 6.20, broke so much stuff, especially on Windows. It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697889557:46,release,release,46,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697889557,1,['release'],['release']
Deployability,"Found CFITSIO: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/cfitsio/3.48/x86_64-centos7-gcc9-dbg/lib/libcfitsio.so (found version ""3.48""); -- Looking for XROOTD; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/include/xrootd;/build/jenkins/workspace/lcg_nightly_pipeline; /build/projects/ROOT-HEAD/src/ROOT/HEAD/proof/xrdinc; -- libraries: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdUtils.so;/build/jenkins/workspace/lcg_nightly_pipel; ine/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdCl.so; -- Found GFAL: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/gfal/1.13.0-0/x86_64-centos7-gcc9-dbg/include/.; -- Found DCAP: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/dcap/2.47.7-1/x86_64-centos7-gcc9-dbg/include; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.7.6; -- Looking for TBB; -- Found TBB: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/tbb/2020_U2/x86_64-centos7-gcc9-dbg (found suitable version ""2020.2"", minimum required is ""2018""); -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Detected Compiler: GCC 9.2.0; -- Performing Test check_cxx_compiler_flag__Wabi; -- Performing Test check_cxx_compiler_flag__Wabi - Success; -- Performing Test check_cxx_compiler_flag__fabi_version_0; -- Performing Test check_cxx_compiler_flag__fabi_version_0 - Success; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0 - Success; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast - Success; -- target",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:10983,install,install,10983,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['install'],['install']
Deployability,"Found it! As it turns out, it is a ""simple"" 2 line fix:; https://github.com/stephanlachnit/root/commit/65ae229c6ba458c610f0a41d32b798a132f385e4. We need to set `LLVM_LINK_LLVM_DYLIB=OFF` for clang, this will prefer static libs. The only disadvantage is that links against *all* LLVM libraries, which means additionally dependencies might need to be installed. In particular LLVM 16 is broken due to https://github.com/llvm/llvm-project/issues/62300.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666954709:349,install,installed,349,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666954709,2,['install'],['installed']
Deployability,"Found it: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/LABEL=ROOT-ubuntu16,SPEC=cxx14,V=6-24/175/console is now failing (since this PR) with; ```; 00:22:07 /mnt/build/night/LABEL/ROOT-ubuntu16/SPEC/cxx14/V/6-24/build/etc/cling/std.modulemap:313:20: error: header 'string_view' not found; 00:22:07 textual header ""string_view""; 00:22:07 ^; 00:22:07 input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; 00:22:07 #include <new>; 00:22:07 ^; ``` . @vgvassilev please consider reverting this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11571#issuecomment-1280484047:101,patch,patches,101,https://root.cern,https://github.com/root-project/root/pull/11571#issuecomment-1280484047,1,['patch'],['patches']
Deployability,"Four our reference, found the issue in ROOT 6.22.06 on lxplus with a debug build; ```; [vpadulan@lxplus772 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-dbg/setup.sh; [vpadulan@lxplus772 ~]$root --version; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; [vpadulan@lxplus772 ~]$cat crash.cc; #include <stdio.h>. template <typename T> auto square(T x) {; auto crash = [](double x) {return x;};; return x*x;; }. void crash(); {; printf(""%d\n"",square(2));; }; [vpadulan@lxplus772 ~]$root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/06 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2020, 15:14:08 |; | From tags/v6-22-06@v6-22-06 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .x crash.cc; 4; root [1] .x crash.cc; root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1106: clang::CXXMethodDecl* clang::CXXRecordDecl::getLambdaCallOperator() const: Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; ```; We are probably missing some backport, to be decided if it is needed.; @michael-mpik if possible please upgrade to the latest ROOT version and let us know if the problem persists. Thanks again for your report :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1034755206:1428,upgrade,upgrade,1428,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1034755206,1,['upgrade'],['upgrade']
Deployability,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""); ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:5315,Install,Installation,5315,https://root.cern,https://github.com/root-project/root/issues/16070,1,['Install'],['Installation']
Deployability,"From CMake's documentation of [CheckCXXSourceCompiles](https://cmake.org/cmake/help/v3.12/module/CheckCXXSourceCompiles.html):; > Note that the contents of CMAKE_CXX_FLAGS and its associated configuration-specific variable are automatically added to the compiler command before the contents of CMAKE_REQUIRED_FLAGS. Therefore, the additions for the standard flag are not necessary. Please let us know how you tried that didn't work, and I'll see how we can fix. I had never had a problem with this particular configuration. We will move to use setting `CMAKE_CXX_STANDARD` soon, which will make a change like this unnecessary in any case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2609#issuecomment-421982593:191,configurat,configuration-specific,191,https://root.cern,https://github.com/root-project/root/pull/2609#issuecomment-421982593,2,['configurat'],"['configuration', 'configuration-specific']"
Deployability,From Guilherme. Applies to legacy PyROOT. To do:; - [ ] check whether standalone `import cppyy` still works when ROOT's python things are installed in site-packages rather than in ROOTLIBDIR; - [ ] check that TPython still finds libcppyy.so,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5907:138,install,installed,138,https://root.cern,https://github.com/root-project/root/pull/5907,1,['install'],['installed']
Deployability,From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13970:218,update,updated,218,https://root.cern,https://github.com/root-project/root/pull/13970,1,['update'],['updated']
Deployability,"From Timur:. When TGQuartz was developed, retina macs did not exist yet and Cocoa; did not provide any API to access scaling-related information.; After they have introduced this API and released retina MacBooks, our GUI; rendering was just fine and worked out of box, our 'pixmap-based' graphics; was fixed by multiplying pixmaps' geometry (by scaling factor) and also setting; the corresponding scaling CTM on the bitmap context. It appears, all these; years we did not know how expensive this scaling transformation is.; As was noticed recently, even a relatively simple poly-line consisting; of 25K segments takes _forever_ to draw - apparently Quartz is working; hard doing hell knows what under the hood (disabling anti-aliasing does not change; anything, for example). This patch is a possible fix, the proper solution would require a serious redesign; in many places (starting from TVirtualX and TCanvas) - for now we simply cancel; the scaling transformation when rendering potentially complex geometry and scale; coordinates manually instead. A macro reproducing this problem on retina display would be:. {; int n = 5000;; double xx[n];; double yy[n];; TRandom r;; for (int i=0; i<n; i++) {; xx[i] = r.Gaus(-1,0.5);; yy[i] = r.Gaus(1,1.5);; }; TGraph *g = new TGraph(n, xx,yy);; g->Draw(""al"");; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1177:187,release,released,187,https://root.cern,https://github.com/root-project/root/pull/1177,2,"['patch', 'release']","['patch', 'released']"
Deployability,"From Timur:. _I think the patch is fine, though I’d probably use kCGNullDirectDisplay (https://developer.apple.com/documentation/coregraphics/kcgnulldirectdisplay?language=objc) and is that 0 after all._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9314#issuecomment-975457065:26,patch,patch,26,https://root.cern,https://github.com/root-project/root/pull/9314#issuecomment-975457065,1,['patch'],['patch']
Deployability,From a cursorary it looks like there are 6 patches missing from the ROOT-patches branch of `clang` (I assume there still aren't any `llvm` patches for 6.28.x): https://github.com/conda-forge/clangdev-feedstock/pull/232/commits/17a083085b411d7d69e0f86b40b19a4a24a383dc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13265#issuecomment-1652805815:43,patch,patches,43,https://root.cern,https://github.com/root-project/root/issues/13265#issuecomment-1652805815,3,['patch'],['patches']
Deployability,"From a practical point of view for RooFit, the fact that the problem is not understood should not block this PR to enter the next patch release, unless the underlying problem is fixed in the meantime. I'll try to create an easy reproducer and open a GitHub issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15733#issuecomment-2147893124:130,patch,patch,130,https://root.cern,https://github.com/root-project/root/pull/15733#issuecomment-2147893124,2,"['patch', 'release']","['patch', 'release']"
Deployability,"From a quick look, the explanation seems to be that `source_location` in `libstdc++` relies on `__builtin_source_location` that was only implemented by https://github.com/llvm/llvm-project/commit/d61487490022aaacc34249475fac3e208c7d767e, released in LLVM 15 while ROOT uses LLVM 13... (edit: same story for `libc++` apparently)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12993#issuecomment-1590752593:238,release,released,238,https://root.cern,https://github.com/root-project/root/issues/12993#issuecomment-1590752593,1,['release'],['released']
Deployability,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file; [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584#issuecomment-1943874457:861,update,updates,861,https://root.cern,https://github.com/root-project/root/issues/14584#issuecomment-1943874457,2,['update'],['updates']
Deployability,"From the dedicated team meeting discussion, the decision was: ""we will not install - and ideally not even build - binary artifacts of our builtins""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7441#issuecomment-821060362:75,install,install,75,https://root.cern,https://github.com/root-project/root/issues/7441#issuecomment-821060362,1,['install'],['install']
Deployability,"From the release notes of `glibc` 2.34 [[1]]:. > The deprecated memory allocation hooks __malloc_hook, __realloc_hook,; __memalign_hook and __free_hook are now removed from the API. Compatibility; symbols are present to support legacy programs but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9031:9,release,release,9,https://root.cern,https://github.com/root-project/root/issues/9031,3,"['release', 'update']","['release', 'updated']"
Deployability,Fully avoid blocking in TCanvas::Update().; Only for expert use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9713:33,Update,Update,33,https://root.cern,https://github.com/root-project/root/pull/9713,1,['Update'],['Update']
Deployability,"Functions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc/LinkDef.h; cling version ROOT_1.0~dev; Looking for C++ headers with:; LC_ALL=C clang-14 -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Found:; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; clang version 13.0.0; Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.5; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Selected GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ignoring nonexistent directory ""/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../x86_64-redhat-linux/include""; ignoring nonexistent directory ""/include""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include""; ignoring duplicate directory ""/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include""; ignoring duplicate directory ""/usr/include"";",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:8357,install,installation,8357,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['install'],['installation']
Deployability,Further discussions in the forum are most likely related https://root-forum.cern.ch/t/streamer-info-disappears-when-opening-a-file-again-for-writing-using-update-option/55140,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171#issuecomment-1838236548:155,update,update-option,155,https://root.cern,https://github.com/root-project/root/issues/14171#issuecomment-1838236548,1,['update'],['update-option']
Deployability,"Fwd decls from rootmap files were injected to ROOT at the startup time.; However with modules we don't need any foward decls as we're preloading; all modules. Our future plan is to remove rootmap files as a whole, but we still need; to support more features (see 2380). So for now we can remove what we; are not using. *edit This patch also contains adding fHasCxxModule as a private member. This improves startup memory by 10 mbytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592:330,patch,patch,330,https://root.cern,https://github.com/root-project/root/pull/2592,1,['patch'],['patch']
Deployability,"G4run.so; #10 0x00007f0763b8b3f7 in G4RunManager::RunInitialization() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #11 0x00007f0763b852c6 in G4RunManager::BeamOn(int, char const*, int) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #12 0x00007f0763b921fb in G4MTRunManager::Initialize() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #13 0x0000559358750187 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum.; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f0761bb4118 in G4RToEConvForGamma::BuildAbsorptionLengthVector(G4Material const*, G4PhysicsLogVector*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #7 0x00007f0761bb6c3f in G4VRangeToEnergyConverter::Convert(double, G4Material const*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #8 0x00007f0761bb0bee in G4ProductionCutsTable::UpdateCoupleTable(G4VPhysicalVolume*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #9 0x00007f0763b9c5e2 in G4RunManagerKernel::RunInitialization(bool) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #10 0x00007f0763b8b3f7 in G4RunManager::RunInitialization() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #11 0x00007f0763b852c6 in G4RunManager::BeamOn(int, char const*, int) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #12 0x00007f0763b921fb in G4MTRunManager::Initialize() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #13 0x0000559358750187 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9952:3155,install,install,3155,https://root.cern,https://github.com/root-project/root/issues/9952,8,"['Update', 'install']","['UpdateCoupleTable', 'install']"
Deployability,"GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13151:184,update,updated,184,https://root.cern,https://github.com/root-project/root/pull/13151,1,['update'],['updated']
Deployability,GL does not seem properly installed there: ; ```; $ glxgears; libGL error: No matching fbConfigs or visuals found; libGL error: failed to load driver: swrast; Error: glXCreateContext failed; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418#issuecomment-1679025586:26,install,installed,26,https://root.cern,https://github.com/root-project/root/issues/13418#issuecomment-1679025586,1,['install'],['installed']
Deployability,"GNU ld has a way to control the symbol versions by 'fixing' the library; appending @@somelib_version. In practice, ROOT's libraries contain a lot of undefined symbols which; are supposed to be resolved either in libc or glibc which are system; libraries. Our symbol dependency chain builder does not look into system; libraries for performance (and legacy reasons). Thus the undefined symbols; from the C/C++ runtime cause us to scan every time all non-system libraries; when we know what would be the outcome. More information can be found in the binutils documentation:; https://sourceware.org/binutils/docs/ld/VERSION.html. This patch optimizes dependency resolution speed for libTreePlayer by 450%",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4112:632,patch,patch,632,https://root.cern,https://github.com/root-project/root/pull/4112,1,['patch'],['patch']
Deployability,GUI Doxygen update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7403:12,update,update,12,https://root.cern,https://github.com/root-project/root/pull/7403,1,['update'],['update']
Deployability,"Gen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:6217,release,release,6217,https://root.cern,https://github.com/root-project/root/pull/12523,1,['release'],['release']
Deployability,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree; - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8295#issuecomment-852125342:128,update,update,128,https://root.cern,https://github.com/root-project/root/issues/8295#issuecomment-852125342,1,['update'],['update']
Deployability,"GitHub repacks archives from time to time, which changes the hash. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12175:162,update,updated,162,https://root.cern,https://github.com/root-project/root/pull/12175,1,['update'],['updated']
Deployability,"GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:1061,install,installed,1061,https://root.cern,https://github.com/root-project/root/issues/12787,1,['install'],['installed']
Deployability,"GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The compilation fails with the following error:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9468:1181,release,release,1181,https://root.cern,https://github.com/root-project/root/issues/9468,6,['release'],['release']
Deployability,"Github isn't allowing me to attach the reproducer either as a tarball or a zip archive.; You can find the tarball on lxplus at ~ssnyder/public/cppyy-crash.tar.bz2, while the individual files are embedded below. setup:; ```; export LCG_ROOT=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu; export LCG_CONFIG=x86_64-el9-gcc13-dbg; . $LCG_ROOT/ROOT/v6-28-00-patches/$LCG_CONFIG/ROOT-env.sh. export LD_LIBRARY_PATH=build:$LD_LIBRARY_PATH; ```. build.sh:; ```; #!/bin/sh; mkdir -p build; genreflex Test.h -o build/TestDict.cc -s selection.xml --rootmap=build/TestDict.rootmap --rootmap-lib=libTestDict.so --std=c++20 ; g++ --std=c++20 -c -fPIC -g -o build/TestDict.o build/TestDict.cc -I$ROOTSYS/include ; g++ -g -shared -o build/libTestDict.so build/TestDict.o -L$ROOTSYS/lib -lCore. ```. Test.h:; ```; #ifndef TEST_H; #define TEST_H. struct DCBase; {; double& operator()();; };. struct DenseBase : public DCBase; {; using DCBase::operator();; template <typename T> int operator()() const;; };. #endif; ```. selection.xml:; ```; <lcgdict>; <class name=""DenseBase""/>; </lcgdict>; ```. test.py:; ```; import ROOT; t = ROOT.DenseBase; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1666906033:359,patch,patches,359,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1666906033,1,['patch'],['patches']
Deployability,Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16002:244,update,updated,244,https://root.cern,https://github.com/root-project/root/pull/16002,1,['update'],['updated']
Deployability,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11227:230,patch,patch,230,https://root.cern,https://github.com/root-project/root/pull/11227,2,['patch'],['patch']
Deployability,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:; ```; graph_nets; sonnet; ipywidgets (for JsMVA); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-2067707416:10,update,update,10,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-2067707416,1,['update'],['update']
Deployability,"Glad if this helped someone.; However, I don't understand how users are supposed to learn about this feature (without googling).; There is nothing in the release notes on that. ; https://root.cern/doc/v630/release-notes.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13606#issuecomment-2104829522:154,release,release,154,https://root.cern,https://github.com/root-project/root/pull/13606#issuecomment-2104829522,4,['release'],"['release', 'release-notes']"
Deployability,Glad this worked out!. There are number of patches proposed. Could you try them out and I can backport a set of them it is confirmed to work for you. I am asking because we are far down the release procedure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1409154838:43,patch,patches,43,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1409154838,2,"['patch', 'release']","['patches', 'release']"
Deployability,"Going for the latter patch, will merge if CI is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9097#issuecomment-940039369:21,patch,patch,21,https://root.cern,https://github.com/root-project/root/pull/9097#issuecomment-940039369,1,['patch'],['patch']
Deployability,"Good bot! @lmoneta I think this is ready to be merged now. (Well, after the release maybe.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2836#issuecomment-439487420:76,release,release,76,https://root.cern,https://github.com/root-project/root/pull/2836#issuecomment-439487420,1,['release'],['release']
Deployability,Good catch @ACA4DFA4 ! I wonder why we don't see the build failure in our CI. Can you tell us your configuration and how you got the error during the build ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12308#issuecomment-1429384204:99,configurat,configuration,99,https://root.cern,https://github.com/root-project/root/pull/12308#issuecomment-1429384204,1,['configurat'],['configuration']
Deployability,Good catch! indeed the real one is DistancetoPtrimitve (small t). The ones with capital T in the index file are typos I guess. In particular in the old User guide. I guess we can leave it as this guide is obsolete now and not updated anymore. ; But we can also fix them for clarity. Those with capital T in the TGeo code are more suspect I guess @agheata should have a look.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16087#issuecomment-2244578228:226,update,updated,226,https://root.cern,https://github.com/root-project/root/issues/16087#issuecomment-2244578228,2,['update'],['updated']
Deployability,"Good evening,; Indeed, I am afraid to use fParamFormats variable in the 'PQexecPrepared' for working database of our experiment because it has not been used before. So, we will switch to the solution after complete tests of all the database content a little bit later.; But ok, i will use a set of tests to check the solution for both PostgreSQL 8 and 12 deployed on our servers tomorrow.; Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-773550355:355,deploy,deployed,355,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-773550355,1,['deploy'],['deployed']
Deployability,"Good morning,. and thanks for the check! . When I try it on a Linux system where I have access to, the macro crashes. So it occurs not only on OSX but also on Linux. . It would be interesting to know whether the problem can be fixed by installing a later version of ROOT, and if so, if the fix is already implemented in one of the official releases. . The latest version I see on https://root.cern/install/all_releases/ is 6.24/06, so a test with 6.27/01 may or may not be relevant for the community. Best regards,; Michael. prompt> root -b; -------------------------------------------------------------------------; | Welcome to ROOT 6.06/08 http://root.cern.ch |; | (c) 1995-2016, The ROOT Team |; | Built for linuxx8664gcc |; | From ***@***.***, Sep 01 2016, 14:28:05 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------------------. root [0] .x crash.cc ; 4; root [1] .x crash.cc . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x000000356faac89e in waitpid () from /lib64/libc.so.6; #1 0x000000356fa3e4e9 in do_system () from /lib64/libc.so.6; #2 0x00007fbb22a2912f in TUnixSystem::StackTrace() () from /opt/ROOTv668/lib/root/libCore.so; #3 0x00007fbb22a2b93c in TUnixSystem::DispatchSignals(ESignals) () from /opt/ROOTv668/lib/root/libCore.so; #4 <signal handler called>; #5 0x00007fbb2095648d in clang::CXXRecordDecl::getLambdaCallOperator() const () from /opt/ROOTv668/lib/root/libCling.so; #6 0x00007fbb1ff8d996 in clang::RecursiveASTVisitor<clang::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*) () from /opt/ROOTv668/lib/root/libCling.so; #7 0x00007fbb200bdc79 in clang::RecursiveASTVisitor<clang::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*) () from /opt/ROOTv668/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1034711184:236,install,installing,236,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1034711184,3,"['install', 'release']","['install', 'installing', 'releases']"
Deployability,"Good morning.; As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-507202226:409,deploy,deploy,409,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-507202226,1,['deploy'],['deploy']
Deployability,"Good point. Indeed, that seems the only place outside of TColor.cxx where it is used:; `grep -r CreateGradientColorTable *`. ```; geom/geompainter/src/TGeoPainter.cxx:323: Int_t color_map_idx = TColor::CreateGradientColorTable(2, stop, red, green, blue, ncolors);; graf2d/graf/src/TAttImage.cxx:67:(see TStyle::CreateGradientColorTable for more details); graf2d/doc/v522/index.html:70:<li> <tt>CreateGradientColorTable</tt> now calls; README/ReleaseNotes/v608/index.md:222: only once taking care of transparency. Also `CreateGradientColorTable` has been; README/ReleaseNotes/v608/index.md:226: `CreateGradientColorTable`.; README/ReleaseNotes/v608/index.md:227:* In `CreateGradientColorTable` we do not need anymore to compute the highest. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8597#issuecomment-876445551:442,Release,ReleaseNotes,442,https://root.cern,https://github.com/root-project/root/issues/8597#issuecomment-876445551,3,['Release'],['ReleaseNotes']
Deployability,"Good question, but unfortunately I have to admit I don't really know why. I didn't have that much time to investigate but needed a fix for 6.28 for which I'm already late. The TFoam class is quite fundamental to RooFit, and the memory increase has affected many users. All I had was this hint by valgrind when checked the reproducer in the commit message:; ```; Conditional jump or move depends on uninitialised value(s); at 0x402E09: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); by 0x501B33D: TDirectory::TDirectory() (in /usr/lib64/root/libCore.so.6.26.10); by 0x5816D81: TDirectoryFile::TDirectoryFile() (in /usr/lib64/root/libRIO.so.6.26.10); by 0x5833AF8: TFile::TFile(char const*, char const*, char const*, int) (in /usr/lib64/root/libRIO.so.6.26.10); by 0xE2D86A6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); by 0xE2D9A17: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,; allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (in /usr/lib64/root/libCling.so.6.26.10); by 0x4FF098E: TROOT::InitInterpreter() (in /usr/lib64/root/libCore.so.6.26.10); by 0x4FF0C9E: ROOT::Internal::GetROOT2() (in /usr/lib64/root/libCore.so.6.26.10); by 0x510209C: ROOT::TGenericClassInfo::GetClass() (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B67CA: TFoamCell::Class() (in /usr/lib64/root/libFoam.so.6.26.10); by 0x504BE7A: TRef::operator=(TObject*) (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B126F: TFoamCell::Fill(int, TFoamCell*, TFoamCell*, TFoamCell*) (in /usr/lib64/root/libFoam.so.6.26.10); Uninitialised value was created by a stack allocation; at 0xE2D8106: TCling::LoadPCM(std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12061#issuecomment-1397463096:445,Update,UpdateIsOnHeap,445,https://root.cern,https://github.com/root-project/root/pull/12061#issuecomment-1397463096,1,['Update'],['UpdateIsOnHeap']
Deployability,"Got also hit by this issue. ; The following change in `/opt/homebrew/Cellar/root/6.30.02/share/root/cmake/ROOTConfig.cmake` (around line 131) seems to have worked for me. ```; if(ROOT_vdt_FOUND AND NOT TARGET VDT::VDT); if(ROOT_builtin_vdt_FOUND); function(find_builtin_vdt); # the function is to create a scope (could use block() but requires CMake>=3.25); set(CMAKE_PREFIX_PATH ${ROOT_INCLUDE_DIRS} ${ROOT_LIBRARY_DIR}); find_dependency(Vdt); endfunction(); find_builtin_vdt(); endif(); endif(); ```. If confirmed, could be integrated into the `ROOTConfig.cmake.in` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113#issuecomment-1907960204:526,integrat,integrated,526,https://root.cern,https://github.com/root-project/root/issues/14113#issuecomment-1907960204,1,['integrat'],['integrated']
Deployability,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11239:2843,install,installing,2843,https://root.cern,https://github.com/root-project/root/issues/11239,2,['install'],"['installed', 'installing']"
Deployability,Great that we see the result of these tests now. I added a commit to fix them (the breakage was because of some major changes in the recently-released XGBoost 2.0).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15183#issuecomment-2046104429:142,release,released,142,https://root.cern,https://github.com/root-project/root/pull/15183#issuecomment-2046104429,1,['release'],['released']
Deployability,"Great!!!; I ran the following snippet against this patch (on a tree containing 1e8 floats in branch ""x""):. ```c++; #include ""ROOT/TDataFrame.hxx""; #include ""TROOT.h""; #include <iostream>. int main(); {; const auto poolSize = 4; // the higher, the worse; ROOT::EnableImplicitMT(poolSize);; std::cout << ""pool size: "" << poolSize << std::endl;. ROOT::Experimental::TDataFrame d(""tree"", ""file.root"");; auto h = d.Histo1D(""x"");; std::cout << ""stddev: "" << h->GetStdDev() << std::endl;; return 0;; }; ```. Before the patch:; ![before](https://user-images.githubusercontent.com/10999034/30320789-02d22b70-97b4-11e7-8215-f90e18fe7ba5.png). and after; ![after](https://user-images.githubusercontent.com/10999034/30320798-085a8a42-97b4-11e7-9698-666386fea052.png). One can see that runtime is now spent doing useful work.; I'm currently running all of TDataFrame tests in a loop just to be sure. Before merging I would like to add a commit that substitutes `ProcessLine` with `Calc` also in the remaining occurrences, but besides this the PR is absolutely green for me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/972#issuecomment-328809356:51,patch,patch,51,https://root.cern,https://github.com/root-project/root/pull/972#issuecomment-328809356,2,['patch'],['patch']
Deployability,"Great, thanks for the prompt update!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9717#issuecomment-1023190129:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/9717#issuecomment-1023190129,1,['update'],['update']
Deployability,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5474#issuecomment-629037999:23,update,update,23,https://root.cern,https://github.com/root-project/root/pull/5474#issuecomment-629037999,2,['update'],['update']
Deployability,"Great, thanks! Yes it would be good to have it in the next 6.26 patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10586#issuecomment-1129052704:64,patch,patch,64,https://root.cern,https://github.com/root-project/root/issues/10586#issuecomment-1129052704,2,"['patch', 'release']","['patch', 'release']"
Deployability,Great. Several `const` at the end of `core/foundation/inc/RtypesCore.h` should also be updated in a similar manner (including `::kNPOS`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1868415079:87,update,updated,87,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1868415079,1,['update'],['updated']
Deployability,"H:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:2033,install,install,2033,https://root.cern,https://github.com/root-project/root/issues/11787,1,['install'],['install']
Deployability,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:11248,Install,Installed,11248,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,HDFS is still in use (albeit it stopped growing) and the last update to the plugin was just '18 months' ago by an external contributor (Evgeny Boger <eugenyboger@gmail.com>). Before removing it we ought to reach you to him.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-453224926:62,update,update,62,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-453224926,1,['update'],['update']
Deployability,"HI, ; I need to revert the update of the reference file of stressRooFIt, which was done after #2033. ; I will then merge. No need to test since the PR CI build skips unfortunately stressRooFit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2108#issuecomment-393143432:27,update,update,27,https://root.cern,https://github.com/root-project/root/pull/2108#issuecomment-393143432,1,['update'],['update']
Deployability,"HI, it was not foreseen, but if you need we can back port #7909 to 6.24 patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7905#issuecomment-848770918:72,patch,patches,72,https://root.cern,https://github.com/root-project/root/issues/7905#issuecomment-848770918,1,['patch'],['patches']
Deployability,Had a similar problem. Resolved it by installing `gcc-c++`. `glibc` was already installed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8157#issuecomment-1310375269:38,install,installing,38,https://root.cern,https://github.com/root-project/root/issues/8157#issuecomment-1310375269,2,['install'],"['installed', 'installing']"
Deployability,"Had to update, because the script missed to cover the headers that were not used in my build configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10083#issuecomment-1063088744:7,update,update,7,https://root.cern,https://github.com/root-project/root/pull/10083#issuecomment-1063088744,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663:603,configurat,configuration,603,https://root.cern,https://github.com/root-project/root/pull/7663,2,['configurat'],['configuration']
Deployability,Handling modulemap files may issue parsing errors or not found errors and our diagnostics client should be prepared for it. This patch fixes an assertion in clang when we see duplicate modulemap files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5176:129,patch,patch,129,https://root.cern,https://github.com/root-project/root/pull/5176,1,['patch'],['patch']
Deployability,Happy to see this moving forward!. > also for the projects using ROOT. this should be sufficiently backwards-compatible. unless a downstream project was somehow setting and using a variable called like that already they should see no change. (P.S. don't forget to update https://root.cern/manual/integrate_root_into_my_cmake_project ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644#issuecomment-1833735925:264,update,update,264,https://root.cern,https://github.com/root-project/root/issues/7644#issuecomment-1833735925,1,['update'],['update']
Deployability,Have you tested this with mariadb and mysql both installed? I'm not sure you could choose mariadb without the first `find_program` overwriting it with mysql.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1993#issuecomment-387771190:49,install,installed,49,https://root.cern,https://github.com/root-project/root/pull/1993#issuecomment-387771190,1,['install'],['installed']
Deployability,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15490:59,configurat,configuration,59,https://root.cern,https://github.com/root-project/root/pull/15490,2,['configurat'],['configuration']
Deployability,"Having that bit set on TBranches causes _a lot_ of thread; contention (~TBranch -> ~TNamed -> RecursiveRemove).; Similarly for leaves. This mitigates performance issues with MT runs on certain samples; where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10729:297,patch,patch,297,https://root.cern,https://github.com/root-project/root/pull/10729,1,['patch'],['patch']
Deployability,Heap' in /opt/root_src/core/base/inc/TObject.h:245; 19: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 20: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'c' is non-null in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 2: Taking false branch in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 3: Calling constructor for 'TCanvasWebSnapshot' in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1195; 4: Calling default constructor for 'TPadWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:93; 5: Calling implicit default constructor for 'TWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 6: Calling default constructor for 'TObject' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'norm' is not equal to 0 in /opt/root_src/hist/hist/src/TF3.cxx:715; 2: Taking false branch in /opt/root_src/hist/hist/src/TF3.cxx:715; 3: Calling constructor for 'TF3' in /opt/root_src/hist/hist/src/TF3.cxx:725; 4: Calling constructor for 'TF2' in /opt/root_src/hist/hist/inc/TF3.h:72; 5: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF2.h:72; 6: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF1.h:373; 7: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/inc/TF1.h:274; 8: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:20050,Update,UpdateIsOnHeap,20050,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,Helgrind found that TCint::CallFunc_Factory indirectly updates; global cint state. Therefore one must take the cint lock before; calling the function. This was the only place (other than; TSelectorCint::Build) which calls this function without first; taking the lock.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/33:55,update,updates,55,https://root.cern,https://github.com/root-project/root/pull/33,1,['update'],['updates']
Deployability,"Hello @Axel-Naumann, @pcanal, are the failed test related to my patch?; Is there something else you want me to change, otherwise could you accept it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099#issuecomment-599408949:64,patch,patch,64,https://root.cern,https://github.com/root-project/root/pull/5099#issuecomment-599408949,1,['patch'],['patch']
Deployability,"Hello @MrCarroll ,. I am sorry you experienced this issue. Are you sure you are using the v6-26-14 tag and not the v6-26-12 tag? The latter has indeed a problem. Our automated release procedure is steered by scripts. One of those scripts was not correctly taking into account a particular case and ended up modifying a C++ file but introduced text which resulted in invalid C++ code - this is the error you reported. Could you please doublecheck that you are using v6-26-14?. Thanks a lot in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14138#issuecomment-1831926444:176,release,release,176,https://root.cern,https://github.com/root-project/root/issues/14138#issuecomment-1831926444,1,['release'],['release']
Deployability,"Hello @guitargeek Sir, while Installing Root to my Ubuntu VM 18.04, during the building of the file ""cmake --build . -- -j3"" the build stops and shows this error every time at the 49% of the build. I have tried to start the process multiple times and even increase space in my Oracle VM but nothing seemed to work. CMake Error at /home/viren/Root CERN/root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-RelWithDebInfo.cmake:16 (message):; Command failed: 2. '/usr/bin/make' 'install'. See also. /home/viren/Root CERN/root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. CMakeFiles/AFTERIMAGE.dir/build.make:73: recipe for target 'AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install' failed; make[2]: *** [AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install] Error 1; CMakeFiles/Makefile2:280: recipe for target 'CMakeFiles/AFTERIMAGE.dir/all' failed; make[1]: *** [CMakeFiles/AFTERIMAGE.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 49%] Built target move_artifacts; [ 49%] Built target clang-tblgen; Makefile:151: recipe for target 'all' failed; make: *** [all] Error 2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758#issuecomment-974903531:29,Install,Installing,29,https://root.cern,https://github.com/root-project/root/issues/8758#issuecomment-974903531,6,"['Install', 'install']","['Installing', 'install', 'install-RelWithDebInfo']"
Deployability,Hello @lmoneta @sanjibansg I have updated this PR for the log operator(placed log operator to the unary operator) and the tests also passes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12945#issuecomment-1602692699:34,update,updated,34,https://root.cern,https://github.com/root-project/root/pull/12945#issuecomment-1602692699,1,['update'],['updated']
Deployability,"Hello @mkrzewic, we try to avoid patching our copy of LLVM / Clang if we can help it. What's the deal with `_REENTRANT`, are there FreeBSD headers expecting this to be set or is this ROOT checking something that isn't needed on FreeBSD?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13069#issuecomment-1602326602:33,patch,patching,33,https://root.cern,https://github.com/root-project/root/pull/13069#issuecomment-1602326602,1,['patch'],['patching']
Deployability,"Hello @philippe554 ,; Indeed, we changed this behaviour a few releases ago, IIRC the reason was that the progressive output implementation had some problems, so we opted for capturing the output and releasing it only at the end, even at the expense of not covering cases such a progress bar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8989#issuecomment-919060975:62,release,releases,62,https://root.cern,https://github.com/root-project/root/issues/8989#issuecomment-919060975,2,['release'],['releases']
Deployability,"Hello @sethrj, is this issue still relevant? If I understand your ""additional context"" correctly, this might be fixed by the recent upgrade to LLVM 16 in ROOT. Let us know what you think! If not, I'll close this issue soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524#issuecomment-1861367307:132,upgrade,upgrade,132,https://root.cern,https://github.com/root-project/root/issues/9524#issuecomment-1861367307,1,['upgrade'],['upgrade']
Deployability,Hello Jan. I think what is missing is the motivation/documentation of this new functionally. May be it can go in the THistPainter and TGraphPainter doc ? right now it is not easy to understand how to use it. You can just update the files and push the modified version in the branch PR and it will appear here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1839#issuecomment-382723304:221,update,update,221,https://root.cern,https://github.com/root-project/root/pull/1839#issuecomment-382723304,1,['update'],['update']
Deployability,Hello Jan. Sounds good and ready to be committed. We are now in the process of making ROOT 6.14; I think it is better if we commit your changes just after we do this new release. That will put less stress on us to polish this new feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1839#issuecomment-383894316:170,release,release,170,https://root.cern,https://github.com/root-project/root/pull/1839#issuecomment-383894316,1,['release'],['release']
Deployability,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>; its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>; [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed.; Best regards,; Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node?. —; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>.; You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958#issuecomment-1996872551:501,install,install,501,https://root.cern,https://github.com/root-project/root/issues/14958#issuecomment-1996872551,2,['install'],['install']
Deployability,"Hello Sergey,. I'm using version 3.7.3-1 of `nlohmann/json.hpp`. Here is the output from the apt -s install nlohmann-json3-dev command. ```; Reading package lists... Done; Building dependency tree ; Reading state information... Done; nlohmann-json3-dev is already the newest version (3.7.3-1).; 0 upgraded, 0 newly installed, 0 to remove and 36 not upgraded.; ```. Dear Bertrand,. I will definitely disable root7 and try to recompile ROOT. Thank you for this suggestion. With best regards,; Denys.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1473294498:100,install,install,100,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1473294498,4,"['install', 'upgrade']","['install', 'installed', 'upgraded']"
Deployability,"Hello both of you!; Thank you so much for the quick reply!; I went through my text again and didn't notice it repeated itself...! Sorry for that!. Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""?. I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use!. Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1916915766:241,install,install,241,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1916915766,4,['install'],"['install', 'installation']"
Deployability,"Hello everyone!; This is Akshay Vashistha, a GSOC student working on AutoEncoders. Currently I have implemented the Denoise Layer and working on stacking up the layers. After this, I will write some tests for same.; My next patch will have a properly implemented stacked layer architecture and some tests for verifying the correctness.; Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/686:224,patch,patch,224,https://root.cern,https://github.com/root-project/root/pull/686,1,['patch'],['patch']
Deployability,"Hello everyone,; This is Akshay Vashistha, a GSOC student working on AutoEncoder implementation. Here is my first patch. It has a base class layer for autoencoders, a denoise layer and StackedNets. The denoise layer can corrupt, encode and reconstruct the input. The stacked layer has both Pretraining and finetuning steps. ; Currently working on writing tests to check the correctness of code. In my next patch I will add some verified tests with required changes. Thank You.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/708:114,patch,patch,114,https://root.cern,https://github.com/root-project/root/pull/708,2,['patch'],['patch']
Deployability,"Hello everyone,; This is Akshay Vashistha, a GSOC student working on Autoencoder implementation. Here is my first patch. Currently it has a denoise layer and finetune layer for stacking.; In my next patch I will add verified tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/696:114,patch,patch,114,https://root.cern,https://github.com/root-project/root/pull/696,2,['patch'],['patch']
Deployability,"Hello, . Instructions at https://root.cern/install/build_from_source/ suggest to run. ```; git clone --branch latest-stable https://github.com/root-project/root.git root_src; ```. However, the branch `latest-stable` doesn't seem to exist in this project. There is no branch with the keyword stable or latest in the project. Cheers,; Karolos",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8188:43,install,install,43,https://root.cern,https://github.com/root-project/root/issues/8188,1,['install'],['install']
Deployability,"Hello, any update on this issue? This indeed seems to be annoying if there is at least one failed pseudoexperiment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6949#issuecomment-811037378:11,update,update,11,https://root.cern,https://github.com/root-project/root/issues/6949#issuecomment-811037378,1,['update'],['update']
Deployability,"Hello, what is the status for this?; Is it going to be included in any 6.24 patch soon? We currently have a workaround so that our current software works, but we have some necessary ongoing development that is incompatible with the workaround and needs the patch for this issue. This necessary development has been on hold for several months already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-919888995:76,patch,patch,76,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-919888995,2,['patch'],['patch']
Deployability,"Hello,. At the moment, the `ROOT::TLorentzVector` class uses a pseudorapidity-based calculation for the commonly-used DeltaR distance between vectors. For massive objects, such as jets, the rapidity should often be used instead. I have implemented a small switch within the `TLorentzVector::DeltaR` function to allow users to make this calculation with the vector's rapidity, instead of pseudorapidity. This has a default value of `kFALSE`, which means that the current behaviour will be the default one. I have cross-checked this new functionality with the `fastjet::pseudojet::delta_R` implementation and an internal ATLAS one, which all give the same results when performing the rapidity-based calculation. Please let me know if I have violated any contribution guidelines, and I will update this PR accordingly!. 🍻 Matt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087:788,update,update,788,https://root.cern,https://github.com/root-project/root/pull/7087,1,['update'],['update']
Deployability,"Hello,. We are trying to build root branch [v6-26-00-patches](https://github.com/root-project/root/compare/v6-26-00-patches), but it does not compile after commit 80c1ab6b6dab02c46d8cc66262686fd718b57ece. Here the stacktrace:; ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:184:16: error: 'std::string TDirectoryLevelIter::GetContent(const string&)' marked 'override', but does not override; 184 | std::string GetContent(const std::string &kind) override; | ^~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx: In member function 'std::string TDirectoryLevelIter::GetContent(const string&)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:11: error: 'GetContentKind' was not declared in this scope; did you mean 'GetContent'?; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~~~~~~; | GetContent; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:35: error: 'kFileName' was not declared in this scope; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:187:17: error: 'fFileName' was not declared in this scope; 187 | return fFileName;; | ^~~~~~~~~; ```; It successfully build up to commit https://github.com/root-project/root/commit/58c6a86fbe840a0f7fdd95d710755e925300120f. We are targeting `el8`, `amd64` and `gcc11`. Could you",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12110:53,patch,patches,53,https://root.cern,https://github.com/root-project/root/issues/12110,2,['patch'],['patches']
Deployability,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6027:16,install,installed,16,https://root.cern,https://github.com/root-project/root/pull/6027,4,"['install', 'patch', 'release']","['installed', 'patch', 'patches', 'release']"
Deployability,"Hello,. it is Vladimir working on the Convolutional Neural Networks in TMVA,; as a part of the Google Summer of Code 2017. This is my first patch for now,; where I have created the entire CNN structure and implemented and tested; the reference architecture. I had some problems with the backpropagation,; so I was not able to test that. For everything else there are tests. In the next patch which I plan to be before the first evaluation starts, I will include a CPU; architecture implementation, and a correct backporpagation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/664:140,patch,patch,140,https://root.cern,https://github.com/root-project/root/pull/664,2,['patch'],['patch']
Deployability,"Hello,. the bug this PR is adressing could be seen by random failures of the test gtest-hist-hist-test-TGraphMultiErrorsTests:; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74654/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74449/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/73886/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/. I have to apologize for this bug. It was caused by using an attribute to allocate an array before its value had been updated. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4780:695,update,updated,695,https://root.cern,https://github.com/root-project/root/pull/4780,1,['update'],['updated']
Deployability,"Hello,. these are exactly the same changes as PR #6027; Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6089:122,patch,patches,122,https://root.cern,https://github.com/root-project/root/pull/6089,3,['patch'],['patches']
Deployability,"Hello,. this patch adds the possibility to specify a line width to be used when markers are drawn. Recently I stumbled upon this and searched for an already existing solution, but I could only find other people looking for something like this, so I decided to implement it. Before I start to describe the changes, let me mention the most important point first: I only tested the feature under Linux, since I have neigther a ROOT installation under Windows nor a Mac. Since the feature also changes files associated with drawing under Windows and MacOS, I consider it absolutly mandatory to test the feature under those systems before merging this pull request. Now back to the actual feature. Since an image says more than 1000 words here an image of the outcome using the implemented feature which is also part of the feature description in the class TAttMarker:; ![c](https://user-images.githubusercontent.com/5320187/71742710-ee6cc580-2e62-11ea-900d-ba546e27f474.png). **The attribute fMarkerLineWidth**; The storing of the parameter is done by the attribute fMarkerLineWidth of the TAttMarker class. I checked all daughter classes of TAttMarker for the need of changes due to this addition. Furthermore, I added a line width dropdown field to the TAttMarkerEditor which works the same way as in the TAttLineEditor. Obviosly the line width only makes sense for marker styles that consist of lines and not areas. To check whether the currently set marker style is influenced by the marker line width I added the function HasMarkerLineWidth to TAttMarker. **Marker size and draw method**; Since the calculation of the size of the marker assumed ultimatly thin lines up to now, the bounding box of the marker would have increased when setting a larger marker line width. To counter that, I decreased the marker size by the amount it would have increased due to the line width. However, note that this only works with round line caps and round line joins, since for example with miter joins the boundin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721:13,patch,patch,13,https://root.cern,https://github.com/root-project/root/pull/4721,2,"['install', 'patch']","['installation', 'patch']"
Deployability,"Hello,; This is the Implementation of DataLoader for TMVA according to new design.; - Tutorials updated; - Variable Importance implemented and tested.; - New ROC algorithm implemented; - PyMVA now support python 3. Cheers,; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/119:96,update,updated,96,https://root.cern,https://github.com/root-project/root/pull/119,1,['update'],['updated']
Deployability,"Hello,; We were trying to migrate some of our production to LCG100 today and we were surprised to discover that we get the crash again with 6.24. ; Does this above means that the patch was reverted and is not actually present in any existing ROOT release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-865043249:179,patch,patch,179,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-865043249,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hello,; sorry for this last modification. ; The .FITS file I initially decided to include was produced by an experiment specifically for an open-source project and I was not sure it could be made available from another repository ([see discussion here, if you are interested](https://github.com/open-gamma-ray-astro/joint-crab/issues/7)). Therefore I included one of the [test files](https://github.com/sherpa/sherpa-test-data) that are shipped with the [sherpa X-ray analysis tools](https://cxc.harvard.edu/sherpa/).; All NASA mission data are released without license or restriction, so it should be fine to include it in ROOT. I changed the input file and the tutorial, sorry if you have to run the tests again. ; It was an important issue to address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099#issuecomment-598036216:545,release,released,545,https://root.cern,https://github.com/root-project/root/pull/5099#issuecomment-598036216,1,['release'],['released']
Deployability,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious; ```; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime.; ```; Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337#issuecomment-1890406125:51,configurat,configuration,51,https://root.cern,https://github.com/root-project/root/issues/14337#issuecomment-1890406125,2,['configurat'],['configuration']
Deployability,"Helper.cxx:. ```; // NOTE: We cannot instantiate the scope: not a valid decl.; // Need to unload it if this decl is a definition.; // But do not unload pre-existing fwd decls. Note that this might have failed; // because several other Decls failed to instantiate, leaving several Decls; // in invalid state. We should be unloading all of them, i.e. inload the; // current (possibly nested) transaction.; auto *T = const_cast<Transaction*>(m_Interpreter->getCurrentTransaction());; m_Interpreter->unload(*T);; *setResultType = nullptr;; return 0;; ```. The call stack here is. ```; #0 0x00007fffef9dde70 in cling::Interpreter::unload(cling::Transaction&)@plt; (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:12051,patch,patches,12051,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,Here (master) we see your mods: https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile; But here (6.24) we don't: https://github.com/root-project/root/blob/v6-24-00-patches/documentation/doxygen/Doxyfile; but https://root.cern/doc/master/ROOT.qch does not work either ... May better check on master first ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1010896507:190,patch,patches,190,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010896507,1,['patch'],['patches']
Deployability,"Here is a backtrace for `processExecutorH1Test`:; ```; $ gdb root/multicore/processExecutorH1Test ; GNU gdb (Gentoo 10.1 vanilla) 10.1; Copyright (C) 2020 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root/multicore/processExecutorH1Test...; (gdb) run; Starting program: /srv/root/roottest-build/root/multicore/processExecutorH1Test ; warning: File ""/usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /usr/lib/root/9999/lib/libCore.so.6.25.01-gdb.py; line to your configuration file ""/home/amadio/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; +++ Executing tProcessExecutorH1Test ......................................... +++; [Detaching after vfork from child process 340387]; [Detaching after vfork from child process 340389]; [Detaching after vfork from child process 340391]; [Detaching after vfork",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823920792:505,configurat,configuration,505,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823920792,2,['configurat'],['configuration']
Deployability,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt); * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385680755:168,patch,patch,168,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385680755,1,['patch'],['patch']
Deployability,"Here is an example comparing the new options ""SAME0"" and ""SAMES0"" (on the right side) to the default one ""SAME"" and ""SAMES"" (on the left) [test1.C.txt](https://github.com/root-project/root/files/2680271/test1.C.txt), the options are printed on the plots. And here is how they look from my locally complied version:; ![c1](https://user-images.githubusercontent.com/17641689/50006820-f6549000-ffe9-11e8-8345-232bce21326e.png). Note that, even the ""default"" options, there is a fix applied to show the correct range in the palette axises.; Without this fix, i.e, in the root-6.14/08, they look this:; ![c2](https://user-images.githubusercontent.com/17641689/50007174-10db3900-ffeb-11e8-8685-61320aea8103.png). I actually forgot to update the help document. Sorry...shall I add it in a new commit, or maybe you prefer to do it to make sure it's well integrated with other parts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3150#issuecomment-447334380:728,update,update,728,https://root.cern,https://github.com/root-project/root/pull/3150#issuecomment-447334380,2,"['integrat', 'update']","['integrated', 'update']"
Deployability,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,; `std::unordered_multimap` classes into JSON object. This only possible when key typename; is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted; into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}; std::map<std::string,int> obj;; obj[""name1""] = 11;; obj[""name1""] = 22;; auto json = TBufferJSON::ToJSON(&obj, 5);; // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}; auto dflt_json = TBufferJSON::ToJSON(&obj);; // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]; ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}; class Container {; int field{5};; std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion; };; ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3701#issuecomment-483560946:26,release,release,26,https://root.cern,https://github.com/root-project/root/pull/3701#issuecomment-483560946,1,['release'],['release']
Deployability,Here is how we would set ROOT_INCLUDE_PATH for the build https://gitlab.cern.ch/sft/lcgcmake/-/commit/f50af97822f3fc4dba9fd56bee3cb76c39fe5aeb. For cuda we had to add a location to ROOT_INCLUDE_PATH for the view after the installation https://gitlab.cern.ch/sft/lcgcmake/-/commit/cc14dbbb56a1cb4b59e68c11b9df3f75c21fc1ba; (Vc is already part of the standard include directory of the view),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1025708923:222,install,installation,222,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1025708923,1,['install'],['installation']
Deployability,"Here is my output:. ```; $ sw_vers; ProductName:		macOS; ProductVersion:		15.0; BuildVersion:		24A335. $ clang --version; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin. $ ls -l /Library/Developer/CommandLineTools/SDKs/; total 0; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX.sdk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Apr 30 18:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Aug 21 11:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX15.sdk -> MacOSX15.0.sdk. $ clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:225,Install,InstalledDir,225,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['Install'],['InstalledDir']
Deployability,Here is the build log -DLLVM_BUILD_TYPE=Debug with http://cdash.cern.ch/upload/5bf095bd99721b08d57f37a4e561dbbb08db6eaf/ROOT-v6-26-00-patches-build.log; Or do you need some other output?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9641#issuecomment-1020361007:134,patch,patches-build,134,https://root.cern,https://github.com/root-project/root/pull/9641#issuecomment-1020361007,1,['patch'],['patches-build']
Deployability,"Here is the current status:; ```; C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression; UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Test project C:/root-dev/build/x64/relwithdebinfo; Constructing a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 2338; Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake""; 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462; 2338: Environment variables:; 2338: ROOT_HIST=0; 2338: Test timeout computed to be: 1500; 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc; 2338: [==========] Running 1 test from 1 test suite.; 2338: [----------] Global test environment set-up.; 2338: [----------] 1 test from ReadRules; 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace; 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9354#issuecomment-2370611327:130,Update,UpdateCTestConfiguration,130,https://root.cern,https://github.com/root-project/root/issues/9354#issuecomment-2370611327,2,['Update'],['UpdateCTestConfiguration']
Deployability,Here is the patch I applied for the Fedora/EPEL build:; https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:; git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8459#issuecomment-864020332:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/issues/8459#issuecomment-864020332,2,['patch'],['patch']
Deployability,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```; -- ROOT Configuration . System Linux-5.8.13-arch1-1; Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 10.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6575#issuecomment-704853627:138,Configurat,Configuration,138,https://root.cern,https://github.com/root-project/root/issues/6575#issuecomment-704853627,2,"['Configurat', 'Install']","['Configuration', 'Install']"
Deployability,Here the place where `canvas.Draw()` is implemented:. https://github.com/root-project/root/blob/master/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L594. There is no `Update`. ; Probably one can try to implement one - there is [update_display](https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html#IPython.display.update_display) method in `iPython`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13631#issuecomment-1714033522:173,Update,Update,173,https://root.cern,https://github.com/root-project/root/issues/13631#issuecomment-1714033522,1,['Update'],['Update']
Deployability,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened.; [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-740294630:10,update,updated,10,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-740294630,1,['update'],['updated']
Deployability,"Hey Lorenzo!. Certainly, I will start Right now. This PR is considerably more complex and currently includes copy pasted parts from the merged PRs (I had to do it for temporary tests before we had merged them as the convolutional layer depends on them). As a result a simple rebase and conflict fix would be simple, but would also leave a very messy history. What I can do instead is start a new branch from the updated master and carefully choose the new changes with better messages. I should be able to do that within 1-2 days and it will yield a clean history. Unless w are in a big hurry I plan to go with th me second approach but please let me know if you prefer the first one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2216#issuecomment-402624497:412,update,updated,412,https://root.cern,https://github.com/root-project/root/pull/2216#issuecomment-402624497,2,['update'],['updated']
Deployability,"Hey! One commit I found locally, may be used to fix #7441 . - Enabled by the XRDCL_LIB_ONLY=ON cmake flag; - Prevents building the client binaries such as xrdcp in our build dir; but not exposing them in the installation. Fixes #7441",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7539:208,install,installation,208,https://root.cern,https://github.com/root-project/root/pull/7539,1,['install'],['installation']
Deployability,"Hey, can you return back the line because *_.rdicts are installing somewhere else following two commit messages https://github.com/root-project/root/commit/5cad428dc71929b9f4c202fadfe5934513cd978a and https://github.com/root-project/root/commit/8afa8841936b35167515789f40934d660c6455ab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4751#issuecomment-573055861:56,install,installing,56,https://root.cern,https://github.com/root-project/root/pull/4751#issuecomment-573055861,1,['install'],['installing']
Deployability,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7204#issuecomment-779029592:134,configurat,configuration,134,https://root.cern,https://github.com/root-project/root/pull/7204#issuecomment-779029592,1,['configurat'],['configuration']
Deployability,Hi ; The PR looks good to me. Thank you for this nice contribution !; The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632#issuecomment-708545648:119,integrat,integrator,119,https://root.cern,https://github.com/root-project/root/pull/6632#issuecomment-708545648,2,"['integrat', 'release']","['integrator', 'release']"
Deployability,"Hi @AaronBallman,. Sorry for summoning you on a random PR but we seem to have local patch in Clang fixing a valid usecase where we want to use raw string literals in attributes that take strings. Do you see a way forward to make this patch upstreamable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1168933294:84,patch,patch,84,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168933294,2,['patch'],['patch']
Deployability,"Hi @AlkaidCheng, thanks for reporting - this is on our plan of work already - keep an eye on the next ROOT releases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15032#issuecomment-2017694770:107,release,releases,107,https://root.cern,https://github.com/root-project/root/issues/15032#issuecomment-2017694770,1,['release'],['releases']
Deployability,"Hi @AlkaidCheng, thanks for reporting this. This is a known issue that I want to fix for the next release 6.28. All functions that return an owning pointer in C++ like `createNLL` and many others result in a memory leak in Python, because Python doesn't know it should delete the object. That means Python code with RooFit has leaks all over the place as it is now, and it's not worth to open an issue for all of them. But let's leave this one open because it's actually the first issue about this. The reason it is not so quickly fixed is that I'm still investigating how I might flag functions on the C++ side such that PyROOT automatically knows that it should take ownership, without having to make an explicit Pythonization. My WIP is in this PR: https://github.com/root-project/root/pull/9392. But for now, you can circumvent the problem by telling PyROOT explicitly that it owns the returned NLL:; ```Python; def test(pdf, ds):; nll = pdf.createNLL(ds); ROOT.SetOwnership(nll, True); ```. This method works for all the objects that you would have to `delete` yourself in C++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11397#issuecomment-1256350153:98,release,release,98,https://root.cern,https://github.com/root-project/root/issues/11397#issuecomment-1256350153,1,['release'],['release']
Deployability,"Hi @Asxcvbn,. The patch has been sent for inclusion in the LLVM 9 upgrade branch. This issue will be closed once this branch is merged into `master`. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6812#issuecomment-771192387:18,patch,patch,18,https://root.cern,https://github.com/root-project/root/issues/6812#issuecomment-771192387,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"Hi @Axel-Naumann , ; thanks for the patch!; I get past rootcling and also past Core (the target that failed originally). But soon after it's still failing with; ...; [ 76%] Generating G__XMLIO.cxx, ../../lib/XMLIO.pcm; In file included from input_line_10:3:; /home/menke/Downloads/root_build/include/ROOT/RVec.hxx:54:10: fatal error: 'vdt/vdtMath.h' file not found; #include <vdt/vdtMath.h>; ^~~~~~~~~~~~~~~; ...; Cheers,; --Sven",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12659#issuecomment-1522018740:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/issues/12659#issuecomment-1522018740,1,['patch'],['patch']
Deployability,"Hi @Axel-Naumann ,. >IEEE 754 brings defined behavior to ""degenerate"" (not in the IEEE 754 sense) cases. That is true. But does not help practically. It is better that a program (e.g. with complicated integration) fails with FPE in 30 minutes than ends successfully in a week and delivers a well-defined result '-NaN'. Or, even worse, produces a result that looks fine but is incorrect and then user (e.g. me) will spend some days to understand where the problem is. > as the optimizer might change fp operations. Yes, GCC tries to keep them ""fp-safe"" but that might change in any of the upcoming versions. As far as I understand, very formally clang did nothing wrong there, it is just GCC that tried to be a bit smarter -- in the code I've copied from TColor all the used constants should be in float and not in (standard) double. No FPE in this case. ; So one can blame the code, but because mixing floats and double constants is a common practice I would blame the compiler. . >is there something left to be clarified. Ok. As far as I understood, changing the flags for the release builds is not an option, right?; If so, would a patch that assures all constants in TColor::RGB2HLS are float an acceptable solution? I can do that. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713589532:201,integrat,integration,201,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713589532,3,"['integrat', 'patch', 'release']","['integration', 'patch', 'release']"
Deployability,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere.; As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version?. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6430#issuecomment-711169243:462,release,release,462,https://root.cern,https://github.com/root-project/root/issues/6430#issuecomment-711169243,1,['release'],['release']
Deployability,"Hi @Axel-Naumann ,. I would say ""both"". That is an event display from ZEUS, ""ported"" from ROOT5/Make to ROOT6/CMake. The userbase is small, so whenever someone needs it, some smaller of greater issues arise for various reasons (e.g. ROOT/OS/compiler update) and one has to debug them with the people who need that. No clear separation of ""debug"" and ""production"". And well, this event display is kind of small and fast, so there are no reasons to disable debug information ""in production"". Speed is lesser issue than correctness and stability. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713672604:250,update,update,250,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713672604,2,['update'],['update']
Deployability,"Hi @Axel-Naumann ,. it should be via an LCG release. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1748442920:44,release,release,44,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1748442920,1,['release'],['release']
Deployability,"Hi @Axel-Naumann ,. my understanding (@scott-snyder should confirm) is that this impacts unit tests rather than production, so it's not a blocker to the migration and so we can wait for the patch releases as you propose. James.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1745122666:190,patch,patch,190,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1745122666,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"Hi @Axel-Naumann ,. no, I was running just from home directory. But, let me have a look if 1) this behaviour will be seen after the recent updates of root in EPEL; 2)if I'm able to provide a simple reproducer. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8904#issuecomment-908272636:139,update,updates,139,https://root.cern,https://github.com/root-project/root/issues/8904#issuecomment-908272636,2,['update'],['updates']
Deployability,"Hi @Axel-Naumann ,. we just discussed a bit more with @scott-snyder and in fact this would introduce some problems in our workflow, because the unit tests would all start to fail. This will then lead to general CI failures and so in practice prevents us from switching our main nightly build to LCG_104. So unfortunately, contrary to what I wrote above, I think this does present us with a blocker in terms of introducing LCG_104 into our CI/build system. . We had planned to switch our CI to AL9/LCG104 next week, and we'd really like to keep to that schedule. Is there any possibility that a patch could be produced on that timescale? Even based on the fix proposed by Scott?. Thanks!. James",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1747053630:594,patch,patch,594,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1747053630,1,['patch'],['patch']
Deployability,"Hi @Axel-Naumann ,; Could be this update also included in the next patch tag? We will need this fix for the new VMC packages tags. The commit hash in the master branch is d90fc155397fd8bf986c03d36cd35f9f1a242b40.; Thank you,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4459#issuecomment-571074215:34,update,update,34,https://root.cern,https://github.com/root-project/root/pull/4459#issuecomment-571074215,2,"['patch', 'update']","['patch', 'update']"
Deployability,"Hi @Axel-Naumann thanks for this! Just a reminder, we need to reenable here the `AsNumpy` test, which I commented out right before the cppyy update:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/test/CMakeLists.txt#L88. That test should pass with your changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5036#issuecomment-588188247:141,update,update,141,https://root.cern,https://github.com/root-project/root/pull/5036#issuecomment-588188247,1,['update'],['update']
Deployability,"Hi @Axel-Naumann,. > Are you saying std::experimental::string_view is guaranteed to be the same type as std::string_view. You are right, there is no guarantee. That is why one should be carefull. However, the situation that I've described above is more typical than not. . > but try to call a ROOT function that takes a string_view as argument; > Does your patch allow that to compile in C++17, with ROOT built in C++14?. It does not and I'm sure to any ROOT authors that is known w/o any tests. But that is not the goal to cover all the cases.; The goal is to be able to be practical and, most important -- deal with the cases where `string_view` is *not* involved at all. If I use TH1*, TCanvas and couple more classes and never `string_view` as an argument, the later should not be relevant. The rare cases when std::string_view could be actually needed can be treated just with some code separation.; ```; [user@host ~]$ g++ -c main.cxx $(root-config --libs --cflags) -std=c++17 -o main.o; [user@host ~]$ g++ -c partial.cxx $(root-config --libs --cflags) -std=c++14 -o partial.o; [user@host ~]$ g++ main.o partial.o -o main.exe $(root-config --libs --cflags) ; [user@host ~]$ cat partial.cxx ; #include <TClassEdit.h>; int partial(){; std::string_view sv(""bool"");; TClassEdit::STLKind(sv);; return 0;; }; ```. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108#issuecomment-833702297:357,patch,patch,357,https://root.cern,https://github.com/root-project/root/pull/8108#issuecomment-833702297,1,['patch'],['patch']
Deployability,"Hi @Axel-Naumann,. This is not really a pull request but I thought it might be a good way to get feedback from you guys and maybe some help improving it. This is not meant for merging, we are fine with an out of tree patch for now, but we would of course be very happy if something like this becomes upstream eventually. This is a very ""hacky"" try to be able to create ROOT files with; deterministic checksum that is not dependent on timestamp or hostname or; anything: Create a file with the same content twice on different; machines should yield the same checksum (assuming they have the same root file format version and same class definitions ...). We cannot really modify the software using these checksums and it's not just ROOT files but also other files in there so a distinction between ""content checksum"" and ""file checksum"" would be rather tricky. That's why we went for the brutal approach. We need this mostly for small files in a well controlled environment:; The file is created in one place at one time and not incrementally over; a long time, no threads. . So we would be fine with a global flag to not store time dependent information in files but it is of course ugly. A slightly less horrific version might be to have a `TDeterministicFile` which behaves like `TFile` with the only difference that it has a zeros for dates/uuids but I don't know the classes well enough to judge if that is feasible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4083:217,patch,patch,217,https://root.cern,https://github.com/root-project/root/pull/4083,1,['patch'],['patch']
Deployability,"Hi @DanteNiewenhuis ,. Thanks for the report. I have tested on Fedora36 with Python 3.11.2 and numpy 1.24.3. I cannot reproduce the issue. numpy works with Python 3.11 only since version 1.24, so I tested 1.24.[0-3] but still no segfault. I will try to build in a ubuntu container and report back. Also, could you paste the build configuration you used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874#issuecomment-1562635423:330,configurat,configuration,330,https://root.cern,https://github.com/root-project/root/issues/12874#issuecomment-1562635423,1,['configurat'],['configuration']
Deployability,"Hi @DrJanHartmann ,; Indeed you are not the only one using that pattern https://github.com/root-project/root/issues/10090 . The extra feature will be available in the next patch release.; The new behaviour will be the default when calling `root` from the command line. In general, you can create your own TRint application that by default will not terminate on unknown arguments",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8850#issuecomment-1079216681:172,patch,patch,172,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079216681,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @EdoPro98,; Thank you for this contribution, looks good to me! Just for our reference, could you post a reproducer of the error encountered due to the missing `#include`, plus some info about the environment like: how did you install ROOT, compiler version, cmake invocation arguments (if you built ROOT yourself) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7908#issuecomment-822248054:229,install,install,229,https://root.cern,https://github.com/root-project/root/pull/7908#issuecomment-822248054,1,['install'],['install']
Deployability,"Hi @Es-said ,. this is not a ROOT bug. It looks like the ROOT source directory that you are passing to the cmake configuration command does not contain ROOT sources (which come with a `CMakeLists.txt` file). Feel free to use https://root-forum.cern.ch for further user support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11819#issuecomment-1335084288:113,configurat,configuration,113,https://root.cern,https://github.com/root-project/root/issues/11819#issuecomment-1335084288,1,['configurat'],['configuration']
Deployability,"Hi @Fesfandi ,. Do you have any updates on this? If not, I will close the issue in a couple of days. If you find different errors when installing ROOT through one of the official ways, please open another issue or ask about it on the [forum](root-forum.cern.ch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158#issuecomment-1419266422:32,update,updates,32,https://root.cern,https://github.com/root-project/root/issues/12158#issuecomment-1419266422,2,"['install', 'update']","['installing', 'updates']"
Deployability,"Hi @Fesfandi ,. I am not completely sure what you mean by ""ROOT VM"" and I don't think there is any release package shipped via cernbox. To install ROOT, please follow the installation instructions at https://root.cern/install",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158#issuecomment-1408253053:99,release,release,99,https://root.cern,https://github.com/root-project/root/issues/12158#issuecomment-1408253053,4,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"Hi @GiacomoXT , we enabled SOFIE on all ubuntus. This will propagate to all released binary versions of ROOT. Let me know if you need a release of ROOT that includes sofie for Ubuntu: we were planning a 6.32 release anyway, and we can adjust the timeline according to the needs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16774#issuecomment-2446057319:76,release,released,76,https://root.cern,https://github.com/root-project/root/issues/16774#issuecomment-2446057319,3,['release'],"['release', 'released']"
Deployability,"Hi @Harshalzzzzzzz ,; ROOT has a high-level data analysis interface called [RDataFrame](https://root.cern/doc/master/classROOT_1_1RDataFrame.html), you can take a look at the docs and try reading and running some of the tutorials [here](https://root.cern/doc/master/group__tutorial__dataframe.html). `RDataFrame` returns results wrapped in the [RResultPtr](https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html) type, through which we implement lazy execution (data processing is triggered when a user accesses the contents of a `RResultPtr`, _not_ when they request the result). RResultPtr has interface and semantics similar to [std::shared_ptr](https://en.cppreference.com/w/cpp/memory/shared_ptr), but currently it's missing a way to release ownership of its contents. `RResultPtr<T>::Release` is a simple method that would mimic the semantics of `std::shared_ptr::release`: it must return a `T*` and empty the `RResultPtr`. What needs to be done concretely:. - [x] add the `RResultPtr::Release` method in RResultPtr.hxx. It should be implemented in terms of `fObjPtr.release()` and it should also set `fActionPtr` and `fLoopManager` to null; - [x] add tests for the feature in `tree/dataframe/test/dataframe_resptr.cxx`, in particular making sure that `Release` and the ResultPtr's move-constructor have consistent behavior; - [x] add logic to the current method `RResultPtr::GetValue` to throw an exception if it's called on a null `RResultPtr`. Thank you in advance for any contribution, and feel free to ask more questions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047#issuecomment-771507725:749,release,release,749,https://root.cern,https://github.com/root-project/root/issues/7047#issuecomment-771507725,9,"['Release', 'release']","['Release', 'release']"
Deployability,"Hi @MarkusFrankATcernch ,. I am sorry you experienced this issue.; We know that importing ROOT using LCG releases, perhaps on lxplus nodes can be slow. For this reason, we implemented a first pack of optimisations in PyROOT for the ROOT release 6.30. Unfortunately, this is not available yet in any LCG stack.; Is it easy for you to perform the same measurement with a dev3 lcg stack? That would allow you to use ROOT master and benefit from the latest optimisations.; I know this might not be a solution to the problem you report, but it might be a start.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14223#issuecomment-1858259151:105,release,releases,105,https://root.cern,https://github.com/root-project/root/issues/14223#issuecomment-1858259151,2,['release'],"['release', 'releases']"
Deployability,"Hi @MrCarroll!; Thanks for considering this. The new distributed RDataFrame python module will support Apache Spark as a backend for distributing applications to a cluster of nodes. Through Spark, it will depend on Java and py4j. But rather than required, these are optional dependencies restricted to the python runtime of that specific part of ROOT. Users that do not whish to use distributed RDataFrame may turn the new build option OFF, furthermore if the dependencies are not installed the option will be switched OFF during the build process automatically (or it will trigger a configuration error only if the option `fail-on-missing` is enabled). That said, I believe you are correct in pointing out the dependencies section of our website. I will make sure to explain these optional dependecies there, along with the release notes and the tutorials that will follow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793505307:481,install,installed,481,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793505307,3,"['configurat', 'install', 'release']","['configuration', 'installed', 'release']"
Deployability,"Hi @ShamrockLee ,; this patch does not compile for me:. ```; ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’; ../math/vecops/test/vecops_rvec.cxx:873:31: required from here; ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}); 926 | std::swap((*this)[i], RHS[i]);; | ~~~~~~~^; ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}); 926 | std::swap((*this)[i], RHS[i]);; | ~~~^; ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286#issuecomment-970053899:24,patch,patch,24,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-970053899,1,['patch'],['patch']
Deployability,"Hi @TheCodeEater ,. I have tried on MacOS 14.4.1 and XCode 15.2. I downloaded the `.pkg` binary from https://root.cern/releases/release-63006/ . Your reproducer does not crash on my system:. <img width=""713"" alt=""Screenshot 2024-04-12 at 00 02 18"" src=""https://github.com/root-project/root/assets/15638895/1d23b494-07e5-44b3-acc6-277b18d38710"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129#issuecomment-2050634092:119,release,releases,119,https://root.cern,https://github.com/root-project/root/issues/15129#issuecomment-2050634092,2,['release'],"['release-', 'releases']"
Deployability,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system.; We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16654#issuecomment-2408386071:50,integrat,integrating,50,https://root.cern,https://github.com/root-project/root/issues/16654#issuecomment-2408386071,1,['integrat'],['integrating']
Deployability,"Hi @TomasDado, thanks for opening this issue!. Indeed, it's not good that you get broken XML code when you print the XML for a measurement with a preprocessing function. I have opened a PR to fix this, and also changed the title to describe the issue more accurately (also removing the `v6.26.04` from the title because the issue was around forever and has nothing to do with the last release). The patch should make it in the next 6.26.06 patch release, which I hope will help you with your workflows!. Then the right way to proceed for you will be to use the escape characters only when you write XML by hand, and in `AddPrepropcessFunction` you should just use the unescaped formula.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10840#issuecomment-1172887151:385,release,release,385,https://root.cern,https://github.com/root-project/root/issues/10840#issuecomment-1172887151,4,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @Tristan-Anderson ,; This is a duplicate of #8513 . The issue has been fixed by #8107 and relative backports. For 6.22, it will be available in next patch 6.22/10 . Or if you can, try to install directy our latest patch release 6.24/02 (aka `latest-stable` branch) which already contains the fix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8610#issuecomment-874517142:152,patch,patch,152,https://root.cern,https://github.com/root-project/root/issues/8610#issuecomment-874517142,4,"['install', 'patch', 'release']","['install', 'patch', 'release']"
Deployability,"Hi @VanyaBelyaev ,. This is strange, we test this every night both in Python2 and Python3:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/tf_pycallables.py. and it works for both. I can reproduce your error on lxplus with dev3python2, but I can't reproduce on a CentOS7 and an Ubuntu machines (both with master and Python2). Can you reproduce this outside of the LCG stack? It could be an issue with that stack or a particular configuration that we are not testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-839737310:466,configurat,configuration,466,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-839737310,1,['configurat'],['configuration']
Deployability,"Hi @VanyaBelyaev ,; I ran your reproducer with LCG97apython3(ROOT 6.20/06) and LCG98python3(ROOT 6.22/00).; With the latter it seems that the call to `dill.dumps` is executed but I get a different error with a long stacktrace, I report the main parts:; ```; ...; input_line_38:16:29: error: allocating an object of abstract class type 'TInterpreter'; *ret = new (arena) TInterpreter[nary];; ^; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ...; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: TInterpreter; Error in <TClass::New>: cannot create object of class TInterpreter; Error in <TBufferFile::ReadObject>: could not create object of class TInterpreter; TBufferFile::WriteObjectAny:0: RuntimeWarning: since TROOT has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it. <class cppyy.gbl.TH1D at 0x560bc237aa20>. Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/home/vpadulan/Programs/rootproject/rootinstall/v6-22-00-patches/lib/ROOT/__init__.py"", line 119, in cleanup; backend.gROOT.EndOfProcessCleanups(); ReferenceError: attempt to access a null-pointer; ```. The line `<class cppyy.gbl.TH1D at 0x560bc237aa20>` is there because I added a print to your reproducer just to check that `dill.loads` is executed. Actually this is the simplest command to reproduce the same stacktrace:. ```; python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; ```. So it's possible that something in the new pyroot (default since 6.22) fixes the `dill` issue but triggers this other error.; @etejedor any thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-696687077:1263,patch,patches,1263,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-696687077,2,['patch'],['patches']
Deployability,"Hi @VanyaBelyaev!. Can you use C++17? That would simplify the code with `if constexpr`, and also work in the ROOT nightlies thanks to our [cppyy upgrade](https://github.com/root-project/root/pull/14507) last week:. ```c++; // the same with functions; template <unsigned int K,unsigned int N>; auto fun_2 (A<N>&) {; if constexpr(K < N) return ""ququ"";; else return K;; ```. If this is not a solution for you and you absolutely need to support the reproducer above, please also open this issue also in [cppyy upstream](https://github.com/wlav/cppyy) since its also present there. > If I am not mistaken sometime ago the situations was just an opposite - standalone template functions were OK, but template methods were not OK... but now I am not 100% sure... What do you mean by ""sometime ago""? I checked with ROOT 6.30, and the situation is the same as with ROOT master, meaning the cppyy upgrade didn't cause any regression in this regard. Anyway, I can't encourage you enough to move to C++17, implementing the patterns that you implement there is a nightmare without `if constexpr` :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085#issuecomment-2025083053:145,upgrade,upgrade,145,https://root.cern,https://github.com/root-project/root/issues/15085#issuecomment-2025083053,4,['upgrade'],['upgrade']
Deployability,"Hi @VanyaBelyaev,; thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1357394530:78,upgrade,upgrade,78,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1357394530,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"Hi @Zeff020, thanks for the PR! Yes, you resolved the merge conflicts correctly. But the problem is still tat you resolved them by merging `master` in your MR branch, meaning that your MR branch is now not a trivial fast-forward branch anymore. The ROOT repository settings only allow fast-forward branches to be merged, and also the CI can only deal with fast forward branches. IMO this is done for good reasons: if you first merge `master` into your branch and then your branch is merged back into master, with a potential merge commit that resolves conflicts in every step, the git history becomes some complicated zipped mess. This is also something you should keep in mind for development with git in general. That means you should not resolve merge conflicts by merging `master`, but by rebasing your PR branch on top of master with `git rebase`. Let's say you want to rebase the last 8 commits of your development branch `processtimer`, the command would be:; ```; git rebase --onto master HEAD~8 processtimer; ```; Where `master` is now a local branch that corresponds to the current `root-project/master`. And then you are by git to fix the conflicts in the rebasing process. Unfortunately, you can't do this anymore now because you have merged master into your branch, so your developments are not the last n commits of the branch anymore. I would maybe create a new branch form current `master`, cherry-pick your original commits on top of it with `git cherry-pick`, and then change the name of the new branch to `processtimer` again such that when you force push, the PR will be updated. Sorry for this overly complicated technical stuff!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791#issuecomment-1333285993:1591,update,updated,1591,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1333285993,1,['update'],['updated']
Deployability,Hi @aandvalenzuela!. Generally we track such issues in cmssw as that's not really a problem with ROOT. I will have a look but generally we wait for the llvm13 upgrade to land (#10294) as it will bring many improvements with respect to modules especially for newer C++ codes and standards. I'd prefer to continue keeping track of https://github.com/cms-sw/cmsdist/issues/8197 where it is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765#issuecomment-1326883812:159,upgrade,upgrade,159,https://root.cern,https://github.com/root-project/root/issues/11765#issuecomment-1326883812,1,['upgrade'],['upgrade']
Deployability,"Hi @aemerman, thank you for reporting this. I will fix this in ROOT master and also make backports to 6.24 and 6.22 since you are using this release. Do you need this fix in any older release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8641#issuecomment-878281866:141,release,release,141,https://root.cern,https://github.com/root-project/root/issues/8641#issuecomment-878281866,2,['release'],['release']
Deployability,"Hi @agheata ,. With this update, there is removed public function `Vertex_t & TGeoFacet::GetVertex(int ivert)` which is used in VGM; see: ; https://github.com/vmc-project/vgm/issues/15. Would it be possible to restore this function ? Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14327#issuecomment-2025133205:25,update,update,25,https://root.cern,https://github.com/root-project/root/pull/14327#issuecomment-2025133205,1,['update'],['update']
Deployability,"Hi @amadio . This PR breaks the Cuda installation. We don't have Cuda integration builds, so can you please check it or notify me before merging it so I can check it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3446#issuecomment-467839862:37,install,installation,37,https://root.cern,https://github.com/root-project/root/pull/3446#issuecomment-467839862,2,"['install', 'integrat']","['installation', 'integration']"
Deployability,"Hi @amadio! I thought we had addressed this problem by making the unreleased `zeromq` interface only a dependency at ROOT build time, and the libraries are linked statically against this unreleased `zeromq` library. So it should not matter what is installed on the system, as long as the builtins are used for building. What exactly is the problem you have at configuration times in these LCG builds? I can't see the full log. I hope it's just one of your configurations checks that doesn't work in your environment and we can fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981734381:248,install,installed,248,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981734381,3,"['configurat', 'install']","['configuration', 'configurations', 'installed']"
Deployability,"Hi @amadio. Thank you for the noticing and fixing this issue!; I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4159#issuecomment-519231788:92,patch,patch,92,https://root.cern,https://github.com/root-project/root/pull/4159#issuecomment-519231788,4,['patch'],['patch']
Deployability,"Hi @andriish, no problem to keep it open, at least until we upgrade llvm.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820#issuecomment-728893044:60,upgrade,upgrade,60,https://root.cern,https://github.com/root-project/root/issues/6820#issuecomment-728893044,1,['upgrade'],['upgrade']
Deployability,"Hi @aphecetche , we will try and integrate it if it works. Thanks a lot!; @gen740 maybe you can also give it a try and let us know?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113#issuecomment-1907991061:33,integrat,integrate,33,https://root.cern,https://github.com/root-project/root/issues/14113#issuecomment-1907991061,1,['integrat'],['integrate']
Deployability,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle.; That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820#issuecomment-728876568:305,upgrade,upgrade,305,https://root.cern,https://github.com/root-project/root/issues/6820#issuecomment-728876568,2,"['release', 'upgrade']","['released', 'upgrade']"
Deployability,"Hi @bellenot ,. > it might be an issue with Clang itself. That is exactly the point. clang produces wrong math in libraries/executables with anything higher than -O1. That affects at least some routines in ROOT. The code I've posted above is a standalone code, despite it is based on code from ROOT. On the ROOT side one can only change the compilation flags for clang in the official releases. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-712937528:385,release,releases,385,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-712937528,1,['release'],['releases']
Deployability,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything.; Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:; ```; char **TGFontPool::GetFontFamilies(); {; Int_t i, numNames;; char *family, *end, *p;. THashTable familyTable(100);; familyTable.SetOwner();. char **nameList;; char **dst;. // coverity[returned_null]; // coverity[dereference]; nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6547#issuecomment-712806198:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/pull/6547#issuecomment-712806198,1,['patch'],['patch']
Deployability,"Hi @bellenot ,. are there updates? I assume everything should be fine now, right?. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9590#issuecomment-1113138264:26,update,updates,26,https://root.cern,https://github.com/root-project/root/issues/9590#issuecomment-1113138264,1,['update'],['updates']
Deployability,"Hi @bellenot ,. sorry if that looks like noise. This is technically irrelevant, of course. The update would just mean that anyone using github CI to build dictionaries will see this problem. So there might be more affected people. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820#issuecomment-731233313:95,update,update,95,https://root.cern,https://github.com/root-project/root/issues/6820#issuecomment-731233313,1,['update'],['update']
Deployability,"Hi @bellenot @dpiparo , thank you for your reply. Yes, we tried to build with VS2022 17.9.6 Release and there was indeed no such issue. . However, we are actually testing an unreleased version of VS with an open source project, which means an unreleased MSVC. But this problem still exists. And we got some information from the MSVC team as follows. Failing (latest prod/be):; ??$__std_find_trivial@$$CBDD@std@@YAPBDQBD0D@Z (char const * __cdecl std::__std_find_trivial<char const ,char>(char const * const,char const * const,char)). Passing (17.9.6):; ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z (char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)). It looks like ROOT manually adds exports in their cmake build steps: [root/core/metacling/src/CMakeLists.txt at master · root-project/root · GitHub](https://github.com/root-project/root/blob/master/core/metacling/src/CMakeLists.txt#L190). ??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z; ??$__std_find_trivial@DD@@YAPADPAD0D@Z; ??$__std_find_trivial@HH@@YAPAHPAH0H@Z; ??$__std_find_trivial@IH@@YAPAIPAI0H@Z. I think the first four lines need to get updated with the new undecorated names, but I'm not sure what exactly they need or why those specific implementations are being exported right now. . **Actual Result:**; Creating library .\libCling.lib and object .\libCling.exp; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336#issuecomment-2154193417:92,Release,Release,92,https://root.cern,https://github.com/root-project/root/issues/15336#issuecomment-2154193417,1,['Release'],['Release']
Deployability,"Hi @bellenot, I also tried to build ROOT target to **ARM64EC** follow the below steps, and it failed due to below errors, can you help take a look? Thanks.; ```; 52>rtm_mutex.obj : error LNK2019: unresolved external symbol _xbegin referenced in function #_xbegin$exit_thunk (EC Symbol) [C:\gitP\root-project\root\build_arm64ec\TBB-prefix\src\TBB-build\src\tbb\tbb.vcxproj] [C:\gitP\root-project\root\build_arm64ec\TBB.vcxproj]; 52>rtm_rw_mutex.obj : error LNK2001: unresolved external symbol _xbegin (EC Symbol) [C:\gitP\root-project\root\build_arm64ec\TBB-prefix\src\TBB-build\src\tbb\tbb.vcxproj] [C:\gitP\root-project\root\build_arm64ec\TBB.vcxproj]; ```; **Build steps:**; 1. Open a x64 native tools command prompt for VS 2022; 2. git clone https://github.com/root-project/root C:\gitP\root-project\root; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 4. mkdir C:\gitP\root-project\root\build_arm64ec & cd /d C:\gitP\root-project\root\build_arm64ec; 5. python.exe -m pip install pytest; 6. cmake -G ""Visual Studio 17 2022"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off ..; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Note:** ; I changed this line https://github.com/root-project/root/blob/master/builtins/zstd/common/compiler.h#L124 to be `if defined(_MSC_VER) && (defined(_M_X64) || defined(_M_I86)) && !defined(_M_ARM64EC)`, otherwise, the build will report `C1189: #error: this header should only be included through <intrin.h>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787#issuecomment-2236145703:1080,install,install,1080,https://root.cern,https://github.com/root-project/root/issues/11787#issuecomment-2236145703,3,"['Configurat', 'Release', 'install']","['Configuration', 'Release', 'install']"
Deployability,"Hi @bellenot,; Can you check if you installed these two components as well?; ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png); If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1021209283:36,install,installed,36,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1021209283,1,['install'],['installed']
Deployability,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:; https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931#issuecomment-1739873026:83,upgrade,upgraded,83,https://root.cern,https://github.com/root-project/root/issues/11931#issuecomment-1739873026,1,['upgrade'],['upgraded']
Deployability,"Hi @bluehood ,; I'd wait for the master to be green again and then merge. Since the PR is done and #833 and #828 are reviewed and my patch is very simple, I'd go for this ""summary PR"" and close the afore mentioned ones. Great that now we can seamlessly handle nested parallelism with ROOT. This is yet another milestone for the efficient usage of extreme architectures such as KNL.; In addition this work allows the upgrade of TTreeProcessorMT with the the ""locality patch"" of @etejedor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/835#issuecomment-320438735:133,patch,patch,133,https://root.cern,https://github.com/root-project/root/pull/835#issuecomment-320438735,6,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"Hi @bluehood,. great. Once we are happy with both implementations we integrate them in the code base. Then we can revamp your reproducer and make it a test (if test_snapshotNfiles is not more or less the same thing).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/828#issuecomment-319747705:69,integrat,integrate,69,https://root.cern,https://github.com/root-project/root/pull/828#issuecomment-319747705,1,['integrat'],['integrate']
Deployability,"Hi @bsunanda ,; Can you provide a simple reproducer of your case? Together with some information about your system (how you installed ROOT etc., compiler version etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1443741367:124,install,installed,124,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1443741367,2,['install'],['installed']
Deployability,"Hi @bztd, thanks for reaching out!. We discussed your inquiry at our Team Meeting. We think this is a great initiative: you can find ROOT's build and install instructions [here](https://root.cern/install/). However, let me note that at the moment we do not have any effort to dedicate to this activity. Should you have any question about ROOT, the community will be happy to discuss on the [ROOT Forum](https://root-forum.cern.ch/). Best,; Danilo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14254#issuecomment-1861542352:150,install,install,150,https://root.cern,https://github.com/root-project/root/issues/14254#issuecomment-1861542352,2,['install'],['install']
Deployability,"Hi @catselbow , thank you for following up. Should we close this as clarified?. As a side note, building ROOT with devtoolset is [not supported](https://root.cern/install/build_from_source/#caveats) and we had several reports on the forum of compilation issues. Things work fine for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10814#issuecomment-1164115435:163,install,install,163,https://root.cern,https://github.com/root-project/root/issues/10814#issuecomment-1164115435,1,['install'],['install']
Deployability,"Hi @cburgard, thanks for the reminder!. There are a few things that need to be done here:. 1. We can't merge non-fast forward branches (like branches where you merged `master` in between). Please rebase all your developments on top of the current `master` and update this PR. If can be done in a single commit, because the current commit history of your developments is not so informative anyway :) Once this is done, the CI can also tests the PR (the CI also has problems with non fast-forward branches).; 2. We try to have new C++ code formatted nicely with the [ROOT clang-format style](https://github.com/root-project/root/blob/master/.clang-format) can you please iron over new `roofit/hs3` package with `clang-format`, using the linked style file?; 3. Please add a tutorial for the JSON/YML import/export (or more than one if you want) to the [tutorials/roofit](https://github.com/root-project/root/tree/master/tutorials/roofit) directory. It can be in either C++ or Python, as you prefer. We can take care of the translation later.; 4. It would be good to have at least two unit tests: one export/import closure test for a binned model, and one for an unbinned model. These tests should be in `roofit/hs3/tests` (compare [`roofit/roofitcore/test`](https://github.com/root-project/root/tree/master/roofit/roofitcore/test) directory structure). If the tests are written in Python, you can add them to the `test/CmakeLists.txt` with the `ROOT_ADD_PYUNITTEST` macro (see for example the [pythonization unit tests](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/CMakeLists.txt)). If you need any help on how to write and run the tests don't hesitate to ask!; 5. You should also advertise these new developments in the release notes (edit the RooFitLibraries section in [README/ReleaseNotes/v626/index.md](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v626/index.md))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8944#issuecomment-971450477:260,update,update,260,https://root.cern,https://github.com/root-project/root/pull/8944#issuecomment-971450477,4,"['Release', 'release', 'update']","['ReleaseNotes', 'release', 'update']"
Deployability,Hi @chissg - I'd very much appreciate if we don't have to hold v6.28/00 for this. We would then try to address this issue in a follow-up patch release for the v6.28 series. Is that okay for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1409921122:137,patch,patch,137,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1409921122,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @chrisburr, the individual `llvm.git` and `clang.git` will not be updated going forward. We migrated the patches to a fork of the monorepo: https://github.com/root-project/llvm-project/ This has all patches corresponding to ROOT `master`, ""pinned"" by `interpreter/llvm-project/llvm-project.tag`, which will also make things a lot easier for the next release cycle. > I assume there still aren't any `llvm` patches for 6.28.x. There are: https://github.com/root-project/llvm-project/commits/ROOT-llvm13/llvm I don't know if you apply them for Conda nor if you need them, they are either for C++20 builds, Windows, or PowerPC...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13265#issuecomment-1653091396:69,update,updated,69,https://root.cern,https://github.com/root-project/root/issues/13265#issuecomment-1653091396,5,"['patch', 'release', 'update']","['patches', 'release', 'updated']"
Deployability,"Hi @ciccinocino, thanks for opening this issue! I realize know that this is a solved issue where the fix is already in `master`:; https://github.com/root-project/root/pull/11566. However, there is no backport to the 6.28 branch yet, but I created it now:; https://github.com/root-project/root/pull/11748. Sorry for the delay in this! Once a new 6.28 patch release is out, i.e. 6.26.12, this will be fixed again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11738#issuecomment-1320909024:350,patch,patch,350,https://root.cern,https://github.com/root-project/root/issues/11738#issuecomment-1320909024,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @clelange , did you find some time to update the rest of the examples according to our comments? It would be great to have this in!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1522#issuecomment-384560070:41,update,update,41,https://root.cern,https://github.com/root-project/root/pull/1522#issuecomment-384560070,1,['update'],['update']
Deployability,"Hi @couet ,. I know and tried to fix it in #6469. Would you be so kind to review that patch once you have time?. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449#issuecomment-700048906:86,patch,patch,86,https://root.cern,https://github.com/root-project/root/issues/6449#issuecomment-700048906,1,['patch'],['patch']
Deployability,"Hi @couet ,. In the end the crashes observed in three classes, so the relevant issues are. #6373 ; #6374 ; #6375 . Hopefully this will make it easier to deal with them. Why these cannot be reproduced on Mac might be a bug on its own.; What configuration do you use to compile root on mac?. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-694307260:240,configurat,configuration,240,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-694307260,1,['configurat'],['configuration']
Deployability,"Hi @couet ,. are there chances to have some fixes for #6373 #6374 #6375 #6379 in the next (patch) releases?. - If that helps: here are some things that I've tried in the past:; https://github.com/root-project/root/compare/master...andriish:for_zevis. - Unfortunately, for me it is hard to develop for me on Mac. The hadrware with Mac I have is not a match to the hardware with Linux. I can try to improve the situation, but well, the FPEs have the same origin on all platforms... - Meanwhile, if you check these issues on Linux, is there a way to help you?. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-696062345:91,patch,patch,91,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-696062345,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"Hi @couet ,. could you, please, have a look?; It seems the fails in chacks are just about the CI configuration. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6505#issuecomment-703676921:97,configurat,configuration,97,https://root.cern,https://github.com/root-project/root/pull/6505#issuecomment-703676921,1,['configurat'],['configuration']
Deployability,"Hi @couet ,. what is the error? What is the build system ? There is CI with CentOS7 and CentOS8 and these work fine.; Could it be that the ROOT installation was not found by cmake?. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692654958:144,install,installation,144,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692654958,1,['install'],['installation']
Deployability,"Hi @cozzyd, we just upgraded the CPyCppyy version in PyROOT to the current CPyCppyy `master`, and many issues with Python 3.11 were fixed there. Probably also this one. Can you check if with ROOT `master` things work fine for you?. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694#issuecomment-2009257021:20,upgrade,upgraded,20,https://root.cern,https://github.com/root-project/root/issues/13694#issuecomment-2009257021,1,['upgrade'],['upgraded']
Deployability,"Hi @criezy , how did you install gcc 8.2 and a recent enough cmake version on Debian9?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8477#issuecomment-865978732:25,install,install,25,https://root.cern,https://github.com/root-project/root/pull/8477#issuecomment-865978732,1,['install'],['install']
Deployability,"Hi @criezy ,; we investigated this a bit more and it looks like early gcc 8 versions had some issues with overloaded casting operators: https://www.godbolt.org/z/xn89qPj3x . In my tests only gcc 8.1 failed, I could not reproduce the problem with gcc 8.2, but there might be slight differences between your gcc 8.2 built from source and what I get on godbolt. In any case this looks like a compiler bug. Could you please check whether switching to a more recent gcc 8 release (e.g. 8.5) or even better to gcc 10 or 11 fixes the problem?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8477#issuecomment-866628306:467,release,release,467,https://root.cern,https://github.com/root-project/root/pull/8477#issuecomment-866628306,1,['release'],['release']
Deployability,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8363#issuecomment-1027901880:78,Release,Release,78,https://root.cern,https://github.com/root-project/root/issues/8363#issuecomment-1027901880,2,"['Release', 'release']","['Release', 'release']"
Deployability,"Hi @denehoffman! Thanks for using RooFit and opening this issue. I agree with all you say, and think it's better to get rid of these surprising epsilons in all `inRange` overload for ROOT 6.28 which will be released in January. There is only one thing you said that I can't follow:. > ...as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`)... I don't see where the overloads are inconsistent with the `<` vs `<=`. As far as I can tell, it checks `xmin <= x <= xmax` in all overloads, if we were just to remove the epsilons. Or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954#issuecomment-1368556437:207,release,released,207,https://root.cern,https://github.com/root-project/root/issues/11954#issuecomment-1368556437,1,['release'],['released']
Deployability,"Hi @dioguerra, thanks for the PR, and sorry for the late reply!. I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6629#issuecomment-1808197484:711,configurat,configuration,711,https://root.cern,https://github.com/root-project/root/pull/6629#issuecomment-1808197484,1,['configurat'],['configuration']
Deployability,"Hi @dlanci , could you please check whether v6.22 is still affected? You can install it from conda/homebrew/snap/..., grab it from the LCG releases on lxplus or just run it in a docker container, see https://root.cern/install.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-776535497:77,install,install,77,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-776535497,3,"['install', 'release']","['install', 'releases']"
Deployability,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,; Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14890#issuecomment-1980834982:41,deploy,deployment,41,https://root.cern,https://github.com/root-project/root/issues/14890#issuecomment-1980834982,2,"['deploy', 'integrat']","['deployment', 'integration']"
Deployability,"Hi @dpiparo and thanks a lot @adriansev for this useful report!. Yes, there is probably even more breakage than before now that the `cppyy` in ROOT is synced more with `cppyy` upstream. More files are expected to collide. The cppyy module is part of ROOT, and if you install it in two different ways in the same environment (standalone and via ROOT), clashes are bound to happen. So the question to @adriansev is really: what's your usecase for installing cppyy in two different ways in the same environment? What does cppyy standalone give you that you won't get with ROOT? And why is the recommended way of dealing with this (virtual environments) not an option for you?. Many Linux distributions even *force* you to use virtual environments and don't allow `pip install --user` outside of virtual environments anymore. E.g. Arch, NixOS, or Ubuntu:; * https://askubuntu.com/questions/1465218/pip-error-on-ubuntu-externally-managed-environment-%C3%97-this-environment-is-extern. So given that your usecase is against good practices and that it's expected that if you install the same library from two different sources you get breakage, I'm in favor of closing this as ""not planned"" unless @adriansev can follow up with a clear motivation :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635#issuecomment-2314956198:267,install,install,267,https://root.cern,https://github.com/root-project/root/issues/12635#issuecomment-2314956198,8,['install'],"['install', 'installing']"
Deployability,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3935#issuecomment-1826753548:150,configurat,configuration,150,https://root.cern,https://github.com/root-project/root/pull/3935#issuecomment-1826753548,1,['configurat'],['configuration']
Deployability,"Hi @dpiparo, this PR needs conflict resolution, and maybe also a mention in the 6.36 release notes that the code was actually removed now in compliance with #16818.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15135#issuecomment-2457377280:85,release,release,85,https://root.cern,https://github.com/root-project/root/pull/15135#issuecomment-2457377280,1,['release'],['release']
Deployability,"Hi @dpiparo,. Ah! That is good to know!. I definitely think this solves one of the problems on the arm platform, could we be talking about different issues?. Regarding the preprocessor protect:; The change really should not make a difference with respect to the output regardless of platform. If the score of the particular cut so bad that this fix makes a difference we either:; - find a better cut value and forget about this one or,; - this is a solution that would not have been chosen without the patch, but both of these solutions are really really really bad so it doesn't matter which ones we choose. So since I don't think it will matter either way, feel free to do as you feel best. One point is that the code flow will be more clear, in my mind, without any preprocessor branching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/450#issuecomment-287901267:502,patch,patch,502,https://root.cern,https://github.com/root-project/root/pull/450#issuecomment-287901267,1,['patch'],['patch']
Deployability,"Hi @dpiparo,. Thank you for the update and @vgvassilev for the solution. I will clone and check it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14902#issuecomment-1992058770:32,update,update,32,https://root.cern,https://github.com/root-project/root/issues/14902#issuecomment-1992058770,1,['update'],['update']
Deployability,"Hi @dpiparo,. We understand why a fix on your side was not possible in this case, but can you confirm that the workaround of reading files in older releases (6.10/06, 6.08.06) will be part of your tests going forward please? ; ATLAS will need this feature to be supported for new ROOT versions until such time as we decide to change our support policy for legacy data. (This currently requires Trigger Simulation to be run in the data-taking release from the year in question.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2286416590:148,release,releases,148,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2286416590,2,['release'],"['release', 'releases']"
Deployability,"Hi @dvzrv, thanks for the heads up! None of these files end up in the ROOT installation. They are only there because the ROOT repo includes some copies of other repos like `cppyy` and `llvm-project`, but not all files from these repos are actually used. The files you linked are all examples of unused files. I hope this clarifies things! Or is this a problem for some Arch Linux policy that such files exist in the repo? Otherwise, I think the issue can be closed. I'm happy to hear that Arch moves forward to Python 3.12 by the way :+1:. Note that even if the code *would* be installed, at least the first case of `cppyy` would definitely be a false positive of warning about `import imp`. That code is only used when using the PyPy interpreter and not CPython, and PyPy doesn't even support Python 3.11 yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14824#issuecomment-1964423688:75,install,installation,75,https://root.cern,https://github.com/root-project/root/issues/14824#issuecomment-1964423688,2,['install'],"['installation', 'installed']"
Deployability,"Hi @edfink234 ,; in this PR you are requesting to merge 6-24-00-patches into master, that was probably not the intention. Please open a new PR with your contribution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8927#issuecomment-908127821:64,patch,patches,64,https://root.cern,https://github.com/root-project/root/pull/8927#issuecomment-908127821,1,['patch'],['patches']
Deployability,"Hi @egpbos, thanks a lot for the updates and great that everything now passes with the CI! I can also build ROOT on my system successfully with the new `zeromq` and `cppzmq` builtins that you introduced. However, I still have problems builting without the builtins, taking zeromq from the system. I installed zeromq from the GitHub master on my system, to make sure I have `zmq_ppoll`. One problem is that the check for the `zmq_ppoll` symbol doesn't seem to work (see inline comment above), and then the configuration fails with the following error:; ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package):; By not providing ""Findcppzmq.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""cppzmq"", but; CMake did not find one. Could not find a package configuration file provided by ""cppzmq"" with any; of the following names:. cppzmqConfig.cmake; cppzmq-config.cmake. Add the installation prefix of ""cppzmq"" to CMAKE_PREFIX_PATH or set; ""cppzmq_DIR"" to a directory containing one of the above files. If ""cppzmq""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:1927 (find_package); CMakeLists.txt:245 (include). -- Configuring incomplete, errors occurred!; ```; Is it really reasonable to expect a `cppzmqConfig.cmake` on the system, just for this `zmq.hxx` header that is most likely in the same directory as `zmq.h` anyway?. Maybe there are some specific subtleties on my system that cause the build configuration not to work. Let's see with the CI when we disable builtins but enable roofit_multiprocess. What I would expect is that the configuration realized that an appropriate zeromq version is missing, and it switches to the builtins automatically right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-975317262:33,update,updates,33,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-975317262,9,"['configurat', 'install', 'update']","['configuration', 'installation', 'installed', 'updates']"
Deployability,"Hi @egpbos, thanks for the PR! It looks good, but can you please update such that is passes on all CI nodes? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202#issuecomment-1429572512:65,update,update,65,https://root.cern,https://github.com/root-project/root/pull/12202#issuecomment-1429572512,1,['update'],['update']
Deployability,"Hi @eguiraud ,; I confirm that the updates in vmc are tested in https://github.com/vmc-project. The vmc category in ROOT is now deprecated and built optionally, but as it is still present we would like to have the fix included. ; Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6080#issuecomment-664960331:35,update,updates,35,https://root.cern,https://github.com/root-project/root/pull/6080#issuecomment-664960331,1,['update'],['updates']
Deployability,"Hi @eguiraud -- as far as I know there are not any pre-compiled binaries yet for Ubuntu 22?. I am trying to build ROOT as part of a project that builds several useful HEP packages together with proper Python bindings for running python scripts. I have not checked in awhile but I remember pre-built ROOT binaries being built only with Python 2, which will not suit our purposes. Even pre-built with Python3, having to install extra Python distributions is a shame, and then extra package managers on top of that can make things pretty messy (and conflicts commonplace). . There are work-arounds of course like installing a VM or different Ubuntu distribution, but I think this just postpones solving the problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518#issuecomment-1118480347:418,install,install,418,https://root.cern,https://github.com/root-project/root/issues/10518#issuecomment-1118480347,2,['install'],"['install', 'installing']"
Deployability,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10217#issuecomment-1370084730:258,integrat,integrating,258,https://root.cern,https://github.com/root-project/root/pull/10217#issuecomment-1370084730,1,['integrat'],['integrating']
Deployability,"Hi @ellert, I am a bit reluctant to remove minicern without any notice, but the other two changes should be fine. Even though you are right about the Makefile linked by Axel, I think that since this is a backward incompatible change, we should at least announce the removal in the development release (coming sometime soon), and then remove it only in ROOT 6.14. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1643#issuecomment-366945300:293,release,release,293,https://root.cern,https://github.com/root-project/root/pull/1643#issuecomment-366945300,1,['release'],['release']
Deployability,"Hi @etejedor, thanks for your comments!. Enric and I had a meeting that resulted in the following action items for me:. 1. Remove the `test_` prefix from the roofit pythonization test files; 2. Come up with a mechanism that uses all the functions defined in the RooFit pythonization proxy classes for the pythonization, not excluding magic functions (which are often pythonized); 3. Check if the pythonization abstraction in this PR also allows for pythonizations with the C API; 4. Introduce Doxygen documentation for RooFit pyROOT. In my recent updates, I addressed bullet points 1, 2, and 3. 1. Was trivial to address; 2. I use now a combination of `mro()` and `funcname in klass.__dict__` to check if a new member function was defined in the corresponding Python class or any of it's base classes (inspired by [this stackoverflow post](https://stackoverflow.com/questions/5253397/check-if-class-attribute-was-defined-or-derived-in-given-class)); 3. I made a relatively [simple test](https://github.com/root-project/root/commit/96d76be74f347eb36bd4d785d6689efebb17408b) to verify that if one updates the Python classes with the C API, this is propagated as a pythonization to the correct RooFit class.; Indeed, if you make the changes to the code in my test branch, then this code gives the expected behaviour (using pythonized version of `__getattr__`:; ```Python; import ROOT; a = ROOT.RooRealVar(""x"", ""x"", 0, 0, 10.); getattr(a, ""Hello""); ```. 4. For the documentation, I still have to do that later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753#issuecomment-831297263:547,update,updates,547,https://root.cern,https://github.com/root-project/root/pull/7753#issuecomment-831297263,4,['update'],['updates']
Deployability,"Hi @ethereal-space-cadet16 ,. Unfortunately without seeing the code you tried to run, your OS, Python version and ROOT version, it's hard to understand the actual cause of the crash. Let's start easy. You said you tried conda, did you explicitly try the instructions at https://root.cern/install/#conda ?. ```; $ conda config --set channel_priority strict; $ conda create -c conda-forge --name myenv root; $ conda activate myenv; ```; Then, after the command above runs succesfully, I will take the first example available from the document you link, that is:. ```python; import ROOT; print(""This is my script""); ```. If this two steps still lead to errors or crashes please report back, with your OS, Python version (the one that conda uses), the output of `echo $PYTHONPATH`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1142076274:288,install,install,288,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1142076274,1,['install'],['install']
Deployability,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes.; hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root; hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`; `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`; `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`; `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`; `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`; `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`; `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`; `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:; `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14910#issuecomment-1985371601:132,patch,patch,132,https://root.cern,https://github.com/root-project/root/issues/14910#issuecomment-1985371601,1,['patch'],['patch']
Deployability,"Hi @ferdymercury . If you like, one can integrate this functionality into `RBrowser`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11295#issuecomment-1298187965:40,integrat,integrate,40,https://root.cern,https://github.com/root-project/root/issues/11295#issuecomment-1298187965,1,['integrat'],['integrate']
Deployability,"Hi @ferdymercury, sorry for the late reply! There were some other conflicting PRs that I wanted to get in first. Can you please rebase your commits to master now and update this PR? I plan to merge this one next. Thank you so much!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9657#issuecomment-1030406011:166,update,update,166,https://root.cern,https://github.com/root-project/root/pull/9657#issuecomment-1030406011,1,['update'],['update']
Deployability,"Hi @flagarde ,; nice! I would say yes to the PR, since you have the patch anyway. So we can see what's needed to make this work. Then it will be up to our build system expert @bellenot (coming back to work in a couple of weeks) to decide if we can merge or not :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8923#issuecomment-908967963:68,patch,patch,68,https://root.cern,https://github.com/root-project/root/issues/8923#issuecomment-908967963,1,['patch'],['patch']
Deployability,"Hi @gartrog, thanks for this! I agree that the order doesn't matter, as the RooAbsArg destructor is taking care that there are no dangling pointers in the client and server list. If the ASAN build doesn't complain after merging this, the PR should also be backported to 6.26. It would be a waste to have this nice speedup not in the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9685#issuecomment-1021616023:333,release,release,333,https://root.cern,https://github.com/root-project/root/pull/9685#issuecomment-1021616023,1,['release'],['release']
Deployability,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:; ```Python; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""); ```; This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:; ```Python; r.gROOT.ProcessLine("".L RooSDSCBShape.h""); ```. Could you please let me know if this also works for you?. On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782156378:939,release,release,939,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782156378,1,['release'],['release']
Deployability,"Hi @guitargeek , thanks a lot for swiftly reviewing the code ! Your updates have been added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766#issuecomment-814640251:68,update,updates,68,https://root.cern,https://github.com/root-project/root/pull/7766#issuecomment-814640251,1,['update'],['updates']
Deployability,"Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also; add an example for the factory interface. The are some accompanying fixes as listed below.; Please take a look and let me know if this looks good !. ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate ; the usage of the `RooLagrangianMorphFunc` class; - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new; options of `taylorexpand` and `lagrangianmorph`; ; ## Changes or fixes:; - formatting of `tutorials/roofit/rf710_roopoly.py`; - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed ; from `NP` to `NewPhysics` to avoid confusion with other abbreviations; - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,; Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9665:436,update,update,436,https://root.cern,https://github.com/root-project/root/pull/9665,2,['update'],['update']
Deployability,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:; ```; 1578 - roottest-python-basic-datatype (Failed); 1670 - roottest-python-cpp-cpp11 (Failed); ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370591391:61,configurat,configuration,61,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370591391,1,['configurat'],['configuration']
Deployability,"Hi @guitargeek, I am no longer able to check this, since I have upgraded to Ubuntu 23.04 in the meantime. I can try it again on my newer system in a few days, but would then open a separate issue, if the problem persists.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931#issuecomment-1740651542:64,upgrade,upgraded,64,https://root.cern,https://github.com/root-project/root/issues/11931#issuecomment-1740651542,1,['upgrade'],['upgraded']
Deployability,"Hi @guitargeek, all, I think all the requested changes are in (feel free to have a peek). Is there something I should be doing, or is this patch just sitting there waiting for one of you to find the time for another look (which is fine, by the way - I know how it is to be busy with things!)?; Cheers, and thanks, Manuel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14399#issuecomment-1919811895:139,patch,patch,139,https://root.cern,https://github.com/root-project/root/pull/14399#issuecomment-1919811895,1,['patch'],['patch']
Deployability,"Hi @guitargeek, thank you for the information. I found that the fix has been included in the latest CMSSW release so I can continue with the unit test in [cms-sw/cmssw#41932 (comment)](https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2459132440). I will let you know if there is still a need of the backport after confirming with the CMS DQM experts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16773#issuecomment-2459172862:106,release,release,106,https://root.cern,https://github.com/root-project/root/pull/16773#issuecomment-2459172862,1,['release'],['release']
Deployability,"Hi @guitargeek,; I do not need the fix in the next patch, but thanks for offering.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11067#issuecomment-1199429795:51,patch,patch,51,https://root.cern,https://github.com/root-project/root/issues/11067#issuecomment-1199429795,1,['patch'],['patch']
Deployability,"Hi @hageboeck and @manolismih, thanks for you comments! Sorry for the late answer, it took me some time to come up with a better solution. Making the `RooAbsOptTestStatistic` aware of the batchmode is the biggest challenge in this PR, as you have noticed.; Like Stephan suggested, I have tried no to pass as much information as possible in the constructors to hopefully avoid some of the new member variables I introduced here. In part I have succeeded, because now the cache optimization will now always be skipped in the construction in batch mode is enabled. So I don't need a `_originallyCacheOptimized` flag to remember if the optimization has to be reverted after the construction which was not the nicest hack anyway. Still, I could not do without a new `_batchMode` flag in `RooAbsTestStatistic` because the cache optimization can also happen after the construction via `RooAbsTestStatistic::constOptimizeTestStatistic`. Adding a batch mode flag to the constructor also required me to change all the constructor signatures of `RooAbsTestStatistic` and derived classes. I took that opportunity to revisit how the configuration parameters are passed such that if the future it will be much easier to add a new parameter. This has been a significant refactor, so I made a new PR with these changes excluding the `RunContextTracker` which we could introduce in a second step:. https://github.com/root-project/root/pull/7616",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344#issuecomment-802953807:1120,configurat,configuration,1120,https://root.cern,https://github.com/root-project/root/pull/7344#issuecomment-802953807,1,['configurat'],['configuration']
Deployability,"Hi @hageboeck, thanks a lot for your comments! I have addressed all of them, thanks for helping out to get this much needed tutorial for global observables into a good shape :+1:. I'll merge now so that this still makes it into the release, but please let me know if you want me to follow up on something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9795#issuecomment-1028487323:232,release,release,232,https://root.cern,https://github.com/root-project/root/pull/9795#issuecomment-1028487323,1,['release'],['release']
Deployability,"Hi @hahnjo ; nope, I need this version since we have private patches at LHCb for RooStats/HistFactory and the last one works for 6.16. . I hadn't thought about Rosetta 2, maybe that's an option. Although as you say I have no idea how it will work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10370#issuecomment-1094853965:61,patch,patches,61,https://root.cern,https://github.com/root-project/root/issues/10370#issuecomment-1094853965,1,['patch'],['patches']
Deployability,"Hi @hahnjo, thanks for the clarification. Now I understand what you mean. > Sorry if my current take on the matter sounds a bit disappointing. I'd be happy to have a chat about possible ways around the issues, but I probably can't put much of my time on CUDA support in Cling... This is not disappointing. It just means that I need another strategy ;-) It's good to know that it's probably not efficient to backport the code, so I can save time. Besides, the need for the feature has also decreased a bit since we found a workaround for [clad](https://github.com/vgvassilev/clad). This was the main reason why I wanted to implement this feature. Therefore I think will start with reengineering of `nvlink`. It is also needed, I can implement it with with Clang and later integrate it in Cling when it is updated to LLVM 12/13.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8112#issuecomment-842555367:771,integrat,integrate,771,https://root.cern,https://github.com/root-project/root/issues/8112#issuecomment-842555367,2,"['integrat', 'update']","['integrate', 'updated']"
Deployability,"Hi @jblomer, is this PR still relevant or can it be closed?. Maybe one thing to consider for the future: if you want to have a `clang-tidy` configuration specific to RNtuple, you can also put it in the right subdirectory, like I did here with RooFit:; https://github.com/root-project/root/blob/master/roofit/.clang-tidy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8773#issuecomment-2301904289:140,configurat,configuration,140,https://root.cern,https://github.com/root-project/root/pull/8773#issuecomment-2301904289,1,['configurat'],['configuration']
Deployability,"Hi @kgizdov!. I had the same problem as you after upgrading Arch Linux last week. This PR fixed the problem for me:. https://github.com/root-project/root/pull/11111. I also backported it to the 6.26 branch, such that the next ROOT 6.26 patch release won't have the problem. Can you check if after this fix things work again for you? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1207433304:236,patch,patch,236,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1207433304,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:; * add you to the list of contributors; * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file.; * Code format; * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16323#issuecomment-2322932825:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/16323#issuecomment-2322932825,1,['update'],['update']
Deployability,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash; source /path/to/miniconda3/bin/activate; conda create -c conda-forge --name test-jupyroot root; conda activate test-jupyroot; root --notebook --log-level 10; ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)?. Best; Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608#issuecomment-711925990:375,install,install,375,https://root.cern,https://github.com/root-project/root/issues/6608#issuecomment-711925990,1,['install'],['install']
Deployability,"Hi @kratsg, thanks a lot for the detailed issue report!. I see the problem, but I don't understand exactly from your post and the linked pyhf discussion what the expected behavior is. Do you expect the XML schema to be updated to allow for this initial `ShapeFactor` nuisance parameter values, or do you want to prohibit that such a `Measurement` object can even be instantiated?. Both solutions have problems in my opinion. Restricting the measurement class would break usecases, and expanding the XML schema is promoting the use of a software component (HistFactory XML) that we consider as legacy. Both changes affect code used in production and are not bugfixes (but extending the HistFactory schema), so they can't be done for ROOT patch releases. So if I fix this one way or the other, the patch would only reach users by ROOT 6.30 which is who knows how many months away. We are currently working on a new IO format to replace the HistFactory XML, which is based on JSON (in the context of the HEP statistics serialization standard), and we plan for it to be ready for general use in ROOT 6.30 too. In that case, we can make sure that the models of the user in the pyhf issue thread are supported, such that he can share his model with his ROOT-using colleague via JSON. Therefore, what I suggest is to not start working on this issue now, and *only* if it turns out late in the 6.30 development cycle that we probably will not support this usecase in the HS3 JSON for some unforeseen reason, we can extend the XML schema. This way, we're sure that this problem is solved in ROOT 6.30. Does this sound okay to you, or do you have other suggestions? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287#issuecomment-1644098112:219,update,updated,219,https://root.cern,https://github.com/root-project/root/issues/13287#issuecomment-1644098112,4,"['patch', 'release', 'update']","['patch', 'releases', 'updated']"
Deployability,"Hi @ktf , the travis log could be clearer, but it indicates how to run the same command it does:. ```; Running clang-format-3.9 against branch master, with hash 7554be95715898fa2a93528254ce3646764ab3d2; clang-format failed.; To reproduce it locally please run; 	git checkout master; 	git-clang-format --commit 7554be95715898fa2a93528254ce3646764ab3d2 --diff --binary /usr/local/clang-5.0.0/bin/clang-format; ```. This system is not perfect and you might have to adapt hashes/paths to your case, but this is it.; If you do not get any corrections you might somehow be overriding ROOT's clang-format configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371771090:598,configurat,configuration,598,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371771090,2,['configurat'],['configuration']
Deployability,"Hi @ktf, as discussed yesterday the test failures are related to an issue in our incremental builds where Clad is not rebuilt after changes to the Clang headers. This leads to very weird symptoms because some ""stale"" functions access memory where they shouldn't and so on. I was hit by this problem already twice and it's tracked in https://github.com/root-project/root/issues/7977, so one would suppose that I remember by now but evidently I didn't... Apologies for the confusion and the delay it caused in integrating this. I've now synchronized the changes to https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240116-01, moving the header to `clang/include/clang/Basic` as mentioned yesterday to keep the ability to build against a vanilla version of LLVM). @vgvassilev I put the commit only into `ROOT-llvm16`, not `cling-llvm16` because I think it's not that relevant for Cling standalone. Let me know if you disagree and I can of course move it. Some measurements of this change on my machine: for a simple `./bin/root.exe -q`, it reduces the maximum RSS from 217MB to 192MB and for `./bin/root.exe -q -e ""std::vector<int> v"" -e ""return 0;""` from 255MB to 230MB :clap:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1893308958:508,integrat,integrating,508,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1893308958,4,"['integrat', 'release']","['integrating', 'releases']"
Deployability,"Hi @ktf, if we were to backport this to a release, which one would ALICE be interested in, 6.30? Or would you be fine keeping the patch locally in your stack for now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1905504565:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1905504565,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750#issuecomment-1951862801:320,configurat,configuration,320,https://root.cern,https://github.com/root-project/root/pull/14750#issuecomment-1951862801,1,['configurat'],['configuration']
Deployability,"Hi @lmoneta , is there any update on this?. Thanks,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9926#issuecomment-1080758786:27,update,update,27,https://root.cern,https://github.com/root-project/root/pull/9926#issuecomment-1080758786,1,['update'],['update']
Deployability,"Hi @lmoneta ,. I have squashed the commits and resolved the merge conflict merging with master, I think this is correct (I am unable to squash the merge with master and the previous commit...). I noticed the merge conflict is because of changes to comments changing ""calculate"" to ""calculates"" and in the LaTeX comments changing ""\f["" and ""\f]"" to ""\f$"" so I updated to be consistent with this. . If this is ok I'll hopefully submit a pull request in the next few days to add the relativistic voigt as well as we discussed previously. Thanks for your help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9926#issuecomment-1154343356:359,update,updated,359,https://root.cern,https://github.com/root-project/root/pull/9926#issuecomment-1154343356,1,['update'],['updated']
Deployability,"Hi @lmoneta @couet . I checked the [current documentation](https://root.cern.ch/root/htmldoc/guides/users-guide/MathLibraries.html#numerical-integration), and the point `15.8.3.1 Using ROOT::Math::IntegratorMultiDim` actually shows an example of the IntegratorMultiDim and the usage of different algorithms. . There is a typo, probably caused by copypasting: `Here is a code example on how to use the ROOT::Math::IntegratorOneDim class`, actually it is an example of `IntegratorMultiDim`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-1943742763:141,integrat,integration,141,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-1943742763,6,"['Integrat', 'integrat']","['IntegratorMultiDim', 'IntegratorOneDim', 'integration']"
Deployability,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9747#issuecomment-1024992856:179,update,updated,179,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856,2,['update'],['updated']
Deployability,"Hi @matLogh, this is weird since `RRangeCast.hxx` includes `#include ""ROOT/RSpan.hxx""` which either includes the standard `<span>` or provides ROOT's ""backported"" copy for use with older C++ versions. It could be related to using GCC 10.3, some C++20 stuff is only there since GCC 11/12. I will need to do a test build later on... In related matters, please note that one of the C++20 problems escaped us for 6.28/04 and a fix (https://github.com/root-project/root/pull/13242) will only released in August the earliest. In the mean time, you may try the `v6-28-00-patches` branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13270#issuecomment-1641933572:487,release,released,487,https://root.cern,https://github.com/root-project/root/issues/13270#issuecomment-1641933572,2,"['patch', 'release']","['patches', 'released']"
Deployability,"Hi @matthewfeickert, yes that's correct, but I think it's not worth to make an intermediate patch in conda. The next point release usually comes only a few weeks after the initial release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9999#issuecomment-1055459841:92,patch,patch,92,https://root.cern,https://github.com/root-project/root/pull/9999#issuecomment-1055459841,3,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @minimeu1 ,; a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1915461816:150,install,installed,150,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1915461816,2,['install'],"['install', 'installed']"
Deployability,"Hi @mkrzewic, indeed ROOT currently does not compile on FreeBSD. The crash you are seeing is because `ROOTSYS` is not set, which is a (environment) variable that should be set automatically as needed. The port has a patch for this: https://github.com/freebsd/freebsd-ports/blob/cfa050b3a4535cce59341631524e758ce6fc0ba2/devel/root/files/patch-core_dictgen_src_rootcling__impl.cxx However, applying it doesn't actually work on FreeBSD 13.2 because the method enabled by the patch relies on `/proc` which is empty - as you say, this needs to migrate to a different method (in this case for finding the path of the current executable). Unfortunately, I fear that there are currently no resources available to support FreeBSD and then maintain it. If you want to give it a shot yourself, essentially cleaning up the available patches and properly submitting them, please feel free to ping me on the pull requests :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1542308668:216,patch,patch,216,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1542308668,4,['patch'],"['patch', 'patch-', 'patches']"
Deployability,"Hi @oshadura , I cannot update, I think only Patricia or Pere can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-370233944:24,update,update,24,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-370233944,1,['update'],['update']
Deployability,"Hi @oshadura , thanks for the investigation! One thing I do not understand is that both on an old gcc, 4.9/4.8, and on gcc 6, *-Ofast* seems to define *__FAST_MATH__*, at least on lxplus7:; ```; $ cat a.C ; #ifdef __FAST_MATH__; aaaa; #endif; $ g++ -o a -c a.C -O2; $ g++ -o a -c a.C -Ofast; a.C:2:1: error: ‘aaaa’ does not name a type; aaaa; ^~~~; $ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/cvmfs/sft.cern.ch/lcg/external/gcc/6.2.0native/x86_64-centos7/bin/../libexec/gcc/x86_64-pc-linux-gnu/6.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../gcc-6.2.0/configure --prefix=/build/pmendez-sftnight/install-620native -with-system-zlib --disable-multilib --enable-languages=all; Thread model: posix; gcc version 6.2.0 (GCC) ; $ source /cvmfs/sft.cern.ch/lcg/external/gcc/4.9.1/x86_64-slc6/setup.sh; $ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/cvmfs/sft.cern.ch/lcg/external/gcc/4.9.1/x86_64-slc6/bin/../libexec/gcc/x86_64-unknown-linux-gnu/4.9.1/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ../gcc-4.9.1/configure --prefix=/build/hegner/gcc/gcc-install --with-mpfr=/afs/cern.ch/sw/lcg/external/mpfr/3.1.2/x86_64-slc6-gcc48-opt --with-gmp=/afs/cern.ch/sw/lcg/external/gmp/5.1.1/x86_64-slc6-gcc48-opt --with-mpc=/afs/cern.ch/sw/lcg/external/mpc/1.0.1/x86_64-slc6-gcc48-opt --enable-libstdcxx-time --enable-lto --with-isl=/build/hegner/gcc/isl/isl-install --with-cloog=/afs/cern.ch/sw/lcg/external/cloog/0.18.0/x86_64-slc6-gcc48-opt --enable-languages=c,c++,fortran,go; Thread model: posix; gcc version 4.9.1 (GCC) ; $ g++ -o a -c a.C -Ofast; a.C:2:1: error: ‘aaaa’ does not name a type; aaaa; ^; $ g++ -o a -c a.C -O2; ```; I see your fix works, I am just trying to understand all the details here since we are looking for the cause of this since a while :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971#issuecomment-328953619:642,install,install-,642,https://root.cern,https://github.com/root-project/root/pull/971#issuecomment-328953619,3,['install'],"['install', 'install-']"
Deployability,"Hi @oshadura and thanks!; On the nodes the cmake workflow is (close to):; 1. cmake configuration with `CMAKE_INSTALL_PREFIX=../install`; 2. `cmake --build .`; 3. Run the tests and tutorials in the build folder. So while there is an installation directory, the installation command is never invoked thus *all* the libraries are never installed in the `install` directory. This means that while I would like to put `CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_FULL_LIBDIR}` in the builtin_xrootd call as it is done in the general ROOT build options, on the nodes it wouldn't work. So the hope was that writing `CMAKE_INSTALL_RPATH=${CMAKE_BINARY_DIR}/lib` in the builtin_xrootd cmake invokation would correctly point the `LC_RPATH` of the libraries in the `build/lib` folder to `build/lib` while the ROOT configuration for installation would overwrite that variable to `install/lib` in the event that a user actually calls the installation command, which is not what happens in the nodes. I have manually called `cmake --build . --target install` on the node and seen and that unfortunately `LC_RPATH` stays the same also for the libraries in `install/lib`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128#issuecomment-669813471:83,configurat,configuration,83,https://root.cern,https://github.com/root-project/root/pull/6128#issuecomment-669813471,12,"['configurat', 'install']","['configuration', 'install', 'installation', 'installed']"
Deployability,"Hi @oshadura, Can you please take a look at the failures for duplicate rules for the LZ4 library?; I think they are relevant (not to these changes, but still relevant for LZ4 integration nonetheless).; In the mean time, I will make the PR build the classic build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1063#issuecomment-332562017:175,integrat,integration,175,https://root.cern,https://github.com/root-project/root/pull/1063#issuecomment-332562017,1,['integrat'],['integration']
Deployability,"Hi @pcanal ,. My understanding was that the full rebuild is needed only for the version bump, but not for patch level bump. But if so, then the difference between versions and patchlevels is much more blured. Andrii. P.S. please close this issue if this is the expected behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7781#issuecomment-813541604:106,patch,patch,106,https://root.cern,https://github.com/root-project/root/issues/7781#issuecomment-813541604,2,['patch'],"['patch', 'patchlevels']"
Deployability,"Hi @pcanal ,. thanks! I've updated the `Print` function. The type conversion is not perfect there, it is an improvement to some extend. . Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6740#issuecomment-735672972:27,update,updated,27,https://root.cern,https://github.com/root-project/root/pull/6740#issuecomment-735672972,1,['update'],['updated']
Deployability,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9478#issuecomment-1006440676:94,update,updated,94,https://root.cern,https://github.com/root-project/root/pull/9478#issuecomment-1006440676,1,['update'],['updated']
Deployability,"Hi @pcanal, maybe the upgrade of the builtin tbb version fixed this issue?; https://github.com/root-project/root/pull/13724",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13079#issuecomment-1739881308:22,upgrade,upgrade,22,https://root.cern,https://github.com/root-project/root/issues/13079#issuecomment-1739881308,1,['upgrade'],['upgrade']
Deployability,"Hi @pcanal,. I have implemented the changes you requested. ; I did not understand though your instruction on ""fix""ing the windows CI. ; I downloaded and run the test suit, shall I share the output somehow?; The result is; ```bash; 74% tests passed, 240 tests failed out of 934; ```; I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output?. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099#issuecomment-597072613:373,patch,patch,373,https://root.cern,https://github.com/root-project/root/pull/5099#issuecomment-597072613,1,['patch'],['patch']
Deployability,"Hi @pcanal,. to complement the answer of @bluehood"" TString tokenises, we are using here a simple lexer.; @bluehood : the suggestion of treating names in strings to jit with a procedure similar to the one adopted for entities in files, ""dynamic scopes"", has not been forgotten.; It is not clear to me how to put it in place though. On the other hand, this step goes in the direction of integrating more cling in the handling of ""code strings"". For example, if the strategy explored in this PR demonstrates to be reliable, we could potentially imagine to hook in the lexer used by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3324#issuecomment-458026173:386,integrat,integrating,386,https://root.cern,https://github.com/root-project/root/pull/3324#issuecomment-458026173,2,['integrat'],['integrating']
Deployability,"Hi @peremato, any objections to using `$ORACLE_HOME` instead of `$ORACLE_DIR`? That's what is set in my system by the installed client. Also, the latest version is 12.x, which is not found without these changes. My own build testing this is currently running.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1471#issuecomment-352415361:118,install,installed,118,https://root.cern,https://github.com/root-project/root/pull/1471#issuecomment-352415361,1,['install'],['installed']
Deployability,"Hi @rahulgrit, thank you very much for the quick update! It seems I missed some of the `clang-tidy` warnings, so we need one more update before taking the next steps. Change requests will follow inline, also with some comments unrelated to `clang-tidy` but with things I spotted on the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766#issuecomment-814472354:49,update,update,49,https://root.cern,https://github.com/root-project/root/pull/7766#issuecomment-814472354,2,['update'],['update']
Deployability,"Hi @rahulgrit, thanks for the update! Good that you remind me about the Travis CI tests! These are running the `clang-tidy` checks on the new code. So before I can make a more in-deph review, I have to make another round of suggests to fix the problems reported by `clang-tidy` (plus some things I noticed on the way).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766#issuecomment-814249051:30,update,update,30,https://root.cern,https://github.com/root-project/root/pull/7766#issuecomment-814249051,1,['update'],['update']
Deployability,"Hi @rdschaffer,. > And it seems only in October, was it?. Would you know if it may have been tied to your analysis going to a different analysis release?. Analysis release 21.2.139 uses XRootD 4.10.0. (As it happens we switched to XRootD 4.12.2 just with AnalysisBase-21.2.140.) We've used XRootD 4.10.0 (in sync with external versions from [LCG_96b](http://lcginfo.cern.ch/release/96b/)) from 21.2.115 before that. Could you check which version of the analysis release you were using before 21.2.139? I still suspect that the problematic nodes provide a different version of some system library than the non-problematic ones. And that this may not have been an issue with previous versions of the analysis release (previous versions of XRootD...), but with 4.10.0 it is. You could of course also try to switch to a newer version. But I understand that your analysis may very well not want to do that for physics reasons... Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758587354:145,release,release,145,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758587354,5,['release'],['release']
Deployability,"Hi @rpezzi ,; thank you very much for your contribution! We'll need @lmoneta to green-light this (might be after the holidays). In the meanwhile could you please also add a test for the bug fixed by this patch?. Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9481#issuecomment-1000909920:204,patch,patch,204,https://root.cern,https://github.com/root-project/root/pull/9481#issuecomment-1000909920,1,['patch'],['patch']
Deployability,Hi @sawenzel . I encountered a problem reproducing:; ```; $ lsb_release --all; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core) ; Release:	7.9.2009; Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 ; libgcc_s.so.1 must be installed for pthread_cancel to work; /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF; EOF. init.c(556):ERROR:161: Cannot initialize TCL; test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1; libgcc_s.so.1 must be installed for pthread_cancel to work; /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF; EOF. init.c(556):ERROR:161: Cannot initialize TCL; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579#issuecomment-2156490625:175,release,release,175,https://root.cern,https://github.com/root-project/root/issues/15579#issuecomment-2156490625,4,"['Release', 'install', 'release']","['Release', 'installed', 'release']"
Deployability,"Hi @silverweed @dpiparo ; FYI @Dr15Jones. I just use the script mentioned in the beginning of this issue and try to run on bare root on lxplus. If I run barely, I get `vector<double>::size_type` which maybe OK (not int); ```; (138) ~/w1/test/temp: root.exe test.C ; ------------------------------------------------------------------; | Welcome to ROOT 6.32.04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 14 2024, 00:00:00 |; | From heads/master@tags/v6-32-04 |; | With g++ (GCC) 11.4.1 20231218 (Red Hat 11.4.1-3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing test.C...; 1; vector<double>::size_type; ```. But if I source ROOT first (to the same version), and try the script, I got the wrong type. ```; (139) ~/w1/test/temp: source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.csh ; (140) ~/w1/test/temp: root.exe test.C; ------------------------------------------------------------------; | Welcome to ROOT 6.32.04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 14 2024, 04:12:34 |; | From tags/v6-32-04@v6-32-04 |; | With c++ (GCC) 11.4.1 20231218 (Red Hat 11.4.1-3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing test.C...; 1; vector<TClass*>::size_type; ```. Additional test on ROOT through CMSSW which is still in 6.30, I get the wrong type (same as original report).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955#issuecomment-2326988912:955,release,releases,955,https://root.cern,https://github.com/root-project/root/issues/7955#issuecomment-2326988912,1,['release'],['releases']
Deployability,"Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1870003654:58,patch,patch,58,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1870003654,1,['patch'],['patch']
Deployability,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507#issuecomment-2000082149:29,upgrade,upgrade,29,https://root.cern,https://github.com/root-project/root/pull/14507#issuecomment-2000082149,1,['upgrade'],['upgrade']
Deployability,"Hi @stevenrbrandt, sorry for coming back to this so late!. Is this issue still relevant anymore? It could be gone in ROOT 6.30, where the minimum C++ standard is C++17, or maybe it's gone at least in ROOT `master` with the upgrade to LLVM 16. Can you still reproduce this issue with the newest ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7952#issuecomment-1861505077:223,upgrade,upgrade,223,https://root.cern,https://github.com/root-project/root/issues/7952#issuecomment-1861505077,1,['upgrade'],['upgrade']
Deployability,"Hi @subham73 , we appreciate the contribution but this is far from what's actually required to fix the issue (and this patch does not compile, as you mention). @hageboeck 's comments here also apply: https://github.com/root-project/root/pull/9546#issuecomment-1010879086",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9663#issuecomment-1020051915:119,patch,patch,119,https://root.cern,https://github.com/root-project/root/pull/9663#issuecomment-1020051915,1,['patch'],['patch']
Deployability,"Hi @subham73! I use Arch Linux with the same CMake configuration used for the official packages of that Linux distribution:. https://github.com/archlinux/svntogit-community/blob/packages/root/trunk/settings.cmake. What CMake errors do you get exactly? Sorry, I will probably have a hard time to help you with visual studio details, because I haven't used Windows for over a decade! Do you maybe have a computer with Linux at hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1028392428:51,configurat,configuration,51,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1028392428,1,['configurat'],['configuration']
Deployability,"Hi @tcuisset, thank you very much for reporting this issue!. I have opened a PR that addresses this issue. It should be reviewed and merged next week. Would it benefit you if this bugfix is also applied to the next 6.26.08 patch release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11067#issuecomment-1199379117:223,patch,patch,223,https://root.cern,https://github.com/root-project/root/issues/11067#issuecomment-1199379117,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi @thomreis ,; thank you for your report. `GetImplicitMTPoolSize` was deprecated in v6.22 and removed in v6.24, see https://root.cern/doc/v622/release-notes.html#deprecation-and-removal . During the removal, it looks like the public declaration of the method was deleted (in 4b49fbd25639367942d699f28d93253190056302 ), but the implementation was forgotten there -- unreachable because there is no corresponding declaration in the header. Thank you for noticing, I opened #10422 to remove the leftover definition. Closing this as clarified (`GetThreadPoolSize` is intentionally the only available such function).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10413#issuecomment-1104050745:144,release,release-notes,144,https://root.cern,https://github.com/root-project/root/issues/10413#issuecomment-1104050745,1,['release'],['release-notes']
Deployability,"Hi @tmombaecher, thanks for reporting this and sorry that this was addressed so late! I have opened a PR to fix this issue, so in the upcoming ROOT release 6.28 nobody will run into this problem anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7252#issuecomment-1176545405:148,release,release,148,https://root.cern,https://github.com/root-project/root/issues/7252#issuecomment-1176545405,1,['release'],['release']
Deployability,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13974#issuecomment-1784790292:116,release,release,116,https://root.cern,https://github.com/root-project/root/pull/13974#issuecomment-1784790292,2,['release'],['release']
Deployability,"Hi @unelg - you missed my point, I'm trying to help you with your software stack. Even if we update libpng you still have a problem because you are mixing multiple libpng versions. Up to you :-) But please at https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825#issuecomment-1840899508:93,update,update,93,https://root.cern,https://github.com/root-project/root/issues/13825#issuecomment-1840899508,1,['update'],['update']
Deployability,"Hi @vepadulano , excellent! Thanks! Please feel free to push your updates to my branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15476#issuecomment-2135513401:66,update,updates,66,https://root.cern,https://github.com/root-project/root/pull/15476#issuecomment-2135513401,1,['update'],['updates']
Deployability,Hi @vepadulano that would be great. Thanks a lot!. I am merging this now. I will specify `GraphAsymmErrors` in the release notes once you are done with the RDF docs on it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9760#issuecomment-1027740375:115,release,release,115,https://root.cern,https://github.com/root-project/root/pull/9760#issuecomment-1027740375,1,['release'],['release']
Deployability,"Hi @vepadulano, since you worked on #13632, which touches the same code, can you maybe comment on this issue? Maybe After the updates by @siliataider, this problem has ""sorted"" out itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6352#issuecomment-1739767276:126,update,updates,126,https://root.cern,https://github.com/root-project/root/issues/6352#issuecomment-1739767276,1,['update'],['updates']
Deployability,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy?; https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15777#issuecomment-2154472865:69,patch,patch,69,https://root.cern,https://github.com/root-project/root/pull/15777#issuecomment-2154472865,6,['patch'],"['patch', 'patched', 'patches']"
Deployability,"Hi @vepadulano, thanks a lot for your review! I have updated the PR and the associated `roottest` PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13593#issuecomment-1942107449:53,update,updated,53,https://root.cern,https://github.com/root-project/root/pull/13593#issuecomment-1942107449,1,['update'],['updated']
Deployability,"Hi @vepadulano,. I think I have to disagree on all counts. The application that writes the data to a file may have it's own memory management policy and it should not be required for it to always use `SetOwner` on its data. Memory management in the reading application should be responsibility of the reading application, not writing one. . Your examples of `sqlite3` or Python files are misplaced, none of those is leaking memory like ROOT. Again, my point is that whatever Python extension does, it is not supposed to leak memory or require some special code to avoid memory leak. I do understand how Python garbage collection works but that has nothing to do with the memory leak in this case. And of course it is not always possible to migrate from `TObjArray` to vector, the files are already written and archived for posteriority, no one is going to update or replace those files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11099#issuecomment-1205560901:856,update,update,856,https://root.cern,https://github.com/root-project/root/issues/11099#issuecomment-1205560901,1,['update'],['update']
Deployability,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9422#issuecomment-991968235:174,release,released,174,https://root.cern,https://github.com/root-project/root/issues/9422#issuecomment-991968235,2,['release'],"['release', 'released']"
Deployability,"Hi @vgvassilev , ; This problem crept back into both dev3 (since Mon build) and dev4 LCG nightlies. So it's both ROOT master and 6.28-patches. It can be reproduced the same way as I reported before:. % source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/current/AtlasSetup/scripts/asetup.sh master--dev3LCG,latest,Athena; % root; root [0] new xAOD::IParticle();; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Tue/ROOT/HEAD/x86_64-centos7-gcc11-opt/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/include/c++/11.3.0/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc. *** Break *** segmentation violation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1532628939:134,patch,patches,134,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1532628939,2,"['patch', 'release']","['patches', 'releases']"
Deployability,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14276#issuecomment-1863327860:474,release,release,474,https://root.cern,https://github.com/root-project/root/pull/14276#issuecomment-1863327860,1,['release'],['release']
Deployability,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605).; Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1882727682:200,release,release,200,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1882727682,2,"['release', 'update']","['release', 'updates']"
Deployability,"Hi @vgvassilev! We were wrong, the patch works. Thanks for the fix! :); (I commented before, but I cannot see the comment anymore...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1433232556:35,patch,patch,35,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1433232556,1,['patch'],['patch']
Deployability,"Hi @virenvarma007, thanks for reaching out to us about this issue!. Fortunately, you don't necessarily have to compile and set up ROOT yourself to work on this issue :) All you need it a working ROOT installation on your system. Which Linux distribution are you using? Most likely root is available as a package for your distribution, for example on Ubuntu you can just do `sudo apt install root` to install it. For more information on how to install ROOT also on different platforms, please take a look also at https://root.cern/install/. Once you have ROOT installed, you can download one of the roostats tutorials that you want to translate (maybe pick a shorter one in the beginning, like [rs101_limitexample](https://github.com/root-project/root/blob/master/tutorials/roostats/rs101_limitexample.C). Remember you just need the tutorial file, not the whole ROOT repository. To try out the tutorial, you can run it with the root interpreter by typing `root rs101_limitexample.C` in the command line. You will get a graph as a result. To translate the tutorial, you need to create a `rs101_limitexample.py` file where you exactly recreate the tutorial in pyROOT, such that one can run it with `python rs101_limitexample.py` and get the same graph than with the C++ version. When you have translated your first tutorial, you can make a pull request here with the new python file in the same directory as the C++ tutorials. You can find more information of ROOT and especially pyROOT for your usecase in the ROOT users manual: https://root.cern/manual/. If you have any questions that are not answered in this manual, please feel free to ask!. Good luck and thanks for your effort already!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758#issuecomment-974786394:200,install,installation,200,https://root.cern,https://github.com/root-project/root/issues/8758#issuecomment-974786394,6,['install'],"['install', 'installation', 'installed']"
Deployability,"Hi @wdconinc and @bellenot! It would be nice if we could fix the issue without the added complexity of an additional flag. Wouter, you're probably using the `fail-on-missing` option to build ROOT, right? The flag to make sure that the features don't get quietly disabled at configuration time. The connectivity check doesn't make sense with `fail-on-missing=ON`, because a missing dependency will cause a configuration failure either way. More on this in the description of the PR that I opened:; * https://github.com/root-project/root/pull/15467. Would that PR fix your issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603#issuecomment-2102480923:274,configurat,configuration,274,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102480923,2,['configurat'],['configuration']
Deployability,"Hi @will-cern . Looks like the issue no longer exists with the latest PyROOT updates:. ```; (root_venv) ➜ ROOT python; Python 3.12.3 (main, Jul 31 2024, 17:43:48) [GCC 13.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> from ROOT.Experimental import XRooFit; >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""); xRooNode{}; >>> for c in w: print(type(c)); ... ; <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x906dac0>; >>> ROOT.gROOT.GetVersion(); '6.33.01'; >>> ; ```. Closing as this issue is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15269#issuecomment-2288315724:77,update,updates,77,https://root.cern,https://github.com/root-project/root/issues/15269#issuecomment-2288315724,1,['update'],['updates']
Deployability,"Hi @wwdws1, thanks for the report!. Unfortunately we had to take out the interface between ROOT and `fftw3` out of the released binaries, because it was not license compatible with `fftw3`. Installing `fftw3` doesn't help, because the relevant `TVirtualFFT` plugins won't be there. I have suggested a solution to fix this for the next release:; https://github.com/root-project/root/pull/14174",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14162#issuecomment-1838715040:119,release,released,119,https://root.cern,https://github.com/root-project/root/issues/14162#issuecomment-1838715040,3,"['Install', 'release']","['Installing', 'release', 'released']"
Deployability,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350890764:161,continuous,continuously,161,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350890764,3,"['continuous', 'update']","['continuously', 'update']"
Deployability,"Hi @yuhao-wang-nju, thanks for your post!. 1. This is by design (see #15153); 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`.; 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script?. Thanks a lot!. Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15479#issuecomment-2104844013:567,release,release-notes,567,https://root.cern,https://github.com/root-project/root/issues/15479#issuecomment-2104844013,1,['release'],['release-notes']
Deployability,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16773#issuecomment-2457457327:228,update,update,228,https://root.cern,https://github.com/root-project/root/pull/16773#issuecomment-2457457327,1,['update'],['update']
Deployability,"Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot!. 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 3. mkdir build_amd64 && cd build_amd64; 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 ..; 5. cmake --build . --config Release. Hit below error when build:; F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9389:22,release,release,22,https://root.cern,https://github.com/root-project/root/issues/9389,4,"['Release', 'release']","['Release', 'release', 'release-', 'releases']"
Deployability,"Hi Axel and Lorenzo,. I have all updated, well tested and ready for merge.; If you want to do other review and you have corrections please let me know. On the other hand I have a question:; I have a users guide in markdown in $ROOTSYS/bindings/r/doc/users-guide and I can see that in the last commits you have the users guides in $ROOTSYS/documentation/users-guide; must I move my users guide there?. Best Regards!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74#issuecomment-136081750:33,update,updated,33,https://root.cern,https://github.com/root-project/root/pull/74#issuecomment-136081750,1,['update'],['updated']
Deployability,"Hi Axel and Lorenzo,. I take the code and I put it in one commit to let review it easy.; In resume the changes are ; -> Now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import; -> added documentation in doxygen; -> new propieties for TRDataFrame with operators. You can see the output of documentation in; http://files.oproject.org/root/rootdoc/html/group___r.html; users guide in markdown integrate to doxygen ; http://files.oproject.org/root/rootdoc/html/md__home_omazapa_root_bindings_r_doc_users-guide__r_o_o_t_r__users__guide.html. I have the code now in http://github.com/oprojects/root. Best Regards; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/83:333,update,updated,333,https://root.cern,https://github.com/root-project/root/pull/83,2,"['integrat', 'update']","['integrate', 'updated']"
Deployability,"Hi Axel,. I cloned root.git from GitHub and compiled from source with the following configuration:. cmake ../ -Dgminimal=1 -Dasimage=1 -Dmathmore=1 -Dminuit2=1 -Dxml=1 -Dopengl=1 -Dbuiltin_glew=1 -DCMAKE_INSTALL_PREFIX=$HOME/Applications/root/root_exec; There is NO LC_RPATH (see the attached otool output. Best,; Andreas . > On 31 May 2022, at 13:16, Axel Naumann ***@***.***> wrote:; > ; > ; > Hi Andreas,; > ; > dyld[7935]: Library not loaded: @rpath/libRIO.so says that (as expected), macOS tries to find the library through the rpath mechanism. That's supposed to work - but doesn't, for you. If you run otool -l /Users/suter_a/Applications/root/root_exec/bin/rootcling, what does the section cmd LC_RPATH show?; > ; > Where did you get ROOT from?; > ; > Cheers, Axel; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/10062#issuecomment-1141999874>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJRV4WFL5UYCLGDEGQLT4Q3VMXYHJANCNFSM5QDEKDCQ>.; > You are receiving this because you authored the thread.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1142017612:84,configurat,configuration,84,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1142017612,1,['configurat'],['configuration']
Deployability,"Hi Axel,. Thanks for following up with me. I am involved with 2 groups that still rely on v5.34 to run legacy code: the P-27 group at Los Alamos National Laboratory and the DRAGON group at TRIUMF. I have tried to be diligent with making sure that v5.34 builds properly with as many options enabled as possible on MacOS so that in the event our mac users are forced to upgrade to the latest MacOS version, they would still be able to install v5.34 and run the plethora of analysis codes written for v5 that both of these groups still work with. This patch is needed to build v5.34 on MacOS with the version of mysql installed with the homebrew package manager on MacOS Mojave. . It is also worth noting that the DRAGON DAQ machine is currently a mac, and will likely be replaced with a mac, so at some time in the foreseeable future, DRAGON will be forced to upgrade to the latest MacOS, and the inability to build v5.34 will prevent DRAGON from running its DAQ frontend and online analysis program.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3352#issuecomment-461240072:368,upgrade,upgrade,368,https://root.cern,https://github.com/root-project/root/pull/3352#issuecomment-461240072,5,"['install', 'patch', 'upgrade']","['install', 'installed', 'patch', 'upgrade']"
Deployability,"Hi Axel,. The fixes are ready and the documentation in doxygen is ready ; http://files.oproject.org/root/rootdoc/html/group___r.html; users guide in markdown integrate to doxygen ; http://files.oproject.org/root/rootdoc/html/md__home_omazapa_root_bindings_r_doc_users-guide__r_o_o_t_r__users__guide.html. Best regards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74#issuecomment-127150589:158,integrat,integrate,158,https://root.cern,https://github.com/root-project/root/pull/74#issuecomment-127150589,1,['integrat'],['integrate']
Deployability,"Hi Axel,; I right now merged RFitPanel and RFitPanel6 together - now RFitPanel should be able to work with both kind of histograms (ROOT7 part is still dummy). I need few hours to submit latest code - at least it will be a state with classes names we expect in release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3772#issuecomment-490881565:261,release,release,261,https://root.cern,https://github.com/root-project/root/pull/3772#issuecomment-490881565,1,['release'],['release']
Deployability,"Hi Ben,. Thanks for the info! This is very good to know, it should help with improving the ATLAS code as well in the future. Though I do wonder how much I want to become involved in tweaking the ROOT configuration... There are many things that I'd love to change about the current ROOT CMake configuration (I find it pretty bad that target properties are used so sparsely in the configuration, using directory level configurations in most cases instead.), but I wouldn't have time to propose an update for those that I'd like... As you probably saw, I didn't even try to alter the build-time behaviour of the code. I explicitly only modified the `INCLUDE_DIRECTORIES` property of the shared libraries for the installation. (As I didn't want to affect the include directory order on any of the targets, since I wasn't sure exactly how the directory properties would interact with the target properties.). So all in all, I'd just stay with fixing ""this much"" for now... Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-351746023:200,configurat,configuration,200,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-351746023,6,"['configurat', 'install', 'update']","['configuration', 'configurations', 'installation', 'update']"
Deployability,"Hi Carsten, ; I think the PR is fine and we can merge it. Do you want me to port the fix also in the 6.14 branch which sill be released soon ? . Thank you for this PR. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2033#issuecomment-391622288:127,release,released,127,https://root.cern,https://github.com/root-project/root/pull/2033#issuecomment-391622288,1,['release'],['released']
Deployability,"Hi Carsten, looks great so far. Three things, two optional ones:; - I left some comments to modernise the iterators.; - Did I miss something or is RooPower implementing the same as RooPolynomial?; - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person.; - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit.; - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:; https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4015#issuecomment-507164679:362,integrat,integrate,362,https://root.cern,https://github.com/root-project/root/pull/4015#issuecomment-507164679,1,['integrat'],['integrate']
Deployability,"Hi Christian, thanks for the update! Let's get it tested by the bot. If everything works we can merge this. It's not advisable to do too much in one PR and what you did here is already a very good start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-793602168:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-793602168,1,['update'],['update']
Deployability,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing.; The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337#issuecomment-1890415411:249,install,installed,249,https://root.cern,https://github.com/root-project/root/issues/14337#issuecomment-1890415411,2,['install'],"['install', 'installed']"
Deployability,"Hi Enric, ; Thank you very much! ; Indeed it is a kind of problem; I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`; 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. ; - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552#issuecomment-709078495:1109,patch,patch,1109,https://root.cern,https://github.com/root-project/root/issues/6552#issuecomment-709078495,1,['patch'],['patch']
Deployability,"Hi Enrico, I just wanted to report that the master branch after merge 6199f0610da0b97b99500803ac3d9af44b0bc955 indeed solves the problem I originally came up with. . Took me a bit longer to check -- I don't have such a nice build pipeline, ;-).; But finally, this thing should be really fixed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143#issuecomment-776053965:230,pipeline,pipeline,230,https://root.cern,https://github.com/root-project/root/issues/7143#issuecomment-776053965,1,['pipeline'],['pipeline']
Deployability,"Hi Enrico,. I installed the same root version in a conda environment and I'm able to plot without problems in pyROOT. Meanwhile I also found that in the system compiler I'm using for my project which is Centos7, among other problems, it looks like std::regex is broken . [https://root-forum.cern.ch/t/std-regex-with-root-interpreter/35609](https://root-forum.cern.ch/t/std-regex-with-root-interpreter/35609). so it looks like the problem resides in how I compile my project rather than in ROOT itself, I'm gonna have to investigate deeper on this. Thanks,; Davide",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-776570999:14,install,installed,14,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-776570999,1,['install'],['installed']
Deployability,"Hi Fons! Thanks for opening this issue. It seems our instructions are out-of-date here:; https://root.cern/install/build_from_source/#root-python-and-pyroot. We don't have any of this multi Python anymore, support for Python 2 is dropped in ROOT 6.32. What we use now is just the standard CMake `find_package(Python3 ...)`, which you can give [some hints](https://cmake.org/cmake/help/latest/module/FindPython3.html#hints) to find python. In your case, the `Python3_ROOT_DIR` should probably do the trick:. `cmake -G Ninja -DPython3_ROOT_DIR=/opt/homebrew/ ..`. Now, if you have multiple Python versions in that directory (I don't know if you do), then I think it will pick the newest one by default. In that case, you might have to [create a virtual environment with your desired specific Python version](https://stackoverflow.com/questions/1534210/use-different-python-version-with-virtualenv), and then pass the directory of the virtual environment as the `Python3_ROOT_DIR` (or via some other hints specific for virtual environments). Let us know what works for you, and then I can update the website accordingly with the right instructions!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15136#issuecomment-2037453890:107,install,install,107,https://root.cern,https://github.com/root-project/root/issues/15136#issuecomment-2037453890,2,"['install', 'update']","['install', 'update']"
Deployability,"Hi Guys, . obviously is failing because ipopt is not installed in the systems,; do you thinks I should write a builtin_ipopt option in cmake to provide ipopt?. A hug,; Omar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3249#issuecomment-454206006:53,install,installed,53,https://root.cern,https://github.com/root-project/root/pull/3249#issuecomment-454206006,1,['install'],['installed']
Deployability,"Hi Guys,. According to the new design of TMVA the interfaces TMVAGui, TMVAMultiClassGui and TMVARegGui needs an update to support the new format that is stored the results.; In this pull requests I have the code to updated TMVAGui to do visualization of two class classification.; lets see http://oproject.org/tiki-index.php?page=TMVA#TMVAGuis. I will continue working to updated TMVAMultiClassGui and TMVARegGui.; NOTE: all requirements accorded in the meeting was implemented. Best Regards. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/143:112,update,update,112,https://root.cern,https://github.com/root-project/root/pull/143,3,['update'],"['update', 'updated']"
Deployability,"Hi Hans, ; Thank you for the update. ; Actually having the info message with all the nested calls is maybe making the line too verbose, especially when calling from ROOT. I am not sure everybody will like this. Here is for example what I am getting:; ```; Minuit2Minimizer: Minimize with max-calls 1000000 convergence for edm < 0.001 strategy 1; Info in <Minuit2>: Minuit2Minimizer::Minimize:MnSeedGenerator: Initial state: FCN = 3616 Edm = 6305.439852 NCalls = 9; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: Start iterating until Edm is < 2e-06 with call limit = 1000000; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 0 - FCN = 3616 Edm = 6305.439852 NCalls = 9; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 1 - FCN = 13.13450166 Edm = 0.7502570511 NCalls = 16; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 2 - FCN = 12.64308061 Edm = 0.001706300191 NCalls = 22; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 3 - FCN = 11.13331108 Edm = 0.4006477323 NCalls = 34; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 4 - FCN = 10.43729238 Edm = 1.767931142 NCalls = 41; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 5 - FCN = 6.552494076 Edm = 0.03027421909 NCalls = 51. ```. Maybe we should add a compiler option for this, whichcould be enabled for Iminuit ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-732288624:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-732288624,1,['update'],['update']
Deployability,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation; Line 28-29 becomes:; ```; factory = TMVA.Factory('TMVAClassification', output,; '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'); ```. Line 63-66 becomes:; ```; factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',; '!H:!V:Fisher:VarTransform=D,G,S'); factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',; 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'); ```. Updated script attached: ; [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running; `cd $ROOTSYS/tutorials/tmva/keras`; `python ClassificationKeras.py &> DG.log`; [DG.log](https://github.com/root-project/root/files/3568685/DG.log); and after:; `python ClassificationKerasScale.py &> DGS.log`; [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]; > : -----------------------------------------------------------; > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]; > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]; > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]; > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]; > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]; > : -----------------------------------------------------------; > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]; > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]; > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]; > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]; > : ----------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4141#issuecomment-527381114:540,Update,Updated,540,https://root.cern,https://github.com/root-project/root/pull/4141#issuecomment-527381114,1,['Update'],['Updated']
Deployability,"Hi Ivan, thank you, I have some doubts about the changes:. - I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; - the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."". Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705#issuecomment-1148383295:332,patch,patch,332,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148383295,1,['patch'],['patch']
Deployability,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766:377,update,updates,377,https://root.cern,https://github.com/root-project/root/pull/7766,1,['update'],['updates']
Deployability,"Hi Jonas,; I've used this patch (explicit conversion to int) for my code and ; it is a kind of patched solution.; But it will be nice (for future) of a proper fix appear in cppyy.; (Actually location of this bug.feature was a rather tricky - ; it happens when I make parallelisation of ; my task into several processors/nodes using parallel python.; For technical reasons the output is suppressed in a very harsh way, ; therefore the final ""visible"" error report has nothing to to; with pickling on enums.. And it takes some time to identify the plroblem.; Temporary patch in my code ok, but proper long-term solution ; is better. For a time being it is OK for me. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15104#issuecomment-2032253408:26,patch,patch,26,https://root.cern,https://github.com/root-project/root/issues/15104#issuecomment-2032253408,3,['patch'],"['patch', 'patched']"
Deployability,"Hi Lorenzo, thank you for your feedback 😀! Do you know by any chance if this fix will be included in the next ROOT release? It is important for us to know if we should wait or implement some workaround in our project code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780#issuecomment-1160231233:115,release,release,115,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1160231233,2,['release'],['release']
Deployability,"Hi Lorenzo,; Thanks for the constructive feedback, I will soon address the comments and the build warnings and update the PR. Regarding the XML incompatibility, I changed that on purpose so that we always have the same naming. Let me know if I need to revert this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-398771967:111,update,update,111,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-398771967,2,['update'],['update']
Deployability,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:; 1) Remove all variable names in Italian language; 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file""; 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness.; 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names); 5) ""Invalid argument set"" shall be printed on stderr; 6) The script must be compatible python2 and python3, e.g. for what concerns the print function; 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,; Danilo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/236#issuecomment-245232939:1244,configurat,configuration,1244,https://root.cern,https://github.com/root-project/root/pull/236#issuecomment-245232939,1,['configurat'],['configuration']
Deployability,"Hi Mammad, . Can you please update your Pull request with the fixes for the formatting (clang-format) and also ; ass a tutorial program showing the usage of these 3 features in parallel. Thank you . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/858#issuecomment-322773102:28,update,update,28,https://root.cern,https://github.com/root-project/root/pull/858#issuecomment-322773102,1,['update'],['update']
Deployability,"Hi Marcin,. That worked and did some progress in understanding the problem. A potential work-around would be requested the dictionary for the 2 level of namespace/struct that contains the typedef (in the same dictionary). In order to test any solution to the problem I still need a standalone reproducer and I am still having some difficulties. In particular in my attempts to reproduce the dictionary generation the typedef does not appear in the dictionary nor in the rootmap file. Weirder even, when I follow the [instructions](https://atlassoftwaredocs.web.cern.ch/guides/build_release/) to build Athena from scratch (on zeus.lbl.gov; done a couple of weeks ago), I get a different rootmap file (however because the build is currently (for other reason) partially broken I did not try with it):; ```; grep jetlink_t ../atlas_working/build/build/Athena/_CPack_Packages/Linux/RPM/Athena_23.0.17_x86_64-centos7-gcc11-opt/usr/Athena/23.0.17/InstallArea/x86_64-centos7-gcc11-opt/lib/Athena.rootmap; ```; vs; ```; grep jetlink_t /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/2023-03-05T2101/Athena/23.0.20/InstallArea/x86_64-centos7-gcc11-opt/lib/Athena.rootmap; typedef MissingETBase::Types::jetlink_t; ```. So I am not sure what I am doing different in my reproducer and in my local Athena.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12378#issuecomment-1462615809:941,Install,InstallArea,941,https://root.cern,https://github.com/root-project/root/issues/12378#issuecomment-1462615809,2,['Install'],['InstallArea']
Deployability,"Hi Oksana, I think it's better to fix all at once in a single commit, and you probably have to tweak the temporary install location to avoid the test failure. Once that's fixed, it should be ok to merge. Please also check that `root -l -e '#include <Math/CladDerivator.h>'` works after ROOT has been installed, since the tests won't catch this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3337#issuecomment-458872716:115,install,install,115,https://root.cern,https://github.com/root-project/root/pull/3337#issuecomment-458872716,2,['install'],"['install', 'installed']"
Deployability,"Hi Olivier, ; The pdf file is in the repo and I have re-generated and it is updated in this PR. ; Here is the link, not visible from the PR; https://github.com/lmoneta/root/blob/update_tmva_usersguide/documentation/tmva/UsersGuide/TMVAUsersGuide.pdf. and the new part is the DeepLearning section, 8.11 pages 115-123; if you see anything wrong please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5710#issuecomment-634525798:76,update,updated,76,https://root.cern,https://github.com/root-project/root/pull/5710#issuecomment-634525798,1,['update'],['updated']
Deployability,"Hi Olivier,. I had a similar situation with a Fermilab server and requested computing support to install missing libraries. I do not have a CERN account so can't open a ticket for lxplus9, but it makes sense to install the libraries there to make the machine usable with ROOT. Andrei. ________________________________________; From: Olivier Couet ***@***.***>; Sent: Tuesday, August 15, 2023 9:27 AM; To: root-project/root; Cc: Andrei Gaponenko; Author; Subject: Re: [root-project/root] clip edit in GL viewer is still broken (Issue #13418). Gl does not seem properly installed there:. $ glxgears; libGL error: No matching fbConfigs or visuals found; libGL error: failed to load driver: swrast; Error: glXCreateContext failed. —; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_issues_13418-23issuecomment-2D1679025586&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=ejeOXHRM6NnnTa4TA470cGD4wj63fFxBITffmOQ02lc&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AAXVCGSO4HWIKORE7ZRV24LXVOBONANCNFSM6AAAAAA3I665NU&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=Qa0IvEvjeyrinJUtkFkmyfcNPybfsSDQQI7cpx17nBw&e=>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418#issuecomment-1679169141:97,install,install,97,https://root.cern,https://github.com/root-project/root/issues/13418#issuecomment-1679169141,6,['install'],"['install', 'installed']"
Deployability,"Hi Olivier,; thanks for taking a look at this! Indeed this tutorial depends on pyspark, which is one of our optional runtime dependencies since 6.24, as also described in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt). I can run the tutorial on my machine and it also works on our CI nodes where I installed `pyspark`, so I think it's probably some issue with `\macro_code` and similar magic we use for the tutorials, I'm not very familiar with those",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7802#issuecomment-817826921:337,install,installed,337,https://root.cern,https://github.com/root-project/root/issues/7802#issuecomment-817826921,1,['install'],['installed']
Deployability,"Hi Otto, ; Thank you for the update. It works nicely ! I will merge.; Cheers,; Olivier",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4554#issuecomment-543060737:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/4554#issuecomment-543060737,1,['update'],['update']
Deployability,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make.; I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2737#issuecomment-428859326:16,configurat,configuration,16,https://root.cern,https://github.com/root-project/root/pull/2737#issuecomment-428859326,2,['configurat'],['configuration']
Deployability,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`.; 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency.; 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages.; * Please avoid mixing code formatting changes with actual changes in the same commit.; * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful.; * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294#issuecomment-854587983:137,integrat,integrate,137,https://root.cern,https://github.com/root-project/root/pull/8294#issuecomment-854587983,2,['integrat'],"['integrate', 'integrating']"
Deployability,"Hi Philipp,; thank you for the thorough report! Given the lack of a reproducer I have to ask you to help out a bit more. What is your exact ROOT version? The commit you mentioned is included in 6.20/06 but e.g. not in 6.20/02. Could you check whether the problem is still present in ROOT master? You can install a ROOT nightly build via conda or source it as an LCG release, see the instructions at https://root.cern/install/nightlies . Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143#issuecomment-775029261:304,install,install,304,https://root.cern,https://github.com/root-project/root/issues/7143#issuecomment-775029261,3,"['install', 'release']","['install', 'release']"
Deployability,"Hi Philippe! About zstd, it is using classical fail-on-missing strategy, which is enabled by default in PRs. Axel will help me to install zstd on PR nodes, so we can test it without builtin_zstd. I tested builds without builtin_zstd and fail-on-missing strategy, it works just fine..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-541535462:130,install,install,130,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-541535462,1,['install'],['install']
Deployability,"Hi Philippe, ; The PR shows the settings that we need for the BioDynaMo project (agent-based simulation framework).; We JIT a few functors at the beginning of the simulation and call them a couple hundred million times during simulation. The intent of this PR is to start a discussion. Fons dislikes the idea of using a patched ROOT version. Until https://sft.its.cern.ch/jira/browse/ROOT-10707 ships, would it be possible to add an e.g. rootrc parameter to influence the optimization level and pointer checks, or do you recommend waiting for ROOT-10707?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6038#issuecomment-661915249:320,patch,patched,320,https://root.cern,https://github.com/root-project/root/pull/6038#issuecomment-661915249,1,['patch'],['patched']
Deployability,"Hi Philippe,; for the release note, I would suggest the following summary:. + David Clark, ANL (SULI),\; + Peter van Gemmeren, ANL,\. +- To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced.; + This change will prevent additional reads from occurring when reading events out of sequence.; + By setting TTree::SetClusterPrefetch(), an entire clusters will be loaded into memory, rather than single baskets.; + By setting the MaxVirtualSize of the tree to a negative value, previous clusters will be retained; + (the absolute value of MaxVirtualSize indicates how many additional clusters will be kept in memory). Does that sound ok?; Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065#issuecomment-334220882:22,release,release,22,https://root.cern,https://github.com/root-project/root/pull/1065#issuecomment-334220882,1,['release'],['release']
Deployability,"Hi ROOT team, any update on this? Let me know if you need any more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10784#issuecomment-1188872084:18,update,update,18,https://root.cern,https://github.com/root-project/root/issues/10784#issuecomment-1188872084,1,['update'],['update']
Deployability,"Hi Rod,. :confused: So, how did you compile that code exactly? Just `g++ main.cxx`, right?. In that case XRootD would be picked up from `/usr`. Which doesn't tell us much about our problem. Since RD's test job will pick up XRootD from:. ```; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/; ```. This is why I said at the beginning, that I'm suspicious about the `LD_PRELOAD` setting. If that library wants to use XRootD, but it was compiled against a different version of XRootD than what the analysis release comes with, then we're in trouble. Note that **all** ATLAS releases come with their own version of XRootD, not just the analysis releases. So any grid node setup that wants to force one particular version of XRootD on the job, will give us a really bad time... Best,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746441588:316,Install,InstallArea,316,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746441588,4,"['Install', 'release']","['InstallArea', 'release', 'releases']"
Deployability,"Hi Rod,. What does. ```; LD_PRELOAD=/srv/workDir/96340ef3-75b1-46cf-8910-8a2f76b7068c/$LIB/wrapper.so; ```. do? That would be my first suspect. Since `$LD_LIBRARY_PATH` lists our software directories in the correct order, based on just that XRootD **should** be found under:. ```; [bash][thor]:~ > ls -l /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*; lrwxrwxrwx 1 cvmfs cvmfs 19 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so -> libXrdAppUtils.so.1; lrwxrwxrwx 1 cvmfs cvmfs 23 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1 -> libXrdAppUtils.so.1.0.0; -rwxr-xr-x 1 cvmfs cvmfs 74512 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0; -rwxr-xr-x 1 cvmfs cvmfs 18432 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdBlacklistDecision-4.so; -rwxr-xr-x 1 cvmfs cvmfs 82136 Sep 10 03:21 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdBwm-4.so; -rwxr-xr-x 1 cvmfs cvmfs 13552 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCksCalczcrc32-4.so; lrwxrwxrwx 1 cvmfs cvmfs 17 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdClient.so -> libXrdClient.so.2; lrwxrwxrwx 1 cvmfs cvmfs 21 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdClient.so.2 -> libXrdClient.so.2.0.0; -rwxr-xr-x 1 cvmfs cvmfs 663320 Sep 10 03:19 /cvmfs/a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744308661:378,Install,InstallArea,378,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744308661,4,['Install'],['InstallArea']
Deployability,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889#issuecomment-736290535:380,integrat,integration,380,https://root.cern,https://github.com/root-project/root/issues/6889#issuecomment-736290535,4,"['install', 'integrat']","['installation', 'integration']"
Deployability,"Hi Sergey, I have both Qt4 and Qt5 installed on my computer, and I'm using `-Dqt=ON -Dqtgsi=ON -Dqt5web=ON`. If I turn OFF `qt` and `qtgsi` then compilation works fine with `-Dqt5web=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-367665882:35,install,installed,35,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-367665882,1,['install'],['installed']
Deployability,"Hi Simon,. to fix the format, lets install clang-format 3.9 and run in the root directory; git diff -U0 --no-color HEAD^ | clang-format-diff-3.9 -i -p1 -style=file",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/779#issuecomment-316070970:35,install,install,35,https://root.cern,https://github.com/root-project/root/pull/779#issuecomment-316070970,1,['install'],['install']
Deployability,"Hi Sir !; Thank you so much for your reply; My Details are as follows; Distributor ID: Ubuntu; Description: Ubuntu 23.04; Release: 23.04; i have downloaded the root file; root_v6.28.06.Linux-ubuntu22-x86_64-gcc11.4(2).tar.gz and now i am trying; to install by Cmake build . process. On Fri, 24 Nov 2023, 12:49 pm Axel Naumann, ***@***.***>; wrote:. > Which version of ROOT, which platform (which Linux distribution, which; > version), how did you configure, what's your compiler?; > Why do you build from source rather than just conda install root or snap; > install root-framework or dnf install root or taking one of the binary; > releases <https://root.cern/releases/release-63000/>?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/14102#issuecomment-1825267807>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/APQNGFXRMQ4DAD5FWHKDUCDYGBGPPAVCNFSM6AAAAAA7YXHLH2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQMRVGI3DOOBQG4>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14102#issuecomment-1825909875:122,Release,Release,122,https://root.cern,https://github.com/root-project/root/issues/14102#issuecomment-1825909875,8,"['Release', 'install', 'release']","['Release', 'install', 'release-', 'releases']"
Deployability,"Hi Stephan, thanks for taking a look!. Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet?. I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right?. Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8324#issuecomment-857660916:727,release,release,727,https://root.cern,https://github.com/root-project/root/pull/8324#issuecomment-857660916,1,['release'],['release']
Deployability,"Hi Stephan, thanks for the updates! I went over all the new commits, so from my side it's okay now to squash and rebase. There are just two includes that are missing for it to compile on my system at this point:; * `#include ""strlcpy.h""` in roofit/roofitcore/src/RooAbsData.cxx; * `#include ""TClass.h""` in roofit/roofitcore/src/RooBinIntegrator.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8167#issuecomment-855839169:27,update,updates,27,https://root.cern,https://github.com/root-project/root/pull/8167#issuecomment-855839169,1,['update'],['updates']
Deployability,"Hi Suryia, ; this PR does not build when cuda is enables (tmva-gpu=On). ; Can you please apply this patch to fix this:; https://cernbox.cern.ch/index.php/s/ZB4ij5to248um6u. Thank you . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6263#issuecomment-685704765:100,patch,patch,100,https://root.cern,https://github.com/root-project/root/pull/6263#issuecomment-685704765,1,['patch'],['patch']
Deployability,"Hi Vanya,; Probably the easiest thing to do is to open a ticket on the [SPI Jira](https://sft.its.cern.ch/jira/projects/SPI) to let them know they should update to latest dill to include the fix to this issue. Let me know if you need anything else :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-827002888:154,update,update,154,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-827002888,1,['update'],['update']
Deployability,"Hi Vassil,. > We cannot control what's in the static init of user libraries. They can; use interpreter services. This approach used to work, why locking is; necessary? Aren't we 'just' reading?. Other threads could be trying to write the symbol tables at the same time,; so we still need to lock them for reading. In your case your lookup enters a generator (HostLookupLazyFallbackGenerator),; so it will end up writing as well as reading. :). The right thing to do here is to refactor HostLookupLazyFallbackGenerator; to do its work in two steps:; Step 1: Identify libraries that could be loaded to provide the requested; symbols, and record their paths but do not load them yet. Instead you; should record a map of libraries to the symbols they provide. E.g. [ (; ""liba.so"", [ ""foo"", ""bar"" ] ), ( ""libb.so"", [ ""baz"" ] ) ]. For each; library/symbol-set pair you can install a custom MaterializationUnit using; JITDylib::define.; Step 2: In the custom MaterializationUnit's materialize function you'll; walk the map from before, do the library load, and then resolve the symbols. Since step 2 happens outside the session lock the idea is that it should; prevent the kind of deadlock that you're seeing. Unfortunately if you can reference JIT'd code from static initializers in; precompiled code then there's still a chance for similar failures. Consider; a precompiled ""libx.so"" containing a global ""x"" and a static constructor; that calls a JIT'd function ""f"" which uses the ""x"" from ""libx.so"" (a; circular reference). I believe this will result in starvation or deadlock; (depending on the number of threads involved). The failure path looks like; this:. 1. A lookup for ""x"" enters the generator, which discovers that ""libx.so""; provides ""x"" and creates a MaterializationUnit, MU, to load ""libx.so"" and; resolve ""x"".; 2.1 Outside the lock, MU dlopens ""libx.so""...; 2.2. dlopen runs the initializers for ""libx.so"" which triggers a lookup in; the JIT for ""f"".; 2.2.1. The lookup for ""f"" finds and runs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1274280300:867,install,install,867,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1274280300,1,['install'],['install']
Deployability,"Hi Vicenzo,. I agree building your own python is perhaps somewhat uncommon (and it is especially nonsensical to do it on Fedora, which has up to date distribution packages for both ROOT and python). I was testing an environment intended for clusters where users would not have admin privileges but may generally benefit from improvements in newer python than included, and cppyy must be built with the python you're using for it to work. . I don't think the assertions were necessarily meant to be enabled here, and disabling them does ""fix"" this issue (as the assertion isn't checked), but I think that's potentially somewhat besides the point. While it's very rare to run a python that has assertions enabled, presumably the assertions are there for a reason, even if they're not checked in release builds. The failing invariant could be harmless, or it may be causing subtly wrong behavior in the GC that could cause seemingly random problems down the road in a more complicated script. On the other hand, it also looks like things change again in python 3.12...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694#issuecomment-1739495970:793,release,release,793,https://root.cern,https://github.com/root-project/root/issues/13694#issuecomment-1739495970,1,['release'],['release']
Deployability,"Hi Vincenzo,. I mean the ROOT virtual machine which can be mounted on a virtual box. It; is suggested in; https://github.com/root-project/training/tree/master/BasicCourse. Best,; Fatemeh. On Mon, Jan 30, 2023 at 10:24 AM Vincenzo Eduardo Padulano <; ***@***.***> wrote:. > Hi @Fesfandi <https://github.com/Fesfandi> ,; >; > I am not completely sure what you mean by ""ROOT VM"" and I don't think; > there is any release package shipped via cernbox. To install ROOT, please; > follow the installation instructions at https://root.cern/install; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/12158#issuecomment-1408253053>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AUIK6LJT2ZNRYY7QOILGZTLWU6CF7ANCNFSM6AAAAAAUKZAASY>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158#issuecomment-1408267830:410,release,release,410,https://root.cern,https://github.com/root-project/root/issues/12158#issuecomment-1408267830,4,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:135,integrat,integrated,135,https://root.cern,https://github.com/root-project/root/pull/11808,2,['integrat'],['integrated']
Deployability,"Hi all,. I love the new command line utils included in the releases in root/main/python/. However, I found the rooteventselector command to be lacking in some functionality, so I added the ability for it to skim based on a selection string (a la a TCut). I hope this is useful for others!. -Larry",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/149:59,release,releases,59,https://root.cern,https://github.com/root-project/root/pull/149,1,['release'],['releases']
Deployability,"Hi all,. I've added a new command-line tool called rootslimtree which will remove branches from an input tree and write out a new file. This is actually implemented in cmdLineUtils.rootEventselector() and the rooteventselector function has been updated to also have this ability, so in case a user wants to remove both branches and events, this can be done in a single step. . Related to #149. Thanks!; -Larry",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/150:245,update,updated,245,https://root.cern,https://github.com/root-project/root/pull/150,1,['update'],['updated']
Deployability,"Hi both,. Somewhat embarassingly, Danilo is correct. I've been occupied heavily with work lately and with this being my third build of ROOT today didn't notice the exact rookie mistake that's been presumed; I'd accidentally put into my build script the hash for 6.26.12 and not 6.26.14 which I intended (and more frustratingly, I'd then added a comment saying #6.26.14). Please disregard this issue. It's correct in the context of 6.26.12 but then the problem was fixed already and 6.26.12 was only ever the latest release for about a day. Thanks for your assistance both, and my apologies for the misfire!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14138#issuecomment-1832490671:515,release,release,515,https://root.cern,https://github.com/root-project/root/issues/14138#issuecomment-1832490671,1,['release'],['release']
Deployability,"Hi everyone,; the problem arises because `/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/ROOT-env.sh` (or I guess whatever setupATLAS is doing) is not exporting the CMAKE_PREFIX_PATH to all dependencies.; exporting CMAKE_PREFIX_PATH to point to the folder for nlohmann_json fixes this. I.e., this works; ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.23.1/Linux-x86_64/bin/:$PATH; source /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/ROOT-env.sh; export CMAKE_PREFIX_PATH=$JSONMCPP__HOME:$CMAKE_PREFIX_PATH. cat > CMakeLists.txt << EOF; cmake_minimum_required(VERSION 3.20); project(test); find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit). EOF. mkdir -p build; cd build; cmake ..; ```. Cheers,; Andre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963#issuecomment-1186933339:65,release,releases,65,https://root.cern,https://github.com/root-project/root/issues/10963#issuecomment-1186933339,2,['release'],['releases']
Deployability,Hi folks. FYI we are starting a series of public meetings about xtensor. The first installment is today (October 3rd) at 5pm (Paris time) on https://appear.in/QuantStack.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2593#issuecomment-426621472:83,install,installment,83,https://root.cern,https://github.com/root-project/root/pull/2593#issuecomment-426621472,1,['install'],['installment']
Deployability,"Hi guys,; * updated PyMVA with support for scikit-learn >= 0.18; * support for python 2 and 3. Best; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/375:12,update,updated,12,https://root.cern,https://github.com/root-project/root/pull/375,1,['update'],['updated']
Deployability,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:261,install,install,261,https://root.cern,https://github.com/root-project/root/issues/8292,2,['install'],['install']
Deployability,"Hi there,. I am wondering what is going on with my bug report. I always need to fix the RootMacro.cmake (see first message) in order to work whenever I update ROOT. Best,; Andreas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1379933531:152,update,update,152,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1379933531,1,['update'],['update']
Deployability,"Hi! @peter-jansson, can you please provide some more info to reproduce this issue? In the issue template you were also asked to do so :) I think to solve this issue, we need at least: ; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. **Edit**: I'm taking back my comment, I didn't see before that these questions were answered in the issue title.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-950777888:263,install,install,263,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-950777888,1,['install'],['install']
Deployability,"Hi! I could not reproduce the segfault. I think it already got reported by somebody else and fixed by this PR:; https://github.com/root-project/root/pull/10740. To confirm this, it would be helpful if you'd source one of the [ROOT nightlies](https://root.cern/install/nightlies/) on lxplus and check if the segfault is gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10840#issuecomment-1172915197:260,install,install,260,https://root.cern,https://github.com/root-project/root/issues/10840#issuecomment-1172915197,1,['install'],['install']
Deployability,"Hi! I have been trying to run several rooFit tutorials in Swan and also locally with ROOT v6.22.08 in MacOS. I am getting errors with some functions. There are multiple, but on example is `gauss.plotOn(xframe, LineColor=""r"")` and it doesn't seem to accept the `LineColor` argument. I get:. ```; TypeError: RooAbsPdf::plotOn got an unexpected keyword argument 'LineColor'; ```. I tried copying the code and running them in a cmslpc cluster and in my mac but I get the same error like in Swan.; I haven't seen any solution so far to this problem. Are there any updated sets of tutorials?. One can quickly reproduce the problem/s, by running some Swan notebooks. For example: https://root.cern.ch/doc/master/rf101__basics_8py.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8973:559,update,updated,559,https://root.cern,https://github.com/root-project/root/issues/8973,1,['update'],['updated']
Deployability,"Hi! It seems ROOT picks up some outdated headers from `/opt/root/install/include/` during the build. This is a general problem that has nothing to do with RooFit, I have seen it several times happening in different contexts before. You can avoid this problem by un-installing ROOT from your system before you build the new ROOT version. Since this is a build-related issue, I have changed the issue title to reflect this and have assigned @bellenot. If uninstalling the existing ROOT release is not an acceptable solution for you for whatever reason, maybe @bellenot can comment more on what are the options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101#issuecomment-1608397904:65,install,install,65,https://root.cern,https://github.com/root-project/root/issues/13101#issuecomment-1608397904,3,"['install', 'release']","['install', 'installing', 'release']"
Deployability,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10171#issuecomment-1080346148:356,update,update,356,https://root.cern,https://github.com/root-project/root/pull/10171#issuecomment-1080346148,2,['update'],"['update', 'updated']"
Deployability,"Hi! Just as an update on testing this PR: I tried to build ROOT with xrootd with xrootd from this branch here, to see if it gets correctly picked up also with this PR:; https://github.com/xrootd/xrootd/tree/v4.12.x. And it works fine without the `xproofd` flag :+1: But with `xproofd=ON`, the ROOT build fails. However, that is mostly related to a host of other problems in the CMake and also C++ code of `xprooff` (it seems like this deprecated component was not built and tested for a long time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13752#issuecomment-1740542150:15,update,update,15,https://root.cern,https://github.com/root-project/root/pull/13752#issuecomment-1740542150,1,['update'],['update']
Deployability,"Hi! Some updates on this PR:. 1. I have made some of the `auto` explicit as suggested by @hageboeck ; 2. @pcanal confirmed in private chat that filling a temporary `RooArgSet` is the right solution for the [legacy streamer](https://github.com/root-project/root/pull/7859/files#diff-f05bd2ea68e236a9a894f2e2575ec881427d17ce2d1211f6c830771afed03b68R2081); 3. I tested that RooDataHists written with ROOT 6.24 can still be read with this PR, as suggested by @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7859#issuecomment-824672317:9,update,updates,9,https://root.cern,https://github.com/root-project/root/pull/7859#issuecomment-824672317,1,['update'],['updates']
Deployability,"Hi! Sorry for the late reply. I'm closing this issue, because as you can see from these two lines, the problem is the mixing of two different ROOT builds:; ```txt; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; ```. You should double-check your environment. If you have any more questions, please reach out to us on the ROOT forum! The GitHub issues are more for bug reports, feature requests, and improvement requests. Thanks :pray:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12458#issuecomment-1798601346:483,release,releases,483,https://root.cern,https://github.com/root-project/root/issues/12458#issuecomment-1798601346,1,['release'],['releases']
Deployability,"Hi! Thanks for opening the issue. I have first added the `priority-high` label because it appeared like a usecase that worked in 6.24 was broken in 6.26, but I don't this is the case. Yes, the normalization was not off in 6.24, but the fit gave nonsensical results anyway for different reasons also in 6.24. Or did you manage to make this shifted RooHistPdf work in any ROOT version?. To me, the result of your script looks like this both in ROOT 6.24 and in ROOT `master` (upcoming 6.28, where the normalization issue got fixed by the way):. ![plot](https://user-images.githubusercontent.com/6578603/203787998-2652e495-f6b6-4d54-a2fc-64c66a96ac8a.png). I modified your script a bit to have more events in the toy dataset, and fixed the plotting order (you got to plot the data always the very first, otherwise the PDFs will not be scaled correctly). I think the best we can do now to support your usecase is this:. 1. Since shifting a RooHistPdf doesn't work in any ROOT version, I implement a custom PDF class that can do that which you can readily use; 2. For the upcoming ROOT 6.28, we will also make sure that the actual RooHistPdf support the shift; 3. About this issue with the normalization in 6.26, I'm not sure if it's worth it to address this since the problem is gone in ROOT 6.28 which will be released soon. Anyway, the problem only appears for models where the fit result was also wrong before for other reasons, so that temporary regression in 6.26 probably didn't break any existing usecase. Does that make sense to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11760#issuecomment-1326415236:1307,release,released,1307,https://root.cern,https://github.com/root-project/root/issues/11760#issuecomment-1326415236,1,['release'],['released']
Deployability,"Hi! Thanks for reporting. Before trying to fix this, I tried to figure out what you meant by ""recently"" to know how much a solution would need to be backported. ROOT 6.20 was the last release where this worked. The reproducer has to be adjusted to the old PyROOT though:; ```Python; import ROOT. x = ROOT.RooRealVar(""x"", """", 0, 1). c1 = ROOT.RooCategory(""c1"", """"); c1.defineType(""c11"", 0); c2 = ROOT.RooCategory(""c2"", """"); c2.defineType(""c21"", 0). u = ROOT.RooUniform(""u"", """", ROOT.RooArgSet(x)). # s1 = ROOT.RooSimultaneous('s1', """", c1); # s1.addPdf(u, ""c11""); # s2 = ROOT.RooSimultaneous('s2', """", c2); # s2.addPdf(u, ""c21""). pdf_map_1 = ROOT.std.map(""string,RooAbsPdf*"")(); pdf_map_1.insert(ROOT.std.pair(""string,RooAbsPdf*"")(""c11"", u)); s1 = ROOT.RooSimultaneous(""s1"", """", pdf_map_1, c1). pdf_map_2 = ROOT.std.map(""string,RooAbsPdf*"")(); pdf_map_2.insert(ROOT.std.pair(""string,RooAbsPdf*"")(""c21"", s1)); s2 = ROOT.RooSimultaneous(""s2"", """", pdf_map_2, c2). categories = ROOT.RooArgSet(c1, c2); proto = ROOT.RooDataSet(""proto"", """", categories); for i in range(100):; proto.add(categories). proto.table(c1).Print(""V""); proto.table(c2).Print(""V""). ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO). # correct; context = s1.genContext(ROOT.RooArgSet(x), proto, ROOT.nullptr, True); print(context.ClassName()); context.Print(). # not a RooSimGenContext; context = s2.genContext(ROOT.RooArgSet(x), proto, ROOT.nullptr, True); print(context.ClassName()); context.Print(). # internal super-cat; print(s2.indexCat().GetName(), s2.indexCat().ClassName()). # the server is the internal multi-cat; print([cat.GetName() for cat in s2.indexCat().servers()]); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12020#issuecomment-1380652239:184,release,release,184,https://root.cern,https://github.com/root-project/root/issues/12020#issuecomment-1380652239,1,['release'],['release']
Deployability,"Hi! Thanks for your reply. For now, I haven't found anyone in the ROOT team to work on this, so for the 6.34 release it's not going to happen. So I am patient :slightly_smiling_face:. What I want to focus on instead is to give the Fumili minimizer in Minuit2 some love, also trying it with RooFit. This should be beneficial for binned likelihoods",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6862#issuecomment-2355019076:109,release,release,109,https://root.cern,https://github.com/root-project/root/issues/6862#issuecomment-2355019076,1,['release'],['release']
Deployability,"Hi! That's for sure because of this new RooFitCuda library I introduced yesterday:; https://github.com/root-project/root/pull/13409. I didn't have this problem and I also don't know much about `.pcm` modules, so I need your help to reproduce and fix this :). What is your CMake configuration? And can you also upload the output of the `cmake configure` step? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13415#issuecomment-1669731211:278,configurat,configuration,278,https://root.cern,https://github.com/root-project/root/issues/13415#issuecomment-1669731211,1,['configurat'],['configuration']
Deployability,"Hi! The RooMomentMorphND is gone, becuase it was almost an exact copy of RooMomentMorphFuncND and it became error prone to maintain the same code twice. Please use the RooMomentMorphFuncND as described here:; https://root.cern/doc/master/release-notes.html#removal-of-roomomentmorphnd-class. Thanks for trying out ROOT master and let me know if the replacement works please!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12653#issuecomment-1506746005:238,release,release-notes,238,https://root.cern,https://github.com/root-project/root/issues/12653#issuecomment-1506746005,1,['release'],['release-notes']
Deployability,"Hi! The list of RooFit pythonization files is growing quickly thanks to @Harshalzzzzzzz. Is it possible to grep for all files in the `pythonization` directory, so we don't need to manually update the CMakeLists.txt every time? Also @etejedor's opinion is for sure valuable here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8509#issuecomment-866605936:189,update,update,189,https://root.cern,https://github.com/root-project/root/pull/8509#issuecomment-866605936,1,['update'],['update']
Deployability,"Hi! This problem is now fixed in `master`. There should be no spurious parameters anymore, and naming collisions are avoided by renaming all RooAbsArgs for each component with a prefix. The fix will make it to the next patch release, as tracked in this issue:; https://github.com/root-project/root/issues/11534",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991#issuecomment-1291810851:219,patch,patch,219,https://root.cern,https://github.com/root-project/root/issues/10991#issuecomment-1291810851,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi! We really need to speed things up to converge to the release, so I took the liberty of updating this PR with a revised version of the new `TPad::PlaceBox()` method, as requested by @jalopezg-git. If the CI passes, please also have a look @couet to give also your approval as the code owner of this area.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12066#issuecomment-1402677467:57,release,release,57,https://root.cern,https://github.com/root-project/root/pull/12066#issuecomment-1402677467,1,['release'],['release']
Deployability,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011:1455,patch,patch,1455,https://root.cern,https://github.com/root-project/root/issues/9011,1,['patch'],['patch']
Deployability,"Hi, . I agree is not good for the design, but the original problem is having TH2Poly deriving from a TH1 instead of being a separate class. Now that is released and used it is not worth changing it. ; Can I close this issue ? . Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340#issuecomment-856728455:152,release,released,152,https://root.cern,https://github.com/root-project/root/issues/8340#issuecomment-856728455,1,['release'],['released']
Deployability,"Hi, . Thank you for the PR, it looks fine to me. I will merge in the master and then as a patch for 6.20. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4934#issuecomment-585818933:90,patch,patch,90,https://root.cern,https://github.com/root-project/root/pull/4934#issuecomment-585818933,1,['patch'],['patch']
Deployability,"Hi, ; @HDembinski The patch looks fine, although I might have some comments on having a global static instance available in the header file. I would prefer some static functions returning the cached values. ; However, I am surprised you see the MnPrecision constructor called many times. It should be called only once, in ModularFunction::Minimize and when creating the MnUserTransformation class, that also should be done one single time",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2215#issuecomment-458622276:22,patch,patch,22,https://root.cern,https://github.com/root-project/root/pull/2215#issuecomment-458622276,1,['patch'],['patch']
Deployability,"Hi, ; I am not sure this is a bug in ROOT, but it could be some configuration problems on your system or a problem in root-config. ; I see you are using a build done with the Intel compiler. If I am not mistaken libguide is a library needed when using the Intel compiler. ; Are you sure you have set up correctly the environment (e.g. LD_LIBRARY_PATH) to use the Intel compiler ? ; What is the output of `root-config --cxx` ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904#issuecomment-738793840:64,configurat,configuration,64,https://root.cern,https://github.com/root-project/root/issues/6904#issuecomment-738793840,1,['configurat'],['configuration']
Deployability,"Hi, ; I create this issue to report a bug, that was also observed by @eguiraud, ; with ROOT version 6.22.06. I am trying to use the RDataFrame to produce histograms running on root files.; With the following code; ```python; import ROOT as RT ; """"""; # setupATLAS and ROOT 6.22.06 ; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'; setupATLAS; . /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh. # Execute python script; python2 dataframe_vs_tree.py; """"""; RT.gROOT.SetBatch(True) ; RT.EnableImplicitMT(). infileName = ""Zee_Sh221-0.root"" ; treeName = ""Nominal"" ; cutString = ""sample==\""Zbl\"""" ; distName = ""MET"" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should no",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:474,release,releases,474,https://root.cern,https://github.com/root-project/root/issues/7169,1,['release'],['releases']
Deployability,"Hi, ; There is some documentation in the ROOT Users guide, see ; https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration. Maybe it is not too visible, and I agree @couet we should probably include in the DOxygen description of the Integration classes. ; We are also missing a tutorial on the INtegratorMultiDim and we should add one before closing this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810332566:148,integrat,integration,148,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810332566,4,"['INtegrat', 'Integrat', 'integrat']","['INtegratorMultiDim', 'Integration', 'integration']"
Deployability,"Hi, ; This should be possible , if there are no side effects which I cannot think about now. ; Maybe the best is that you update the PR and see if all tests pass. ; In case it is fine, we should also update the similar functions for the derived classes (TH2, TProfile, etc...). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5010#issuecomment-589734378:122,update,update,122,https://root.cern,https://github.com/root-project/root/pull/5010#issuecomment-589734378,2,['update'],['update']
Deployability,"Hi, ; Yes I was surprised to that they release 2.4 with a backward incompatibility API. ; But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6793#issuecomment-725915781:39,release,release,39,https://root.cern,https://github.com/root-project/root/pull/6793#issuecomment-725915781,2,['release'],['release']
Deployability,"Hi, ; Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870450052:136,patch,patch,136,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870450052,2,"['install', 'patch']","['installed', 'patch']"
Deployability,"Hi, @dpiparo . Would it be possible to backport this patch to v6-14-00-patches ? @dberzano is going to switch Alice O2 to v6/14 and w/o this patch our CI fails... Cheers,; Ruben",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2272#issuecomment-401832606:53,patch,patch,53,https://root.cern,https://github.com/root-project/root/pull/2272#issuecomment-401832606,3,['patch'],"['patch', 'patches']"
Deployability,"Hi, @hahnjo are you still working on this? Can you share your ideas? So I think the problem is:; When we try to instantiate a class template like `TSeq`, we'll try to look up and load modules (https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp#L10053) for `type` (https://github.com/root-project/root/blob/master/core/cont/inc/ROOT/TSeq.hxx#L95). Because the identifier `type` lives in module `ROOTDataFrame`, ROOT will try to load that. However, some headers in module `ROOTDataFrame` includes `TSeq.hxx` (https://github.com/root-project/root/blob/master/tree/dataframe/inc/ROOT/RDF/RLazyDSImpl.hxx#L16), so we found a Decl that already been instantiated. At last, Clang will try to update the previous declaration and merge the definition. But because we're still instantiating it and it's incomplete so they're not matched. I think the fix (at least the current workaround is killing the usage of `include TSeq.hxx` in headers of `ROOTDataFrame`), WDYT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1267994630:741,update,update,741,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1267994630,1,['update'],['update']
Deployability,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8...; This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370735125:220,patch,patch,220,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370735125,1,['patch'],['patch']
Deployability,"Hi, @pcanal @bbockelm . This branch implements little endian in TBuffer. The code is not ready to be merged and I hope it would be more convenient to discuss it on github. There is still a design issue. This is the link: https://sft.its.cern.ch/jira/browse/ROOT-5073. Let's take an example of writing to a TFile, we need to update header (TFile::WriteHeader), streamer info (TFile::WriteStreamerInfo) and free segments (TFile::WriteFree). ; 1. TFile::WriteHeader creates a TKey but does not stream its buffer. When you read or write header, it is always stored as big endian.; 2. TFile::WriteFree works in the same way with TFile::WriteHeader.; 3. TFile::WriteStreamerInfo is quite different from above two cases. It creates a TKey but uses streaming function to change streamer info object TList to little endian. The problem is that all of three information are read by TFile::ReadBuffer or TFile::ReadKeyBuffer without converting the endianesss. header and free segments can be processed without any problems. But streamer info is read in reversed endianess. . To address this issue, one way is adding a fBit in TFile class and change all meta data (header, free segments and streamer info) to little endian. Another way is modifying the read function for streamer info and convert its endianess before read it from buffer. Zhe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/136:324,update,update,324,https://root.cern,https://github.com/root-project/root/pull/136,1,['update'],['update']
Deployability,"Hi, AFAIK rootbench does not have branches for different releases or tags, the only guarantee is that current tip of trunk from rootbench compiles against current tip of trunk from root. Does it still make sense to apply the same logic that we use for roottest to rootbench?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12975#issuecomment-1584741062:57,release,releases,57,https://root.cern,https://github.com/root-project/root/pull/12975#issuecomment-1584741062,1,['release'],['releases']
Deployability,"Hi, I can reproduce the issue but at the moment I don't have cycles to take a better look, so I don't have a precise timeline for the fix. Still, I believe we want this fixed for our next release, 6.26. Let me know if you this is completely blocking you, in which case I might be able to suggest a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240#issuecomment-964565972:188,release,release,188,https://root.cern,https://github.com/root-project/root/issues/9240#issuecomment-964565972,1,['release'],['release']
Deployability,"Hi, I fixed the VDT issue in my local Docker image by installing `apt-get install libvdt-dev`. It should maybe be added in the default list of packages installed while building root-ubuntu24.04 Docker image, IMO.; https://github.com/root-project/root-docker/issues/90",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038#issuecomment-2241647332:54,install,installing,54,https://root.cern,https://github.com/root-project/root/issues/16038#issuecomment-2241647332,3,['install'],"['install', 'installed', 'installing']"
Deployability,"Hi, I think `TThread` is deprecated in favour of `std::thread` (this is not to say that we shouldn't update its docs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216#issuecomment-779662246:101,update,update,101,https://root.cern,https://github.com/root-project/root/issues/7216#issuecomment-779662246,1,['update'],['update']
Deployability,"Hi, I think this doesn't need a mention in the release notes because these constructors are only used internally in the `RooChi2Var::create` and apparently no user uses them (their interface was also changed already in 6.26 to use the `Configuration` struct, and there were no complaints).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10566#issuecomment-1130156866:47,release,release,47,https://root.cern,https://github.com/root-project/root/pull/10566#issuecomment-1130156866,2,"['Configurat', 'release']","['Configuration', 'release']"
Deployability,"Hi, I'll check as soon as possible, however, `cmake_policy` is exactly what is used to silence such warnings so I bet it does the job. update:; adding `cmake_policy(SET CMP0116 OLD)` to `root_src/CMakeLists.txt` does nothing, adding it to `root_src/interpreter/llvm/src/cmake/modules/TableGen.cmake` silences the warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8060#issuecomment-831728970:135,update,update,135,https://root.cern,https://github.com/root-project/root/issues/8060#issuecomment-831728970,1,['update'],['update']
Deployability,"Hi, I've found this proposal in scope of https://github.com/spack/spack/issues/22616 investigation.; I'd vote for such improvement and can help with it from TBB side. First, I can confirm that TBB 2021 (now it's oneTBB 2021) has CMake build system. Second, oneTBB integration to CMake project may be done in two major ways:; 1. Source integration (`add_subdirectory`) - oneTBB is just built from sources together with user project.; 2. Binary integration (`find_package`) - user project relies on pre-built oneTBB, it is supported through TBBConfig files inside oneTBB packages, for some distributions/versions it will work out-of-the-box, but for others it may require additional CMake variable to be set. [Here ](https://github.com/oneapi-src/oneTBB/blob/master/cmake/README.md#tbbconfig---integration-of-binary-packages)is a short description of binary integration. The (1) way is supported only starting from oneTBB 2021, while the (2) way was [introduced](https://github.com/oneapi-src/oneTBB/tree/tbb_2020/cmake#binary-package-integration) in TBB 2017 U7 and slightly changed in oneTBB 2021. What way is preferable? In theory we can think about some kind of mixed approach.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7063#issuecomment-813264138:264,integrat,integration,264,https://root.cern,https://github.com/root-project/root/issues/7063#issuecomment-813264138,6,['integrat'],"['integration', 'integration-of-binary-packages']"
Deployability,"Hi, Philippe,. Just an update to the issue, ; after having upgraded the OS to Ubuntu 22.04 LTS, Root version 6.30.02. The compilation with ""-Wl, --no-as-needed -lNew"" works fine. . But problems still remain:; run the demo macro of TApplication, Error messages are as following,; ```; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; #0 0x00007f7901aea3ea in __GI___wait4 (pid=10250, stat_loc=stat_loc; entry=0x7ffeb2a715a8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f7901aea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffeb2a715a8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f7901a50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f7902b13034 in TUnixSystem::StackTrace() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #4 0x00007f79029d0702 in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #5 0x00007f7902a96fe9 in ErrorHandler () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #6 0x00007f7902a97b69 in Fatal(char const*, char const*, ...) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #7 0x00007f7902d5e6ed in operator new(unsigned long, std::align_val_t) () from /home/koala/ROOT/root_v6.30.02/lib/libNew.so; #8 0x00007f78ff1f5430 in std::pair<llvm::StringMapIterator<llvm::cl::Option*>, bool> llvm::StringMap<llvm::cl::Option*, llvm::MallocAllocator>::try_emplace<llvm::cl::Option*>(llvm::StringRef, llvm::cl::Option*&&) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #9 0x00007f78ff1f5b3d in (anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, llvm::cl::SubCommand*) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #10 0x00007f78ff1f6805 in llvm::cl::Option::addArgument() () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #11 0x00007f78fb1ba304 in __static_initialization_and_destruction_0(int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:23,update,update,23,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,2,"['update', 'upgrade']","['update', 'upgraded']"
Deployability,"Hi, Philippe,. Many thanks for your effort. Indeed, the case of missing libtinfo.so.5 happened to the root versions of 6.14.06, 6.16.00 and 6.18.04, however the libtinfo.so.6 is availabe on Ubuntu 20.04.4. From 6.20.00 on, the error of missing libtinfo.so.5 does not appere any more. . Maybe we could focus on one specific OS, for instance, Ubuntu 20.04.4. Have you tested the macros on Ubuntu 20.04.4? Or which system and which version have you used? . Concerning the ROOT versions (6.24.08, 6.26.10 and 6.28.04) on the Ubuntu 20.04.4 (gcc 9.4), those 3 ROOT versions all have been tested with gcc9.4, however, except for 6.28.04, the 6.24.08 and 6.26.10 both don't work with TApplication when the macro was compiled with the ROOT-CONFIG option of ""-Wl,--no-as-needed -lNew"". . Without the option ""-Wl,--no-as-needed -lNew"", the TApplication works properly as expected. Could you have a closer look at this issue? What I want is to have more working combinations of ROOT and Ubuntu, therefore I don't have to update each OS system and the EMS system, which is quite challenging. . Many thanks in advance.; Huagen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1727380722:1010,update,update,1010,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1727380722,1,['update'],['update']
Deployability,"Hi, as you can see your PR is picking up many commuts that are already in master. I suggest you rebase the commits relevant for the PR (the last two I guess) on top of the current master branch. Or if you want to patch a different branch than master specify it as the ""base"" for this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/776#issuecomment-316288776:213,patch,patch,213,https://root.cern,https://github.com/root-project/root/pull/776#issuecomment-316288776,1,['patch'],['patch']
Deployability,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6588#issuecomment-705524312:87,install,installation-error-root-master,87,https://root.cern,https://github.com/root-project/root/pull/6588#issuecomment-705524312,2,['install'],"['install', 'installation-error-root-master']"
Deployability,"Hi, gentle reminder that we need this patch to fix the repeated text at https://root.cern/doc/master/group__IO.html :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9616#issuecomment-1040339838:38,patch,patch,38,https://root.cern,https://github.com/root-project/root/pull/9616#issuecomment-1040339838,1,['patch'],['patch']
Deployability,"Hi, may I ask why https://github.com/root-project/root/pull/10811 is not included in previous release? may it be included in this one? @guitargeek",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11059#issuecomment-1271817946:94,release,release,94,https://root.cern,https://github.com/root-project/root/issues/11059#issuecomment-1271817946,1,['release'],['release']
Deployability,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log; ```#--------------------------------------------------------------------------; cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8); ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------; An exception of category 'FatalRootError' occurred while; [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0; [1] Running path 'dqmoffline_1_step'; [2] Prefetching for module NanoAODDQM/'nanoDQM'; [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'; [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'; [5] Prefetching for module PATMuonRefSelector/'finalMuons'; [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'; [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'; Additional Info:; [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper; Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());; return;; }; else {; (void)(((const reco::TrackBase*)obj)->validFraction());; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------; Anot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16401#issuecomment-2407514028:145,integrat,integration,145,https://root.cern,https://github.com/root-project/root/pull/16401#issuecomment-2407514028,1,['integrat'],['integration']
Deployability,"Hi, some update on this. First, let me try to clear a bit the context. I am not sure why `gc.collect` is being invoked here. Manually invoking the Python garbage collector is not going to give any guarantees on which objects are actually destroyed by the interpreter, it depends on the types and sometimes it's even undefined behaviour, as per the docs https://docs.python.org/3/library/gc.html#gc.collect. Second, even if we had that guarantee, the first and the second loops are doing two wildly different things.; ```; my_data = rvec; ```; Is doing a copy of an `RVec` to another `RVec`, with a thin Python proxy to present it to the user. The copy of an RVec is a well-defined operation in terms of memory management, i.e. it will call the copy-constructor of the `RVec`. Whereas; ```; my_data = numpy.asarray(rvec); ```; Is creating a new numpy array object in memory which is an owning view on the contents of the RVec. The management of the RVec in memory can be clearly seen with this simplified example; ```; process = psutil.Process(). ROOT.gInterpreter.Declare(""""""; auto create_rvec(unsigned int n) {; //return std::array<unsigned int, 3>({n, n, n});; return ROOT::RVec<unsigned int>({n, n, n});; }; """"""); df = ROOT.RDataFrame(100).Define(""my_rvecs"", ""create_rvec(rdfentry_)""); rvecs = df.AsNumpy([""my_rvecs""])[""my_rvecs""]. def get_mem_usage():; return process.memory_info().rss # in kbytes. mem0 = get_mem_usage(); print(mem0). for v2 in rvecs:; n = v2; mem2 = get_mem_usage(); print(mem2); ```. Which doesn't use `gc.collect` but will still show that the memory used is exactly the same at each iteration, no leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14981#issuecomment-2006250778:9,update,update,9,https://root.cern,https://github.com/root-project/root/issues/14981#issuecomment-2006250778,2,['update'],['update']
Deployability,"Hi, thank you very much Will! This makes sense to me, I will approve this PR tomorrow when the tests pass and merge if @lmoneta and @hageboeck don't have anything to say against this PR. I can make a backport to 6.24 for sure. Would you benefit if this goes into even older point releases?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7683#issuecomment-807465727:280,release,releases,280,https://root.cern,https://github.com/root-project/root/pull/7683#issuecomment-807465727,1,['release'],['releases']
Deployability,"Hi, thank you very much for reporting this issue! I have opened a PR to fix it in ROOT master, which will also be backported to the next 6.26 patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10869#issuecomment-1172986376:142,patch,patch,142,https://root.cern,https://github.com/root-project/root/issues/10869#issuecomment-1172986376,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi, thank you very much for reporting this!. It's indeed a bug that I will fix, but for the CMSSW side we can avoid the problem easily so you can proceed quickly with the update of the ROOT master branch. I have created a PR for that:. https://github.com/cms-sw/cmssw/pull/39867. Indeed, it appears I introduced a bug with recent developments where the overhead when using the `RooFit::Range()` argument blew up. But I suggest you remove this argument to begin with, because the range was the same that is used to define the `InvMass` variable to begin with. So in any case it's better for you to not use `Range()`, and then you also don't hit the code path that has the bug (and you will have less overhead once the bug is gone).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1292750664:171,update,update,171,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1292750664,1,['update'],['update']
Deployability,"Hi, thanks a lot for opening this issue! I was aware of this, and in the next patch release these spurious free parameters will be gone (6.26.06 is expected in about 2 weeks). However, it is still good that you opened this issue because now that you used `Print(""V"")`, I see that the spurious parameters are still there in the fit result with ROOT `master`, they are just constant!. ```. RooFitResult: minimized FCN value: 46.0037, estimated distance to minimum: 1.51615e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 . Constant Parameter Value ; -------------------- ------------; _a_x 5.0000e-01. Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; m 5.0000e-01 4.8765e-01 +/- 1.02e-02 <none>; ```. So to close this issue for good, we also have to get rid of them in the ""Constant Parameter"" list. These spurious parameters should not be seen anywhere, as they are pure implementation details for the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991#issuecomment-1189334464:78,patch,patch,78,https://root.cern,https://github.com/root-project/root/issues/10991#issuecomment-1189334464,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi, thanks for bringing up this issue! I have opened a PR to fix this for the upcoming ROOT release. Would you benefit from backporting this fix to any existing ROOT release branch to be included in the next patch release, e.g. ROOT 6.26 or older?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10278#issuecomment-1085275063:92,release,release,92,https://root.cern,https://github.com/root-project/root/issues/10278#issuecomment-1085275063,4,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15782#issuecomment-2154445614:270,install,install,270,https://root.cern,https://github.com/root-project/root/issues/15782#issuecomment-2154445614,1,['install'],['install']
Deployability,"Hi, thanks for the clarification. But I was speaking about downloading the binary release, not self-build and install. I just download the binary release, and then unzip it under /opt/root. Finally, I go to an empty folder, and then call cmake ../my-source-code -DROOT_DIR=/opt/root. So, I point directly at the proper folder where ROOT is installed, via the -DROOT_DIR argument.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1840428160:82,release,release,82,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1840428160,4,"['install', 'release']","['install', 'installed', 'release']"
Deployability,"Hi, thanks for the question!. The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:; https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:; ```C++; void write() {. TParameter<int> x1{""x1"", 5};; std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");; file->WriteObject(&x2, ""x2"");; }; ```; Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx; You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380#issuecomment-2335109569:792,patch,patches,792,https://root.cern,https://github.com/root-project/root/issues/16380#issuecomment-2335109569,4,['patch'],['patches']
Deployability,"Hi, thanks for the report!. I tried to reproduce this problem with ROOT master, re-creating exactly the same file paths that you had on my system:; ```c++; TString localPath = ""/tmp/mlyukova/3167235_4_3475779823.html"";; TString targetPath = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"";. gSystem->CopyFile(localPath.Data(), targetPath.Data(), true);; ```; It works just fine. I assigned this problem the priority ""low"", because you found a very good alternative with `std::filesystem`, which should be preferred over ROOT anyway because it's from the STL :+1:. If you want us to fix this anyway, we'll need a real reproducer, which probably has to be run on lxplus. Or you could try again with a ROOT debug build, like `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc12-dbg` (see https://root.cern/install/nightlies/), and post the stack trace again (which will contain more info because of the debug symbols).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14096#issuecomment-1824503429:932,install,install,932,https://root.cern,https://github.com/root-project/root/issues/14096#issuecomment-1824503429,1,['install'],['install']
Deployability,"Hi, thanks for the report. A small update, this seems to be an issue since at least ROOT 6.24:. ```; $: root --version; ROOT Version: 6.29/01; Built for linuxx8664gcc on Feb 26 2023, 17:20:00; From heads/master@v6-25-02-4093-g23b30e03c3; $: python test.py ; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_10'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?; ```; ```; $: root --version; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 17 2022, 16:21:00; From @; $: python test.py; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_10'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?; ```; ```; $: root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on May 02 2022, 19:26:00; From @; $: python test.py ; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_9'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1451745616:35,update,update,35,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1451745616,1,['update'],['update']
Deployability,"Hi, thanks for the reports! Okay, the problem with the `RooRealSumPdf` hinted me that this new optimization was part of the problem (look for ""binned likelihood fit optimization"").; https://root.cern/doc/v628/release-notes.html. This optimization was used inside ATLAS for a long time to great success (speedups), so I was enabling it by default. However, it seems to be problematic here, maybe it doesn't work with the RooBarlowBeestonLL. You should for now disable it when the demo is compiled with ROOT 6.28. So the line with `MakeModelAndMeasurementFast` in `histfact_demo.cpp` would become:; ```C++; #if ROOT_VERSION_CODE < ROOT_VERSION(6,28,00); auto ws = RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; #else; // Disable the binned fit optimization that was enabled by default in ROOT 6.28.; // This optimization skips the normalization of the RooRealSumPdf, because; // the unnormalized bin contents already represent the yields that can be; // used by the RooNLLVar to sum the Poisson terms. However, this optimization; // doesn't work for this demo, maybe because it's not compatible with the; // RooBarlowBeestonLL. See also https://root.cern/doc/v628/release-notes.html.; HistoToWorkspaceFactoryFast::Configuration cfg;; cfg.binnedFitOptimization = false;; auto ws = RooStats::HistFactory::MakeModelAndMeasurementFast(meas, cfg);; #endif; ```. With this, the results I get with 6.28 are already more comparable to 6.24. Here the results of `fit-noshapes`:; ## ROOT 6.28. ```txt; FVAL = -1581.9159109118475; Edm = 0.000441898404860980383; Nfcn = 187; Lumi	 = 0.937281	 +/- 0.041571	(limited); Nmu	 = 68079	 +/- 3149.09	(limited); RawRDst	 = 0.0394995	 +/- 0.00466377	(limited); alpha_BFD1	 = -1.56966	 +/- 0.268056	(limited); Info in <Minuit2>: Minuit2Minimizer::Hesse Using max-calls 2000; Info in <Minuit2>: Minuit2Minimizer::Hesse Hesse is valid - matrix is accurate; 0.000441626; Fit ran with status 0; Stat error on R(D*) is 0.004650; EDM at end was 0.000442; RooArgList:: =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1527829256:209,release,release-notes,209,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1527829256,2,['release'],['release-notes']
Deployability,"Hi, thanks for your comment! Hmm I have to think about that suggestion with the constructor. It would be nice certainly, but adding a parameter to the constructor of an abstract class means usually a lot of code repetition: the parameter would have to be added to most constructors of all child classes (RooDataSet and RooDataHist). Maybe we also need a configuration struct here. Ah right, I missed that! The global observables are usually not even in the columns of the dataset, right? So my assumption that they are a subset of the columns was just plain wrong, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8123#issuecomment-838756217:354,configurat,configuration,354,https://root.cern,https://github.com/root-project/root/issues/8123#issuecomment-838756217,1,['configurat'],['configuration']
Deployability,"Hi, thanks for your comment! I didn't misunderstand the problem, I just made a fly-by comment about the obvious point before coming back it. Sorry for that! I was abusing your post to lobby for the removal of the splash screen that I proposed. The ROOT developers were anticipating this situation and developed a new platform-independent web-based graphics stack, which will replace the default way of how plots and histograms are shown. I don't think it is enabled by default in any ROOT release yet, but it would be very interesting to know if it works also in the context of the root-framework snap! Have you tried with ROOT `master`, where the web graphics is the default?. @linev, what would be your recommendation? Maybe we can make web graphics the default for wayland?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2146251428:489,release,release,489,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2146251428,1,['release'],['release']
Deployability,"Hi, the fix will be in the next ROOT release, 6.28.; Do you need also for the patch release 6.26 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780#issuecomment-1189214798:37,release,release,37,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1189214798,3,"['patch', 'release']","['patch', 'release']"
Deployability,"Hi, the patch will be applied in a matter of days. Possibly even on Monday because it is a simple change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864414030:8,patch,patch,8,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864414030,2,['patch'],['patch']
Deployability,"Hi, this has been fixed in the master and v6-26-00-patches branches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10527#issuecomment-1118240461:51,patch,patches,51,https://root.cern,https://github.com/root-project/root/issues/10527#issuecomment-1118240461,1,['patch'],['patches']
Deployability,"Hi, we build ROOT on Ubuntu 20.04 nightly, so there must be something in your environment that causes this problem. One of the usual causes: do you have another ROOT installation in your environment while you build ROOT? That's not supported. What do `which root` and `env` print before you start the build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487#issuecomment-864819106:166,install,installation,166,https://root.cern,https://github.com/root-project/root/issues/8487#issuecomment-864819106,1,['install'],['installation']
Deployability,"Hi, works for me as well! It would be nice to have confirmation for Gentoo as well if and when @amadio has time to try this out, but the patch is a fix for the original issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-992249915:137,patch,patch,137,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-992249915,1,['patch'],['patch']
Deployability,"Hi, yes it is fine now. Let me run the CI again and then I will merge. Thank you for the update",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6761#issuecomment-732276165:89,update,update,89,https://root.cern,https://github.com/root-project/root/pull/6761#issuecomment-732276165,1,['update'],['update']
Deployability,"Hi,. # This Pull request: . This PR comes from this [forum thread](https://root-forum.cern.ch/t/use-root-io-as-library-in-a-c-stand-alone-project/55539/5). This tutorial is a minimal working example about how to create a ROOT dictionary for a custom class, and its use for writing and reading a TTree. Further changes may be needed before full integration into ROOT project. ## Changes or fixes:. New folder added, `tutorials/tree/dictionary`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13205:344,integrat,integration,344,https://root.cern,https://github.com/root-project/root/pull/13205,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"Hi,. 1) Jobs at BNL fail regardless of the source file.; Backs up the gethostname theory. 2) I cannot reproduce with a simple C program containing a TFile::Open,; built after setting up the same release; g++ $(root-config --cflags --libs) -o main main.C; and running after the same setup.; Contradicts (1). I have not tried to build the binary that fails, so cannot really say my; small C program is built in the same way. Maybe RD could do that. Or; brutally strip down your code until it either starts working or is a simple; TFile::)open. I am really out of ideas unless the 1,2 contradiction can be removed. Could we build an xroot lib with more debug statements, and pass that with; the job?; I could ask sites about worker node characteristics to find a pattern, but; I`m not sure what to ask about.; IPv6, nscd, dns?. Cheers,; Rod. On Fri, 15 Jan 2021 at 06:55, Axel Naumann <notifications@github.com> wrote:. > @gganis <https://github.com/gganis> @peremato; > <https://github.com/peremato> would you know whether the xrootd libraries; > have their symbols stripped, or who might know?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-760664510>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRQWK7YZM6KZ5REVCTLSZ7KGFANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760719476:195,release,release,195,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760719476,2,['release'],['release']
Deployability,"Hi,. Can you check which version of `nlohmann/json.hpp` is installed on your system?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1473283339:59,install,installed,59,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1473283339,1,['install'],['installed']
Deployability,"Hi,. I added 2 convenient methods for TGraph:; - AppendPoint adds a new point at the ""end"" of the graph.; - RemoveAllPoints calls RemovePoint(0) until there are no points left. This probably could also be done (faster) by deleting the fX and fY arrays, so feel free to change this patch. Benni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/39:281,patch,patch,281,https://root.cern,https://github.com/root-project/root/pull/39,1,['patch'],['patch']
Deployability,"Hi,. I am not quite sure I understand what you would like to see. ; One thing which might be relevant: I install root here on a non-standard path.; Furthermore the project is relying on MacPorts. root v6-26 without patch; ------------------------; cd /Users/suter_a/Applications/musrfit/build/src/classes && /opt/local/bin/cmake -E env LD_LIBRARY_PATH=/Users/suter_a/Applications/root/root_exec/lib: /Users/suter_a/Applications/root/root_exec/bin/rootcling -v2 -f PUserFcnBaseDict.cxx -s /Users/suter_a/Applications/musrfit/build/src/classes/libPUserFcnBase.dylib -rml libPUserFcnBase.dylib -rmf /Users/suter_a/Applications/musrfit/build/src/classes/libPUserFcnBase.rootmap -inlineInputHeader -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -DPNEXUS_ENABLED -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1 -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/13.0.0/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/13.0.0/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; dyld[7935]: Library not loaded: @rpath/libRIO.so; Referenced from: /Users/suter_a/Applications/root/root_exec/bin/rootcling; Reason: tried: '/usr/local/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:105,install,install,105,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,2,"['install', 'patch']","['install', 'patch']"
Deployability,"Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output; ```cmake; -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log; [ 0%] No update step for 'TBB'; [ 0%] No patch step for 'TBB'; [ 0%] No configure step for 'TBB'; [ 0%] Performing build step for 'TBB'; CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get; ```cmake; -- Found TBB: /opt/homebrew; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):; if given arguments:. ""VERSION_LESS"" ""2018""; ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one?. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10370:15,install,install,15,https://root.cern,https://github.com/root-project/root/issues/10370,5,"['install', 'patch', 'update']","['install', 'installation', 'patch', 'patches', 'update']"
Deployability,"Hi,. On Mon, Jul 31, 2017 at 4:13 PM, Philippe Canal <notifications@github.com>; wrote:. > Can we also update the release procedure to include a reminder to change; > this file? (assuming it is not already in the release procedure). Thanks.; >; I support this motion :) but it seems I don't have permissions to edit the; website anymore. Cheers,; Enrico. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/823#issuecomment-319079154>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AKfU-iod2uLRWBFuZjUyomtd2VZLoYdNks5sTeEVgaJpZM4OoD3E>; > .; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/823#issuecomment-319329231:103,update,update,103,https://root.cern,https://github.com/root-project/root/pull/823#issuecomment-319329231,3,"['release', 'update']","['release', 'update']"
Deployability,"Hi,. On Thursday 2015-09-03 10:56, xantares wrote:. > Forgive me but your objections do not seem rock-solid:; > - '""distutils.sysconfig"" is far from robust as claimed' : afaik it; > works very well from 2.6-2.7, 3.1,3.2, 3.3 to 3.4. sure, on Linux. Did you try all main platforms? (And do add at least p2.5,; as that for sure is still in use.). > - ""package as a whole gets split, which risks that one part gets updated; > whereas another doesn't"": how would that be possible for users ? a; > decent package manager should handle that well. A package manager can install wherever it wants and can make its own; adjustment (simply copy over the two files, or put symlinks); this will; affect users building from source. I don't worry about package managers,; only about the latter users. As to 'how': the common case mixing; installations (e.g. from packagers and building from source), versions; (different pythons), system upgrades (that wipe out site-packages), or; simply a user doing 'rm -rf' for only half the installation. Users are; very, very inventive in creating trouble. :P None of that if all of ROOT; is kept in a single directory. So the only upside there seems to be is removing of this teeny-weeny; inconvenience of having to setup PYTHONPATH if you install in /usr/local.; But A) most from-source builders don't do that, they use bin/thisroot.sh,; which sets up PYTHONPATH; and B) installing in /usr/local is not; recommended to begin with, b/c of the same problem with remnants. Debugging a setup problem is very time consuming and frustrating: the; error messages are spurious and only occur on the user's machine to which; I have no access. In sum, I see no upside to speak of, but do see enormous downsides. And; if you really believe otherwise: sign that blood contract. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-137538771:412,update,updated,412,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-137538771,7,"['install', 'update', 'upgrade']","['install', 'installation', 'installations', 'installing', 'updated', 'upgrades']"
Deployability,"Hi,. Thanks for trying to recreate it! I tried on my end as well, trying to recreate the code snippet the best I can in a standalone .cxx file. Unfortunately, I also couldn't obtain this ""Invalid write of size 1"" either. I have tried with the exact same pathways, same ROOT version, and same compiler. I copied quite a bit of code over to this standalone file from the project. My best guess is that it's a transient problem, and could be a side-effect of memory issues elsewhere in the code. My setup on lxplus while attempting to reproduce the problem; ```; > lsetup ""root 6.28.08-x86_64-el9-gcc13-opt""; > source /cvmfs/sft.cern.ch/lcg/contrib/gcc/13.1.0/x86_64-el9-gcc13-opt/setup.sh; > gcc --version; gcc (GCC) 13.1.0; > root -b -q; Welcome to ROOT 6.28/08; > g++ -o <output> <standalone_file>.cxx `root-config --cflags --glibs`; ```. My setup using setupATLAS when compiling the project ; (And tested with the standalone file as well); ```; setupATLAS; asetup AnalysisBase,24.2.27; ```. **Regarding the debug build**; I used the latest corresponding to `x86_64-el9-gcc13-dbg`; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-dbg/setup.sh; ```. However, this gives a ROOT version of ROOT 6.31/01, which is higher than what I compiled for (6.28/08). With this upgraded ROOT version, my project no longer compiles. (And since we don't plan on updating past the AnalysisBase release, I don't plan to fix the compilation error 🙂); If there's a way of obtaining a debug build of ROOT 6.28/08, I can try it. This coredump only started appearing when our compiler version changed from x86_64-centos7-gcc8-opt to x86_64-el9-gcc13-opt, and we moved to AnalysisBase,24.2.27 from AnalysisBase,22.2.113. Before this update, we have not seen our program core dump. While I'm curious of the cause, we don't need this fixed. ; Using `std::filesystem` works well for us. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14096#issuecomment-1825451888:1285,upgrade,upgraded,1285,https://root.cern,https://github.com/root-project/root/issues/14096#issuecomment-1825451888,3,"['release', 'update', 'upgrade']","['release', 'update', 'upgraded']"
Deployability,"Hi,. This PR cannot be merged since the test is failing. Could you please have a look @will-cern ?; ```; Running main() from /googletest-release-1.11.0/googletest/src/gtest_main.cc; [==========] Running 3 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 3 tests from Projections; [ RUN ] Projections.Issue_6658_2D; [ OK ] Projections.Issue_6658_2D (175 ms); [ RUN ] Projections.Issue_6658_3D; [ OK ] Projections.Issue_6658_3D (0 ms); [ RUN ] Projections.Issue_6658_Profile2D; /root/src/core/testsupport/src/TestSupport.cxx:89: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'TROOT::Append' reading 'Replacing existing TH1: x (Potential memory leak).'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] Projections.Issue_6658_Profile2D (1 ms); [----------] 3 tests from Projections (176 ms total); ; [----------] Global test environment tear-down; [==========] 3 tests from 1 test suite ran. (176 ms total); [ PASSED ] 2 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] Projections.Issue_6658_Profile2D; ; 1 FAILED TEST; CMake Error at /root/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16194#issuecomment-2285889101:137,release,release-,137,https://root.cern,https://github.com/root-project/root/pull/16194#issuecomment-2285889101,1,['release'],['release-']
Deployability,"Hi,. This has been bugging me for a while now. 😛. ROOT has been exporting a CMake configuration for downstream projects (using ROOT) for a while now. But the exported/imported library targets at the moment can't be used with code like:. ```cmake; find_package( ROOT 6.10 REQUIRED ); add_executable( MyExecutable test.cxx ); target_link_libraries( MyExecutable ROOT::Core ); ```. In this case the build would complain that it can't find the ROOT headers that `test.cxx` may want to use. Even though the expectation against imported targets **is** that they would carry all information with them to compile any client code correctly. While the latter sentiment can take us quite far, as one could even argue that imported libraries should carry whatever compiler definitions/options the client may need with themselves, unfortunately this is not super easy to do with CMake at the moment. (For instance I don't know of a good way in which the imported library could impose the same C++ standard on the client project that ROOT was built with. While allowing the client project to use an even newer standard if needed.). So for now I'll just be satisfied making sure that at least the include directory needed by the ROOT libraries would be automatically propagated to clients wanting to link against them. This update takes care of that. Cheers,; Attila",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466:82,configurat,configuration,82,https://root.cern,https://github.com/root-project/root/pull/1466,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7905:125,install,install,125,https://root.cern,https://github.com/root-project/root/issues/7905,3,['install'],['install']
Deployability,"Hi,. apologies, I realise that in the post above I wasn't terribly specific about what we needed. A bit more concretely, would it be possible to prepare a new version of ROOT, e.g. 6.28/08 which includes Scott's fix? We will then ask for this to be included in a new LCG104b release. Please could you give us a time estimate for how long this will take to prepare? This will enable us to plan more widely for our transition to AL9/LCG104/gcc13. Thanks a lot and sorry for the previous vague message!. James, John, Nick",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1750752949:275,release,release,275,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1750752949,1,['release'],['release']
Deployability,"Hi,. is there any chance to get this merged soon? We are getting code migrated from `const std::string&` to `std::string_view`, which is more efficient when dealing with string literals. Because of that we are getting many failures in our tests against ROOT v6.20-patches, for code that works nicely with ROOT 6.18/04. Thanks; Marco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4829#issuecomment-580356319:264,patch,patches,264,https://root.cern,https://github.com/root-project/root/pull/4829#issuecomment-580356319,1,['patch'],['patches']
Deployability,"Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,; Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/363:423,patch,patch,423,https://root.cern,https://github.com/root-project/root/pull/363,1,['patch'],['patch']
Deployability,"Hi,. the LHCb point of view on the issue is that we must be able to know which code we executed, mostly for debugging purposes (understanding why the trigger application took a specific decision counts as debugging for me). When you have an application that can decide which version of a function to run depending on something you cannot control, like the specific CPU on the Grid node or the time of the day, makes the debugging much more tricky (at some point we started storing in each event the binary id and the CPU type used for that event), so we decided that we do not want this kind of automatic dispatching: an application compiled to run on a Nehalem equivalent CPU should run only instructions valid for Nehalem processors, even if the actual CPU can do better. Our approach is that we still have some functions that have different implementations for different instructions sets (basically scalar, sse4.2 and avx2), but we chose at compile time which one to use by adding something like `-mavx2` or `-march=haswell` to the compile flags. And yes, it should be a cmake flag, but you are most welcome to have also the `ARCH=dynamic` option. OTOH you are talking about RooFit and AFAIK we do not use it in trigger, reconstruction or simulation software, but it is only used for the analysis, and there we have less constraints, as it has become common practice to use Conda based installations, so builds and versions decoupled from our production software.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361#issuecomment-791253985:1390,install,installations,1390,https://root.cern,https://github.com/root-project/root/issues/7361#issuecomment-791253985,1,['install'],['installations']
Deployability,"Hi,. to complement the reply of @vepadulano , which I fully support, I'd like to mention that v6.32.06, providing macOS 15 Sequoia support, has just been released:; - https://root-forum.cern.ch/t/root-6-32-06-is-out/61748; - https://github.com/root-project/root/releases/tag/v6-32-06",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498#issuecomment-2366943638:154,release,released,154,https://root.cern,https://github.com/root-project/root/issues/16498#issuecomment-2366943638,2,['release'],"['released', 'releases']"
Deployability,"Hi,. very last time and then I give up ... > B) of course, users shouldn't install anything to /usr[/local] without; > using package management. But they do. > but it will simplify packaging too by not having to install an ugly; > script somewhere that sets PYTHONPATH. Ugly scripts that are seldom seen. I care more about humans than computers.; Additionally, the removal scripts can be simpler, as the package manager; knows where it put what, rather than the package stuffing portions in; different places, so I'd say its a wash. > As for the downsides, I think this solution is just simpler (not; > mentioning cleaner), maybe this will get you less bug reports. Straight of the bat, the whole nightly build system would roll over and; all developers that use cmake (not me, luckily) would have to change their; workflow. Why? B/c most of these setups are 1 python installation and; multiple ROOT installations, or different users for both so no access; rights to site packages. Add that packagers for LCG experiments now need; to know that ROOT puts stuff in $ROOTSYS and in $PYTHONHOME and fix what; they pick up from where. For that matter, I think there will be far more; 'ugly scripts' being created here to work around the mess this would add,; that I dare claim that even that argument of yours holds no water. Like I said, this is my last word on it. It's not worth my time if you; refuse to look beyond that one use case. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-139309263:75,install,install,75,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-139309263,4,['install'],"['install', 'installation', 'installations']"
Deployability,"Hi,; @sinnfashen sorry for my late reply. Thank you for the updates, still I have some comments before merging it. See my review.; If you don't have more time to work on this, please let me know and then complete from your work; ; Thank you, ; Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-461813099:60,update,updates,60,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-461813099,1,['update'],['updates']
Deployability,"Hi,; I can run with valgrind now. https://bigpanda.cern.ch/job?pandaid=4946556588; ends with; ==2505== by 0x3FD274BC:; XrdCl::File::Open(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&,; XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0). but maybe I did not have the right arguments. I tried again with. --trace-children=yes --track-origins=yes --error-limit=no; Should be; https://bigpanda.cern.ch/job?pandaid=4946562660. Cheers,. Rod. On Tue, 12 Jan 2021 at 14:49, Attila Krasznahorkay <notifications@github.com>; wrote:. > In AnalysisBase-21.2.91 we used XRootD 4.8.4.; >; > And @#$% me... How did I not remember this earlier?!? Is this not all about; >; > https://its.cern.ch/jira/browse/ATLASG-1546; >; > [image: Screenshot from 2021-01-12 14-46-12]; > <https://user-images.githubusercontent.com/30694331/104322255-0438b000-54e5-11eb-897e-8d1ae2a125d4.png>; >; > ? I.e. it may not be the XRootD version after all, but the version of; > ROOT... However, if this *is* the case, then AnalysisBase-21.2.140+; > should *not* show the issue anymore. 🤔; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-758666233>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRURKONZMUE5DXE4EQ3SZRHNVANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758872231:368,Install,InstallArea,368,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758872231,1,['Install'],['InstallArea']
Deployability,"Hi,; I can`t install things on lxplus. Is it enough for you to have the core and; exe?; /afs/cern.ch/user/w/walkerr/public/RD.core; /afs/cern.ch/user/w/walkerr/public/runH4lAnalRun2; ?. Cheers,; Rod. On Thu, 14 Jan 2021 at 15:36, Axel Naumann <notifications@github.com> wrote:. > @simonmichal <https://github.com/simonmichal> XrdNetUtils::MyHostName(); > does getaddrinfo() for the local iface? Looks like that fails here? Okay; > stepping back to the sideline to watch ;-); >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-760235553>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRXXG4ULSQJU6ZN4KBDSZ36NJANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760241692:13,install,install,13,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760241692,1,['install'],['install']
Deployability,"Hi,; I had just switched to gdb. Just submitted a test with your -ex too. Will; send the outputs. I also got the core file - can you do anything with that. I see. (gdb) backtrace; #0 0x00002ac87cbfee5d in __res_context_search () from /lib64/libresolv.so.2; #1 0x00002ac889833f09 in _nss_dns_gethostbyname4_r () from; /lib64/libnss_dns.so.2; #2 0x00002ac8530161c4 in gaih_inet.constprop.8 () from /lib64/libc.so.6; #3 0x00002ac853017564 in getaddrinfo () from /lib64/libc.so.6; #4 0x00002ac888e18ffd in XrdNetAddr::Set(char const*, int) (); from /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; #5 0x00002ac888e20d6b in XrdNetUtils::MyHostName(char const*, char; const**) (); from /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; #6 0x00002ac88936148d in; XrdCl::XRootDTransport::GenerateLogIn(XrdCl::HandShakeData*,; XrdCl::XRootDChannelInfo*) (); from /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #7 0x00002ac889365b6e in; XrdCl::XRootDTransport::HandShakeMain(XrdCl::HandShakeData*,; XrdCl::AnyObject&) (); from /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #8 0x00002ac889365cac in; XrdCl::XRootDTransport::HandShake(XrdCl::HandShakeData*, XrdCl::AnyObject&); (); from /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #9 0x00002ac8893c0580 in; XrdCl::AsyncSocketHandler::OnReadWhileHandshaking() (); from /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #10 0x00002ac8893c0915 in XrdCl::AsyncSocketHandler::Event(unsigned char,; XrdCl::Socket*) (); from /cvmfs/; atlas.cern.ch/repo/sw/software",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760199603:621,Install,InstallArea,621,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760199603,2,['Install'],['InstallArea']
Deployability,"Hi,; I ran into a memory leak training a BDT yesterday.; Strangely only when running through the root_numpy interface.; The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM); Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues); since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone.; So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2836:747,patch,patch,747,https://root.cern,https://github.com/root-project/root/pull/2836,1,['patch'],['patch']
Deployability,"Hi,; I thought the wrapper would be under suspicion at some stage, so disabled; it in; https://bigpanda.cern.ch/job?pandaid=4946999888. == Conditional jump or move depends on uninitialised value(s); ==2512== at 0x4F01099: TStorage::UpdateIsOnHeap(unsigned int const; volatile&, unsigned int volatile&) (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/lib/libH4lAnalysisRun2Lib.so); ==2512== by 0x5A78179: TInetAddress::TInetAddress() (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5B81DD5: TUnixSystem::GetHostByName(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5ABC6E2: TSystem::IsPathLocal(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x53D12DC: TFile::GetType(char const*, char const*,; TString*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libRIO.so); ==2512== by 0x53D2847: TFile::Open(char const*, char const*, char; const*, int, int) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libRIO.so); ==2512== by 0x403275: main (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2); ==2512== Uninitialised value was created by a stack allocation; ==2512== at 0x5ABC43E: TSystem::IsPathLocal(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512==; ==2512== Conditional jump or move depends on uninitialised value(s); ==2512== at 0x4F01099: TStorage::UpdateIsOnHeap(unsigned int const; volatile&, unsigned int volatile&) (in; /srv/workDir/usr/HZZAnalRun2Cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759537229:232,Update,UpdateIsOnHeap,232,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759537229,5,"['Install', 'Update']","['InstallArea', 'UpdateIsOnHeap']"
Deployability,"Hi,; I'm trying to add a patch to address the issue here: https://sft.its.cern.ch/jira/browse/ROOT-9655.; There are two features:; 1) using the default option, TPaletteAxis will have the same range as the early histogram that the current histogram is normalized to, and thus the correct palette;; 2) New options ""SAME0"" and ""SAMES0"" to allow opting out of the default normalization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3150:25,patch,patch,25,https://root.cern,https://github.com/root-project/root/pull/3150,1,['patch'],['patch']
Deployability,"Hi,; It is overloading some network related commands to provide a record of what; users are remote accessing. It creates; https://bigpanda.cern.ch//media/filebrowser/5e40cf5d-179e-4126-ad56-e0bb0173cbd5/panda/tarball_PandaJob_4911855304_CERN/pandatracerlog.txt. 2020-12-04 18:55:07.949713 : INFO connect:; ::2001:1458:301:62:0:0:1094 cmd: runH4lAnalRun2. where IPv6 always rings alarm bells with me. This would be a; node/site,RSE dependence. Cheers,. Rod. On Mon, 14 Dec 2020 at 10:31, Attila Krasznahorkay <notifications@github.com>; wrote:. > Hi Rod,; >; > What does; >; > LD_PRELOAD=/srv/workDir/96340ef3-75b1-46cf-8910-8a2f76b7068c/$LIB/wrapper.so; >; > do? That would be my first suspect. Since $LD_LIBRARY_PATH lists our; > software directories in the correct order, based on just that XRootD; > *should* be found under:; >; > [bash][thor]:~ > ls -l /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*; > lrwxrwxrwx 1 cvmfs cvmfs 19 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so -> libXrdAppUtils.so.1; > lrwxrwxrwx 1 cvmfs cvmfs 23 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1 -> libXrdAppUtils.so.1.0.0; > -rwxr-xr-x 1 cvmfs cvmfs 74512 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0-rwxr-xr-x> 1 cvmfs cvmfs 18432 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdBlacklistDecision-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/Inst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744315185:931,Install,InstallArea,931,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744315185,1,['Install'],['InstallArea']
Deployability,"Hi,; Letting the valgrind output go to stdout, it looks completely different; /afs/cern.ch/user/w/walkerr/public/RD_valgrid_stdout.log. I`ll try with this; --suppressions=valgrind-root.supp; to see if it reduces it. Cheers,; Rod. On Wed, 13 Jan 2021 at 18:53, Rodney Walker <; rodney.walker@physik.uni-muenchen.de> wrote:. > Hi,; > Sure; > /afs/cern.ch/user/w/walkerr/public/valg.log_nowrapper; > I have no idea what the binary junk is in there. I run it like this; >; > valgrind --log-file=../valg.log --leak-check=full --trace-children=yes; > --track-origins=yes --error-limit=no; > usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2; > $@; >; > but have no experience of valgrind so open to corrections.; >; > Cheers,; > Rod.; >; >; > On Wed, 13 Jan 2021 at 18:47, Axel Naumann <notifications@github.com>; > wrote:; >; >> Can you share the while valgrind report without wrapper? The error you; >> quote is intentional (and part of the ROOT suppression file).; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/root-project/root/issues/6948#issuecomment-759611858>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/ABNFVRQSF742BV7R7BKKHV3SZXMDPANCNFSM4U2MLUJA>; >> .; >>; >; >; > --; > Tel. +49 89 289 14152; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759984606:611,Install,InstallArea,611,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759984606,1,['Install'],['InstallArea']
Deployability,"Hi,; RD thinks this is the relevant part .... ==2505== at 0x4C2D257: __strncmp_sse42 (vg_replace_strmem.c:649); ==2505== by 0x4E36472: connect (in; /srv/workDir/e8d1c011-6cad-4b4c-b0ad-5b9f65b33eb0/lib64/wrapper.so); ==2505== by 0x3F7B62B8: XrdNetConnect::Connect(int, sockaddr const*,; int, int) (in /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2.0.0; ). /afs/cern.ch/user/w/walkerr/public/valg.log. Cheers,; Rod. On Tue, 12 Jan 2021 at 20:06, Rodney Walker <; rodney.walker@physik.uni-muenchen.de> wrote:. > Hi,; > I can run with valgrind now. https://bigpanda.cern.ch/job?pandaid=4946556588; > ends with; > ==2505== by 0x3FD274BC: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); >; > but maybe I did not have the right arguments. I tried again with; >; > --trace-children=yes --track-origins=yes --error-limit=no; > Should be; > https://bigpanda.cern.ch/job?pandaid=4946562660; >; > Cheers,; >; > Rod.; >; >; > On Tue, 12 Jan 2021 at 14:49, Attila Krasznahorkay <; > notifications@github.com> wrote:; >; >> In AnalysisBase-21.2.91 we used XRootD 4.8.4.; >>; >> And @#$% me... How did I not remember this earlier?!? Is this not all; >> about; >>; >> https://its.cern.ch/jira/browse/ATLASG-1546; >>; >> [image: Screenshot from 2021-01-12 14-46-12]; >> <https://user-images.githubusercontent.com/30694331/104322255-0438b000-54e5-11eb-897e-8d1ae2a125d4.png>; >>; >> ? I.e. it may not be the XRootD version after all, but the version of; >> ROOT... However, if this *is* the case, then AnalysisBase-21.2.140+; >> should *not* show the issue anymore. 🤔; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759275653:377,Install,InstallArea,377,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759275653,2,['Install'],['InstallArea']
Deployability,"Hi,; Submit a job with compiled C to just open the Marseille file (code at; bottom). https://bigpanda.cern.ch/job?pandaid=4923453571. It has the same release, and it works! I am not sure if anything else is; different, but it points at the specific code rather than a pure TFile open; problem. Cheers,; Rod. $ cat main.C; #include <iostream>; #include <string>; #include ""TFile.h"". using namespace std;. int main(); {; TFile* davixFile = TFile::Open(""root://; eosatlas.cern.ch:1094//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/25/31/DAOD_HIGG2D1.23315648._000001.pool.root.1; "",""READ"");; cout << ""coucou 5"" << endl;; davixFile->ls();; davixFile->Close();. return 0;; }. On Wed, 16 Dec 2020 at 15:50, rdschaffer <notifications@github.com> wrote:. > Marseilles job logs are in:; >; > marseilles; > <https://bigpanda.cern.ch/filebrowser/?guid=00354dec-89f9-4687-bc9e-d0151ddff358&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000051.log.tgz&site=IN2P3-CPPM/SCORE&scope=panda&fileid=23156311480>; >; > and Cern jobs logs are in:; > Cern; > <https://bigpanda.cern.ch/filebrowser/?guid=52428b18-b810-4194-be8a-fb11e92bc4f8&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000050.log.tgz&site=CERN-T0/SCORE&scope=panda&fileid=23156311459>; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-746412091>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRTBK3POEBIWCBST673SVDCJNANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746431625:150,release,release,150,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746431625,2,['release'],['release']
Deployability,"Hi,; Sure; /afs/cern.ch/user/w/walkerr/public/valg.log_nowrapper; I have no idea what the binary junk is in there. I run it like this. valgrind --log-file=../valg.log --leak-check=full --trace-children=yes; --track-origins=yes --error-limit=no; usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2; $@. but have no experience of valgrind so open to corrections. Cheers,; Rod. On Wed, 13 Jan 2021 at 18:47, Axel Naumann <notifications@github.com> wrote:. > Can you share the while valgrind report without wrapper? The error you; > quote is intentional (and part of the ROOT suppression file).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-759611858>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRQSF742BV7R7BKKHV3SZXMDPANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759615449:271,Install,InstallArea,271,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759615449,1,['Install'],['InstallArea']
Deployability,"Hi,; The whole ENV is dumped in eg. https://bigpanda.cern.ch//media/filebrowser/5e40cf5d-179e-4126-ad56-e0bb0173cbd5/panda/tarball_PandaJob_4911855304_CERN/payload.stdout. Does that give any clue?. LD_LIBRARY_PATH=/srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/lib:/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib:/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBase/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib:/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib64:/cvmfs/atlas.cern.ch/repo/sw/software/21.2/sw/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/lib:/cvmfs/atlas.cern.ch/repo/sw/software/21.2/sw/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/lib64:/cvmfs/atlas.cern.ch/repo/sw/software/21.2/sw/lcg/releases/binutils/2.30-e5b21/x86_64-centos7/lib:/.singularity.d/libs. Cheers,; Rod. On Mon, 14 Dec 2020 at 09:57, Attila Krasznahorkay <notifications@github.com>; wrote:. > Unfortunately this is the sort of issue that could have been easier to; > track/discuss on JIRA. But since ROOT doesn't use that anymore, here we; > go...; >; > My suspicion is that the grid nodes in question put some locally installed; > XRootD version high up in the library search path of the jobs. I don't know; > how they would do that, but that's my educated guess.; >; > ATLAS analysis releases using ROOT 6.18/04 (; > https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.65/External/ROOT/CMakeLists.txt); > use XRootD 4.10.0 (; > https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.65/External/XRootD/CMakeLists.txt).; > While releases using ROOT 6.16/00 (; > https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.60/External/ROOT/CMakeLists.txt); > used XRootD 4.8.4 (; > https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.60/External/XRootD/CMakeLists.txt).; > My educated guess is that the XRootD version force fed into your jobs; > @rdsch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744300056:253,Install,InstallArea,253,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744300056,7,"['Install', 'release']","['InstallArea', 'releases']"
Deployability,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:44,patch,patches,44,https://root.cern,https://github.com/root-project/root/issues/12771,3,"['integrat', 'patch']","['integration', 'patches']"
Deployability,"Hi,; We are trying to update root 6.24 branch (commit https://github.com/root-project/root/commit/7c0cfaca4c70c7394328547c05e00028b0079a03) in CMSSW special integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmss",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718:22,update,update,22,https://root.cern,https://github.com/root-project/root/issues/7718,2,"['integrat', 'update']","['integration', 'update']"
Deployability,"Hi,; i tried again but still does not work. Since in the past i tried to install root from source and then had to uninstall manually (the compiled files had been scattered in the bin, include and alike system folders) i guess there could be some 6.26 libraries in system search paths, which are loaded by root instead of its own? I will try to further clean my directories or force somehow root to search only in its versions' folder.; Thank you all for your feedkback.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129#issuecomment-2067688720:73,install,install,73,https://root.cern,https://github.com/root-project/root/issues/15129#issuecomment-2067688720,1,['install'],['install']
Deployability,"Hi,; i try to t install root, i get the cMakelists.text issue; CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11819:16,install,install,16,https://root.cern,https://github.com/root-project/root/issues/11819,1,['install'],['install']
Deployability,"Hi,; in case this can be of any help: running [my fork](https://github.com/bluehood/iotools/tree/rootonly) of Jakob's ROOT I/O tests, I don't see an appreciable difference in TTreeReader runtimes between current master and this PR. Timings for 5 runs on uncompressed lhcb open data (CMAKE_BUILD_TYPE=Release, single-thread runs, benchmarks compiled with `-g -O2`):; ```; TTree: 2.41 2.65 2.42 2.40 2.49 2.45; patched TTreeReader: 4.71 4.59 4.44 4.39 4.68 4.71; master TTreeReader: 4.41 4.72 4.79 4.66 4.75 4.81; ```. Flamegraphs for SetBranchAddress and patched TTreeReader, in case they can give you any insight. **Interactive version [here](https://eguiraud.web.cern.ch/eguiraud/)**, including patched vs master TTreeReader comparison. **SetBranchAddress**; ![image](https://user-images.githubusercontent.com/10999034/51322268-3681b500-1a65-11e9-8e0d-08038a21eb34.png). **Patched TTreeReader**; ![image](https://user-images.githubusercontent.com/10999034/51322310-5618dd80-1a65-11e9-941d-32324a434359.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455175461:300,Release,Release,300,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455175461,5,"['Patch', 'Release', 'patch']","['Patched', 'Release', 'patched']"
Deployability,"Hi,; isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-617721992:121,configurat,configuration,121,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-617721992,1,['configurat'],['configuration']
Deployability,"Hi,; just a short note on the test failures, we saw before that:; 986 - roottest-root-tree-cloning-make (Failed); because off reference file differences caused by somewhat different compressed tree seizes. DavidC verified that this happens because the version number update of TBranch. Should we change the tests refs as part of this pull request?; I have no explanation for projectroot.math.mathcore.test.mathcore_testLogLExecPolicy (which failed on ubuntu14 only), but it doesn't look related to this change.; Thanks, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317443701:267,update,update,267,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317443701,1,['update'],['update']
Deployability,"Hi,; thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02?. I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)?. Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)?. Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856#issuecomment-732289044:202,install,installed,202,https://root.cern,https://github.com/root-project/root/issues/6856#issuecomment-732289044,3,"['install', 'release']","['install', 'installed', 'releases']"
Deployability,"Hi,; thank you very much, that you spend time on this!. I do not understand some things:; * In the Doc the packages that do need internet access are usually named - this does not seem to be correct; * Furthermore, all packages that need internet access should be turned off in installation by default - they are not; * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?); * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks; Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864610580:277,install,installation,277,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864610580,6,['install'],['installation']
Deployability,"Hi. Thank you Simon for the update and this very nice and useful contribution! ; The changes look fine to me. For my opinion this PR is ready to be merged!. Best, . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-565470187:28,update,update,28,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-565470187,1,['update'],['update']
Deployability,"Hii @guitargeek I have had issues when I am trying to compile, in vscode it shows `can't find source code`; and so started using visual studios c++ , on compiling or running its showing ; >------ Build All started: Project: root, Configuration: x64-Debug ------; C:\Users\dell\Desktop\shared project\root\out\build\x64-Debug\ninja : error : 'LZMA/src/LZMA/lib/liblzma.lib', needed by 'bin/Core.dll', missing and no known rule to make it; Build All failed. Tried a lot but same issue . Can u help on this or can u suggest something so that I can compile stuff and see my code is running as expected or not?; I'm in windows 11. thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1025603470:230,Configurat,Configuration,230,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1025603470,1,['Configurat'],['Configuration']
Deployability,"Hm :-( I didn't receive any comments on the actual changes for almost two months, could someone please take a look? It would be good to have this fix included in the next release (6.12/00?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1083#issuecomment-346279199:171,release,release,171,https://root.cern,https://github.com/root-project/root/pull/1083#issuecomment-346279199,1,['release'],['release']
Deployability,"Hm :-( I still didn't receive any comments on the changes, could someone please take a look? It would be good to have this fix included in the next release (6.12/00?). I think it's rather trivial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1183#issuecomment-346279315:148,release,release,148,https://root.cern,https://github.com/root-project/root/pull/1183#issuecomment-346279315,1,['release'],['release']
Deployability,"Hm ok, actually it does also work with a custom built/installed from source version of the unreleased libzmq library, so that would be an option to avoid builtins in those situations. But I guess that's not something they will want to invest time in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981738425:54,install,installed,54,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981738425,1,['install'],['installed']
Deployability,"Hm, could it be that we don't release some memory? Just trying with a real world analysis and after a certain number of events I get a crash like this. ```; Processed 130000 entries; terminate called after throwing an instance of 'std::runtime_error'; what(): Error initializing io_uring: Invalid argument; ```. ```; #0 0x00007ffff51a1355 in raise () from /usr/lib/libc.so.6; #1 0x00007ffff518a853 in abort () from /usr/lib/libc.so.6; #2 0x00007ffff554586a in __gnu_cxx::__verbose_terminate_handler () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff5551d8a in __cxxabiv1::__terminate (handler=<optimized out>) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff5551df7 in std::terminate () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff555209e in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x5555555a2800 <typeinfo for std::runtime_error@@GLIBCXX_3.4>, ; dest=0x7ffff5567fd0 <std::runtime_error::~runtime_error()>) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95; #6 0x00007ffff75c4914 in ROOT::Internal::RIoUring::RIoUring() () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #7 0x00007ffff75c3b01 in ROOT::Internal::RRawFileUnix::ReadVImpl(ROOT::Internal::RRawFile::RIOVec*, unsigned int) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #8 0x00007ffff75c21cb in ROOT::Internal::RRawFile::ReadV(ROOT::Internal::RRawFile::RIOVec*, unsigned int) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #9 0x00007ffff5853e72 in ROOT::Experimental::Detail::RPageSourceFile::LoadCluster(unsigned long, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> > const&) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libROOTNTuple.so; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-678297228:30,release,release,30,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-678297228,5,"['install', 'release']","['install-git', 'release']"
Deployability,"Hmm GH doesn't see the updated branch, even though it does see it in my fork. Argh. Close & re-open?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6896#issuecomment-738897843:23,update,updated,23,https://root.cern,https://github.com/root-project/root/pull/6896#issuecomment-738897843,1,['update'],['updated']
Deployability,Hmm I get similar errors with both using the following flags: `-Dbuiltin_xrootd=OFF -Dxrootd=ON -Dfail-on-missing=ON` and having `XRDSYS` pointing to the XRootD installation (or using `CMAKE_PREFIX_PATH`). Which flags did you use for building XRootD and ROOT?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1503656816:161,install,installation,161,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1503656816,1,['install'],['installation']
Deployability,"Hmm, I already did what I quoted in my last comment.; Now if I did:; git rebase upstream/master; ->; Applying: cppcheck: fix some reports; Applying: fix warnings for catch; julien@debian:~/projects/root$ git push; Username for 'https://github.com': serval2412; Password for 'https://serval2412@github.com': ; To https://github.com/serval2412/root; ! [rejected] master -> master (non-fast-forward); error: failed to push some refs to 'https://github.com/serval2412/root'; hint: Updates were rejected because the tip of your current branch is behind; hint: its remote counterpart. Integrate the remote changes (e.g.; hint: 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; What should I do then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-361205718:477,Update,Updates,477,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-361205718,2,"['Integrat', 'Update']","['Integrate', 'Updates']"
Deployability,"Hmm, actually it seems that I cannot call Book directly from python with the overloads set up this way. I think this has to do with reference type ambiguities when passing objects from python. Let me try further further restricting the template instances with SFINAE (I guess the same issue is present with Fill since it has the same template argument pattern). ```; Info in <TUnixSystem::ACLiC>: creating shared library /data/home/bendavid/rdftest7/jittest_cpp.so; input_line_45:7:122: error: call to member function 'Book' is ambiguous; new (ret) (ROOT::RDF::RResultPtr<double>) (((ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>*)obj)->Book<TestHelper>((TestHelper&&)*(TestHelper*)args[0]));; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2240:42: note: candidate function [with FirstColumn = TestHelper, OtherColumns = <>, Helper = TestHelper]; RResultPtr<typename Helper::Result_t> Book(Helper &&helper, const ColumnNames_t &columns = {}); ^; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2264:42: note: candidate function [with Helper = TestHelper]; RResultPtr<typename Helper::Result_t> Book(Helper &&helper, const ColumnNames_t &columns = {}); ^; input_line_45:11:79: error: call to member function 'Book' is ambiguous; ((ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>*)obj)->Book<TestHelper>((TestHelper&&)*(TestHelper*)args[0]);; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2240:42: note: candidate function [with FirstColumn = TestHelper, OtherColumns = <>, Helper = TestHelper]; RResultPtr<typename Helper::Result_t> Book(Helper &&helper, const ColumnNames_t &columns = {}); ^; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2264:42: note: candidate function [with Helper =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-804363488:830,install,install,830,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-804363488,1,['install'],['install']
Deployability,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-439092676:156,integrat,integration,156,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-439092676,1,['integrat'],['integration']
Deployability,"Hmm... I'm now trying to reproduce the issue. But don't seem to be able to. :confused:. After building and installing ROOT with a built-in VDT, I see the following:. ```; [bash][pcadp04]:buildtest > more ../findtester/CMakeLists.txt . cmake_minimum_required(VERSION 3.20); project(ROOTFindTester VERSION 0.0.1 LANGUAGES CXX). find_package(ROOT 6.30 CONFIG REQUIRED); [bash][pcadp04]:buildtest > cmake -DROOT_ROOT=/mnt/hdd1/krasznaa/projects/root/install ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Vdt: /mnt/hdd1/krasznaa/projects/root/install/include (found version ""0.4"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/hdd1/krasznaa/projects/root/buildtest; [bash][pcadp04]:buildtest >; ```. I.e. CMake (3.20, on RHEL9) is very happy to find the built-in VDT for me. Even without having done any environment setup at all. I'm just pointing CMake at ROOT's installation location using `ROOT_ROOT`. Are you not pointing at ROOT's installed location in any shape or form? :confused: I didn't know that CMake would be looking for packages under `/opt` automatically. :confused: So, how is this happening in your environment? How does CMake find ROOT, but not VDT in the same location? Since now that I read a little about it, when CMake is executing code ""as part of a `find_package` call"", it does consider paths that were used to find the package in question. I'm very much planning to add a setting for `Vdt_ROOT` in https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in. But for that I really need to be able to reproduce your issue first...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1840409089:107,install,installing,107,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1840409089,5,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"Hmm... Okay, so you use `ROOT_DIR`. I could reproduce the issue with that finally. Though still a bit differently from what you posted just now. ```; [bash][pcadp04]:buildtest > cmake -DROOT_DIR=/mnt/hdd1/krasznaa/projects/root/install/cmake ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /mnt/hdd1/krasznaa/projects/root/install/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:137 (find_dependency); CMakeLists.txt:5 (find_package). -- Configuring incomplete, errors occurred!; See also ""/mnt/hdd1/krasznaa/projects/root/buildtest/CMakeFiles/CMakeOutput.log"".; [bash][pcadp04]:buildtest >; ```. I.e. One should not use `<Foo>_DIR` normally, as that needs to point at the directory holding the CMake code. While `<Foo>_ROOT` is a much easier-to-use variable. I'll open a PR with the update, but I'm less and less convinced that the issue would be in ROOT at this point, and not in your build setup. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1840438213:228,install,install,228,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1840438213,4,"['install', 'update']","['install', 'update']"
Deployability,"Hmm... That in principle looks fine... So okay, your test job **is** relevant. Unfortunately I'm running out of ideas. The XRootD build in `AnalysisBaseExternals` does depend on a couple of libraries from the OS. But these should only be things that are part of HEP_OSlibs. So the worker nodes should not really have different versions of them... ```; [bash][lxplus730]:~ > ldd -r /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*.so | grep "" /lib"" | sed ""s/\(.*\) (0x.*)/\1/g"" | sort | uniq ; 	libc.so.6 => /lib64/libc.so.6; 	libcom_err.so.2 => /lib64/libcom_err.so.2; 	libcrypt.so.1 => /lib64/libcrypt.so.1; 	libcrypto.so.10 => /lib64/libcrypto.so.10; 	libcurl.so.4 => /lib64/libcurl.so.4; 	libdl.so.2 => /lib64/libdl.so.2; 	libfreebl3.so => /lib64/libfreebl3.so; 	libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2; 	libidn.so.11 => /lib64/libidn.so.11; 	libk5crypto.so.3 => /lib64/libk5crypto.so.3; 	libkeyutils.so.1 => /lib64/libkeyutils.so.1; 	libkrb5.so.3 => /lib64/libkrb5.so.3; 	libkrb5support.so.0 => /lib64/libkrb5support.so.0; 	liblber-2.4.so.2 => /lib64/liblber-2.4.so.2; 	libldap-2.4.so.2 => /lib64/libldap-2.4.so.2; 	libm.so.6 => /lib64/libm.so.6; 	libnspr4.so => /lib64/libnspr4.so; 	libnss3.so => /lib64/libnss3.so; 	libnssutil3.so => /lib64/libnssutil3.so; 	libpcre.so.1 => /lib64/libpcre.so.1; 	libplc4.so => /lib64/libplc4.so; 	libplds4.so => /lib64/libplds4.so; 	libpthread.so.0 => /lib64/libpthread.so.0; 	libresolv.so.2 => /lib64/libresolv.so.2; 	librt.so.1 => /lib64/librt.so.1; 	libsasl2.so.3 => /lib64/libsasl2.so.3; 	libselinux.so.1 => /lib64/libselinux.so.1; 	libsmime3.so => /lib64/libsmime3.so; 	libssh2.so.1 => /lib64/libssh2.so.1; 	libssl.so.10 => /lib64/libssl.so.10; 	libssl3.so => /lib64/libssl3.so; 	libz.so.1 => /lib64/libz.so.1; [bash][lxplus730]:~ >; ```. Could the version of some of these not be ""well defined"" on the grid nodes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746514897:455,Install,InstallArea,455,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746514897,1,['Install'],['InstallArea']
Deployability,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:; ```; [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here?. The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):; ```; [ 0%] Built target AFTERIMAGE; ```; while mine has (grepped out AFTERIMAGE parts):; ```; [ 0%] Creating directories for 'AFTERIMAGE'; [ 2%] Performing download step for 'AFTERIMAGE'; [ 10%] No update step for 'AFTERIMAGE'; [ 12%] No patch step for 'AFTERIMAGE'; [ 16%] Performing configure step for 'AFTERIMAGE'; -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log; [ 85%] Performing build step for 'AFTERIMAGE'; -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; [ 97%] Performing install step for 'AFTERIMAGE'; -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log; [ 97%] Completed 'AFTERIMAGE'; [ 97%] Built target AFTERIMAGE; [ 97%] Built target G__ASImage; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; [ 97%] Linking CXX shared library ../../lib/libASImage.so; [ 97%] Built target ASImage; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2250921631:481,install,install,481,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2250921631,3,"['install', 'patch', 'update']","['install', 'patch', 'update']"
Deployability,"Honestly, I don't know much about that. I just cloned the cmake configuration from the exact command used internally by the MacPorts build, so its added by that. I will have to investigate the reasons for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366#issuecomment-694198699:64,configurat,configuration,64,https://root.cern,https://github.com/root-project/root/issues/6366#issuecomment-694198699,1,['configurat'],['configuration']
Deployability,"How critical is this? I'd prefer to see whether the ongoing llvm upgrade to llvm9 fixes this. (And yes, I can reproduce something similar even with bare ROOT)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454#issuecomment-708260372:65,upgrade,upgrade,65,https://root.cern,https://github.com/root-project/root/issues/6454#issuecomment-708260372,1,['upgrade'],['upgrade']
Deployability,"How did you install Python 3.10? I see it's a static library, is that the default on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14672#issuecomment-1944069290:12,install,install,12,https://root.cern,https://github.com/root-project/root/issues/14672#issuecomment-1944069290,1,['install'],['install']
Deployability,"How should I proceed, just rollback or open a new PR again ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13212#issuecomment-1628501338:27,rollback,rollback,27,https://root.cern,https://github.com/root-project/root/pull/13212#issuecomment-1628501338,1,['rollback'],['rollback']
Deployability,"How to compile code see Readme in gui/canvaspainter. Code is not yet used - I will provide another patch after this PR and #717 are merged. CEF-related makefile should be improved. ; One can use **cefsimple** cmake files as an example. https://bitbucket.org/chromiumembedded/cef/src/8e69e3dcea8b/tests/cefsimple/?at=master. **cefsimple** has some specialization for linux, mac and windows. ; I used only linux till now. One could try mac - for that one should include simple_handler_mac.mm into compilation instead of simple_handler_linux.cxx. Same is for cef_main.cxx. Formally one need to create separate versions for mac, linux and windows.; You can see example also in **cefsimple**. These are different platform-specific error handlers. Building of Qt5 part is not called from makefile. I hope, one can add it into makefile when qt5-webengine is discovered. Also rootqt5 executable should be moved into $ROOTSYS/bin directory",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/721:99,patch,patch,99,https://root.cern,https://github.com/root-project/root/pull/721,1,['patch'],['patch']
Deployability,How you start python - with or without `-i` flag?. Graphics (normal or web) can normally works only in interactive python mode.; In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474#issuecomment-2107266174:157,update,updated,157,https://root.cern,https://github.com/root-project/root/issues/15474#issuecomment-2107266174,1,['update'],['updated']
Deployability,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:1695,install,install,1695,https://root.cern,https://github.com/root-project/root/issues/7861,1,['install'],['install']
Deployability,"Humm ... clearly that code need to be updated as it indeed ""assume"" that having a Merge function implies inheritance from TObject.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016#issuecomment-656306997:38,update,updated,38,https://root.cern,https://github.com/root-project/root/pull/6016#issuecomment-656306997,2,['update'],['updated']
Deployability,I *think* the failure on `windows10` is due to how the commits are rebased after I change the `eol` normalization in the first commit. @bellenot could I ask you to manually check this PR on Windows? Subsequent runs should hopefully be fine once the updated `.gitattributes` are in `master` (alternatively we would need to merge this commit via a separate PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12117#issuecomment-1404875418:249,update,updated,249,https://root.cern,https://github.com/root-project/root/pull/12117#issuecomment-1404875418,1,['update'],['updated']
Deployability,"I actually added a test as part of https://github.com/root-project/root/pull/7100 two years ago, but this part in `IncrementalJIT.cpp` was removed during the llvm13 upgrade and nobody noticed because we only ran the Cling test suite on Linux :cry: Note that `check-cling` actually very red on macOS, but most of that seems to come from `-lSystem`? @Axel-Naumann",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12069#issuecomment-1398172640:165,upgrade,upgrade,165,https://root.cern,https://github.com/root-project/root/pull/12069#issuecomment-1398172640,1,['upgrade'],['upgrade']
Deployability,"I agree that it is an unfortunate circumstance to have the test not passing. However, I still urge you to consider the effect on debugability removing strict tests will have. I have wasted a lot of time trying to track down a subtle bug due to loose tests which left me unable to determine where the bug came from. Conversely, setting tests strictly and tracing discrepancies, I found a different bug in the Kahan sum: #11940. Unit tests especially should be as strict as possible. In absence of unit tests (which unfortunately is the case for the parts of RooFit I worked on), strict ""integration"" tests like these are the closest I could get. Note also that it was simply part of my original assignment: to ensure users can trust the new parallelized methods, I built them to be bit-wise exactly equal to the old methods. So, I know from experience how tedious it is to trace down these bit-wise differences to their actual concrete source, but also think that because we are dealing with scientific software, precision, robustness, reliability and interpretability (of components and hence the whole) are important. Of course, performance is an important factor too, but it's just one of the aspects. We want the end-results of experiments to be accurate and explainable, right? I personally at least don't like when I have to sell a ""because of floating point errors"", because I've been bitten by them a few times now. Now, I'm also well aware that the project only has a given amount of resources and I myself am currently more or less out of resources (I can spend only my free time), so my vote probably doesn't count strongly :) If I could be of more practical help in this, I would definitely be happy to, but I also don't have a non-x86 machine, so it's not feasible for me to do much right now. So, feel free to make a call on this as you all best see fit!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1538758017:586,integrat,integration,586,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1538758017,2,['integrat'],['integration']
Deployability,"I agree that there is a problem here. That might involve the `DeclCollector` or the `DeclUnloader` or some other parts of ROOT. However, IMHO https://github.com/root-project/root/issues/13815#issuecomment-1759250811 clearly shows that the underlying problem is much bigger and older than just the failing test with LLVM 16. So I'd be very much interested in a pragmatic solution to resolve this last blocker for the upgrade. P.S.: One idea I had was to split the test into two parts, ie one ""bad"" part that tests the behavior with an incomplete class and one ""good"" part that loads `inst2lib`. However I quickly got stuck because just removing `o->Print();` on the first loaded object leads to many errors of the form `Error parsing payload code for class Inner` that I can't make sense of...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768325139:416,upgrade,upgrade,416,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768325139,2,['upgrade'],['upgrade']
Deployability,"I agree that there is a problem, and it comes from the fact that you cannot easily depend on Vdt via targets when Vdt is builtin. CMake complains about headers in the interface which are in the build directory in that case, so a lot of workarounds are needed and no workaround works reliably across CMake versions. When I last touched this, we decided to use variables and rely on the fact that vdt headers were installed into the same place as ROOT headers when Vdt was builtin. However, when Vdt and ROOT are installed separately and into different locations, this doesn't work so well indeed. Fixing this is overdue, but we unfortunately have to keep it working for both builtin/external Vdt. I think that the solution proposed by @krasznaa is in the right direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1338982945:412,install,installed,412,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1338982945,2,['install'],['installed']
Deployability,I agree this should not hold off the llvm16 upgrade assuming we can move forward by disabling the test and work on a fix at the same time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768774040:44,upgrade,upgrade,44,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768774040,1,['upgrade'],['upgrade']
Deployability,"I agree with you Stephan, since tehy are faster, we should use them whenever possible. ; I will update following your suggestion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7922#issuecomment-823307522:96,update,update,96,https://root.cern,https://github.com/root-project/root/pull/7922#issuecomment-823307522,1,['update'],['update']
Deployability,"I already told Axel I was ""playing"" with clang-tidy. Here are some first results, basically low-hanging fruits only. I also included some of my own TMVA patches (more progress bars / unordered_map) and code modernization for TMVA. Biggest improvement is probably the missing TString move assignment operator, that makes sorting a vector<TString> much much faster if the strings are too long for short string optimization. Most of these patches can be applied in any order, they do not depend on each other. We can discuss the large modernize-loops commit. I didn't have enough time to go through the loop variable names. The autogenerated names are not always the best (especially if the name ""i"" is generated). Nevertheless I wanted to push all these changes before SB52 :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1585:153,patch,patches,153,https://root.cern,https://github.com/root-project/root/pull/1585,2,['patch'],['patches']
Deployability,"I also can't reproduce this in a standalone build, only happens when I install using the system package manager (in this case archlinux in a podman image). Maybe it has to do with $ROOTSYS being set vs not. Let me see if I can provoke it in a more standalone manner. On the other hand if I grep for the build directory, it does still appear in the final .so and .pcm files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-1010923380:71,install,install,71,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-1010923380,1,['install'],['install']
Deployability,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926#issuecomment-1777619648:225,release,release,225,https://root.cern,https://github.com/root-project/root/pull/13926#issuecomment-1777619648,3,"['hotfix', 'release', 'update']","['hotfix', 'release', 'updated']"
Deployability,I also get that output when using `/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.24.06-3455f/x86_64-centos7-gcc11-dbg/bin/root`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1231697197:63,release,releases,63,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1231697197,1,['release'],['releases']
Deployability,"I also this is not forward compatible. (Unless we patch all the old release to know about the new version, they will lose the line style information. . I may be more beneficial to solve the underlying JSON I/O problem (not supporting base/derived class aliasing)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181#issuecomment-842257024:50,patch,patch,50,https://root.cern,https://github.com/root-project/root/pull/8181#issuecomment-842257024,2,"['patch', 'release']","['patch', 'release']"
Deployability,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1489916860:75,patch,patch,75,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1489916860,1,['patch'],['patch']
Deployability,"I am all for removing unnecessary code. I did not infer from the description that this was about ""out of date"" file rather than missing files. My concern is that I do not know (and ""was developed to cover some failures in both cms and root. "" is not specific enough to help me here :) ) that we actually have any actual case in routine ROOT or CMSSW testing to cover this case. If you can point me to where it is tested (and/or the problem(s) description that were fix by this). In particular if the test is about a file references by the module becoming newer than the produced module ( unless we specifically added a test for it), I can not see how the automated testing would triggered the (previously?) failing case. TLDR: I do not know that the testing we had done so far prove that the patch is no longer needed (but I of course could be wrong or mis-informed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1151400413:792,patch,patch,792,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1151400413,1,['patch'],['patch']
Deployability,"I am closing the issue as completed since now artifacts are used also on macos. This is an ongoing effort, we'll strive continuously to make our builds faster and more efficient.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2131163949:120,continuous,continuously,120,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2131163949,1,['continuous'],['continuously']
Deployability,I am closing this issue. ROOT5 is not supported any more: we are happy to give a hand to migrate to ROOT 6 where necessary. Moreover it seems the original issue was due to a misconfiguration somewhere in the installations on the machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7293#issuecomment-2076552590:208,install,installations,208,https://root.cern,https://github.com/root-project/root/issues/7293#issuecomment-2076552590,1,['install'],['installations']
Deployability,I am closing. Please re-open in case this is still an issue (I retested on the 6.30.06 release and it works just fine),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684#issuecomment-2037511868:87,release,release,87,https://root.cern,https://github.com/root-project/root/issues/10684#issuecomment-2037511868,1,['release'],['release']
Deployability,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856205222:160,integrat,integration,160,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856205222,1,['integrat'],['integration']
Deployability,"I am leery of removing support for ODBC as it technically allows to have access to any/most database type without having to have a specific plugin for that database. In this one case, I would at least leave it in (deprecated mode) a while longer (at least one more release ; no every body is jumping on the latest release so it might take a while for some people to notice the deprecation .. and yes we could then bring it back but it might (or might not) then need adaptions to newer things (in particular cmake improvements) that would be done easier if it is left in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-453220692:265,release,release,265,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-453220692,2,['release'],['release']
Deployability,"I am looking for a hotfix for the upcoming llvm release. The patch would be in the [area](https://github.com/llvm-mirror/llvm/blob/master/lib/Support/DynamicLibrary.cpp#L76-L92):; * I plan to remove the NDEBUG assert; * Make the `std::vector<void*>` a `std::vector<llvm::PointerIntPair<void*, 1, bool>>`; * Add a default flag to `addPermanentLibrary` saying if it was opened with RTLD_GLOBAL; * I will change the search order to search for first the one that are not marked RTLD_GLOBAL. A real solution I've discussed with Lang privately is that we should figure out a way how to pass the dlopened handle to the cling interpreter (before any parsing happens) and have a call to dlsym before calling the DynamicLibrary [here](https://github.com/root-project/cling/blob/master/lib/Interpreter/IncrementalJIT.cpp#L320). This would only happen after the next release of LLVM. I appreciate your proposed solutions but I do not really have a lot of bandwidth nowadays to investigate why they do not work for us. You will probably see what's going wrong if you build this PR locally. One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I feel fairly strongly running cling (and ROOT) with a patch-free LLVM and clang. I would appreciate if we can coordinate next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313786623:19,hotfix,hotfix,19,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313786623,6,"['hotfix', 'patch', 'release']","['hotfix', 'patch', 'patch-free', 'patches', 'release']"
Deployability,I am making a new PR with an update of the doc and protection in the `THStack::Add`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15740#issuecomment-2150021214:29,update,update,29,https://root.cern,https://github.com/root-project/root/issues/15740#issuecomment-2150021214,1,['update'],['update']
Deployability,I am merging this given that https://sft.its.cern.ch/jira/browse/ROOT-9902 reminds us of the need to upgrade TTreeProcessorMT in order to take into account the TEntryList in the IMT case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3245#issuecomment-454462587:101,upgrade,upgrade,101,https://root.cern,https://github.com/root-project/root/pull/3245#issuecomment-454462587,1,['upgrade'],['upgrade']
Deployability,I am merging this now to catch the next run of the nightlies. The remaining build is on a Win machine and this patch touches the R-related packages which seem not enabled on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8851#issuecomment-899802524:111,patch,patch,111,https://root.cern,https://github.com/root-project/root/pull/8851#issuecomment-899802524,1,['patch'],['patch']
Deployability,I am more comfortable with this version of the patch. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084#issuecomment-594392312:47,patch,patch,47,https://root.cern,https://github.com/root-project/root/pull/5084#issuecomment-594392312,1,['patch'],['patch']
Deployability,"I am not fond of the proliferation of options for optional components. Why not rely only on `python` and `tmva` options? Is a build with `tmva=ON`, `python=ON`, and `pymva=OFF` desirable by users? Shouldn't we just ask them to install numpy instead? Maybe @Axel-Naumann can chime in as well to say what we should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2972#issuecomment-439335923:227,install,install,227,https://root.cern,https://github.com/root-project/root/pull/2972#issuecomment-439335923,1,['install'],['install']
Deployability,"I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5450#issuecomment-618889560:45,install,installing,45,https://root.cern,https://github.com/root-project/root/pull/5450#issuecomment-618889560,2,['install'],"['installation', 'installing']"
Deployability,"I am not sure if it is a real bug or a known issue but the following macro does not fill the histogram `hpx`:; ```; void ntuple_example() {; auto hpx = new TH1F(""hpx"", ""hpx"", 100, -1., 1.);; auto f = new TFile(""hsimple.root"");; auto tree = (TTree*)f->Get(""ntuple"");; tree->Draw(""px >> hpx"","""",""goff"");; hpx->Draw();; }; ```; To make it work it is enough to swap the histogram creation line and the TFile creation line.; So the workaround is simple but that might be confusing if people first create the histogram(s) and then attach the file(s) containing the tree(s): the histogram(s) will be empty. I see that on Mac. I see this issue until 6:20 at least (I was not able to install older versions)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11440:675,install,install,675,https://root.cern,https://github.com/root-project/root/issues/11440,1,['install'],['install']
Deployability,"I am not sure that patch is correct.; You try to put old-style Linux code before testing glibc and trying to use pthread_setname_np - which should be favorite version. Seems to be, for MacOS there is another variant of that non-standard function - see https://ghc.haskell.org/trac/ghc/ticket/9684. Seems to be, code should be:. #elif defined(_GNU_SOURCE) && defined(__GLIBC__) \; && ((__GLIBC__ > 2) || ((__GLIBC__ == 2) && (__GLIBC_MINOR__ >= 12))); 	 /* pthread_setname_np first appeared in glibc in version 2.12*/; #if defined(__MACH__); 	 (void)pthread_setname_np(threadName);; #else; (void)pthread_setname_np(pthread_self(), threadName);; #endif; #elif defined(__linux__); 	 /* on linux we can use the old prctl function */; 	(void)prctl(PR_SET_NAME, threadName, 0, 0, 0);; #endif",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418326201:19,patch,patch,19,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418326201,1,['patch'],['patch']
Deployability,I am now installing root on ubuntu to try your codes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-694309297:9,install,installing,9,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-694309297,1,['install'],['installing']
Deployability,"I am pretty sure I am running `clang-format` correctly, and I did try with `git-clang-format` with the same result. I suspect the problem is the fact I am using a newer version of `clang-format`. I will fix things by hand. Since I updated to the tip of the branch I also get an error when compiling the test:. ```; In file included from /Users/ktf/work/active/sw/SOURCES/ROOT/master/0/tree/treeplayer/test/dataframe/datasource_arrow.cxx:2:; /Users/ktf/work/active/sw/BUILD/3b4c53a9fa7efde0667fff1580b37f11a3842da8/ROOT/include/ROOT/TArrowDS.hxx:4:10: fatal error: 'arrow/table.h' file not found; #include <arrow/table.h>; ^~~~~~~~~~~~~~~; ```. however the TreePlayer compiles fine. Am I missing something trivial? This used to work on the previous commit I was using.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371786919:231,update,updated,231,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371786919,1,['update'],['updated']
Deployability,"I am still a bit confused. When I download 6.30 binary release, and run tutorials/eve7/boxset.C. it correctly opens a web browser and all looks fine, JSON communication works. But then (in 6.30):. ```; root-config --has-builtin_nlohmannjson; no; ```. How is it possible then that the tutorial is working correctly?. And why, in 6.28, was the behavior:. ```; root-config --has-builtin_nlohmannjson; yes; ```. Maybe @krasznaa has some ideas on the CMake part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1844939555:55,release,release,55,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1844939555,1,['release'],['release']
Deployability,"I am still confused [In the end this means that we must add more comment to the code]. > In particular, if for some reason, the content behind the cached FileID changes we will catch it and fail. So far I cannot see how that can happen. [nonwithstanding that the 'catch'/'test' line 103 is 'only' an assert, so some random behavior might follow the change of behavior]. This statement seems to indicate that the answer to my questions:. > Also upon unloading are the FIDs 'released' or kept as is; in other words can the FID be re-used?. is (my interpretation of your answer): ""No, they are not released, they still point to the original file/memory-buffer"". But earlier you said:. > Regular unloading will invalidate the SourceManager memory buffer and we will not hit the cache for the particular FID. which seemed to me to be the complete opposite of the statement above. Can you clarify? . And if the first version (FID stay valid for ever), my other question is still bugging me:. > And if they are still valid, for 'real' files that unloaded and modified by the user and then reloaded, what happens (to the FID of the first load and the FID of the second load)?. Thanks for your patience :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-414345477:473,release,released,473,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-414345477,2,['release'],['released']
Deployability,"I am trying to install root-v6.26.00 in ubuntu 22. The required packages are unable to be installed. I receive an error:. saras@saras:~$ sudo apt-get install libglew1.5-dev; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; E: Unable to locate package libglew1.5-dev; E: Couldn't find any package by glob 'libglew1.5-dev'; E: Couldn't find any package by regex 'libglew1.5-dev'. Another problem that I am getting is that, when I run ""cmake --build . -- -j8"" after configuring root, following error ocurrs in the middle of the process and the process stops. . CMake Error at /home/saras/product/root/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/gmake'; See also; /home/saras/product/root/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11530#issuecomment-1377010734:15,install,install,15,https://root.cern,https://github.com/root-project/root/pull/11530#issuecomment-1377010734,4,"['Release', 'install']","['Release', 'install', 'installed']"
Deployability,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:349,release,released,349,https://root.cern,https://github.com/root-project/root/issues/8474,1,['release'],['released']
Deployability,"I apologise to comment about this only now: this is solid work. ; Instead of directly removing, @guitargeek do you think we can make the splash modular and OFF by default? This would be a first step for release 6.36. We can comfortably proceed with the deprecation and removal at a later stage, if we want, and at the same time, the benefits you list above will be harvested nevertheless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15056#issuecomment-2322780522:203,release,release,203,https://root.cern,https://github.com/root-project/root/pull/15056#issuecomment-2322780522,1,['release'],['release']
Deployability,I apologise to revive only now this item. I was curious to understand why this is a need and if with the newer ROOT 6 releases an equally usable solution can be found.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6535#issuecomment-2016794829:118,release,releases,118,https://root.cern,https://github.com/root-project/root/issues/6535#issuecomment-2016794829,2,['release'],['releases']
Deployability,"I apologize, I realize now that the `rf204_extrangefit` tutorial should not be translated to C++, because it is an outdated tutorial. The C++ version already got removed as it should, but the Python version was still there. Hence, the translation was not needed, and I updated the PR to also remove the Python version of the tutorial instead. Once the unit tests pass, I will merge this PR then. I'm sorry for the inconvenience! Thanks a lot anyway for looking into our issues :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9218#issuecomment-1246572610:269,update,updated,269,https://root.cern,https://github.com/root-project/root/pull/9218#issuecomment-1246572610,1,['update'],['updated']
Deployability,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6917#issuecomment-739258667:117,patch,patches,117,https://root.cern,https://github.com/root-project/root/pull/6917#issuecomment-739258667,1,['patch'],['patches']
Deployability,"I applied the patch of proposed style changes and fixed the missing include in the test. Please let me know if you expect anything else from my side before merging this. I am happy to improve the tutorial, but I'd rather do this is a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371793609:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371793609,1,['patch'],['patch']
Deployability,"I asked Timur about that. He told me that Cocca can be installed without OpenGl and a few ifdefs should make it. Indeed I just tried and found that in TGCocoa.mm, TGLIncludes.h should be under a ""opengl ifdef""... in that same file glFlush(); should be also. Then in CMakeFiles/GCocoa.dir/link.txt , -lRGlew should not be generated. ; So that mainly defining a new GL flag (or using an existing one) and changing the cmake procedure to avoid generating -lRGlew. May be @oshadura can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7160#issuecomment-779681459:55,install,installed,55,https://root.cern,https://github.com/root-project/root/issues/7160#issuecomment-779681459,1,['install'],['installed']
Deployability,"I believe PyPy has its own cppyy builtin module and PyROOT works on top of its own fork of cppyy, for which we haven't tested (or so far aimed for) compatibility with PyPy. Regarding the error you see, please check if the ROOT installation you are using has been built for that Python version (2.7). It could also be some environment/installation issue. How did you install ROOT?. On the other hand, to speed up analysis, the recommended interface in ROOT (which you can also use from Python) is RDataFrame:. https://root.cern/doc/master/classROOT_1_1RDataFrame.html. Even when used from Python, pretty much everything happens in C++ (in particular, the event loop is C++). It also has implicit parallelisation on a multicore machine. If there is some Python code that you'd like to use in conjunction with RDataFrame, there is the `Numba.Declare` feature:. https://root.cern.ch/doc/master/pyroot004__NumbaDeclare_8py.html. which will try to JIT with Numba the Python function you decorate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-834139469:227,install,installation,227,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-834139469,3,['install'],"['install', 'installation']"
Deployability,"I believe the real issue here is about user experience. Suppose I'm a mac user, I only use safari and don't even have chrome installed. I have been using ROOT for 10+ years, I want to see my plot in a canvas. Now the default canvas is the web canvas, so it will go through the only browser it can find on my machine, safari. That breaks functionality w.r.t. how I was using the canvas before. So, that's something we want to fix, right?. In general, I would imagine that at the very least for the three most commonly used browsers i.e. Chrome, Safari, Firefox (Edge even?) we should be able to provide exactly the same functionality to users. Writing in the documentation that they need to install google chrome on their machine in order to have a properly working canvas is not an option in my opinion. Practically, that would imply that ROOT has a dependency on Chrome and I don't think that's what we want",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14051#issuecomment-1813149328:125,install,installed,125,https://root.cern,https://github.com/root-project/root/issues/14051#issuecomment-1813149328,4,['install'],"['install', 'installed']"
Deployability,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6315:218,integrat,integrated,218,https://root.cern,https://github.com/root-project/root/pull/6315,1,['integrat'],['integrated']
Deployability,"I believe this one can be merged after the builds.; The only pending change would be to move the logic for the array interface configuration to C++, if possible. A source to check is [this](https://stackoverflow.com/questions/10161609/class-property-using-python-c-api).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1871#issuecomment-382352200:127,configurat,configuration,127,https://root.cern,https://github.com/root-project/root/pull/1871#issuecomment-382352200,1,['configurat'],['configuration']
Deployability,I believe you prepared a clean docker environment for me. Does the docker environment contain this patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398578753:99,patch,patch,99,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398578753,1,['patch'],['patch']
Deployability,"I can also reproduce this with my build of v6-24-00-patches, outside the CERN network. Same with `http` instead of `https`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155#issuecomment-839538919:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/issues/8155#issuecomment-839538919,1,['patch'],['patches']
Deployability,"I can confirm that this fixes; ```; CPack: - Install project: ROOT; error: /Library/Developer/CommandLineTools/usr/bin/install_name_tool: for: /build/jenkins/ws/BUILDTYPE/Release/LABEL/mac1014/build/_CPack_Packages/Darwin/TGZ/root_v6.15.03.macosx64-10.14-clang100/root/bin/rmkdepend (for architecture x86_64) option ""-add_rpath @loader_path/../lib"" would duplicate path, file already has LC_RPATH for: @loader_path/../lib; ...; ```; from installs on MacOS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3105#issuecomment-444835924:45,Install,Install,45,https://root.cern,https://github.com/root-project/root/pull/3105#issuecomment-444835924,3,"['Install', 'Release', 'install']","['Install', 'Release', 'installs']"
Deployability,"I can merge this PR. Jenkins does not have yet Cuda configurations, but I have tested on Cuda. ; Thank you Maos for the fix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2208#issuecomment-398673045:52,configurat,configurations,52,https://root.cern,https://github.com/root-project/root/pull/2208#issuecomment-398673045,1,['configurat'],['configurations']
Deployability,I can now got a minimal ROOT installation with external LLVM16 working on [this branch](https://github.com/stephanlachnit/root/tree/p-external-llvm). So in total:; - [llvm16 branch](https://github.com/root-project/root/pull/13273); - [Removing `-W` option in rootcling](https://github.com/root-project/root/issues/12156#issuecomment-1659010221); - [Adding `libbsd` option](https://github.com/root-project/root/pull/12154); - [Use CLING_BINARY_DIR instead of LLVM_BINARY_DIR](https://github.com/root-project/root/pull/12153); - [Removing `--src-root` option from `llvm-config` call](https://github.com/root-project/root/pull/13366). Tested with `-Dminimal=ON -Dbuiltin_llvm=OFF -Dlibbsd=ON`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1659110088:29,install,installation,29,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1659110088,1,['install'],['installation']
Deployability,I can try to install root on ubuntu to see if that's the case,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14247#issuecomment-1860908285:13,install,install,13,https://root.cern,https://github.com/root-project/root/issues/14247#issuecomment-1860908285,1,['install'],['install']
Deployability,I can try to install the doxygen head ... that what we use already,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011074762:13,install,install,13,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011074762,1,['install'],['install']
Deployability,"I can't reproduce on my laptop (Fedora 32) with the following 4 config:; * Python 2.7.18 , Python 3.8.7; * ROOT master@028fcca compiled with `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL/${PWD##*/} $ROOT_HOME` or with `cmake -GNinja -Ddistcc=ON -Ddev=ON -Droot7=OFF -Droofit=OFF -Dtmva=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL/${PWD##*/} $ROOT_HOME`. Python2 and ROOT release; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: python2 --version; Python 2.7.18; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: python2 reproducer_7108.py ; -I$ROOTSYS/include -I""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/etc/"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/etc//cling"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/include/"" -I""/usr/include/python2.7""; -I$ROOTSYS/include -I""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/etc/"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/etc//cling"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/include/"" -I""/usr/include/python2.7""; ```; Python2 and ROOT debug; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: python2 --version; Python 2.7.18; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: python2 reproducer_7108.py ; -I$ROOTSYS/include -I""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc//cling"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/"" -I""/usr/include/python2.7""; -I$ROOTSYS/include -I""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc//cling"" -I""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/"" -I""/usr/include/python2.7""; ```; Python3 and ROOT release; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: python --vers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-769646207:376,Release,Release,376,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-769646207,2,"['Release', 'release']","['Release', 'release']"
Deployability,"I can't see where's the pb in Travis CI build failed, could someone point the wrong line(s) in my patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1187#issuecomment-336619603:98,patch,patch,98,https://root.cern,https://github.com/root-project/root/pull/1187#issuecomment-336619603,1,['patch'],['patch']
Deployability,"I can't, sorry. I did the following:. As root user:; ```; $ chown -R root:root cmake-build-dir; $ chmod -R o-rwx cmake-build-dir; ```; As my user:; ```; $ cd cmake-build-dir; cd: Permission denied: “cmake-build-dir”; $ ls cmake-build-dir; ls: cannot open directory 'cmake-build-dir': Permission denied; ```. And still:. ```; $ source ~/ROOT/master/install/bin/thisroot.fish; $ cat foo.cpp; #include <memory>; #include <ROOT/RDataFrame.hxx>; #include <vector>. void foo() {; ROOT::RDataFrame df(10);; std::vector<int> v;; }. $ root -l foo.cpp+; root [0]; Processing foo.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so; root [1]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-1010118296:348,install,install,348,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-1010118296,1,['install'],['install']
Deployability,"I cannot install the master easily, but I installed 6.24.06 instead and this TBrowser bug has gone. Yay!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9330#issuecomment-985565161:9,install,install,9,https://root.cern,https://github.com/root-project/root/issues/9330#issuecomment-985565161,2,['install'],"['install', 'installed']"
Deployability,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running; ```; time python3 ./tst100.py; ```; For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1360985210:69,upgrade,upgrade,69,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1360985210,4,"['release', 'update', 'upgrade']","['release-with-debug', 'update', 'upgrade']"
Deployability,"I cannot reproduce this anymore with current `master`, neither on Arch (which upgraded to GCC 13 in the meantime) nor on EL8 with self-built GCCs. I attempted to bisect which change fixed it using a Debug build with GCC 12.2.0 and that points to commit 77127ba6537e54c91141bb11373d9a460f6c813f which is hard to believe (but I verified twice)... cc @eguiraud",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291#issuecomment-1600773087:78,upgrade,upgraded,78,https://root.cern,https://github.com/root-project/root/issues/10291#issuecomment-1600773087,1,['upgrade'],['upgraded']
Deployability,"I cannot see the remaining errors in the Travis-CI, when I click on the link I see an empty page. Perhaps the logs were already deleted in the meantime?. I am sorry for another large patch, but I feel these cleanups are needed to make the code easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7882#issuecomment-830200398:183,patch,patch,183,https://root.cern,https://github.com/root-project/root/pull/7882#issuecomment-830200398,1,['patch'],['patch']
Deployability,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:; https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:; ```txt; (0, 'memory usage', 191016L, 695956L); (10000, 'memory usage', 206324L, 696336L); (20000, 'memory usage', 206488L, 696336L); (30000, 'memory usage', 206488L, 696336L); (40000, 'memory usage', 206488L, 696336L); (50000, 'memory usage', 206488L, 696336L); (60000, 'memory usage', 206488L, 696336L); (70000, 'memory usage', 206488L, 696336L); (80000, 'memory usage', 206488L, 696336L); (90000, 'memory usage', 206488L, 696336L); ```; ROOT 6.22.00:; ```txt; (0, 'memory usage', 225244L, 737080L); (10000, 'memory usage', 245352L, 741968L); (20000, 'memory usage', 249948L, 746252L); (30000, 'memory usage', 254428L, 751900L); (40000, 'memory usage', 259000L, 756108L); (50000, 'memory usage', 263708L, 760456L); (60000, 'memory usage', 268092L, 764408L); (70000, 'memory usage', 274440L, 772668L); (80000, 'memory usage', 277480L, 775772L); (90000, 'memory usage', 281936L, 779724L); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15610#issuecomment-2125412085:142,upgrade,upgrade,142,https://root.cern,https://github.com/root-project/root/issues/15610#issuecomment-2125412085,2,"['release', 'upgrade']","['release-notes', 'upgrade']"
Deployability,I checked manually the patch and it works fine for TH1 and TH2 (x and y axis). I did not test it on TH3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1533#issuecomment-363758360:23,patch,patch,23,https://root.cern,https://github.com/root-project/root/pull/1533#issuecomment-363758360,1,['patch'],['patch']
Deployability,"I checked once again - there are many images now integrated in openui5 libraries, but I do not have chance to select them out.; Therefore I will merge as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6708#issuecomment-717060405:49,integrat,integrated,49,https://root.cern,https://github.com/root-project/root/pull/6708#issuecomment-717060405,1,['integrat'],['integrated']
Deployability,"I checked some advanced user code examples from ATLAS and CMS, and they don't seem to be used. We already did the same for the pdf generator (sampling) classes a few releases ago, and nobody complained so far either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12146#issuecomment-1830081443:166,release,releases,166,https://root.cern,https://github.com/root-project/root/pull/12146#issuecomment-1830081443,1,['release'],['releases']
Deployability,"I checked that the following chain of configurations works now, and; failed before:; ```; cmake -Dminimial=ON -Dssl=OFF ..; cmake -Dbuiltin_xrootd=ON .; ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16604:38,configurat,configurations,38,https://root.cern,https://github.com/root-project/root/pull/16604,1,['configurat'],['configurations']
Deployability,I close this PR - @couet already apply same patch from master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1066#issuecomment-333096077:44,patch,patch,44,https://root.cern,https://github.com/root-project/root/pull/1066#issuecomment-333096077,1,['patch'],['patch']
Deployability,"I collect errors from the Fedora/EPEL build system (a.k.a. koji), which is not very interactive. You can upload a source RPM to build and collect the results. You need to be a member of the ""packager"" group in the Fedora project to use it though, it is not open to everyone. Fedora also has a set of development machines available where, again, members of the ""packager"" group can log in and run mock (i.e. chroot) builds. However, there is currently no s390x test machine available: https://fedoraproject.org/wiki/Test_Machine_Resources_For_Package_Maintainers. [Edit: my previous comment about the lack of disk space was actually referring to the ppc64le test machine, not s390x.]; So, to answer your question, I don't have access to any system I can share. If you have proposed changes or patches I can run tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426#issuecomment-1459863861:792,patch,patches,792,https://root.cern,https://github.com/root-project/root/issues/12426#issuecomment-1459863861,1,['patch'],['patches']
Deployability,"I concur that you should not block any release for this if we are the only ones affected. The case is quite convoluted, and we have workarounds as @pikacic already mentioned",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12758#issuecomment-1537902189:39,release,release,39,https://root.cern,https://github.com/root-project/root/issues/12758#issuecomment-1537902189,1,['release'],['release']
Deployability,"I confirm that this issue is fixed with ROOT release 6.32.02. However, I noticed that there is no mention of this in the release notes at https://root.cern/doc/v632/release-notes.html#release-6.32.02. Many thanks for this update!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574#issuecomment-2183961398:45,release,release,45,https://root.cern,https://github.com/root-project/root/issues/13574#issuecomment-2183961398,5,"['release', 'update']","['release', 'release-', 'release-notes', 'update']"
Deployability,"I copied the recipe in your `To Reproduce` section:; ```; ubuntu@root-cmake-devel:~/git/root/builddir$ cmake -DCMAKE_PREFIX_PATH=~/temp/install -Dminimal=ON -Dbuiltin_xrootd=OFF -Dxrootd=ON -Dfail-on-missing=ON -Dbuiltin_nlohmannjson=ON -Dbuiltin_lzma=ON -Dbuiltin_xxhash=ON -Dbuiltin_zstd=ON -Dbuiltin_lz4=ON -Dbuiltin_afterimage=ON -Dbuiltin_gl2ps=ON -DCMAKE_VERBOSE_MAKEFILE=ON ../; -- The C compiler identification is GNU 9.4.0; -- The CXX compiler identification is GNU 9.4.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.25.1""); -- Detected ROOT_VERSION 6.29.01; -- Checking internet connectivity; -- Checking internet connectivity - found; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 9, minor version 4; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.4.0; -- ROOT Processor: x86_64; -- ROOT Architectu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:136,install,install,136,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,1,['install'],['install']
Deployability,"I could verify that very difference in layout on linux and osx, I bet on Windows there will be a third configuration (data begin, allocator, vector size :) ). I wonder if maybe we can detect this (at build time?) and go through the fast path if possible without checking the platform name itself but just the vector layout...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1707#issuecomment-371305354:103,configurat,configuration,103,https://root.cern,https://github.com/root-project/root/pull/1707#issuecomment-371305354,1,['configurat'],['configuration']
Deployability,"I created a patch for this, will add to a pull request soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7964#issuecomment-824921991:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/issues/7964#issuecomment-824921991,1,['patch'],['patch']
Deployability,"I did a very quick test linking a test `example` target to an install of a `foo` project whose targets have the `cxx_auto_type` compile feature in their interface features (so C++11). When linking to these targets, I found:. 1) Just `target_link_libraries(example foo::foo)`, the `-std=c++11` flag is appended to the compilation flags of the `example` sources.; 2) Adding `target_compile_features(example PUBLIC cxx_std_14)` uses `-std=c++14` in the flags.; 3) Setting `CMAKE_CXX_STANDARD 14` instead of using `target_compile_features` has the same effect. The reverse also applies - linking to a C++14 imported target, but requiring C++11 in the project does result in C++14 flags applied to the compilation of the project (so behaviour is ""newest standard wins"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-351737830:62,install,install,62,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-351737830,1,['install'],['install']
Deployability,I did mention that I don't have numba installed and those should be ignored in the description...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436#issuecomment-993507064:38,install,installed,38,https://root.cern,https://github.com/root-project/root/issues/9436#issuecomment-993507064,1,['install'],['installed']
Deployability,"I did the same ""style"" of integration as was done for roottest repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1142:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/1142,1,['integrat'],['integration']
Deployability,"I did: (note to self); Thanks for the help!. ```; git clone git@github.com:root-project/root; cd root; git remote add ferdymercury git@github.com:/ferdymercury/root; git remote -v; ferdymercury	git@github.com:ferdymercury/root.git (fetch); ferdymercury	git@github.com:ferdymercury/root.git (push); origin	git@github.com:root-project/root (fetch); origin	git@github.com:root-project/root (push); git fetch origin v6-28-00-patches:v6-28-00-patches; git checkout -b TDirectoryFile-ls-v6.28 v6-28-00-patches; git config user.name ""ferdymercury""; git config user.email ""ferdymercury@users.noreply.github.com""; git cherry-pick 18c847267b8651b7b392116767c5671f14c1c46e cb08bb7445a0b8db0a64a505399844c85ed048a4; git push ferdymercury TDirectoryFile-ls-v6.28; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13182#issuecomment-1643764268:421,patch,patches,421,https://root.cern,https://github.com/root-project/root/issues/13182#issuecomment-1643764268,3,['patch'],['patches']
Deployability,"I didn't find those 3 libraries (had `libCore.so` and `libRIO.so`), installed them by `sudo dnf install root-gui-browserv7-6.28.02-1.fc37.x86_64`, and it's working now.; Command `TBrowser b` returns; ```; root [0] TBrowser b. ROOT comes with a web-based browser, which is now being started. ; Revert to TBrowser by setting ""Browser.Name: TRootBrowser"" in rootrc file or; by starting ""root --web=off""; Web-based TBrowser can be used in batch mode when starting with ""root -b --web=server:8877""; Find more info on https://root.cern/for_developers/root7/#rbrowser; Info in <THttpEngine::Create>: Starting HTTP server on port 9426; (TBrowser &) Name: Browser Title: ROOT Object Browser; root [1] kf.kio.core: Malformed JSON protocol file for protocol: ""trash"" , number of the ExtraNames fields should match the number of ExtraTypes fields; ```. I think it's resolved now. One last question though - is there any way to download the tutorials in bulk, and set `$ROOTSYS` and other possibly lacking things like that? I think installing ROOT by `sudo dnf install root` doesn't do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12721#issuecomment-1532933487:68,install,installed,68,https://root.cern,https://github.com/root-project/root/issues/12721#issuecomment-1532933487,4,['install'],"['install', 'installed', 'installing']"
Deployability,"I didn't have a web browser installed inside the mock chroot where the build and test are run, no.; With firefox installed inside the chroot it seems to work though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3435#issuecomment-466119418:28,install,installed,28,https://root.cern,https://github.com/root-project/root/pull/3435#issuecomment-466119418,2,['install'],['installed']
Deployability,"I discovered 2 memory hoarding issues (which were seen from code paths that were not scaling as expected with the number of dlopen/dlclose cycles). However, the underlying problem is still present but is due glic itself. As seen in https://sourceware.org/git/?p=glibc.git;a=tree;f=stdlib;h=b5a85b12ee3a72ea2a6df2be8bea9d0eba38eeb5;hb=refs/heads/release/2.28/master in the files `cxa_atexit.c` and `cxa_finalize.c. When a library is loaded, the atexit functions (including global object destructors) are added to a global linked list `__exit_funcs` (see [cxa_atexit](https://sourceware.org/git/?p=glibc.git;a=blame;f=stdlib/cxa_atexit.c;h=6d65f7e615bd8e9b0bcdb4655945d7ddfc514f2b;hb=refs/heads/release/2.28/master) ). In `cxa_finalize.c` that list is looped over (see line [34+](https://sourceware.org/git?p=glibc.git;a=blame;f=stdlib/cxa_finalize.c;hb=c41041bc2f84eb8f44ff36c3d14e55944185e665#l34)). However, the `__exit_funcs` is never cleaned up (and apparently element are not reused at least in our case). The number of iterations in that loop increased with the number of dlopen/dlclose cycles square. (Indeed the output of callgrind (with `--dump-inst=yes`) confirms that this (and even worse the inner loop) exactly as `(N*(N-1)/2) N=number of dlopen/dlclose`. So the best we can do is to adjust the test length to fit within the timeout (the length is to increase the chances of multi-thread clash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12863#issuecomment-1561881205:345,release,release,345,https://root.cern,https://github.com/root-project/root/pull/12863#issuecomment-1561881205,2,['release'],['release']
Deployability,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16169:961,patch,patches,961,https://root.cern,https://github.com/root-project/root/pull/16169,1,['patch'],['patches']
Deployability,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240#issuecomment-1082385261:285,update,update,285,https://root.cern,https://github.com/root-project/root/issues/10240#issuecomment-1082385261,1,['update'],['update']
Deployability,I do not have such configuration easily available. If you see something wrong and find a fix in TGX11TTF let me know. I'll be happy to apply the fix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8086#issuecomment-844072980:19,configurat,configuration,19,https://root.cern,https://github.com/root-project/root/issues/8086#issuecomment-844072980,1,['configurat'],['configuration']
Deployability,"I do not remember all details, but one reason why `root_build/include` may be still required - builtins libraries. Includes of that builtins installed in `root_build/include` directory and must be there when ROOT is running. . For instance - `root_build/include/vdt` directory which is used by `RVec.hxx`. ; Or `root_build/include/VecCore`, which are used by `Math/types.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-969006022:141,install,installed,141,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-969006022,1,['install'],['installed']
Deployability,I do not run make install on my root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693431554:18,install,install,18,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693431554,1,['install'],['install']
Deployability,I do not see a such thing set elsewhere in the grapf2d part except for the pad itself. I guess for the time being I will stay with this patch as it is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5312#issuecomment-610389392:136,patch,patch,136,https://root.cern,https://github.com/root-project/root/pull/5312#issuecomment-610389392,1,['patch'],['patch']
Deployability,"I do't know... Can you try with this syntax:; ```; cmake -DCMAKE_BUILD_TYPE=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD=17 -DCMAKE_INSTALL_PREFIX=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ../root_debug/root_src; ```; And if it still doesn't work, please provide the full log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1471470915:163,install,install,163,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1471470915,1,['install'],['install']
Deployability,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:; ```; 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]; 11:04:07 stdout: ; 11:04:07 stderr: ; 11:04:07 It seems that there is already a rebase-apply directory, and; 11:04:07 I wonder if you are in the middle of another rebase. If that is the; 11:04:07 case, please try; 11:04:07 	git rebase (--continue | --abort | --skip); 11:04:07 If that is not the case, please; 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply""; 11:04:07 and run me again. I am stopping in case you still have something; 11:04:07 valuable there.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9276#issuecomment-977678966:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/pull/9276#issuecomment-977678966,5,['patch'],"['patches', 'patches-nonull-backport']"
Deployability,I don't have anything right now that builds 6.28-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2015494678:49,patch,patches,49,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2015494678,1,['patch'],['patches']
Deployability,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you?. If you want to make things compile, a temporary patch could be to add a check for tuple after this line:; https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207; ```python; if isinstance(func_new, tuple):; continue; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15430#issuecomment-2098357410:63,release,release,63,https://root.cern,https://github.com/root-project/root/issues/15430#issuecomment-2098357410,5,"['patch', 'release']","['patch', 'release']"
Deployability,"I don't know if it's a problem with how I installed root, using homebrew, or if it's just that I'm not expert enough in this area, but I can't find the files specified to modify. Under `/usr/local/Cellar/root/6.28.06/` I find ; ```INSTALL_RECEIPT.json LICENSE README.md bin etc include lib share```, but no `src`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885#issuecomment-1770962631:42,install,installed,42,https://root.cern,https://github.com/root-project/root/pull/13885#issuecomment-1770962631,1,['install'],['installed']
Deployability,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7234:256,update,update,256,https://root.cern,https://github.com/root-project/root/pull/7234,5,"['UPDATE', 'patch', 'update']","['UPDATE', 'patch', 'update', 'updated']"
Deployability,I don't know what to do...I need to find a way to find in safe way to find python3 on windows for 6.20 release. (now we have two different implementations for 6.20 and master).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5513#issuecomment-621828336:103,release,release,103,https://root.cern,https://github.com/root-project/root/pull/5513#issuecomment-621828336,1,['release'],['release']
Deployability,"I don't need the axis statistics, I just think that incrementing `fTsumwx2` twice in this function isn't correct.; It might be that the code in the `if` rarely happens and that if they are calculated the value is meaningless, but since the code to update the weighted axis sums exists, I would assume it should be the same as in all the other `TH2::Fill` functions and increment `fTsum(w|w2|wx|wx2|wy|wy2|wxy)` once each.; Currently, TH2::Fill with two bin names doesn't do that, instead it increments `fTsumwx2` twice.; I'm sorry if I misunderstood the function, I just stumbled upon what seemed to be a typo when rebasing some other patches. If I'm wrong about this, please close the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11746#issuecomment-1322340176:248,update,update,248,https://root.cern,https://github.com/root-project/root/issues/11746#issuecomment-1322340176,2,"['patch', 'update']","['patches', 'update']"
Deployability,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785934293:310,update,update,310,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785934293,3,"['Release', 'update']","['Releases', 'update']"
Deployability,"I don't really understand your question. 😕. [tutorials/eve7/boxset.C](https://github.com/root-project/root/blob/master/tutorials/eve7/boxset.C) doesn't seem to need `nlohmann/json.hpp`, does it?. The nlohmann_json ""library"" is a pure header ""library"". It does not need to be distributed with the ROOT binaries for those binaries to be functional. All the symbols from `nlohmann/json.hpp` are compiled into the ROOT binaries themselves. 🤔. You ""only"" need `nlohmann/json.hpp` when using a ROOT header in your own build that itself publicly uses `nlohmann/json.hpp`. For that you do need that actual header. So I'm still pretty convinced that this is a relatively simple mistake. The machine on which 6.30 was built, probably had nlohmann_json installed on it recently. And people doing the ROOT binary builds didn't notice that their build now picked up nlohmann_json from the system. This does shine light on a deeper issue though. 😦 The ROOT CMake configuration is a bit too autonomous for my liking. 😦 It will too easily turn features on/off based on what it finds. Instead of asking the user explicitly to specify what they want to have on or off. If it was up to me, I'd remove most of the automation in how the build figures out what it should do, and rather introduce a bunch of [CMake presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html) to ease the life of the users a little. For the latter, we're using those pretty happily in this project for instance:; - https://github.com/acts-project/algebra-plugins/; - https://github.com/acts-project/algebra-plugins/blob/main/CMakePresets.json. Yes, ROOT has a lot more externals than we have in that particular project, but the spaghetti code used for figuring out what would come from where, and what would be turned on or off is also not a great solution. 😦",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1844965943:742,install,installed,742,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1844965943,4,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"I don't think there are other Release methods in ROOT. RResultPtr behaves similarly to a std::shared_ptr, and RResultPtr::Release should release its ownership of `fObjPtr`, something like:. ```c++; fActionPtr = nullptr;; fLoopManager = nullptr;; auto ptr = fObjPtr.get();; fObjPtr.reset();; return ptr;; ```. For the coding conventions: you can probably figure out the naming conventions from the surrounding code, and you should format the code with `clang-format` before committing (if you run `clang-format` from inside the root sources, it will automatically pick up our `.clang-format` style file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047#issuecomment-771523043:30,Release,Release,30,https://root.cern,https://github.com/root-project/root/issues/7047#issuecomment-771523043,3,"['Release', 'release']","['Release', 'release']"
Deployability,"I don't think we have an explicit test for this patch. We did some archeology. The commit message is rather poor and dates back to 234fd515ed3893629e1e170e5c497688c81281b9. We could only indirectly guess what was trying to do and the best description of the code that was failing and we tried to fix is these 2 failing tests: `clang/test/Modules/module-file-modified.c` and `clang/test/Modules/explicit-build-missing-files.cpp`. Given what fails in these tests and the age of this change I find it highly unlikely that cmssw won't be able to catch such a setup. At that point, I don't think we are much more informed than you and we are hoping that dropping this change is reasonable to move forward. The good thing is that this is an atomic commit which is easy to bisect if something somewhere starts failing...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1151512564:48,patch,patch,48,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1151512564,1,['patch'],['patch']
Deployability,"I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435#issuecomment-866784563:123,install,install,123,https://root.cern,https://github.com/root-project/root/issues/8435#issuecomment-866784563,1,['install'],['install']
Deployability,I don’t see how this patch might have caused the failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7392#issuecomment-791638558:21,patch,patch,21,https://root.cern,https://github.com/root-project/root/pull/7392#issuecomment-791638558,1,['patch'],['patch']
Deployability,"I dropped the TBB update as it was not meant to be merged into 6.18, and merged manually. Closing this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3951#issuecomment-501569933:18,update,update,18,https://root.cern,https://github.com/root-project/root/pull/3951#issuecomment-501569933,1,['update'],['update']
Deployability,"I faced another problem.; From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h""; ...; ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent!. https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-820603357:114,Integrat,Integrator,114,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-820603357,4,['Integrat'],['Integrator']
Deployability,I faced the exact same problem and installing g++ solved it. Thank you so much.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859#issuecomment-1053480374:35,install,installing,35,https://root.cern,https://github.com/root-project/root/issues/6859#issuecomment-1053480374,1,['install'],['installing']
Deployability,"I feel it would make more sense to explicitly request specific architectures for some platforms, ie say that we always test x86 on the oldest supported macOS platform. This of course requires appropriate runner configurations...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16448#issuecomment-2354646030:211,configurat,configurations,211,https://root.cern,https://github.com/root-project/root/pull/16448#issuecomment-2354646030,1,['configurat'],['configurations']
Deployability,"I finally figured out what the problem was in 6.26 specifically. In the numeric integration of the PDF, the new BatchMode was used, but it still had some bugs in ROOT 6.26. That's why we didn't see the problem in 6.24. And in ROOT master, we also didn't see it because the problem with the BatchMode got fixed. To fix the problem also in 6.26, I opened a PR where the BatchMode is disabled for the numeric integration of the PDF:; https://github.com/root-project/root/pull/11961",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11760#issuecomment-1366150423:80,integrat,integration,80,https://root.cern,https://github.com/root-project/root/issues/11760#issuecomment-1366150423,2,['integrat'],['integration']
Deployability,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:; ```diff; diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt; index 0b046717ba..b685291490 100644; --- a/interpreter/llvm-project/llvm/CMakeLists.txt; +++ b/interpreter/llvm-project/llvm/CMakeLists.txt; @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,; # for use by clang_complete, YouCompleteMe, etc.; -set(CMAKE_EXPORT_COMPILE_COMMANDS 1); +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS; ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF); diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt; index 543adbf6b1..12f5930901 100644; --- a/math/CMakeLists.txt; +++ b/math/CMakeLists.txt; @@ -4,6 +4,10 @@; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1); +; add_subdirectory(mathcore); if(mathmore); add_subdirectory(mathmore); ```; Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:; ```bash; run-clang-tidy -checks='clang-analyzer-*' . -j20; ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422#issuecomment-2326891590:924,Install,Install,924,https://root.cern,https://github.com/root-project/root/issues/7422#issuecomment-2326891590,1,['Install'],['Install']
Deployability,I finally understood how to fix format when re reading Travis logs.; I installed clang-format-3.9 and used this command:; ./interpreter/llvm/src/tools/clang/tools/clang-format/git-clang-format --commit 10c61dc6964fe8f0fc33321e9338a3247e78be83 --binary clang-format-3.9,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239#issuecomment-343643807:71,install,installed,71,https://root.cern,https://github.com/root-project/root/pull/1239#issuecomment-343643807,1,['install'],['installed']
Deployability,I find it hard to believe that there is llvm v2.13 installed somewhere...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1919592532:51,install,installed,51,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1919592532,1,['install'],['installed']
Deployability,"I forgot there are two visitors... will fix.; On Tue, 27 Mar 2018 at 15:19, phsft-bot <notifications@github.com> wrote:. > Build failed on slc6/gcc62.; > See console output; > <https://epsft-jenkins.cern.ch/job/root-pullrequests-build/20469/console>.; > Warnings:; >; > - /cvmfs/; > sft.cern.ch/lcg/releases/arrow/0.8.0-352ba/x86_64-slc6-gcc62-opt/include/arrow/visitor.h:90:18:; > warning: ‘virtual arrow::Status arrow::TypeVisitor::Visit(const; > arrow::DictionaryType&)’ was hidden [-Woverloaded-virtual]; > - ../root/tree/treeplayer/src/TArrowDS.cxx:95:18: warning: by; > ‘ROOT::Experimental::TDF::TDFTypeNameGetter::Visit’ [-Woverloaded-virtual]; > - /cvmfs/; > sft.cern.ch/lcg/releases/arrow/0.8.0-352ba/x86_64-slc6-gcc62-opt/include/arrow/visitor.h:89:18:; > warning: ‘virtual arrow::Status arrow::TypeVisitor::Visit(const; > arrow::UnionType&)’ was hidden [-Woverloaded-virtual]; > - ../root/tree/treeplayer/src/TArrowDS.cxx:95:18: warning: by; > ‘ROOT::Experimental::TDF::TDFTypeNameGetter::Visit’ [-Woverloaded-virtual]; > - /cvmfs/; > sft.cern.ch/lcg/releases/arrow/0.8.0-352ba/x86_64-slc6-gcc62-opt/include/arrow/visitor.h:88:18:; > warning: ‘virtual arrow::Status arrow::TypeVisitor::Visit(const; > arrow::StructType&)’ was hidden [-Woverloaded-virtual]; > - ../root/tree/treeplayer/src/TArrowDS.cxx:95:18: warning: by; > ‘ROOT::Experimental::TDF::TDFTypeNameGetter::Visit’ [-Woverloaded-virtual]; > - /cvmfs/; > sft.cern.ch/lcg/releases/arrow/0.8.0-352ba/x86_64-slc6-gcc62-opt/include/arrow/visitor.h:87:18:; > warning: ‘virtual arrow::Status arrow::TypeVisitor::Visit(const; > arrow::ListType&)’ was hidden [-Woverloaded-virtual]; > - ../root/tree/treeplayer/src/TArrowDS.cxx:95:18: warning: by; > ‘ROOT::Experimental::TDF::TDFTypeNameGetter::Visit’ [-Woverloaded-virtual]; > - /cvmfs/; > sft.cern.ch/lcg/releases/arrow/0.8.0-352ba/x86_64-slc6-gcc62-opt/include/arrow/visitor.h:86:18:; > warning: ‘virtual arrow::Status arrow::TypeVisitor::Visit(const; > arrow::Decimal128Type&)’ was hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-376523741:299,release,releases,299,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-376523741,2,['release'],['releases']
Deployability,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:; ```; sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; ```; This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1758375801:38,patch,patch,38,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1758375801,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"I found a solution. Not sure if the difference is that when releasing the mouse, in MacOS another 'button' is detected which already calls the Modified/Update sequence, in comparison to with Ubuntu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1027027547:152,Update,Update,152,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1027027547,1,['Update'],['Update']
Deployability,I found that I also had ROOT installed by Arch Linux package manager (that's why the file was in /usr/lib/root).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7293#issuecomment-786188392:29,install,installed,29,https://root.cern,https://github.com/root-project/root/issues/7293#issuecomment-786188392,1,['install'],['installed']
Deployability,"I found that the following code also has this issue, but the model cannot fully display it.; ```; from ROOT import TF2, TCanvas, TPad, TPaveText, gROOT, gStyle. %jsroot on; c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900); c1.SetFillColor(42); gStyle.SetFrameFillColor(42); title = TPaveText(0.2, 0.96, 0.8, 0.995); title.SetFillColor(33); title.AddText(""Examples of Surface options""); title.Draw(). pad1 = TPad(""pad1"", ""Gouraud shading"", 0.03, 0.50, 0.98, 0.95, 21); pad2 = TPad(""pad2"", ""Color mesh"", 0.03, 0.02, 0.98, 0.48, 21); pad1.Draw(); pad2.Draw(). # We generate a 2-D function; f2 = TF2(""f2"", ""x**2 + y**2 - x**3 -8*x*y**4"", -1, 1.2, -1.5, 1.5); f2.SetContour(48); f2.SetFillColor(45). # Draw this function in pad1 with Gouraud shading option; pad1.cd(); pad1.SetPhi(-80); pad1.SetLogz(); f2.Draw(""surf4""). # Draw this function in pad2 with color mesh option; pad2.cd(); pad2.SetTheta(25); pad2.SetPhi(-110); pad2.SetLogz(); f2.Draw(""surf1""); c1.Update(); c1.Draw(); ```; Below is the status of on.; <img width=""413"" alt=""image"" src=""https://github.com/root-project/root/assets/73058062/aa7c65f5-a1c4-4186-8890-30be80901a07"">; Below is the status of off.; <img width=""422"" alt=""image"" src=""https://github.com/root-project/root/assets/73058062/4aff91ad-bba5-4af9-a6de-544651785c99"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13672#issuecomment-1725877493:972,Update,Update,972,https://root.cern,https://github.com/root-project/root/issues/13672#issuecomment-1725877493,1,['Update'],['Update']
Deployability,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff; diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp; index 2f8249e132..67da4cc55e 100644; --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp; +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp; @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,; P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||; P.equals(""InlineAdvisorAnalysis"") ||; P.equals(""PartiallyInlineLibCallsPass"") ||; + P.equals(""RelLookupTableConverterPass"") ||; P.equals(""InlineCostAnnotationPrinterPass"") ||; P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||; P.equals(""InlineSizeEstimatorAnalysis"")); @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,; ; return true;; });; + } else {; + // Register a callback for disabling RelLookupTableConverterPass.; + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {; + return !P.equals(""RelLookupTableConverterPass""); + });; }; ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14598#issuecomment-1932341426:109,update,update,109,https://root.cern,https://github.com/root-project/root/issues/14598#issuecomment-1932341426,1,['update'],['update']
Deployability,I further simplified and improved the design of the new MnPrint in commit https://github.com/root-project/root/pull/6705/commits/c804c2e7f129c8fe7ae5b34a188a45bf6847fc17 and updated the previous note about the design.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-720092514:174,update,updated,174,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-720092514,2,['update'],['updated']
Deployability,"I get a completely different behaviour on Mac. After zoom I get:; <img width=""871"" alt=""Screenshot 2022-01-28 at 08 26 10"" src=""https://user-images.githubusercontent.com/4697738/151505091-6b89e206-8e66-42c7-9a67-8f9dfaad4402.png"">; The top axis is wrong but I guess that's normal because you draw the axis using TGaxis. You should Embed it in a TExec if you want a dynamic update. When I click on the canvas nothing changes. Also, I noticed that on the first plot the histogram is already zoomed (You can SetRangeUser in your macro). So when I unzoom immediately after the macro execution or after having zoomed I get the following picture which correspond to the total plot. UnZoom does not return to the previous zoom (SetRangeUser), it goes back to the full range of the axis. <img width=""917"" alt=""Screenshot 2022-01-28 at 08 26 30"" src=""https://user-images.githubusercontent.com/4697738/151505855-17ccfdfc-e4a1-47d3-9d4c-76225f2fb10f.png"">. The messing up you see on the unzoom picture are the two TGaxis defined on a zoomed view (SetRangeUser in the macro) ie: the coordinates you give in the zoomed view (the initial plot is already zoomed) are not correct in an unzoom one (see the TExec explanation I gave before) . So, on Mac, it behaves correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9740#issuecomment-1023958390:373,update,update,373,https://root.cern,https://github.com/root-project/root/issues/9740#issuecomment-1023958390,1,['update'],['update']
Deployability,"I get the crash also with a simple C macro (extracted from your code) executed at the ROOT prompt. Reading the doc it looks like this functionality is meant to be used interactively from the context menu. Which means you need the graphics to be ready on the canvas. Therefore, to make it work in a ROOT script, you will need a few ""Update()"" to make sure the graphics id ready. Here is the working script:. ```; {; auto *c = new TCanvas(""c4"", """", 720, 1024);; c->Divide(1, 2);. auto f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();; gPad->Update();. c->cd(2);; gPad->Update();; f->DrawIntegral();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708#issuecomment-1733934184:332,Update,Update,332,https://root.cern,https://github.com/root-project/root/issues/13708#issuecomment-1733934184,3,['Update'],['Update']
Deployability,"I got the same result than Olivier on Windows. The only thing I see it that a there might be a missing `gPad->Modified; gPad->Update()`. Anyway, I'll try on Linux and let you know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9740#issuecomment-1023969245:126,Update,Update,126,https://root.cern,https://github.com/root-project/root/issues/9740#issuecomment-1023969245,1,['Update'],['Update']
Deployability,"I got these errors while building from master on Fedora 32 with the following command `cmake -GNinja -Ddev=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release` . ```; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx: In member function ‘virtual void ROOT::Experimental::RWebBrowserImp::BrowseObj(TObject*)’:; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:89:31: error: invalid use of incomplete type ‘class TSeqCollection’; 89 | if (gROOT->GetListOfFiles()->FindObject(obj)); | ^~; In file included from /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:15:; /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:59:7: note: forward declaration of ‘class TSeqCollection’; 59 | class TSeqCollection;; | ^~~~~~~~~~~~~~; ninja: build stopped: subcommand failed.; ```. Not sure if it's the right fix, but I thought it was worth mentioning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8255:153,Release,Release,153,https://root.cern,https://github.com/root-project/root/pull/8255,1,['Release'],['Release']
Deployability,"I guess the question is whether ROOT should interfere with what you installed in your system. Let's say you have something installed in `/usr/include/nlohmann`. Now you install ROOT, and for some reason it came with a builtin nlohmann_json (e.g. because of a different version). Now, everything in your system that was relying on the original nlohman_json version is broken.; I thought that as far as reasonably possible, ROOT should not interfere with what you install in your system (i.e. it should leave all headers and libraries untouched), unless they are ROOT's own headers/libraries?. You are correct that projects building against that installed ROOT would need to know about the include location, but I would think that this is ROOT's job (by exporting CMake targets such as ROOT::nlohmann). Maybe that's what users expect of ROOT, but I was at least surprised to have stuff installed that I didn't ask for. Let me rephrase this, maybe:; You install X from source. Would you expect that this also installs Y, and possibly overwrites / corrupts any existing Ys?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8655#issuecomment-1495708792:68,install,installed,68,https://root.cern,https://github.com/root-project/root/issues/8655#issuecomment-1495708792,8,['install'],"['install', 'installed', 'installs']"
Deployability,I guess this needs a backport to v6-26-00-patches?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-1008626133:42,patch,patches,42,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-1008626133,1,['patch'],['patches']
Deployability,"I had a look. The CI seems to set `asserts` from the outside, and the final flags for Release, which starts out at `-O3 -DNDEBUG`, seem to be `""""`. Will check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7932#issuecomment-823971959:86,Release,Release,86,https://root.cern,https://github.com/root-project/root/pull/7932#issuecomment-823971959,1,['Release'],['Release']
Deployability,I had apparently overlooked that in 5455bbc3b5210bb73fffd0c6a3ab8833bf1dbfec. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13484:173,update,updated,173,https://root.cern,https://github.com/root-project/root/pull/13484,1,['update'],['updated']
Deployability,"I had this problem before when trying multiprocessing in the Fitting. I checked with Axel and, If I recall correctly, it was due to adding MultiProc as a dependency in MathCore. I still kept the patch from then and I updated my roottest PR accordingly: root-project/roottest#106",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-344309527:195,patch,patch,195,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-344309527,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"I had thought I made a clean build, but maybe I made a mistake. Unfortunately, I lost the docker in which I had started from a clean CC7 image. ; @ktf will import your patch in our build system to make a full test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5717#issuecomment-635351902:168,patch,patch,168,https://root.cern,https://github.com/root-project/root/pull/5717#issuecomment-635351902,1,['patch'],['patch']
Deployability,I had to rebase because of a change in the release notes from https://github.com/root-project/root/pull/7271. This will be merged once the tests have succeeded in a few hours.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7257#issuecomment-795894015:43,release,release,43,https://root.cern,https://github.com/root-project/root/pull/7257#issuecomment-795894015,1,['release'],['release']
Deployability,"I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below; ```; $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root; ```; I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:182,configurat,configuration,182,https://root.cern,https://github.com/root-project/root/issues/9436,2,['configurat'],['configuration']
Deployability,"I have a question, too... Doesn't `CMAKE_PREFIX_PATH` work without the need for this patch? Or setting `PKG_CONFIG_PATH` for that matter...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3381#issuecomment-461125401:85,patch,patch,85,https://root.cern,https://github.com/root-project/root/pull/3381#issuecomment-461125401,1,['patch'],['patch']
Deployability,"I have a reproducer, but it is far from small. In our collaboration we have implemented our QA plots with TRootEmbeddedCanvas which are used to display several tabs. An additional thread is refreshing them. Every 15 Minutes our QA plots are being backed up in a pdf. We noticed that after the plots were saved to the file the windows were not refreshed anymore although the update thread was running and working. Furthermore in the written pdf files the plots were still updated, but not on the screen. Doing some debugging I found out that after the printing to the pdf the affected Canvases returned true for TCanvas::IsBatch(), so I added TCanvas::SetBatch(kFALSE); directly after the Print function which fixed the problem that the Canvases were not updated anymore on the screen. I could try to write a small reproducer, but that will take quite some effort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3549#issuecomment-474336825:374,update,update,374,https://root.cern,https://github.com/root-project/root/pull/3549#issuecomment-474336825,3,['update'],"['update', 'updated']"
Deployability,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. ; See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2162937293:15,update,update,15,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2162937293,1,['update'],['update']
Deployability,I have another question: Several changes of this PR require an adjustment of the reference values of some tests. What is the correct way to get new reference values? Can I just run the test macros and take the results as new reference values or do they need to be calculated on a specific system with specific configurations?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-572451195:310,configurat,configurations,310,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-572451195,1,['configurat'],['configurations']
Deployability,I have cherry-picked 989d9158b6 into v6-18-00-patches as 62bde834ec.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4066#issuecomment-510396621:46,patch,patches,46,https://root.cern,https://github.com/root-project/root/pull/4066#issuecomment-510396621,1,['patch'],['patches']
Deployability,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-867622962:48,install,installation,48,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-867622962,1,['install'],['installation']
Deployability,"I have in the mean time found the root cause why my patch fails:; - It is due to copy relocations of <iostream> symbols from libstdc++; - Crashes happen whenever cling wants to output text via cout / cerr / etc.; - The problem is that there are 2 instances of cout / cerr: The first created by the executable itself through copy relocation, when the executable prints something via cout. The second created by libCling loaded with RTLD_DEEPBIND. (By design, RTLD_DEEPBIND links to libstdc++ first before checking the global namespace, so it does not see the copy-relocated symbol.). The problem can be avoided if executables are compiled with -fPIC as well.; I just tried locally to compile the failing ROOT ctests with -fPIC and this fixed the segmentation faults.; The question is whether this is a proper solution, since it would require to compile all executables with -fPIC. On the other hand, I don't know how to fix this in another way. Perhaps this could be enabled via a special CMake option for ROOT, which enables RTLD_DEEPBIND for libCling and -fPIC for all executables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564007525:52,patch,patch,52,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564007525,1,['patch'],['patch']
Deployability,"I have installed [xfitter](https://www.xfitter.org/xFitter/) package using ROOT. Installation was completed successfully ; but when I want to run some examples I encounter this error:. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f80c2812dba in __GI___wait4 (pid=139255, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f80c2812d7b in __GI___waitpid (pid=<optimised out>, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0) at waitpid.c:38; #2 0x00007f80c27820e7 in do_system (line=<optimised out>) at ../sysdeps/posix/system.c:172; #3 0x00007f817cab0c47 in TUnixSystem::StackTrace() () from /home/mamali/Packages/root_install/lib/libCore.so; #4 0x00007f817caadef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/mamali/Packages/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ====================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9179:7,install,installed,7,https://root.cern,https://github.com/root-project/root/issues/9179,2,"['Install', 'install']","['Installation', 'installed']"
Deployability,I have installed doxygen 1.9.8 (which fixes this issue) on the build machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12851#issuecomment-1560960671:7,install,installed,7,https://root.cern,https://github.com/root-project/root/issues/12851#issuecomment-1560960671,1,['install'],['installed']
Deployability,"I have installed these patches on macphsft18 which is running MacOS12 and Clang 14. So, old OS and Compiler. Good News: it is working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885#issuecomment-1771204524:7,install,installed,7,https://root.cern,https://github.com/root-project/root/pull/13885#issuecomment-1771204524,2,"['install', 'patch']","['installed', 'patches']"
Deployability,"I have managed to pinpoint the reasons for the difference in behavior:; 1. When attempting to build `v6-28-00-patches`, apparently I'd managed to lose the patch to LLVM/Clang's `include/c++/v1/module.modulemap`. When I restore this patch, I get a successful build.; 2. With our own build procedure (""v6_27_99f2""), it appears that the diagnostic patch I was using at your suggestion:; ```.diff; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp~	2023-01-10 11:09:06.666075151 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp	2023-01-10 11:34:45.644464781 -0600; @@ -105,6 +105,7 @@; #include <algorithm>; #include <cassert>; #include <cstdint>; +#include <cstdio>; #include <cstdlib>; #include <cstring>; #include <ctime>; @@ -2498,6 +2499,8 @@; // did not result in us loading a module file for that submodule. For; // instance, a cross-top-level-module 'conflict' declaration will hit this.; unsigned ID = getLocalOrImportedSubmoduleID(Mod);; + fprintf(stderr, ""Mod=%X\n"", Mod);; + fprintf(stderr, ""Submodule=%s\n"", Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;. +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.get",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1409129986:110,patch,patches,110,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1409129986,4,['patch'],"['patch', 'patches']"
Deployability,I have moved CMSSW to the latest GCC 7.1.1 and to the tip of 6.10 patches branch. These are the fixes I have applied on top of that branch for CMS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/591:66,patch,patches,66,https://root.cern,https://github.com/root-project/root/pull/591,1,['patch'],['patches']
Deployability,"I have not done anything with it in at least 10 years, so yeah, you no; longer have to upstream the changes. Thanks!; Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>; wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what; > is the point of offering the option of having a builtin afterimage if we; > know it does not work?; >; > Good question. Maybe @couet <https://github.com/couet> knows why we have; > this option?; >; > I guess that in the past, bugs found by the ROOT team were backported to; > the upstream repo, see e.g.:; >; > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c; > (see copyright from Valeriy Onouchin from CERN); > https://root.cern.ch/root/v520/Version520.news.html; >; > But upstream is now completely frozen, at least 4 years; > https://github.com/afterstep/afterstep, right @sashavasko; > <https://github.com/sashavasko> ?.; > So... (unless someone wants to upstream the changes again to that Github; > repo), maybe we could mark the builtin_afterimage option as deprecated now; > and remove it in a later release.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14396#issuecomment-1904701854:1146,release,release,1146,https://root.cern,https://github.com/root-project/root/pull/14396#issuecomment-1904701854,1,['release'],['release']
Deployability,I have not seen complaints and we are far ahead in releases. Let’s not bother.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11574#issuecomment-1916892180:51,release,releases,51,https://root.cern,https://github.com/root-project/root/pull/11574#issuecomment-1916892180,1,['release'],['releases']
Deployability,"I have now installed the final review comments about the `fMember` style by @vepadulano. Furthermore, the `alma9` failures should be gone now, because we have deactivated `tmva-cpu` for this platform. Like this, the collision of the openblas version on the system (picked up by TMVA-CPU) and by NumPy should not happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2071017326:11,install,installed,11,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2071017326,1,['install'],['installed']
Deployability,"I have opened a PR to fix the problem in RooRealIntegral. It's a first step, but it will probably take more time before this gets merge, as the RooRealIntegral is not covered that well by unit tests yet, and I want to first write more tests for the part of the code that I changed. I already have added one test based on your example, but I still need to cover the case where the integrated function has shape clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578#issuecomment-1282263018:380,integrat,integrated,380,https://root.cern,https://github.com/root-project/root/issues/11578#issuecomment-1282263018,1,['integrat'],['integrated']
Deployability,"I have other problem building libAfterImage - in error output I see following message; ```; ar: libdeps specified more than once; ```; It caused by argument `l` in `ar clq` command. ; Argument `l` means library linking to static `libAfterImage.a` library, but there is no any library linked.; Seems to be `ar` on my latest OpenSUSE installation is too strict about this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789807508:332,install,installation,332,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789807508,1,['install'],['installation']
Deployability,"I have question. Does `roottest` runs `cmake --build . --target cling-test` when the cling interpreter code is changed? From time to time I see, that commits are merged regardless of whether the CI fails.; If I understand Cling's workflow correctly, changes are integrated and tested in ROOT and automatically streamed down to Cling after the merge in ROOT. So, if `roottest` does not run the integrated tests in cling, it is possible that the Cling CI is bypassed, or I'm wrong?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6957:262,integrat,integrated,262,https://root.cern,https://github.com/root-project/root/issues/6957,2,['integrat'],['integrated']
Deployability,I have rebased into master and updated the PR. @lmoneta @stwunsch Can you please review this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2315#issuecomment-405079003:31,update,updated,31,https://root.cern,https://github.com/root-project/root/pull/2315#issuecomment-405079003,1,['update'],['updated']
Deployability,"I have seen them with this command (I got it from [here](https://metricpanda.com/rival-fortress-update-22-finding-duplicate-static-symbols-in-shared-libraries/)):; ```bash; nm libRooFitZMQ.so | c++filt | cut -d ' ' -f 3-99 | sort | uniq; ```. I think this was a false alarm, because I forgot to look only for dynamic symbols (passing the `-D` flag to `nm`). I need to read a little bit about linkers to understand what the difference really is :). But indeed, I think there is no symbol leak because I can't use `libRooFitZMQ` instead of `libzmq` when compiling this code snippet:; ```C; #include <zmq.h>. int main(int argc, char** argv) {; return ((int*)(&zmq_poll))[argc];; }; ```; Compiled with `g++ -L.RooFit.so -o check check.C`. Meaning that as far as I can tell, there is no symbol leak. Still, we have switched off `roofit_multiprocess` by default now. Probably we will only consider enabling it in the release after 6.26.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-985508239:96,update,update-,96,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-985508239,2,"['release', 'update']","['release', 'update-']"
Deployability,"I have tested compilation under linux with external Davix and libAfterImage packages on my local computer. CMake is unable to download and compile build-in Davix for some reason for v6.16. . There is a ""404 - Not found"" error for the [DAVIX_URL](https://github.com/root-project/root/blob/v6-16-00-patches/builtins/davix/CMakeLists.txt#L8) if i try to open it in a browser.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9517#issuecomment-1009986305:297,patch,patches,297,https://root.cern,https://github.com/root-project/root/pull/9517#issuecomment-1009986305,1,['patch'],['patches']
Deployability,"I have the same/similar issue. ROOT 6.28.04 installed from source, macOS 13.4, Xcode 14.3.1, MacBook Pro with Intel i9-9880H. Running TMVA tests in the build directory, I get. ```; $ ctest --output-on-failure -R TMVA-DNN-MethodDL-SGD-Optimization-Cpu; Test project /Users/ole/Develop/BUILD/ROOT/6.28.04b; Start 357: TMVA-DNN-MethodDL-SGD-Optimization-Cpu; 1/1 Test #357: TMVA-DNN-MethodDL-SGD-Optimization-Cpu ...***Failed 0.61 sec; Testing Method DL with SGD Optimizer for CPU backend:; libc++abi: __cxa_guard_acquire detected recursive initialization; CMake Error at /Users/ole/Develop/BUILD/ROOT/root-6.28.04/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 0.74 sec. The following tests FAILED:; 	357 - TMVA-DNN-MethodDL-SGD-Optimization-Cpu (Failed); Errors while running CTest; ```. When running all the TMVA tests:; ```; $ ctest -R ""^TMVA"" -j6; ...; 81% tests passed, 7 tests failed out of 36. Total Test time (real) = 10.47 sec. The following tests FAILED:; 	357 - TMVA-DNN-MethodDL-SGD-Optimization-Cpu (Failed); 	358 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Failed); 	359 - TMVA-DNN-MethodDL-Adagrad-Optimization-Cpu (Failed); 	360 - TMVA-DNN-MethodDL-RMSProp-Optimization-Cpu (Failed); 	361 - TMVA-DNN-MethodDL-Adadelta-Optimization-Cpu (Failed); 	362 - TMVA-DNN-Regression-Cpu (Failed); 	376 - TMVA-DNN-GRU-Backward-Cpu (Failed); Errors while running CTest; ```; All these failing tests abort with ""libc++abi: __cxa_guard_acquire detected recursive initialization"". The TMVA.* tests pass without any issue on a different system: ROOT 6.28.04 installed from source (exact same configuration as the installation with errors mentioned above), macOS 11.7.7, Xcode 13.2.1, Intel i7-10700K. Seems to be related to the newer libc++ on the macOS 13.4/Xcode 14 system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13002#issuecomment-1594949419:44,install,installed,44,https://root.cern,https://github.com/root-project/root/issues/13002#issuecomment-1594949419,4,"['configurat', 'install']","['configuration', 'installation', 'installed']"
Deployability,"I have to update the PR, so: undo ping @ Philippe :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/807#issuecomment-319284833:10,update,update,10,https://root.cern,https://github.com/root-project/root/pull/807#issuecomment-319284833,2,['update'],['update']
Deployability,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```; #---Check for OpenGL installation-------------------------------------------------------; if(opengl); message(STATUS ""Looking for OpenGL""); if(APPLE); set(CMAKE_FIND_FRAMEWORK FIRST); find_package(OpenGL); set(CMAKE_FIND_FRAMEWORK LAST); else(); find_package(OpenGL); endif(); ```; It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2377075629:104,install,installation,104,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2377075629,1,['install'],['installation']
Deployability,"I have trouble compiling the ALICE O2 with ROOT and some other libraries, which come with LLVM.; For me, this is in particular:; - arrow with gandiva; - glfw with vulkan support; - several OpenCL runtimes, which use LLVM. I was getting the error `...please hide them or dlopen() them after the call to TROOT::InitInterpreter()` and a segmentation fault thereafter. Now, it is a bit complicated to require from all 3rd party libraries that they do not export LLVM symbols, so I was trying to solve the problem on the ROOT side. I fully agree that the problem is most likely due to just in time resolving of symbols. But I am wondering why my patch would break something in the ROOT ctests. Before my patch, the check would make sure that there are no other LLVM symbols present. But when there are no other symbols present, my patch shouldn't change anything. One could try to open libCling with RTLD_NOW instead of RTLD_LAZY, but I am not sure whether that would change anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561819372:641,patch,patch,641,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561819372,3,['patch'],['patch']
Deployability,I have updated doxygen to master on the build machine,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1017344895:7,update,updated,7,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1017344895,1,['update'],['updated']
Deployability,I have updated doxygen to the latest master version on the build machine. Let's see...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9649#issuecomment-1020202075:7,update,updated,7,https://root.cern,https://github.com/root-project/root/pull/9649#issuecomment-1020202075,1,['update'],['updated']
Deployability,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:; https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7234#issuecomment-1894623389:7,update,updated,7,https://root.cern,https://github.com/root-project/root/pull/7234#issuecomment-1894623389,2,"['install', 'update']","['install', 'updated']"
Deployability,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15417#issuecomment-2096735372:7,update,updated,7,https://root.cern,https://github.com/root-project/root/pull/15417#issuecomment-2096735372,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"I have updated the contents of the CERNBox link from the PR description with more memray graphs, it looks clear that the effect of this PR is to properly remove the artifacts generated during the distributed execution, there is no more TTreeCache leaking leftover after the analysis (see any file ending with `_patch` and compare it with the same file ending with `_master`). Now that the main source of memory usage is gone, I have noticed a much smaller contribute that still seems to make the memory increase in the flamegraphs. And it seems to have something to do with the increased number of files, at least on the surface. Let's take the following two files to compare:; * test_agc_9sample_1file_10task_patch.html; * test_agc_9sample_10file_10task_patch.html. They are running exactly the same script, with all 9 RDF samples. In the first case we have 1 file per sample, in the second case 10 files per sample. The memray flamegraph report a total of 253.5 MB used for the first case and 260.9 MB used for the first case (7.4 MB delta). There are two main parts of the graph: the one deriving from the `clone` of the Dask process, where the actual analysis code is run, and the one deriving from the `_start` function where most of the Python code around the analysis is (things like `import`ing packages or the Dask worker-scheduler communication). The difference between the two graphs in the `clone` part is of 0.6 MB, the difference between the two `_start` parts is 6.7 MB, so I focus on that from now on. This 6.7 MB difference is in turn split between a 0.1 MB difference deriving from `_PyObject_VectorcallTState` and 6.6 MB difference deriving from. Finally, the vast majority of these 6.6 MB comes from:; * The metrics gathered by profiling (i.e. memray itself); * Dask communication protocol. [Screencast from 2024-07-26 10-47-18.webm](https://github.com/user-attachments/assets/3a21ea3e-c130-42af-b50b-bb324b06eaaa). TL;DR: After this patch the leftover memory increase may be attri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2252273470:7,update,updated,7,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2252273470,2,['update'],['updated']
Deployability,I have updated the list of 'owners' and would like to see (experimentally) what is the effect of it for assigning PR. Clearly we need to fine tune the list with more fine grain assignments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/840#issuecomment-324291657:7,update,updated,7,https://root.cern,https://github.com/root-project/root/pull/840#issuecomment-324291657,1,['update'],['updated']
Deployability,I have updated the root-spi repo for the old (Jenkins) CI to learn about this new module and know that it should be built everywhere.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571#issuecomment-1705212121:7,update,updated,7,https://root.cern,https://github.com/root-project/root/pull/13571#issuecomment-1705212121,2,['update'],['updated']
Deployability,"I have verified that PR #9252 applies cleanly to v6-26-00-patches and v6-24-00-patches, and solves this issue in both cases. I'd be grateful if it could be applied to both of those branches, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583#issuecomment-1024773746:58,patch,patches,58,https://root.cern,https://github.com/root-project/root/issues/9583#issuecomment-1024773746,2,['patch'],['patches']
Deployability,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424#issuecomment-862180994:33,install,installation,33,https://root.cern,https://github.com/root-project/root/issues/8424#issuecomment-862180994,1,['install'],['installation']
Deployability,"I haven't restored the coefficient caching at this time, however. The new interpolation is put in interpCode=5. Added option to use PiecewiseInterpolation with interpCode=5 which correspondings to FIV InterpCode=4 (confusing, I know!). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13427:332,update,updated,332,https://root.cern,https://github.com/root-project/root/pull/13427,1,['update'],['updated']
Deployability,"I haven't seen this recently, so I expect the under-the-hood LLVM update fixed it. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524#issuecomment-1861373993:66,update,update,66,https://root.cern,https://github.com/root-project/root/issues/9524#issuecomment-1861373993,1,['update'],['update']
Deployability,I hope that’s in our llvm13 upgrade branch too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11551#issuecomment-1278207190:28,upgrade,upgrade,28,https://root.cern,https://github.com/root-project/root/pull/11551#issuecomment-1278207190,1,['upgrade'],['upgrade']
Deployability,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15973:73,upgrade,upgrade,73,https://root.cern,https://github.com/root-project/root/pull/15973,1,['upgrade'],['upgrade']
Deployability,I install doxygen from sources . I am using the master version 1.9.2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-908102023:2,install,install,2,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-908102023,1,['install'],['install']
Deployability,"I installed in pip the nbconvert, but I still get: Exception: Jupyter command `jupyter-nbconvert` not found. [EDIT]: ok, doing `apt install jupyter-nbconvert` should solve it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910356551:2,install,installed,2,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910356551,2,['install'],"['install', 'installed']"
Deployability,I installed root via this video [https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30](https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30) . To build a starlight ; ![Screenshot 2022-10-23 133107](https://user-images.githubusercontent.com/116489914/197387186-122e8d49-1751-4152-bc5c-c9ce70a8f60a.png); I tried a lot to fix this error ; ![Screenshot 2022-10-22 220723](https://user-images.githubusercontent.com/116489914/197386889-d40c094c-b457-4e2c-a549-caf0d6d39a61.png) . Please help me,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11626:2,install,installed,2,https://root.cern,https://github.com/root-project/root/issues/11626,1,['install'],['installed']
Deployability,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g.; https://travis-ci.org/github/root-project/root/jobs/747788436#L1313; where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6917#issuecomment-739248776:653,update,updated,653,https://root.cern,https://github.com/root-project/root/pull/6917#issuecomment-739248776,1,['update'],['updated']
Deployability,I just added the commit that was missing to the v6.22 patch branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5846#issuecomment-642245416:54,patch,patch,54,https://root.cern,https://github.com/root-project/root/pull/5846#issuecomment-642245416,1,['patch'],['patch']
Deployability,"I just built a fresh version of `master` and `v6-26-00-patches` on `macphsft24` with macOS 14.2; the test posted in https://github.com/root-project/root/issues/7541#issuecomment-1316247162 still fails. It's not clear to me how it could work in one setup in the past, but it's certainly not working out-of-box in the default build configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-1862729596:55,patch,patches,55,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-1862729596,4,"['configurat', 'patch']","['configuration', 'patches']"
Deployability,I just can't reproduce and debug these failues on a clean ubuntu 24.10 install... I don't think we can make progress on this in the next 10 day :(. Would it make sense maybe to add it to the CI with `pyroot=OFF`? At least we get some coverage then (and also test a new point in the configuration phase space).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16667#issuecomment-2422527345:71,install,install,71,https://root.cern,https://github.com/root-project/root/pull/16667#issuecomment-2422527345,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"I just checked and the page https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html already has up to date information, actually, so thanks @henryiii! However, can you please update it by adding something like the rules above? Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856643428:187,update,update,187,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856643428,1,['update'],['update']
Deployability,"I just checked on my Manjaro with cmake 3.20, and it seems to be working, even though messages are misleading:; ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.4""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 10, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.9.4 (Main) and 2.7.18; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097#issuecomment-832873148:958,Release,Release,958,https://root.cern,https://github.com/root-project/root/issues/8097#issuecomment-832873148,1,['Release'],['Release']
Deployability,I just edited the PR and changed the permissions of several folders that are in the source tree. Installing now keeps the right permissions even if they are not set in the source tree.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15138#issuecomment-2039651372:97,Install,Installing,97,https://root.cern,https://github.com/root-project/root/pull/15138#issuecomment-2039651372,1,['Install'],['Installing']
Deployability,"I just edited the patch, try again ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14910#issuecomment-1985630212:18,patch,patch,18,https://root.cern,https://github.com/root-project/root/issues/14910#issuecomment-1985630212,1,['patch'],['patch']
Deployability,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix?. There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958#issuecomment-2057396010:200,upgrade,upgrade,200,https://root.cern,https://github.com/root-project/root/issues/14958#issuecomment-2057396010,2,['upgrade'],['upgrade']
Deployability,I just installed ROOT master (6.31/01) on an Ubuntu machine:; ```; Linux root-ubuntu-2004-3 5.4.0-156-generic #173-Ubuntu SMP Tue Jul 11 07:25:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ```; I am logged on it from a Mac via `ssh`.; `rootls` gives:; ```; $ rootls ./tutorials/hsimple.root; hprof hpx hpxpy ntuple; ```; and the X server is not spawned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13922#issuecomment-1787513463:7,install,installed,7,https://root.cern,https://github.com/root-project/root/issues/13922#issuecomment-1787513463,1,['install'],['installed']
Deployability,"I just looked in the code while want to add support of TGeoTesselated to JSROOT.; Here is first attempt: https://jsroot.gsi.de/dev/examples.htm#tgeo_tess. Found and fixed issues:; * Fix potential memory access problem in new TGeoFacet; * In assign operator one should release memory before allocating new one; * `fIvert` member was not copied in assign operator; * Eliminate copy constructor and assign operator for TGeoTesselated (not used, default is ok). For several TGeo classes like TGeoPolygon, TGeoPcon, TGeoPgon one should declare assign operator and copy constructor as deleted or really implement them. Otherwise if anybody use them, this will produce memory leak / seg. violation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4923:268,release,release,268,https://root.cern,https://github.com/root-project/root/pull/4923,1,['release'],['release']
Deployability,"I just stumbled on this problem too, but I noticed that with 6.26/04 (LCG_102) it works:; ```; ❯ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/bin/root; ❯ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <filesystem>; root [1]; ```. Does anybody know if the fix made it to v6-24-patches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9670#issuecomment-1256192648:714,patch,patches,714,https://root.cern,https://github.com/root-project/root/issues/9670#issuecomment-1256192648,1,['patch'],['patches']
Deployability,I just tested your last changes locally on my machine. It is working fine. Thanks for the release notes also. It is also fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8235#issuecomment-848825779:90,release,release,90,https://root.cern,https://github.com/root-project/root/pull/8235#issuecomment-848825779,1,['release'],['release']
Deployability,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine.; Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective.; We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:; ```; cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root; ```. I then built with ; ```; mold -run cmake --build . -j32; ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473#issuecomment-2176114415:47,release,released,47,https://root.cern,https://github.com/root-project/root/issues/15473#issuecomment-2176114415,1,['release'],['released']
Deployability,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: ; ```fish; clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#; ```; (where `# = 0,1,2,3`). **clang version**: ; ```; Debian clang version 16.0.6 (27); Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:; ```; ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:; #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83); #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s).; ```. ROOT Debug:; ```; ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:; #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b); #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15818#issuecomment-2162394965:357,Install,InstalledDir,357,https://root.cern,https://github.com/root-project/root/issues/15818#issuecomment-2162394965,2,"['Install', 'release']","['InstalledDir', 'release']"
Deployability,"I just tried to install root5 and encountered the same problem. Since this issue is from 2021, is there a known solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7293#issuecomment-1501084545:16,install,install,16,https://root.cern,https://github.com/root-project/root/issues/7293#issuecomment-1501084545,1,['install'],['install']
Deployability,"I just tried with ROOT master and it works with the following commands:; ```; set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set CL= /Bcapture_repro C:\a_work_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set LINK= /onfailrepro:C:\a_work_temp\rwc_project_logs\ROOT\link_repro_build; cmake -G ""Visual Studio 17 2022"" -A Win32 -Dtesting=ON -Droottest=ON -Droofit=off ..\..\..\git\master; msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336#issuecomment-2077171412:524,Configurat,Configuration,524,https://root.cern,https://github.com/root-project/root/issues/15336#issuecomment-2077171412,2,"['Configurat', 'Release']","['Configuration', 'Release']"
Deployability,"I just tried with xrootd on master, and it fails for me. (I didn't do make clean, so at least it does not work when activated on a previous install).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-794472657:140,install,install,140,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-794472657,1,['install'],['install']
Deployability,"I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696#issuecomment-2237621375:140,patch,patches,140,https://root.cern,https://github.com/root-project/root/pull/15696#issuecomment-2237621375,1,['patch'],['patches']
Deployability,"I managed to reduce a bit the number of data races with the attached patch. ; [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip); Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created; at 0x6D6070E: clone (clone.S:71); by 0x60E8EC4: create_thread (createthread.c:100); by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797); by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so); by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52); by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576); by 0x4E5D108: RThread::Start() (RThread.cpp:62); by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216); by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476); by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1; Locks held: none; at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956); by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100); by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409); by 0x5AB6953: TSystem::Run() (TSystem.cxx:359); by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624); by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2; Locks held: none; at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010); by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987); by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209); by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042); by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950); by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51); by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258); by 0x7AB6A70: TThr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-857280376:69,patch,patch,69,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-857280376,3,['patch'],['patch']
Deployability,"I may be missing something but I seem to be unable to compile ROOT 6.28/04 with c++14. I use. ```; cmake ../root/root-6.28.04/ -DCMAKE_CXX_VERSION=14; ```. And get the following confirmation at the end of the cmake output. ```; System Linux-3.10.0-1160.88.1.el7.x86_64; Processor 36 core Intel(R) Xeon(R) CPU E5-2695 v4 @ 2.10GHz (x86_64); Build type Release; Compiler GNU 6.3.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```; As far as I can tell, gcc6.3.0 should have full c++14 capability. However, eventually I get the following errors:. ```; Consolidate compiler generated dependencies of target Dictgen; Consolidate compiler generated dependencies of target ClingUtils; Consolidate compiler generated dependencies of target MetaCling; [ 78%] Built target ClingUtils; [ 78%] Built target Dictgen; Consolidate compiler generated dependencies of target rootcling_stage1; [ 78%] Built target rootcling_stage1; [ 78%] Built target MetaCling; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Linking CXX shared library ../../../lib/libCling.so; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:351,Release,Release,351,https://root.cern,https://github.com/root-project/root/issues/13453,1,['Release'],['Release']
Deployability,"I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3764:6,update,update,6,https://root.cern,https://github.com/root-project/root/pull/3764,1,['update'],['update']
Deployability,"I met a similar situation here. I am using LCG_103. ; ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6; #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6; #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so; #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so; #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f62be7d56fe in ?? (); #7 0x00007ffce112d920 in ?? (); #8 0x00007f62be7dc429 in ?? (); #9 0x00007ffce112d950 in ?? (); #10 0x00007f62be7d26b0 in ?? (); #11 0x00007f62bacd3180 in ?? (); #12 0x00007ffce112d940 in ?? (); #13 0x00007ffce112d9a0 in ?? (); #14 0x00007f62be7d985d in ?? (); #15 0x000000000214fc80 in ?? (); #16 0x00007f62be7d26b0 in ?? (); #17 0x000000001d59e690 in ?? (); #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so; #19 0x00007ffce112d940 in ?? (); #20 0x00007f62bacd5778 in ?? (); #21 0x00007f62bacd5740 in ?? (); #22 0x0000000016991e30 in ?? (); #23 0x00007f62be7d298d in ?? (); #24 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2149151217:492,release,releases,492,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2149151217,3,['release'],['releases']
Deployability,"I missed one of the test cases, will update the PR shortly now that I know how to actually run the tests!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706#issuecomment-371233294:37,update,update,37,https://root.cern,https://github.com/root-project/root/pull/1706#issuecomment-371233294,1,['update'],['update']
Deployability,"I missed that you dislike our releases ;-) Can you explain why? In principle a release has only advantages, such as a version check for cpp macros. And obviously a release has a tag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10515#issuecomment-1116931530:30,release,releases,30,https://root.cern,https://github.com/root-project/root/issues/10515#issuecomment-1116931530,3,['release'],"['release', 'releases']"
Deployability,"I moved this into an extra PR because it somehow the CIFactory patch from #930 fails a certain test. If this also fails this test, then I at least know it's related to this ASTConsumer (as everything else should be behind a `if(modules)`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/988#issuecomment-329224604:63,patch,patch,63,https://root.cern,https://github.com/root-project/root/pull/988#issuecomment-329224604,1,['patch'],['patch']
Deployability,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for; ```; Start 959: tutorial-v7-concurrentfill.cxx; ```; Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1916191292:445,configurat,configuration,445,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1916191292,1,['configurat'],['configuration']
Deployability,"I noticed while debugging Minuit, that `MnMachinePrecision`'s constructor is called many times during minimization. Every time it is created, it goes through a loop to computes the machine precision. Since the number is the same every time, this is a waste of CPU cycles. This patch runs the loop only once and caches the result. New instances of MnMachinePrecision use the pre-computed value. The patch has no side effects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2215:277,patch,patch,277,https://root.cern,https://github.com/root-project/root/pull/2215,2,['patch'],['patch']
Deployability,"I now installed Xcode 12.4 (12D4e) and root6.24/06 from root_v6.24.06.macos-10.15-x86_64-clang120.pkg. My system is macOS Catalina 10.15.6. Here is what I get:. root [0] .x crash.cc ; 4; root [1] .x crash.cc . *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [<unknown binary>] (no debug info); [/Applications/root_v6.24.06/lib/libCling.6.24.06.so] clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) (no debug info); ... --; Michael Schmelling, MPI for Nuclear Physics; Phone:+49-6221-516-511 Fax:+49-6221-516-603. > On 10. Feb 2022, at 21:28, Vincenzo Eduardo Padulano ***@***.***> wrote:; > ; > ; > I tried on one of our CI nodes with MacOS 10.15 at the tip of the 6.24 branch and still the problem is not shown.; > ; > macitois19:6-24 sftnight$ root; > ------------------------------------------------------------------; > | Welcome to ROOT 6.24/07 https://root.cern |; > | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; > | Built for macosx64 on Feb 09 2022, 23:19:43 |; > | From ***@***.*** |; > | With Apple clang version 12.0.0 (clang-1200.0.32.28) |; > | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; > ------------------------------------------------------------------; > ; > root [0] .x crash.cc; > 4; > root [1] .x crash.cc; > 4; > root [2] .x crash.cc; > 4; > root [3] .x crash.cc; > 4; > ; > In your example above, From ***@***.*** looks quite weird to me. To better understand the differences, it would be helpful to know how you installed ROOT.; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android. ; > You are receiving this because",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1036226181:6,install,installed,6,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1036226181,1,['install'],['installed']
Deployability,"I now understand what is going wrong: @Axel-Naumann pushed me into the right direction by noticing that the errors concern vtables and typeinfo symbols, which are subject to reemission on our side. Then our `WeakTypeinfoVTablePass` will mark them as `weak` to make sure the JIT infrastructure deduplicates the symbols as needed. Additionally, `ReuseExistingWeakSymbols` will entirely remove the definitions if the symbol can be found in the process, for example for compiled classes. Now the problem is that the symbols were originally marked as ""local to the shared library"" and relocations can take advantage of this. This is where `PreventLocalOptPass` comes in, but it ran before the two passes mentioned before and therefore doesn't consider these symbols. So tldr, we can fix the problems by reordering the passes. Let's slot this change in after the upgrade to LLVM 18, which is also where upstream changed to the default to JITLink.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14246#issuecomment-2308751689:857,upgrade,upgrade,857,https://root.cern,https://github.com/root-project/root/pull/14246#issuecomment-2308751689,1,['upgrade'],['upgrade']
Deployability,I opened https://github.com/root-project/root/pull/4843. Update: tests are failing in master as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4750#issuecomment-577609953:57,Update,Update,57,https://root.cern,https://github.com/root-project/root/pull/4750#issuecomment-577609953,1,['Update'],['Update']
Deployability,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:; ```; 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C...; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression; 1079: t02 t;; 1079: ^; 1079: ;; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'; 1079: t02 t;; 1079: ^; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'; 1079: TObject o = **t.getVal();; 1079: ^; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'; 1079: TObject * const * op = t.getVal();; 1079: ^; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481#issuecomment-2106833445:52,release,release,52,https://root.cern,https://github.com/root-project/root/issues/15481#issuecomment-2106833445,6,"['patch', 'release']","['patches', 'release']"
Deployability,"I presume the llvm patches are backports, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12616#issuecomment-1497176864:19,patch,patches,19,https://root.cern,https://github.com/root-project/root/pull/12616#issuecomment-1497176864,1,['patch'],['patches']
Deployability,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:; * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called.; * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:; ```; === Writing with staged cluster committing ===; Thread #0 wrote events #0 - #24999 as entries #0 - #24999; Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999; Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999; Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===; Thread #0 wrote events #0 - #9999 as entries #0 - #9999; Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999; Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999; Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16343#issuecomment-2340232828:12,update,updated,12,https://root.cern,https://github.com/root-project/root/pull/16343#issuecomment-2340232828,1,['update'],['updated']
Deployability,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9263#issuecomment-967029745:31,Update,Update,31,https://root.cern,https://github.com/root-project/root/issues/9263#issuecomment-967029745,1,['Update'],['Update']
Deployability,I ran the VMC tests with the last update and they work ok.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513#issuecomment-472765307:34,update,update,34,https://root.cern,https://github.com/root-project/root/pull/3513#issuecomment-472765307,1,['update'],['update']
Deployability,I re-tested master. What I could see is that the reproducer still fails on linux but works fine on macos. I could also add that on lxplus with a large installation such as CMSSW or a LCG release the error needs several seconds to appear. Adding more eyes to the ticket...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10049#issuecomment-1925596439:151,install,installation,151,https://root.cern,https://github.com/root-project/root/issues/10049#issuecomment-1925596439,2,"['install', 'release']","['installation', 'release']"
Deployability,"I read up on this and it is indeed so that the thread-local variable is default initialized in each thread, therefore the gPrefixStack in a newly created thread is empty. I moved one debug print outside of the threads, it now happens after the threads are joined and I deactivated the second debug print when OpenMP is enabled. I hope this fixes the issue. I now compiled ROOT with minuit2_omp=ON and I don't get crashes, but some tests fail.; ```; 	164 - minuit2_testMinimizer (Failed); 	227 - test-stressroostats-minuit2 (Failed); 	414 - tutorial-fit-minuit2FitBench (Failed); 	416 - tutorial-fit-minuit2GausFit (Failed); ```; Is this normal?. Some notes on the other two patches:; * https://github.com/root-project/root/pull/6705/commits/83af202e0940423c2ba0fcdb0e091d861d5f517f just fixes a typo that I noticed.; * https://github.com/root-project/root/pull/6705/commits/de1d979c1c9d194852237466dbf2ba04322f15df I noticed that MnApplication only prints the debug output when the user does not pass an analytical gradient, so I fixed that, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-735429874:674,patch,patches,674,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-735429874,1,['patch'],['patches']
Deployability,"I realized I could check myself and the problem seems to be still there:; ```; ❯ which root; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev5lhcb/Fri/x86_64-centos7-gcc11-opt/bin/root; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/07 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2022, 02:36:00 |; | From heads/v6-24-00-patches@v6-24-06-110-g788980c |; | With g++ (GCC) 11.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <filesystem>; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev5lhcb/Fri/ROOT/v6-24-00-patches/x86_64-centos7-gcc11-opt/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'; module ""codecvt"" {; ^; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../include/c++/11.3.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <codecvt>; ^; root [1]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9670#issuecomment-1256195802:449,patch,patches,449,https://root.cern,https://github.com/root-project/root/issues/9670#issuecomment-1256195802,3,"['patch', 'release']","['patches', 'releases']"
Deployability,"I rebased to get the Windows fix locally. Here are some files for testing:; * [Minuit2-6.13.1-Source.tar.gz](https://github.com/root-project/root/files/1770290/Minuit2-6.13.1-Source.tar.gz); * [Minuit2-6.13.1-Source.zip](https://github.com/root-project/root/files/1770292/Minuit2-6.13.1-Source.zip); * [Minuit2-6.13.1-Darwin.tar.gz](https://github.com/root-project/root/files/1770293/Minuit2-6.13.1-Darwin.tar.gz); * [Minuit2-6.13.1-Linux.tar.gz](https://github.com/root-project/root/files/1770294/Minuit2-6.13.1-Linux.tar.gz); * Zipped file with original `.sh` in it (due to GitHub not accepting `.sh` files): ; [Minuit2-6.13.1-Linux.sh.zip](https://github.com/root-project/root/files/1770500/Minuit2-6.13.1-Linux.sh.zip); * Zipped file with original `.exe` in it (due to GitHub not accepting `.exe` files): [Minuit2-6.13.1-win32.zip](https://github.com/root-project/root/files/1770490/Minuit2-6.13.1-win32.zip). (Linux packages created with: `docker run -v (pwd):/root/root -it alpine`, making and changing to a `build-linux` directory, running `apk --no-cache add g++ make cmake` then `cmake ..` followed by `make package`) . Windows package made by installing VC17, NSIS, CMake, and running `""C:\Program Files\CMake\bin\cmake.exe"" ..`, `""C:\Program Files\CMake\bin\cmake.exe"" --build .`, `""C:\Program Files\CMake\bin\cmake.exe"" --build . --target package`. I can't upload a `.exe` or `.sh` file to GitHub comments, so those are placed in a zip file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369508483:1153,install,installing,1153,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369508483,1,['install'],['installing']
Deployability,"I recommend not sourcing `thisroot.sh` multiple times in the same shell. That will mess up your environment. This is not related to install/uninstall. If you install ROOT somewhere with `make install`, just add `<prefix>/bin` to your `$PATH` and `<prefix>/lib` to your `$PYTHONPATH` and you should never need to `source thisroot.sh`. Also, if you install your own multiple versions of ROOT with `make install`, I recommend installing into an empty directory, not `/usr/local` where Homebrew may have installed it. Then you can just `rm -rf` if needed to uninstall. If you install into `/usr/local` with a package manager, just use the package manager to uninstall. Installing with `make install` a custom ROOT that overwrites another installation with a package manager is going to get you into trouble and `make uninstall` will not help much. With the uninstall target, if you change configuration before uninstalling, you may have half-uninstalled ROOT left over (e.g by enabling/disabling `pyroot_experimental` between make install/make uninstall), or may remove important files from other packages depending on what builtins you had enabled when you built ROOT. CMake has this disabled by default for this reason, and I'm reluctant to provide this uninstall target in ROOT for the same reason.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462681306:132,install,install,132,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462681306,13,"['Install', 'configurat', 'install']","['Installing', 'configuration', 'install', 'installation', 'installed', 'installing']"
Deployability,I remove usage of `nlohmann/json_fwd.hpp` in 6.30 branch. ; Fix will be release with 6.30.06 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14634#issuecomment-1940714972:72,release,release,72,https://root.cern,https://github.com/root-project/root/issues/14634#issuecomment-1940714972,1,['release'],['release']
Deployability,"I replied via email, but GitHub does not seem to have picked it up, so posting here for good measure:. > We cannot control what's in the static init of user libraries. They can use interpreter services. This approach used to work, why locking is necessary? Aren't we 'just' reading?. Other threads could be trying to write the symbol tables at the same time, so we still need to lock them for reading. In your case your lookup enters a generator (HostLookupLazyFallbackGenerator), so it will end up writing as well as reading. :). The right thing to do here is to refactor HostLookupLazyFallbackGenerator to do its work in two steps:; Step 1: Identify libraries that could be loaded to provide the requested symbols, and record their paths but do not load them yet. Instead you should record a map of libraries to the symbols they provide. E.g. [ ( ""liba.so"", [ ""foo"", ""bar"" ] ), ( ""libb.so"", [ ""baz"" ] ) ]. For each library/symbol-set pair you can install a custom MaterializationUnit using JITDylib::define.; Step 2: In the custom MaterializationUnit's materialize function you'll walk the map from before, do the library load, and then resolve the symbols. Since step 2 happens outside the session lock the idea is that it should prevent the kind of deadlock that you're seeing. Unfortunately if you can reference JIT'd code from static initializers in precompiled code then there's still a chance for similar failures. Consider a precompiled ""libx.so"" containing a global ""x"" and a static constructor that calls a JIT'd function ""f"" which uses the ""x"" from ""libx.so"" (a circular reference). I believe this will result in starvation or deadlock (depending on the number of threads involved). The failure path looks like this:. 1. A lookup for ""x"" enters the generator, which discovers that ""libx.so"" provides ""x"" and creates a MaterializationUnit, MU, to load ""libx.so"" and resolve ""x"".; 2.1 Outside the lock, MU dlopens ""libx.so""... ; 2.2. dlopen runs the initializers for ""libx.so"" which triggers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1104564382:949,install,install,949,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1104564382,1,['install'],['install']
Deployability,I resolved the merge conflict and updated to use `kMaxEntries` (since this is the semantic accurate alias).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12357#issuecomment-1889762180:34,update,updated,34,https://root.cern,https://github.com/root-project/root/pull/12357#issuecomment-1889762180,1,['update'],['updated']
Deployability,I rollbacked the modifications for JSROOT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13226#issuecomment-1631688813:2,rollback,rollbacked,2,https://root.cern,https://github.com/root-project/root/pull/13226#issuecomment-1631688813,1,['rollback'],['rollbacked']
Deployability,"I run `fedora37` image on my machine - all webgui tests work properly. From the log output produce by headless chromimum, I see only one additional message on github actions:; ```; [0816/133157.889292:ERROR:headless_command_handler.cc(357)] Abnormal renderer termination.; ```; But why it happens, that is missing - I have no idea. ; Most probably some configuration of host system (from github) affects docker image and makes problem running chromium. I will try to add `--no-sandbox` argument to the headless chrome, maybe it be better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1682166103:353,configurat,configuration,353,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1682166103,1,['configurat'],['configuration']
Deployability,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-509585352:200,configurat,configuration,200,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-509585352,1,['configurat'],['configuration']
Deployability,"I say 'should' because that's work in progress. Once I get a clean slate I will start reverting some patches in clang. Yes, it should be possible to get rid from the files on disk.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/893#issuecomment-325159518:101,patch,patches,101,https://root.cern,https://github.com/root-project/root/pull/893#issuecomment-325159518,1,['patch'],['patches']
Deployability,I see I have a problems with binutils on sl6... @amadio you think it is possible to update them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-370223535:84,update,update,84,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-370223535,1,['update'],['update']
Deployability,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430#issuecomment-998224647:42,configurat,configuration,42,https://root.cern,https://github.com/root-project/root/issues/9430#issuecomment-998224647,2,['configurat'],['configuration']
Deployability,"I see now the README.md should be updated here: https://github.com/root-project/root/tree/master/roofit/roofitcore/src/TestStatistics#calculators. I shall make this an issue, because technically the comment about it not being thoroughly tested is still true. We will try the LikelihoodJob on benchmarks pretty soon now, so after we did that and confirmed everything is working, we can modify the docs. Agreed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966#issuecomment-1184786979:34,update,updated,34,https://root.cern,https://github.com/root-project/root/pull/10966#issuecomment-1184786979,1,['update'],['updated']
Deployability,"I see same problem. It is connected with libc changes:; https://github.com/bminor/glibc/commit/8ed005daf0ab03e142500324a34087ce179ae78e; Unfortunately, latest 4.x XROOTD 4.12.6 does not solve the problem.; I guess, it is blocker for the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7292#issuecomment-789872906:237,release,release,237,https://root.cern,https://github.com/root-project/root/issues/7292#issuecomment-789872906,1,['release'],['release']
Deployability,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now?. Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15733#issuecomment-2277706219:69,update,updated,69,https://root.cern,https://github.com/root-project/root/pull/15733#issuecomment-2277706219,1,['update'],['updated']
Deployability,I see the command `qhelpgenerator` needs to be installed. I do not have Qt (and do not want it) on my machine. Can `qhelpgenerator` be installed without the full Qt (which requires a licence if I remember well) ? here https://www.qt.io/download a free trial is available ... but we cannot rely on free trial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901770716:47,install,installed,47,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901770716,2,['install'],['installed']
Deployability,I see the two plot appear at the end of the loop. I guess you would need a `gPad->Update()` after the plot. No crash either.... Sorry for the very ate follow up ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1561385578:82,Update,Update,82,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1561385578,1,['Update'],['Update']
Deployability,I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14292#issuecomment-1866197270:44,update,updates,44,https://root.cern,https://github.com/root-project/root/pull/14292#issuecomment-1866197270,1,['update'],['updates']
Deployability,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10055#issuecomment-1060729822:10,update,updated,10,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822,4,['update'],['updated']
Deployability,"I see, Well in this case this PR should be merged and backported to the release branch, so you can build the package on Fedora",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13995#issuecomment-1790458514:72,release,release,72,https://root.cern,https://github.com/root-project/root/pull/13995#issuecomment-1790458514,1,['release'],['release']
Deployability,I see. For me it does not crash with .cpp but it crashes with .cpp+. I'll try to update to a newer version to see if it gets solved. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-867422703:81,update,update,81,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-867422703,1,['update'],['update']
Deployability,I see. I will update the builtin VecCore in ROOT to version 0.5.0 then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-422714884:14,update,update,14,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-422714884,1,['update'],['update']
Deployability,"I see. Then this can boil down to a request of either:; * Support http redirections in TWebFile; * Add an error mechanism in TWebFile when there is an unsupported http redirection, saying something like ""TWebFile does not support http redirection, please make sure you have installed ROOT with DAVIX enabled. I'm not sure of the implications of either option, I'm not expert in this area but I remember something about DAVIX not being supported on some platforms ? Sorry if I'm adding confusion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890#issuecomment-911414265:274,install,installed,274,https://root.cern,https://github.com/root-project/root/issues/8890#issuecomment-911414265,1,['install'],['installed']
Deployability,"I seem to have found the problem. The system had an older version of json.hpp (version 3.6.1) installed, and the root build was trying to use that instead of the json.hpp (version 3.9.1) that was bundled with the root source. Moving the installed file out of the way and replacing it with the version from the root source allowed me to build root. (So far, it doesn't appear to have broken anything else.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10814#issuecomment-1163479244:94,install,installed,94,https://root.cern,https://github.com/root-project/root/issues/10814#issuecomment-1163479244,2,['install'],['installed']
Deployability,I sent an email to the author of this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14543#issuecomment-1944097414:38,patch,patch,38,https://root.cern,https://github.com/root-project/root/issues/14543#issuecomment-1944097414,1,['patch'],['patch']
Deployability,"I since found the exact place where the option is defined: https://github.com/llvm/llvm-project/blob/release/16.x/llvm/lib/MC/MCTargetOptionsCommandFlags.cpp#L99-L102 (it's e.g. also there in `clang-repl`). I suppose in the default setup in ROOT, this is part of the LLVM library is not built and thus this option is never registered. We can remove all previously defined options with `llvm::cl::ResetCommandLineParser()`. However this has two issues if we just slap this line in there:; 1. Since all registered options are global statics, we would also remove all of the intended options.; 2. ~~`rootcling` uses the predefined help options~~. Since I don't think it's an option to rename the `-W` option, here's my proposal:. To solve first issue, we need to put these in a function such that the options are constructed at run time. This is a bit unfortunate as it will increase the startup time of `rootcling` a bit, but on the other hand I don't expect it to be much. ~~The second issue is easily fixed by adding those options by hand.~~. Btw: `clang` does also seem to override the `-W` option, but I couldn't find where in the source code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1660957391:101,release,release,101,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1660957391,1,['release'],['release']
Deployability,"I still don't understand whats going on, but now I upgraded from gcc10 to gcc11 my build works again. In the best case it was just that the two compiler versions were somehow mixed and messing up my build. I don't know why problems only appeared in the batch mode tests though. I'll close for now and hope the problems won't appear again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8590#issuecomment-872904608:51,upgrade,upgraded,51,https://root.cern,https://github.com/root-project/root/pull/8590#issuecomment-872904608,1,['upgrade'],['upgraded']
Deployability,"I still think this would be rather handy; unlike Qt, many ROOT users don't really care about linking, and just want things to work - so providing the functionality of `root-config --libs` in CMake is something I think would be useful. I'm happy to update this if there's interest. Otherwise, it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-509281307:248,update,update,248,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-509281307,1,['update'],['update']
Deployability,"I strongly favour a quick integration of this PR but, @pcanal before integrating I think there are other steps besides the suggested doc + tutorials + tests. For example a double check by @amadio about the CMake code to find arrow and arrow itself in our externals and/or inclusion of arrow in the built-ins (needs discussion). ; @ktf, the tutorials for this TDS should go in https://github.com/root-project/root/tree/master/tutorials/dataframe . You can punch in the C++ and Python version of the example you'd like to propose: ROOT will pick them up as tests for the CI and the doc machinery will put them on the web https://root.cern/doc/master/group__tutorial__tdataframe.html accessible also as rendered notebooks and notebooks runable in [SWAN](https://swan.cern.ch).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371738541:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371738541,2,['integrat'],"['integrating', 'integration']"
Deployability,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-786181786:185,update,update,185,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-786181786,1,['update'],['update']
Deployability,"I suppose we need this also in v6-26-00-patches, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583#issuecomment-1022980602:40,patch,patches,40,https://root.cern,https://github.com/root-project/root/issues/9583#issuecomment-1022980602,1,['patch'],['patches']
Deployability,I suppose you're pinging me here? It's of much greater success to ping me during work days :-) I'll try to review this week; the release needs to go first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6770#issuecomment-809146755:129,release,release,129,https://root.cern,https://github.com/root-project/root/pull/6770#issuecomment-809146755,1,['release'],['release']
Deployability,I suspect if 2 macros have the different content this means that the user has updated/fixed the code between the 2 run producing the files ... whether the change is semantically consequent (i.e the files are compatible or not is a decision the user has to take) ... So it would make sense to only merge the TMacro that are all the same ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4830#issuecomment-577334883:78,update,updated,78,https://root.cern,https://github.com/root-project/root/pull/4830#issuecomment-577334883,1,['update'],['updated']
Deployability,I suspect the tests may need to be updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14677#issuecomment-1959395456:35,update,updated,35,https://root.cern,https://github.com/root-project/root/pull/14677#issuecomment-1959395456,1,['update'],['updated']
Deployability,"I take the responsibility to merge this long awaited upgrade. We can polish without any problem the code for the Release, we have time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2804#issuecomment-430519378:53,upgrade,upgrade,53,https://root.cern,https://github.com/root-project/root/pull/2804#issuecomment-430519378,2,"['Release', 'upgrade']","['Release', 'upgrade']"
Deployability,"I tested this in a private repository, but unfortunately I can only check the final integration after merging...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8654:84,integrat,integration,84,https://root.cern,https://github.com/root-project/root/pull/8654,1,['integrat'],['integration']
Deployability,I tested this now in a working ROOT install and it seems to work just fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12154#issuecomment-1659126050:36,install,install,36,https://root.cern,https://github.com/root-project/root/pull/12154#issuecomment-1659126050,1,['install'],['install']
Deployability,"I think @cburgard just needs to export the CMAKE_PREFIX_PATH. I don't know what `setupATLAS` is doing, so I don't know if that relies on lcgenv, or does its own thing. We can probably add the CMAKE_PREFIX_PATH exports to lcgenv, but this isn't going to show up on CVMFS for the existing releases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963#issuecomment-1186980925:287,release,releases,287,https://root.cern,https://github.com/root-project/root/issues/10963#issuecomment-1186980925,1,['release'],['releases']
Deployability,I think I'm happy with the state now. Everything works for `ROOTSYS` and also an installation in a prefix. After getting this in we can discuss cleaning up the jupyroot part and installing into the jupyter default directories. But this gonna be more intrusive than this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6155#issuecomment-671917114:81,install,installation,81,https://root.cern,https://github.com/root-project/root/pull/6155#issuecomment-671917114,2,['install'],"['installation', 'installing']"
Deployability,I think apart from the installation I need to teach `TROOT` (or whoever else is reading this file) to read it from the build directory if we cannot read it from the install directory (e.g. because ROOT hasn't been installed yet). What do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13794#issuecomment-1746222080:23,install,installation,23,https://root.cern,https://github.com/root-project/root/pull/13794#issuecomment-1746222080,3,['install'],"['install', 'installation', 'installed']"
Deployability,I think bumping the version number is part of making the release. @Axel-Naumann might comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7456#issuecomment-796540958:57,release,release,57,https://root.cern,https://github.com/root-project/root/pull/7456#issuecomment-796540958,1,['release'],['release']
Deployability,I think for `valgrind` and `valgrind-root.supp` it's important to have the definition of `TStorage::UpdateIsOnHeap` in the library where the compiler *cannot* inline it into tons of places...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10500#issuecomment-1141003845:100,Update,UpdateIsOnHeap,100,https://root.cern,https://github.com/root-project/root/pull/10500#issuecomment-1141003845,1,['Update'],['UpdateIsOnHeap']
Deployability,I think https://github.com/root-project/root/compare/99093d95f7...78228fee3b were the changes which caused this issue. There were no issues with root commit 99093d95f7 but once we integrated 78228fee3b then cmssw unit test started to show slowness,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1292113871:180,integrat,integrated,180,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1292113871,1,['integrat'],['integrated']
Deployability,"I think in the I/O rule define in the `Linkdef.h` should be `version` and not `versions`, otherwise the rule is applied to all versions, including the current one. ; The next patch should fix this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11409#issuecomment-1255185350:175,patch,patch,175,https://root.cern,https://github.com/root-project/root/pull/11409#issuecomment-1255185350,1,['patch'],['patch']
Deployability,I think it's okay to not have tests for this; please consider not merging them.; The CMake approach seems fine; I don't know about install - could you try to install ROOT and see whether the behavior is as expected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633#issuecomment-481407086:131,install,install,131,https://root.cern,https://github.com/root-project/root/pull/3633#issuecomment-481407086,2,['install'],['install']
Deployability,I think it's useful/user-friendly to have basic installation instructions in-source.; I removed the outdated content and added pointers to root.cern/install/build_from_source and similar. This fixes ROOT-10964 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6152:48,install,installation,48,https://root.cern,https://github.com/root-project/root/pull/6152,2,['install'],"['install', 'installation']"
Deployability,"I think quite some improvements are there in 6.30.04 (released) and master. @ktf is it difficult for you to check if the issue is fixed, and, if yes, close the item? If not I can start from your repro and proceed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1926377943:54,release,released,54,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1926377943,1,['release'],['released']
Deployability,"I think the best solution would be to allow users to choose their Python version (don't know whether there was such a request made).; For now, one can use an alias like `alias python=python3.11` in their configuration scripts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12744#issuecomment-1531530423:204,configurat,configuration,204,https://root.cern,https://github.com/root-project/root/issues/12744#issuecomment-1531530423,1,['configurat'],['configuration']
Deployability,"I think the issue is that `.github/workflows/code_analysis.yml` fetches `${{github.base_ref}}`, which is the symbolic name and may not actually be identical `${{ github.event.pull_request.base.sha }}`. I've been able to reproduce this in https://github.com/root-project/root/pull/15172 by adding a new commit, but force-pushing (for example when amending a commit) always updates the base sha for me, so the problem doesn't trigger. Now I need to wait for a new commit in `master` to test my fix...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15107#issuecomment-2044277624:372,update,updates,372,https://root.cern,https://github.com/root-project/root/issues/15107#issuecomment-2044277624,1,['update'],['updates']
Deployability,"I think the problem is that the gcc 11 implementation of std::tuple uses; no_unique_address if it's available, but it spells it ; ```; __no_unique_address__; ```; ,; which cling doesn't recognize. I just ran into this building ATLAS code with gcc 11 / root 6.24. This patch seems to help things for me. ```; diff --git a/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td b/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td; index d39b16e62b..bf7f6a922c 100644; --- a/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td; +++ b/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td; @@ -1423,7 +1423,8 @@ def NeonVectorType : TypeAttr {; }; ; def NoUniqueAddress : InheritableAttr, TargetSpecificAttr<TargetItaniumCXXABI> {; - let Spellings = [CXX11<"""", ""no_unique_address"", 201803>];; + let Spellings = [CXX11<"""", ""no_unique_address"", 201803>,; + CXX11<"""", ""__no_unique_address__"", 201803>];; let Subjects = SubjectList<[NonBitField], ErrorDiag>;; let Documentation = [NoUniqueAddressDocs];; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8071#issuecomment-835612564:268,patch,patch,268,https://root.cern,https://github.com/root-project/root/issues/8071#issuecomment-835612564,1,['patch'],['patch']
Deployability,"I think the unwanted memory hoarding has been fixed so far (CMS, ATLAS and LHCb confirmed and we are in the process of verifying this for Alice, too https://github.com/root-project/root/issues/13000#issuecomment-1926377943). I still think that if SOFIE is disabled, nothing should be built relative to it - this is also a desirable feature given the kind of modularisation ahead of us required by `pip install ROOT`. @lmoneta @bellenot can SOFIE be fully disabled if the user sets `-Dsofie=OFF`, as one would expect?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13055#issuecomment-1926387354:402,install,install,402,https://root.cern,https://github.com/root-project/root/issues/13055#issuecomment-1926387354,1,['install'],['install']
Deployability,"I think this is a clear sign we want this patch. ![image](https://github.com/root-project/root/assets/15638895/dc7f1386-c921-4796-8a92-172026517ba8). One could say that returning a string that ends with ""\n"" would be slightly more annoying for post-processing, but I really don't think that counterargument has enough weight",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13165#issuecomment-1621661045:42,patch,patch,42,https://root.cern,https://github.com/root-project/root/pull/13165#issuecomment-1621661045,2,['patch'],['patch']
Deployability,"I think this is a general issue of external libraries, probably inherited from old ROOT's ""configure"" build. For example, libAfterImage is also affected, see https://github.com/root-project/root/issues/8125#issuecomment-841519742, it always builds in Release mode even if Debug Mode is selected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8815#issuecomment-895062671:251,Release,Release,251,https://root.cern,https://github.com/root-project/root/issues/8815#issuecomment-895062671,1,['Release'],['Release']
Deployability,I think this is good to go as Bruno committed the patch again,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2307#issuecomment-407061756:50,patch,patch,50,https://root.cern,https://github.com/root-project/root/pull/2307#issuecomment-407061756,1,['patch'],['patch']
Deployability,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14321#issuecomment-1889909447:13,patch,patch,13,https://root.cern,https://github.com/root-project/root/pull/14321#issuecomment-1889909447,2,"['install', 'patch']","['installed', 'patch']"
Deployability,"I think we can close this as it's out of date and we have a new patch for loading all the modules. Loading more modules have the negative effect on performance, so we're not going to this direction for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697#issuecomment-377215663:64,patch,patch,64,https://root.cern,https://github.com/root-project/root/pull/1697#issuecomment-377215663,1,['patch'],['patch']
Deployability,I think we can close this pull request. The two patches have been separately addressed in PR's by @henryiii,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-385900473:48,patch,patches,48,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-385900473,1,['patch'],['patches']
Deployability,"I think we can improve on the fix. This prevents the StackTrace from being printed also when the abort signal is unexpected but at least this patch seem (likely) the break the infinite recursion (abort being caught and then calling abort and then it is caught again, etc...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-587530717:142,patch,patch,142,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-587530717,1,['patch'],['patch']
Deployability,"I think we had to require Python 3 because there was some issue about installing `lit` with Python 2 on macOS. . Also, it has been a while since Python 2 reached end of life, so it is probably reasonable to require Python 3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7376#issuecomment-791273663:70,install,installing,70,https://root.cern,https://github.com/root-project/root/pull/7376#issuecomment-791273663,1,['install'],['installing']
Deployability,I think we should also backport the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16836#issuecomment-2459776624:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/16836#issuecomment-2459776624,1,['patch'],['patch']
Deployability,"I think you're being confused by the fact that conda-forge builds with `-fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/root_base-6.24.6 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix`. You can use `set substitute-path` in `gdb` to map the paths to local copy of the sources. ```bash; $ EXTRA_CLING_ARGS='-O1' gdb --args root.exe -l -b -q -x test.cpp++; GNU gdb (GDB) 11.1; Copyright (C) 2021 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-conda-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root.exe...; (gdb) set auto-load safe-path /; (gdb) break CXXABICtxSwapper::SwapCtx; Function ""CXXABICtxSwapper::SwapCtx"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (CXXABICtxSwapper::SwapCtx) pending.; (gdb) run; Starting program: /home/cburr/mambaforge/envs/root-debug/bin/root.exe -l -b -q -x test.cpp++; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after fork from child process 151706]; [Detaching after fork from child process 151708]; [Detaching after fork from child process 151713]; [Detaching after fork from child process 151715]; [Detaching after fork from child process 151803]; [Detaching after fork from child process 151807]. Breakpoint 1, (anonymous namespace)::CXXABICtxSwapper::SwapCtx (other=..., this=0x55555600d260) at /usr/local/src/conda/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1021571360:755,configurat,configuration,755,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1021571360,2,['configurat'],['configuration']
Deployability,I took some inspiration from the CMSSW `.clang-tidy` configuration file to run some more `clang-tidy` checks and automatically apply its suggestions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13320:53,configurat,configuration,53,https://root.cern,https://github.com/root-project/root/pull/13320,1,['configurat'],['configuration']
Deployability,"I took the cmake command from your log file and built. It failed and edited the modulemap file, re-ran the rootcling invocation by hand and that was it - worked. Btw, does the other (wrong) patch work for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398668795:190,patch,patch,190,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398668795,1,['patch'],['patch']
Deployability,I tried it on MacOS 14.4.1 on an M2 machine with ROOT master and it is working fine. I cannot reproduce this issue. Xcode 15.3 . ROOT installed from source (from github),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129#issuecomment-2040025189:134,install,installed,134,https://root.cern,https://github.com/root-project/root/issues/15129#issuecomment-2040025189,1,['install'],['installed']
Deployability,"I tried monkey patching CMakeCache.txt, forcing MacOSX14.4.sdk everywhere. It still fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14920#issuecomment-1987172763:15,patch,patching,15,https://root.cern,https://github.com/root-project/root/pull/14920#issuecomment-1987172763,1,['patch'],['patching']
Deployability,"I tried on one of our CI nodes with MacOS 10.15 at the tip of the 6.24 branch and still the problem is not shown.; ```; macitois19:6-24 sftnight$ root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/07 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Feb 09 2022, 23:19:43 |; | From remotes/origin/v6-24-00-patches@v6-24-06-41-gad88a28875 |; | With Apple clang version 12.0.0 (clang-1200.0.32.28) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .x crash.cc; 4; root [1] .x crash.cc; 4; root [2] .x crash.cc; 4; root [3] .x crash.cc; 4; ```. In your example above, `From ***@***.***` looks quite weird to me. To better understand the differences, it would be helpful to know how you installed ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1035471147:417,patch,patches,417,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1035471147,2,"['install', 'patch']","['installed', 'patches']"
Deployability,I tried the patch above and it seems to solve the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10382#issuecomment-1254612189:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/issues/10382#issuecomment-1254612189,1,['patch'],['patch']
Deployability,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving).; I am in favour of merging his changes.; I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13856#issuecomment-1766571085:96,update,update,96,https://root.cern,https://github.com/root-project/root/pull/13856#issuecomment-1766571085,1,['update'],['update']
Deployability,"I tried this clang-tidy configuration on the RDF code. Compared to the default configuration, which gives me almost zero errors, this conf produces 21k lines of errors. There are a lot of errors that come from expanded gtest macros:. ```; /home/blue/ROOT/master/tree/dataframe/test/dataframe_helpers.cxx:409:1: error: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory,-warnings-as-errors]; TEST(RunGraphs, EmptyListOfHandles); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2338:42: note: expanded from macro 'TEST'; #define TEST(test_suite_name, test_name) GTEST_TEST(test_suite_name, test_name); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2332:3: note: expanded from macro 'GTEST_TEST'; GTEST_TEST_(test_suite_name, test_name, ::testing::Test, \; ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-internal.h:1376:11: note: expanded from macro 'GTEST_TEST_'; new ::testing::internal::TestFactoryImpl<GTEST_TEST_CLASS_NAME_( \; ^; /home/blue/ROOT/master/tree/dataframe/test/dataframe_helpers.cxx:409:1: error: class 'RunGraphs_EmptyListOfHandles_Test' defines a copy constructor and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,-warnings-as-errors]; TEST(RunGraphs, EmptyListOfHandles); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2338:42: note: expanded from macro 'TEST'; #define TEST(test_suite_name, test_name) GTEST_TEST(test_suite_name, test_name); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2332:3: note: expanded from macro 'GTEST_TEST'; GTEST_TEST_(test_suite_name, test_name, ::testing::Test, \; ^; /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8773#issuecomment-889998560:24,configurat,configuration,24,https://root.cern,https://github.com/root-project/root/pull/8773#issuecomment-889998560,2,['configurat'],['configuration']
Deployability,"I tried; ```; root.exe -l -b -q -e ""ROOT::EnableThreadSafety();auto w = [&](){gInterpreter->ProcessLine(\""gInterpreterMutex->Lock();gInterpreterMutex->UnLock();\"");};std::thread t(w);t.join()""; ```; and that works both with and without this PR. (Without the `UnLock()` I deadlock coming back from userland with this PR.); I also tried to *interpret* root/multicore/mt303, 304 and 305: 303 and 305 work, only 304 gets into an (near?) infinite loop (100% CPU for a couple of minutes in an llvm debug build). It does so with with and without this PR. I.e. I don't have a way yet to verify this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/892#issuecomment-325152099:591,patch,patch,591,https://root.cern,https://github.com/root-project/root/pull/892#issuecomment-325152099,1,['patch'],['patch']
Deployability,"I triggered the pipeline: https://gitlab.cern.ch/sft/lcgcmake/-/merge_requests/1056#note_5180188. You would like to see the build of the ""unfixed"" branch with -DLLVM_BUILD_TYPE=Debug set?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9641#issuecomment-1020257864:16,pipeline,pipeline,16,https://root.cern,https://github.com/root-project/root/pull/9641#issuecomment-1020257864,1,['pipeline'],['pipeline']
Deployability,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly.; @Axel-Naumann @lmoneta ?. So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618454397:61,release,release,61,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618454397,2,['release'],['release']
Deployability,I update comments in the tutorials and remove unused parts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2655#issuecomment-423462697:2,update,update,2,https://root.cern,https://github.com/root-project/root/pull/2655#issuecomment-423462697,1,['update'],['update']
Deployability,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14660#issuecomment-2022609476:2,update,updated,2,https://root.cern,https://github.com/root-project/root/pull/14660#issuecomment-2022609476,2,['update'],"['update', 'updated']"
Deployability,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3612#issuecomment-479722816:2,update,updated,2,https://root.cern,https://github.com/root-project/root/pull/3612#issuecomment-479722816,2,['update'],['updated']
Deployability,"I updated the description of the Fibonacci sequence and fixed the datatype in line 38. Int N is an integer, yet the concatenation said %d, which is a double.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7011:2,update,updated,2,https://root.cern,https://github.com/root-project/root/pull/7011,1,['update'],['updated']
Deployability,"I updated the issue description to talk about `nlohmann/json` instead of the (already solved) issue with glibc 2.36. For the forward declaration, I have a (hopefully clever) idea how we can solve this across versions, let me play with this today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1216210622:2,update,updated,2,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1216210622,1,['update'],['updated']
Deployability,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462#issuecomment-619639870:2,update,updated,2,https://root.cern,https://github.com/root-project/root/pull/5462#issuecomment-619639870,1,['update'],['updated']
Deployability,I updated to cb83cb062ff061d3f34df608daa274b4197f2c06 and it now fails with:. ```; /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/gui/browsable/src/TLeafDraw7Provider.cxx:11:10: fatal error: 'ROOT/RCanvas.hxx' file not found; 11 | #include <ROOT/RCanvas.hxx>; | ^~~~~~~~~~~~~~~~~~; ```. is it mandatory to enable ROOT7 features?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449#issuecomment-2355946680:2,update,updated,2,https://root.cern,https://github.com/root-project/root/issues/16449#issuecomment-2355946680,1,['update'],['updated']
Deployability,"I used the latest master, with last commit ff63f90d3f6abddc1494859c85ba6647868186cc from Friday. At least with this commit the frame is still red.; Is it also possible to toggle this behavior programatically from within C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14401#issuecomment-1903800275:171,toggle,toggle,171,https://root.cern,https://github.com/root-project/root/issues/14401#issuecomment-1903800275,1,['toggle'],['toggle']
Deployability,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-2287196584:359,release,releases,359,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-2287196584,1,['release'],['releases']
Deployability,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++; // Was affected by https://github.com/root-project/root/issues/8962; // Re-enabling this seems to cut the number of IOPS in half; tree->SetCacheSize(25000000);; //tree->SetClusterPrefetch(true);; for (auto& reader : mBranchReaders) {; tree->AddBranchToCache(reader->branch());; }; tree->StopCacheLearningPhase();; ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2406804701:602,patch,patch,602,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2406804701,2,['patch'],['patch']
Deployability,I was hoping to get a chance to review this PR and provide a patch to stitch to this commit for clearer history. The rest of this PR is here -- #7027,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7017#issuecomment-758699032:61,patch,patch,61,https://root.cern,https://github.com/root-project/root/pull/7017#issuecomment-758699032,2,['patch'],['patch']
Deployability,I will add to the commit to the v20 patch branch today (i.e. it will be part of v6.20/06).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5039#issuecomment-610409754:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/5039#issuecomment-610409754,1,['patch'],['patch']
Deployability,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5577#issuecomment-625784719:32,update,update,32,https://root.cern,https://github.com/root-project/root/pull/5577#issuecomment-625784719,1,['update'],['update']
Deployability,I will close this PR for now because it doesn't have a high priority. Much more development time will have to be invested to make the analytical integration actually faster than the numerical integration here (maybe with the help of KD-trees.).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019#issuecomment-831321209:145,integrat,integration,145,https://root.cern,https://github.com/root-project/root/pull/8019#issuecomment-831321209,2,['integrat'],['integration']
Deployability,I will just add that this pythonization (and the other using-related ones for `plotOn`) will no longer be necessary in the new PyROOT when this PR is in its final shape and is merged:; https://github.com/root-project/root/pull/3640. which comes from a patch in the mini-ROOT of Cppyy:; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4754#issuecomment-573048059:252,patch,patch,252,https://root.cern,https://github.com/root-project/root/pull/4754#issuecomment-573048059,2,['patch'],"['patch', 'patches']"
Deployability,"I will look at 6609. For the RPi4, I had a more serious issue with 6.22/03. I could not load TMVA in Python - I got the dreaded failed to pythonize message. I repeated the same prescription above with 6.20/09 and loading TMVA in Python worked fine. Python 3.7.3 (default, Jul 25 2020, 13:03:44); [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> from ROOT import TMVA; Traceback (most recent call last):; File ""/home/pi/root/install/lib/ROOT/_facade.py"", line 272, in TMVA; from libROOTPythonizations import AsRTensor; ImportError: cannot import name 'AsRTensor' from 'libROOTPythonizations3_7' (/home/pi/root/install/lib/libROOTPythonizations3_7.so). During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/pi/root/install/lib/ROOT/_facade.py"", line 275, in TMVA; raise Exception('Failed to pythonize the namespace TMVA'); Exception: Failed to pythonize the namespace TMVA. However, no problems with 6.20/09; Python 3.7.3 (default, Jul 25 2020, 13:03:44); [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> from ROOT import TMVA; >>>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-718345054:490,install,install,490,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-718345054,3,['install'],['install']
Deployability,I will look at it. @pcanal @bbockelm what is the common way to develop software in MacOS? Should I build ROOT on my laptop? or use some virtual machine with MacOS installed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1053#issuecomment-332308125:163,install,installed,163,https://root.cern,https://github.com/root-project/root/pull/1053#issuecomment-332308125,1,['install'],['installed']
Deployability,I will look today why it does not work without `Update`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6808#issuecomment-745108076:48,Update,Update,48,https://root.cern,https://github.com/root-project/root/pull/6808#issuecomment-745108076,1,['Update'],['Update']
Deployability,"I will probably state a few obvious things:; - Maintaining a single documentation (like the web pages and doxygen) is better than having several (partially overlapping, partially complementing) documentations around. For maintenance and for users to know where to look.; - If there is a man page it should be up to date (outdated information can be worse than missing man page, if there is no man page you look for other resources instead of wasting time with wrong information). Part of my motivation to make the update PR was that doing and merging the update is relatively straight forward and I can do part of the work for you. The possible deprecation and removal of the page is your business.; - What I like about man pages wrt the full online documentation is: works w/o internet (imagine bad hotel wifi or overloaded conference wifi) and changing from the shell to a browser and clicking through 4 links, just to look up if it was `root -e 'std::cout << ""hello world"";'` or `-c`, is a mildly annoying hazzle. Having a short cli doc at hand at the cli is convenient. (This also means that the man page doesn't need to go beyond documenting the cli behaviour).; - trying both `<command> --help` and `man <command>` to figure out which is available, is mildly frustrating. (That inconsistency is more a problem of all the software out there, and root can just catch that by having docs on both calls). So, my opinion: I'm fine if the man pages get removed for maintenance reasons (or possibly better get cut down to links to the forum and online doc). I would prefer if they stay (though tbh, I myself only use those for `root`, `root-config`, and `hadd`. And the one for `root-config` could even get shortened. e.g.: The ""how to use root in a cmake project"" is already findable on the web page, I haven't seen the same for bare make or autoconf as it's now in the man page).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487#issuecomment-356994647:514,update,update,514,https://root.cern,https://github.com/root-project/root/pull/1487#issuecomment-356994647,2,['update'],['update']
Deployability,I will try to have a fix for this also for the next 6.24 release,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8196#issuecomment-848824540:57,release,release,57,https://root.cern,https://github.com/root-project/root/issues/8196#issuecomment-848824540,1,['release'],['release']
Deployability,"I will try to mimic your configuration in the next days.; Thank you for the suggestion Danilo, indeed ```root --web``` looks like good alternative for the moment. Here is the outcome of your suggestions:; ```; root [0] new TBrowser; Warning in <TBrowser::TBrowser>: The ROOT browser cannot run in batch mode; (TBrowser *) 0x600000d8db20; root [1] .q; [20:29:06] marcomeyer@MarcoMacBook-Pro:~/Software/root $ ; $ root --web; ------------------------------------------------------------------; | Welcome to ROOT 6.32.04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Sep 14 2024, 02:12:02 |; | From tags/6-32-04@6-32-04 |; | With Apple clang version 16.0.0 (clang-1600.0.22.7) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] new TBrowser. ROOT comes with a web-based browser, which is now being started. ; Revert to TBrowser by setting ""Browser.Name: TRootBrowser"" in rootrc file or; by starting ""root --web=off""; Find more info on https://root.cern/for_developers/root7/#rbrowser; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9223; (TBrowser *) 0x6000008f8000; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350959668:25,configurat,configuration,25,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350959668,1,['configurat'],['configuration']
Deployability,"I would again prefer to have a run-time option and I think I have a solution that satisfies everyone. This is implemented in my latest patch https://github.com/root-project/root/pull/6705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:135,patch,patch,135,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,4,"['patch', 'toggle']","['patch', 'toggle']"
Deployability,I would also prefer to move the old Release Notes in README/ReleaseNotes/ than removing them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3202#issuecomment-449055499:36,Release,Release,36,https://root.cern,https://github.com/root-project/root/pull/3202#issuecomment-449055499,2,['Release'],"['Release', 'ReleaseNotes']"
Deployability,"I would avoid including the code in ROOT. Wrapper for GSL exists, I would use those if needed, see ; https://www.thesalmons.org/john/random123/releases/latest/docs/index.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14564#issuecomment-1940697880:143,release,releases,143,https://root.cern,https://github.com/root-project/root/issues/14564#issuecomment-1940697880,1,['release'],['releases']
Deployability,"I would be happy to see this in v6-18-00-patches, too, so that I can start using this in v6.18.00.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3949#issuecomment-501230328:41,patch,patches,41,https://root.cern,https://github.com/root-project/root/pull/3949#issuecomment-501230328,1,['patch'],['patches']
Deployability,"I would consider this a low priority item. One can easily work around the problem with an intermediate C++ class:; ```python; import cppyy. cppyy.cppdef("""""". class MyCppClass {; public:; virtual void MyMethod() { std::cout << ""In C++"" << std::endl; }; virtual ~MyCppClass() {}; };. class MyCppClassBridge : public MyCppClass {; public:; void _MyMethodBase() { MyCppClass::MyMethod(); }; };. """"""). class MyPyClass(cppyy.gbl.MyCppClassBridge):; def MyMethod(self):; self._MyMethodBase(); print(""In Python""). a = MyPyClass(); a.MyMethod(); ```. So we don't really need to support `super(MyPyClass, self).MyMethod()` to make the pattern of calling the base class method in PyROOT work. Given that the user in the forum who [originally discovered this problem](https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01/41846?u=jonas) could also work around it, I would assign low priority to restoring this old PyROOT behavior from now more than 5 years ago.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6637#issuecomment-2035928904:785,update,updated-pyroot-in-current-master-,785,https://root.cern,https://github.com/root-project/root/issues/6637#issuecomment-2035928904,1,['update'],['updated-pyroot-in-current-master-']
Deployability,"I would do as Axel suggest, use std::string(fEngine.Name()).c_str() instead of string_view. ; Can you please Enrico update and then for me it is fine for me to merge. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1936#issuecomment-384892576:116,update,update,116,https://root.cern,https://github.com/root-project/root/pull/1936#issuecomment-384892576,1,['update'],['update']
Deployability,I would like to keep it open - just to have possibility to test against current master.; We can return to the PR once LLVM upgrade done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11351#issuecomment-1244995202:123,upgrade,upgrade,123,https://root.cern,https://github.com/root-project/root/pull/11351#issuecomment-1244995202,1,['upgrade'],['upgrade']
Deployability,"I would like to mention the new analysis tutorials in the release notes (they have a great PR value). You could argue that this is not the correct place to do so, I'm not sure about this. What do you think?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5512:58,release,release,58,https://root.cern,https://github.com/root-project/root/pull/5512,1,['release'],['release']
Deployability,"I would love to, but you just edited the GitHub comment and not the commit itself. Could you update the message there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221#issuecomment-604872807:93,update,update,93,https://root.cern,https://github.com/root-project/root/pull/5221#issuecomment-604872807,1,['update'],['update']
Deployability,I would prefer to be in this PR and I will provide a patch here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-609707433:53,patch,patch,53,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-609707433,1,['patch'],['patch']
Deployability,"I would prefer to have a context menu before opening the dialog. Note also that ""CTRL+S"" exists already and might need to be modified/updated. I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7352#issuecomment-793904269:134,update,updated,134,https://root.cern,https://github.com/root-project/root/pull/7352#issuecomment-793904269,1,['update'],['updated']
Deployability,"I would still expect something a ""little"" more specific. For example ""Fix install prefix calculation in cpt rules"". But really I don't get why""; ```; 	CPT_SRC_DIR = install_prefix(); ``` ; Why is the src the same as the install prefix? I was hoping that describing how it failed would have help me understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12292#issuecomment-1462663939:74,install,install,74,https://root.cern,https://github.com/root-project/root/pull/12292#issuecomment-1462663939,2,['install'],['install']
Deployability,"I wouldn't trust the CI wrt 6.16 - that's from three years ago... And yes, Davix moved and while I did update a couple of release branches I probably stopped at 6.18.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9517#issuecomment-1010153454:103,update,update,103,https://root.cern,https://github.com/root-project/root/pull/9517#issuecomment-1010153454,2,"['release', 'update']","['release', 'update']"
Deployability,"I'd be also in favour of merging this version now and later adapt it to the LLVM upgrade. Once it's in master we'll be able to use it also from CVMFS (depending on where we test, e.g. SWAN, this makes logistics easier).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10685#issuecomment-1148562254:81,upgrade,upgrade,81,https://root.cern,https://github.com/root-project/root/pull/10685#issuecomment-1148562254,1,['upgrade'],['upgrade']
Deployability,I'd leave the backport decision up to you. We can patch this into our user environments without a backport too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14251#issuecomment-1858893725:50,patch,patch,50,https://root.cern,https://github.com/root-project/root/pull/14251#issuecomment-1858893725,1,['patch'],['patch']
Deployability,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-387766583:154,integrat,integration,154,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-387766583,2,['integrat'],"['integrated', 'integration']"
Deployability,"I'd love `build` being an available folder name, and preferably even listed in `.gitignore`, for exactly that reason! ROOT is just about the only project where I can't do the standard `cmake ..` from `build`. (Actually, I like something like `*build*` in the git ignore, because I tend to make several build directories with different configurations, like llvm and gcc). @vgvassilev Let me know if I need to move the scripts currently in `.ci` for this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775#issuecomment-380150632:335,configurat,configurations,335,https://root.cern,https://github.com/root-project/root/pull/1775#issuecomment-380150632,1,['configurat'],['configurations']
Deployability,"I'd prefer to only act after the release of GCC13, and until then address the correct diagnostics so we are left with only false positives.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12085#issuecomment-1403650599:33,release,release,33,https://root.cern,https://github.com/root-project/root/pull/12085#issuecomment-1403650599,1,['release'],['release']
Deployability,I'd really like to avoid having to deal with the conflicts between this and the llvm upgrade. Can we close this and have a new version once the llvm upgrade is in?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11351#issuecomment-1244993407:85,upgrade,upgrade,85,https://root.cern,https://github.com/root-project/root/pull/11351#issuecomment-1244993407,2,['upgrade'],['upgrade']
Deployability,I'd uploaded the wrong log file to the issue. Here it is:; [build-root-v6-28-00-patches-c14-p3913-debug.log.gz](https://github.com/root-project/root/files/10515763/build-root-v6-28-00-patches-c14-p3913-debug.log.gz),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1406029693:80,patch,patches-,80,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1406029693,2,['patch'],['patches-']
Deployability,I'll apply the patch manually on the respective node and check that it's fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5470#issuecomment-619963351:15,patch,patch,15,https://root.cern,https://github.com/root-project/root/pull/5470#issuecomment-619963351,1,['patch'],['patch']
Deployability,I'll apply this patch. Thanks to have fixed this problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4755#issuecomment-573634686:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/pull/4755#issuecomment-573634686,1,['patch'],['patch']
Deployability,"I'll better merge it now and don't accumulate more PRs, otherwise other people might touch also the release notes and I'll have conflicts here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11979#issuecomment-1373475348:100,release,release,100,https://root.cern,https://github.com/root-project/root/pull/11979#issuecomment-1373475348,1,['release'],['release']
Deployability,"I'll close this expired issue. ROOT underwent some LLVM upgrade since then, so building with and external LLVM 9 anymore is not a supported case. The author of this issue also opened a PR to address this issue, but progress on this PR has also stalled. I conclude that this means the issue is also not important for the original author anymore. @chrisburr, if you have further issues with the way you're currently building ROOT, feel free to open new issues on GitHub!. Cheers,; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7176#issuecomment-1836290284:56,upgrade,upgrade,56,https://root.cern,https://github.com/root-project/root/issues/7176#issuecomment-1836290284,1,['upgrade'],['upgrade']
Deployability,I'll commit one more patch with a fix to `GoesRight()` tonight or tomorrow to this branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3028#issuecomment-456136262:21,patch,patch,21,https://root.cern,https://github.com/root-project/root/pull/3028#issuecomment-456136262,1,['patch'],['patch']
Deployability,"I'll merge this PR now with a commit that I added, because that commit needs to go in tonight before the docker images are rebuilt. If removes CUDA from the python requirements to avoid that the runners go out of disk space, which is right now a very annoying problem. If we fix it now, then the nighlies of Sunday will run with the updated image without CUDA. That means on Monday, we'll have a test results on all platforms again and we can much better assess the terrible situation of red builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15293#issuecomment-2067786114:333,update,updated,333,https://root.cern,https://github.com/root-project/root/pull/15293#issuecomment-2067786114,1,['update'],['updated']
Deployability,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly); ```; Size of PadFlags: 2; Enum underlying type: 12; mFlags size before writing: 2; mFlags size after reading: 4; 0 0 23824 0; ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:; ```; Size of PadFlags: 2; Enum underlying type: 12; mFlags size before writing: 2; mFlags size after reading: 2; 0 0; ```. I think the next steps should be discussed with @pcanal. In particular:; - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk.; - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2320511680:322,patch,patch,322,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2320511680,3,['patch'],['patch']
Deployability,"I'm building locally my patch to the first one already, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7040#issuecomment-760993452:24,patch,patch,24,https://root.cern,https://github.com/root-project/root/pull/7040#issuecomment-760993452,1,['patch'],['patch']
Deployability,"I'm glad to say that MultiPython ROOT is already a feature since 6.22 :smiley: . You can find information on how to build ROOT for both Python2 and Python3 here:; https://root.cern/install/build_from_source/#root-python-and-pyroot. By default, if CMake finds both a Python2 and a Python3 installation in the system, PyROOT will be built for both Python versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7289#issuecomment-786028100:181,install,install,181,https://root.cern,https://github.com/root-project/root/issues/7289#issuecomment-786028100,2,['install'],"['install', 'installation']"
Deployability,"I'm having the problem again now, and I am not sure how to 'reset' my keyboard so that it starts working again. Even restarting my computer didn't make it work again. Searching a bit more, I think this might be related to this ""feature"" of X11:. https://bugs.freedesktop.org/show_bug.cgi?id=99280; https://stackoverflow.com/questions/18160792/python-xlib-xgrabkey-keyrelease-events-not-firing; https://github.com/zhanghai/xkeymacs/issues/1; https://stackoverflow.com/questions/39087079/detect-modifier-key-release-in-x11-root-window. Maybe it also explains why, randomly, my keyboard key repetition is 'deactivated'. And also that sometimes, pressing ALT+Key (in a TGTextbutton) lefts the button engaged / stuck insted of press and release. And it would also explain why changing to ""kAnyModifier"" makes it work. Even if CTRL is still trapped, pressing CTRL+S is detected as pressing just 'S' by X11, and then in HandleKey, doing event->fState & kKeyControlMask does detect correctly the mask. So fState seems to work, and the problem is just with XGrabKey and XUngrabKey sometimes not working in the release sequence I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8665#issuecomment-880188512:506,release,release-in-,506,https://root.cern,https://github.com/root-project/root/issues/8665#issuecomment-880188512,3,['release'],"['release', 'release-in-']"
Deployability,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3640#issuecomment-481263585:44,patch,patch,44,https://root.cern,https://github.com/root-project/root/pull/3640#issuecomment-481263585,1,['patch'],['patch']
Deployability,"I'm not 100% sure about this, but #7767 does not seem to be ABI compatible with the current head of `v6-24-00-patches`. Or is it?. Testing an ABI compatible change, while a bit cumbersome, would be doable. But testing a change that's not ABI compatible would require rebuilding pretty much all our code. Including all the parts of LCG that depend on ROOT. That we are just not set up to be able to do. :frowning:. But Scott may have a different view...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-811286109:110,patch,patches,110,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-811286109,1,['patch'],['patches']
Deployability,"I'm not sure about this: Commit 0d6d2ff902bee4b6485aae19dba9d346c2138f69 requiring C++14 only landed for 6.26. Before that (including 6.24), ROOT only required C++11 and should build fine with GCC 4.8.5 from CentOS 7. Breaking this in a patch release may not be a good idea... @Axel-Naumann",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11571#issuecomment-1280445589:237,patch,patch,237,https://root.cern,https://github.com/root-project/root/pull/11571#issuecomment-1280445589,2,"['patch', 'release']","['patch', 'release']"
Deployability,"I'm not sure how to achieve this with CMake, @bellenot ?. Now the python sources are inserted in a list, like:; ```cmake; set(py_sources; ROOT/__init__.py; ROOT/_application.py; ...; ```; and then that list is used to make sure we install their compiled version:; ```cmake; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```; but CMake does not copy them again to the build directory unless one does `cmake .`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11233#issuecomment-1225873976:231,install,install,231,https://root.cern,https://github.com/root-project/root/issues/11233#issuecomment-1225873976,3,['install'],['install']
Deployability,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:; ```bash; dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose; UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Test project /home/dvalapar/work/root/builddir; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress INTERPRETER *; 338: ****************************************************************************; 338: FuncCall ................................................................ OK; 338: STLDict ................................................................. OK; 338: Reflection .............................................................. OK; 338: NestedStatements ........................................................ OK; 338: ********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:215,Update,UpdateCTestConfiguration,215,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,2,['Update'],['UpdateCTestConfiguration']
Deployability,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5550:132,patch,patching,132,https://root.cern,https://github.com/root-project/root/pull/5550,1,['patch'],['patching']
Deployability,"I'm not sure why the CI is unable to perform the rebase for `ROOT-ubuntu16/nortcxxmod`,. ```; CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1083 (message):; Rebase of matthewfeickert-backport/xrootd-5.4.3 branch on top of; v6-26-00-patches failed!; ```. but everything else seems to be working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10755#issuecomment-1155522978:279,patch,patches,279,https://root.cern,https://github.com/root-project/root/pull/10755#issuecomment-1155522978,1,['patch'],['patches']
Deployability,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339364132:687,update,updated,687,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132,6,"['configurat', 'update']","['configuration', 'configurations', 'updated']"
Deployability,"I'm relatively sure it can be made work if we also pass `-DCLANG_DIR=${Clang_DIR}` in `interpreter/cling/tools/plugins/clad/CMakeLists.txt`, but I won't be working on things touching `interpreter/llvm/` until I can properly revert Clang patches again. So yeah, we can go ahead with this PR for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1433210047:237,patch,patches,237,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1433210047,1,['patch'],['patches']
Deployability,"I'm sorry, I don't know what happened exactly with the git history. Will close this PR and update it with a new one and the changes discussed in the comments by @bluehood and @stwunsch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4019#issuecomment-509596759:91,update,update,91,https://root.cern,https://github.com/root-project/root/pull/4019#issuecomment-509596759,1,['update'],['update']
Deployability,"I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so; #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so; #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24; #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24; #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so; #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24; #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24; #13 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:225,install,installation,225,https://root.cern,https://github.com/root-project/root/issues/10676,1,['install'],['installation']
Deployability,"I'm very hesitant to apply this; `__cplusplus` should indeed be `2017...` for C++17. Can you elaborate why clang4 should be used to build with C++17 (or why C++17 should be used when compiling with clang4)? https://clang.llvm.org/cxx_status.html shows that most C++17 features are available in clang4 - but IIUC it was released before C++17 was released, so using it to compile C++17 features is a bit time bending ;-) Can you either use a newer clang, or use C++14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3096#issuecomment-446398912:319,release,released,319,https://root.cern,https://github.com/root-project/root/pull/3096#issuecomment-446398912,2,['release'],['released']
Deployability,"I'm working inside CentOS7 container that does not have any OpenSSL installed this prevents linking ""random"" OpenSSL. I did full rebuild - all dependencies including compiler, OpenSSL (downloaded and built tag openssl-3.1.0 from https://github.com/openssl/openssl.git) and ROOT 6.28.02 with aforementioned ""fix"". ROOT did compile and proper OpenSSL library is linked.; ```; > ldd libRHTTP.so; ...; libssl.so.3 => /sw/slc7_x86-64/AliEn-Runtime/v2.19-le-local2/lib/libssl.so.3 (0x00007f0b72d85000); ...; > openssl version; OpenSSL 3.1.0 14 Mar 2023 (Library: OpenSSL 3.1.0 14 Mar 2023); ```; What is interesting, the `libssl.so.3` file with name `libssl.so.3.1` has not been created during OpenSSL build and in [OpenSSL Configure file](https://github.com/openssl/openssl/blob/openssl-3.1.0/Configure) in section apitable there is no mention of new 3.1.0 API. Either the authors have forgotten to add it there or they have decided not to increase API version. In file [VERSION.dat](https://github.com/openssl/openssl/blob/openssl-3.1.0/VERSION.dat) there is proper version 3.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12766#issuecomment-1536577420:68,install,installed,68,https://root.cern,https://github.com/root-project/root/issues/12766#issuecomment-1536577420,1,['install'],['installed']
Deployability,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1022484732:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732,18,"['patch', 'release']","['patch', 'patches', 'patches-', 'released']"
Deployability,"I've also tried . ```; cmake -DPython3_EXECUTABLE=/usr/bin/python3.8 -DPython2_EXECUTABLE=/usr/bin/python2.7 ..; ```; and after seeing issue #8095 I've tried manually setting the flags Python3_* and using `-DPyRoot=on` but no changes to the following output:. ```; -- Detected ROOT_VERSION 6.24.99; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O2'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.18; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR); -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR); -- Could NOT find PNG (missing: PNG_LIBRARY PNG_PNG_INCLUDE_DIR); -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR); -- Building AfterImage library included in ROOT itself; -- Looking for LibXml2; -- Downloading and building XROOTD version; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings enabled.; -- Could NOT find OCaml (missing: OCAMLFIND ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097#issuecomment-832676622:738,Release,Release,738,https://root.cern,https://github.com/root-project/root/issues/8097#issuecomment-832676622,1,['Release'],['Release']
Deployability,I've asked IT for help with the upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9532#issuecomment-1009995036:32,upgrade,upgrade,32,https://root.cern,https://github.com/root-project/root/pull/9532#issuecomment-1009995036,1,['upgrade'],['upgrade']
Deployability,"I've been able reproduce this on my desktop (CentOS7, gcc 8.3) when building ROOT from source. The parameter that makes it fail is `-DCMAKE_CXX_STANDARD=17` (C++ 14 works fine). The reason is: when passing a Python callable as a parameter of a function (e.g. the `TF1` constructor in your example) cppyy automatically generates a C++ wrapper for it. As part of the wrapper generation, cppyy jits Python headers, some of which still use (in Python2) the `register` keyword, which causes an error in C++ 17. For example, when running your reproducer with dev3 these errors appear first:. ```; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3python2/Thu/ROOT/HEAD/x86_64-centos7-gcc8-opt/include/CPyCppyy/API.h:30:; In file included from /cvmfs/sft.cern.ch/lcg/releases/Python/2.7.16-3adfa/x86_64-centos7-gcc8-opt/include/python2.7/Python.h:88:; /cvmfs/sft.cern.ch/lcg/releases/Python/2.7.16-3adfa/x86_64-centos7-gcc8-opt/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]; register PyObject *obj, /* Object */; ^~~~~~~~~; ```. this is what ultimately causes the `TF1` constructor error, since the C++ wrapper for the Python callable can't be generated. The errors above start appearing with 6.24 as a result of the LLVM upgrade. But it's legit that they appear, the Python2 headers are just old and not updated anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-849596617:779,release,releases,779,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-849596617,4,"['release', 'update', 'upgrade']","['releases', 'updated', 'upgrade']"
Deployability,"I've got a funny continuation of this thread: Arch Linux has updated the default Python version to be 3.11, so now I can use ROOT with the ""default"" python and don't have to recompile anything.; However, I still think that to choose the Python version would be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12744#issuecomment-1537103700:61,update,updated,61,https://root.cern,https://github.com/root-project/root/issues/12744#issuecomment-1537103700,1,['update'],['updated']
Deployability,"I've had similar issues with the Snap build, where ACliC remembers its build environment which doesn't exist in the runtime environment. As a remedy I've taken to patching `root/build/unix/compiledata.sh`, adding a segment which runs `sed` and clears up the unwanted extra include directories. Maybe something similar could work in your use case as a workaround. [Example here](https://github.com/MrCarroll/root-snap/blob/main/snap/local/patches/ROOT/ACliC.patch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9243#issuecomment-963063640:163,patch,patching,163,https://root.cern,https://github.com/root-project/root/issues/9243#issuecomment-963063640,6,['patch'],"['patch', 'patches', 'patching']"
Deployability,"I've just got the same behaviour.; Fortunately, you pointed to the line. > -- PyROOT will be built for versions 3.10.10 (Main) and 2.7.18. which is important for me, I absolutely must have Python 2 support, because that is our ROOT version on the cluster. But this message is very distracting. Why was this issue closed? Is it ROOT problem or of another program, how do we know that? Was there a bug filed to another program?. I don't know what `Tumbleweed` is, I use Arch Linux and installed Python 2 from AUR and trying to install ROOT from the latest source. I think if ROOT uses this build method, it would be great if it could be somehow fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097#issuecomment-1529014824:483,install,installed,483,https://root.cern,https://github.com/root-project/root/issues/8097#issuecomment-1529014824,2,['install'],"['install', 'installed']"
Deployability,"I've manually merged it into v6-16-00-patches; this will be part of a future v6.16/02. Thanks for your contribution, @henryiii !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3413#issuecomment-463670663:38,patch,patches,38,https://root.cern,https://github.com/root-project/root/pull/3413#issuecomment-463670663,1,['patch'],['patches']
Deployability,"I've modified the system to require an explicit request to modify the source tree to build the standalone redistributable; it now builds in place with no copying if you just build inside the ROOT source tree. I've added a Travis test for the build (both copy and no copy versions) since the build is very fast. So the current version allows:; * Building directly from the `/math/minuit2` directory while inside ROOT. No copies or modifications to the source directory are made. `add_subdirectory`, `make install`, `make package` (binary), and `find_package`; * Building directly from the `/math/minuit2` directory with `-Dminuit2-standalone=ON` set. This will copy the needed files into the minuit2 source directory so that `make package_source` is supported - allowing stand-alone redistributable packages to be produced. `make purge` cleans the source directory.; * Building from stand-alone redistributable packages produced above. Using `add_subdirectory`, `make install`, `make package` (binary), and `find_package` are all supported. I think this is flexible enough to cover the possible uses while not adding too much maintenance. The `README.md` and `DEVELOP.md` files have been updated, and the CMake files have fairly extensive comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-371471265:504,install,install,504,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-371471265,3,"['install', 'update']","['install', 'updated']"
Deployability,I've now also installed pyspark for python2. Can you confirm that this fixes the issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7802#issuecomment-822563326:14,install,installed,14,https://root.cern,https://github.com/root-project/root/issues/7802#issuecomment-822563326,1,['install'],['installed']
Deployability,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```; ROOT::Fit::DataRange range;; std::cout << ""Start with [0,5]"" << std::endl;; range.AddRange(0,5);; std::cout << ""Size = 1 = "" << range.Size() << std::endl;; std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;; ; std::cout << ""Add [2,3]"" << std::endl;; range.AddRange(2,3);; ; assert(range.Size() == 1);; std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));; assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;; range.AddRange(-1,6);; assert(range.Size() == 1);; std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);; assert(range(0,0).second == 6);; std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;; range.AddRange(-2,4);; assert(range.Size() == 1);; std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);; assert(range(0,0).second == 6);; std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;; range.AddRange(5,7);; assert(range.Size() == 1);; std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);; assert(range(0,0).second == 7);; std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;; range.AddRange(20,25);; assert(range.Size() == 2);; std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);; assert(range(0,0).second == 7);; std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10101#issuecomment-1080761923:5,update,updated,5,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080761923,1,['update'],['updated']
Deployability,"I've updated the PR and changed the TensorBoard call arguments to the default ones from Keras except of ""logdir"" and ""batch_size"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353#issuecomment-350053490:5,update,updated,5,https://root.cern,https://github.com/root-project/root/pull/1353#issuecomment-350053490,1,['update'],['updated']
Deployability,"I've updated the PR with today's developments. Apart from the changes requested I've introduced a new index which allows performing all sort of block diagonal combinations between the indices of two tables, where each block represent a category of objects, e.g. tracks belonging to the same event. This is still not fully tested, but it should give an idea of the possibilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3443#issuecomment-465777270:5,update,updated,5,https://root.cern,https://github.com/root-project/root/pull/3443#issuecomment-465777270,1,['update'],['updated']
Deployability,"I've updated the code. Now, the feature can be added quite generically to all desired classes doing sth similar to this:. ```cpp; Utility::AddToClass( pyclass, ""__str__"", (PyCFunction) ClingPrintValue<ROOT::VecOps::RVec<float> >, METH_NOARGS );; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-392501223:5,update,updated,5,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-392501223,1,['update'],['updated']
Deployability,"I've updated the summary, there are definitely still problems in `RooAbsRealWrapper`. It would be really good if somebody could take a look, fix and close this issue and then make sure that it doesn't regress! There also seems to be a newer, much bigger problem for which I've opened https://github.com/root-project/root/issues/11186",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10009#issuecomment-1214917230:5,update,updated,5,https://root.cern,https://github.com/root-project/root/issues/10009#issuecomment-1214917230,1,['update'],['updated']
Deployability,"I, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:548:42,; inlined from ‘constexpr _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:555:31,; inlined from ‘constexpr _OI std::copy(_II, _II, _OI) [with _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:651:7,; inlined from ‘constexpr std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::_M_copy_aligned(const_iterator, const_iterator, iterator) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1342:28,; inlined from ‘constexpr void std::vector<bool, _Alloc>::_M_reallocate(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/vector.tcc:1059:40,; inlined from ‘constexpr void std::vector<bool, _Alloc>::reserve(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1130:17,; inlined from ‘ROOT::Internal::RDF::BuildAction<char, unsigned char, int, unsigned int, short int, short unsigned int, double, float, long long int, long long unsigned int, bool, ROOT::Detail::RDF::RLoopManager>(const ROOT::RDF::ColumnNames_t&, const ; std::shared_ptr<SnapshotHelperArgs>&, unsigned int, std::shared_ptr<ROOT::Detail::RDF::RLoopManager>, ActionTags::Snapshot, const RColumnRegister&)::<lambda()>’ at tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:270:20:; /usr/include/c++/14/bits/stl_algobase.h:452:30: warning: ‘void* __builtin_memmove(void*, const void*, long unsigned int)’ forming offset 8 is out of the bounds [0, 8] [-Warray-bounds=]; 452 | __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16360:3197,Install,Installation,3197,https://root.cern,https://github.com/root-project/root/issues/16360,1,['Install'],['Installation']
Deployability,"IIUC a NullStmt would mean `if (true) {1;;}`. I'd prefer to keep value printing simple and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713611104:159,upgrade,upgrade,159,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713611104,2,['upgrade'],['upgrade']
Deployability,"IIUC that code (and your PR) are handling the case; ```c++; class K;; // TClass::GetClass(""K"")->...; class K { int i; }; // TClass::GetClass(""K"")->...; ```; The 2nd `TClass` needs to know about `K::i` and that's why we update it. In the case we need to fix here, the old and the new decl are actually referring to different entities, IIUC: `::std::Detail` vs `::Detail`. The problem is that we ""suppress"" `std::` and so - maybe - the only thing we can do is claim that `::std::Detail` and `::Detail` are actually referring to the same namespace (yuck) - which is what you propose. @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-938701973:219,update,update,219,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-938701973,1,['update'],['update']
Deployability,"IIUC the patch is not a fix, it's to expose the problem even without using asan. I guess we need to update `TClassEdit::STLArgs` to support RVec, we forgot when moving it to the collection proxy mechanism.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903#issuecomment-821325393:9,patch,patch,9,https://root.cern,https://github.com/root-project/root/issues/7903#issuecomment-821325393,2,"['patch', 'update']","['patch', 'update']"
Deployability,IIUC this is as good as it gets with our CI infra and v6-14-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-463681852:60,patch,patches,60,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-463681852,1,['patch'],['patches']
Deployability,"IIUC we have two options:; 1) give the ctor a name that includes the template parameter list. This breaks an assumption used throughout ROOT on ""ctors' name == class name"". Maybe even cppyy? But it's code, we can change that.; 2) provide cppyy with the templateness of functions.; So we'll have to ""muck"" either way. My guesstimate is that option 2) is less intrusive, also for our users. I am aware of modern llvm having improved the mangling; I still think (as you) that demangling isn't the perfect solution here in clingwrapper, and we're bitten by this now, with the llvm upgrade still ongoing. Let me know your thoughts about (against?) option 2, or what other option I miss.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696545719:577,upgrade,upgrade,577,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696545719,1,['upgrade'],['upgrade']
Deployability,"IIUC, ACLiC is kind of interpreting code before generating so files to get the list of libraries that need to be loaded beforehand by passing all rootmap files to rootcling, right? If so, maybe we can do the same with modules by interpreting code beforehand, get a callback from cling and make a list of dependency libraries. We can keep this list and load them just before loading hsimple_C.so?. Anyway, these discussions are addressed (or not addressed) in another PR. I want to revert ""not generating rootmapfiles"" patch for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187#issuecomment-396919765:518,patch,patch,518,https://root.cern,https://github.com/root-project/root/pull/2187#issuecomment-396919765,1,['patch'],['patch']
Deployability,"IIUC, the patch was reverted in LLVM because it broke swift. Should we wait for the updated version of the same patch before landing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2307#issuecomment-405990192:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/2307#issuecomment-405990192,3,"['patch', 'update']","['patch', 'updated']"
Deployability,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8145:1321,Release,Release,1321,https://root.cern,https://github.com/root-project/root/issues/8145,5,['Release'],['Release']
Deployability,"IMPORTANT! It is not yet enabling web canvas as default. 1. By default enable all `TWebCanvas` interactive features. Now zooming, log scale change, pad clicking, tooltip is reflected on C++ back. See `hlHisto[1/2/3/4].C` tutorials; 2. Testing all tutorials in `tutorials/hist/` subfolder. Basic display works for all of them, some interactive features (especially with `TExec`) not yet.; 3. Update JSROOT with correspondent changes plus many other improvements,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11688:391,Update,Update,391,https://root.cern,https://github.com/root-project/root/pull/11688,1,['Update'],['Update']
Deployability,INS_12TemplateNameEEES3_S3_N4llvm15MutableArrayRefINS_22ParsedTemplateArgumentEEES3_RKNS_20ParsedAttributesViewE+0x115e)[0x55e94c5bbde0]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser19ParseClassSpecifierENS_3tok9TokenKindENS_14SourceLocationERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierEbNS0_15DeclSpecContextERNS_25ParsedAttributesWithRangeE+0x14c2)[0x55e94b98f898]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE+0x3ec8)[0x55e94b96a9c4]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser35ParseSingleDeclarationAfterTemplateENS_17DeclaratorContextERKNS0_18ParsedTemplateInfoERNS_21ParsingDeclRAIIObjectERNS_14SourceLocationERNS_16ParsedAttributesENS_15AccessSpecifierE+0x2e6)[0x55e94ba3862e]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser26ParseExplicitInstantiationENS_17DeclaratorContextENS_14SourceLocationES2_RS2_RNS_16ParsedAttributesENS_15AccessSpecifierE+0xb6)[0x55e94ba3d5ca]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser24ParseExternalDeclarationERNS_25ParsedAttributesWithRangeEPNS_15ParsingDeclSpecE+0xe31)[0x55e94ba49be9]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser19ParseInnerNamespaceERKN4llvm11SmallVectorINS0_18InnerNamespaceInfoELj4EEEjRNS_14SourceLocationERNS_16ParsedAttributesERNS_24BalancedDelimiterTrackerE+0xb4)[0x55e94b989360]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser14ParseNamespaceENS_17DeclaratorContextERNS_14SourceLocationES2_+0x10a1)[0x55e94b9891bb]; ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling(_ZN5clang6Parser16ParseDeclarationENS_17DeclaratorContextERNS_14SourceLocationERNS_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192175843:7913,rolling,rolling-,7913,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192175843,1,['rolling'],['rolling-']
Deployability,IO: Fix StreamerInfo record write during file update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846:46,update,update,46,https://root.cern,https://github.com/root-project/root/pull/12846,2,['update'],['update']
Deployability,"Idea to create separate actions list, which will be used only for text-based streaming.; Most actions functions can be reused from normal I/O, ; only several cases should be implemented slightly different. On the long run one could create complimentary actions list for reading data with TBufferXML or TBufferSQL2 and fully isolate text-based and binary I/O. That is in PR:; - creating separate list **fWriteText,** now used only with JSON; - provide new method TStreamerInfo::AddWriteTextAction() to fill actions list; - actions build from the full list of class members (avoid compressed members); - provide specialized actions for kTNamed, kTObject, kSTLp and kStreamLoop; - make actions for kSTLp and kStreamLoop with template parameter isText, potentially can be reused in binary I/O. PR solves several existing problem with JSON:; - TNamed and TObject as direct data members; - correct store of kSTLp members with arrays; - kStreamLoop member with fCounter==0; - kStreamLoop member with fCounter==1; - rudimentary support for TRef; - store dummy TObject instance. With provided code all my test classes working. I can provide patch for roottest. P.S. Most probably, Travis-CI check will be unhappy about source-code formatting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/578:1132,patch,patch,1132,https://root.cern,https://github.com/root-project/root/pull/578,1,['patch'],['patch']
Deployability,Idea to wait with cling changes until llvm upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8265#issuecomment-1247624566:43,upgrade,upgrade,43,https://root.cern,https://github.com/root-project/root/pull/8265#issuecomment-1247624566,1,['upgrade'],['upgrade']
Deployability,"If ""server"" kind of web display is configured,; one still can use ""new TBrowser"". This requires that batch gui factory; allows to create web-based implementation. Update JSROOT, use nullptr in related classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10783:163,Update,Update,163,https://root.cern,https://github.com/root-project/root/pull/10783,1,['Update'],['Update']
Deployability,"If I `grep` the DWARF info for `libCling.so` I can see references to `CXXABICtxSwapper` so I don't see how it could be that patch that's missing:; ```bash; (test) -bash-4.2$ llvm-dwarfdump /home/cburr/mambaforge/envs/clang-debug/lib/libclangCodeGen.a | grep CXXABICtxSwapper; DW_AT_name	(""CXXABICtxSwapper""); DW_AT_type	(0x0026aee5 ""CXXABICtxSwapper*""); DW_AT_type	(0x00226a1f ""CXXABICtxSwapper""); DW_AT_type	(0x0026aee5 ""CXXABICtxSwapper*""); DW_AT_type	(0x0026aeeb ""const CXXABICtxSwapper*""); (test) -bash-4.2$ llvm-dwarfdump /home/cburr/mambaforge/envs/root-debug/lib/libCling.so | grep CXXABICtxSwapper; DW_AT_name	(""CXXABICtxSwapper""); DW_AT_type	(0x0a752905 ""CXXABICtxSwapper*""); DW_AT_type	(0x0a70e43f ""CXXABICtxSwapper""); DW_AT_type	(0x0a752905 ""CXXABICtxSwapper*""); DW_AT_type	(0x0a75290b ""const CXXABICtxSwapper*""); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1021328928:124,patch,patch,124,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1021328928,1,['patch'],['patch']
Deployability,"If I understand correctly, this PR gets us further from the ultimate goal -- make the build system independent on ROOTSYS/include. We explicitly want to enumerate all -I to the actual locations of the files at built time and deem the copy to ROOTSYS/include an installation step...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600572730:261,install,installation,261,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600572730,1,['install'],['installation']
Deployability,"If I understand correctly, with this patch neither:; ```; // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```; will issue the warning ... which seems wrong. The issue being addressed is:; ```; root [1] v.size(); ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; v.size(); ^~~~~~; (unsigned long) 0; ```; where we are in a use case where the warning is literally speaking incorrect since we **do** use the value and actually print it. i.e. Semantically, it seems that:; ```; root [1] v.size();; ```; should/could issue the warning while; ```; root [1] v.size(); ```; should definitively not issue the warning. So a genuine question is ""is the fix here 'too broad' ? "" and/or ""is the ""better"" fix so expensive that it is better overall to suppress the warning globally?""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654#issuecomment-1509433700:37,patch,patch,37,https://root.cern,https://github.com/root-project/root/pull/12654#issuecomment-1509433700,1,['patch'],['patch']
Deployability,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618463351:133,release,release,133,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618463351,1,['release'],['release']
Deployability,"If IMT is enabled, TThreadedObject should allocate as many slots as threads the pool has been set with. This PR will be updated with another default value for fgMaxSlots once PR https://github.com/root-project/root/pull/1018 has been agreed upon and merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1019:120,update,updated,120,https://root.cern,https://github.com/root-project/root/pull/1019,1,['update'],['updated']
Deployability,"If ROOT compiled with CEF3 support, new canvas will be created not in the web browser, ; but with CEF methods. ; Also when rootqt5 is compiled, one can run macro and open canvas with Qt windows; See gui/canvaspainter/README for more details. @peremato ; Build procedure should be changed; CEF should be detected/configured when top ROOT cmake is called; Also some resources should be copied or linked from CEF into ROOT installation; ; rootqt5 executable should be compiled when qt5 with required plugins (qt5-webengine) is exists",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/789:420,install,installation,420,https://root.cern,https://github.com/root-project/root/pull/789,1,['install'],['installation']
Deployability,"If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2782:127,install,installation,127,https://root.cern,https://github.com/root-project/root/pull/2782,2,['install'],['installation']
Deployability,"If `builtin_gtest` was initially off (since commit 28ddffca94), we first try to look for an installed version of GTest. If not found, this falls back to `builtin_gtest`, but also sets `GTEST_INCLUDE_DIRS` to `GTEST_INCLUDE_DIRS-NOTFOUND`, which is not a valid value to have in `INTERFACE_INCLUDE_DIRECTORIES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13375:92,install,installed,92,https://root.cern,https://github.com/root-project/root/pull/13375,1,['install'],['installed']
Deployability,"If a class/struct has virtual method it should also contain a virtual; dtor. This is important if one uses allocator (tcmalloc, jemalloc) with; C++14 sized deallocation. It's needed to provide a proper object size; to deallocation function. We found that jemalloc (dev branch) tends to deadlock if wrong object; size is provided to deallocation function. Patch is just as precaution. Signed-off-by: David Abdurachmanov <david.abdurachmanov@gmail.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/611:355,Patch,Patch,355,https://root.cern,https://github.com/root-project/root/pull/611,1,['Patch'],['Patch']
Deployability,"If during processing of incoming data TCanvas::Update() invoked,; do not block caller until actual update is done. Otherwise deadlock is; possible",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9703:47,Update,Update,47,https://root.cern,https://github.com/root-project/root/pull/9703,2,"['Update', 'update']","['Update', 'update']"
Deployability,"If during processing of incoming data TCanvas::Update() invoked,; do not block caller until actual update is done. Otherwise deadlock is; possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9702:47,Update,Update,47,https://root.cern,https://github.com/root-project/root/pull/9702,2,"['Update', 'update']","['Update', 'update']"
Deployability,"If external version of `nlohmann/json.hpp` is provided,; always test if json_fwd.hpp is there. If not, one only; can use versions 3.9 .. 3.10, for which forward declaration; match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268:227,upgrade,upgrade,227,https://root.cern,https://github.com/root-project/root/pull/11268,1,['upgrade'],['upgrade']
Deployability,"If fFormula already allocated, it should be released",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4899:44,release,released,44,https://root.cern,https://github.com/root-project/root/pull/4899,1,['release'],['released']
Deployability,"If it doesn't bother you too much to split, i'd prefer you do it :-); Indeed, I don't know git well. For example, to update my local repo once a patch has been merged, I must Google the commands to know how to do this. Last time, I didn't even succeed and finally remove my local repo and fork ""root"" again.; The basics of git are quite clear but between rebase, fetch, pull, branches, cherry-pick, I'm a bit lost.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-351146796:117,update,update,117,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-351146796,4,"['patch', 'update']","['patch', 'update']"
Deployability,"If it helps: I know at least that for instance the [JuliaPlots/Plots](https://github.com/JuliaPlots/Plots.jl) project simply uses a `.zenodo.json` file in their repo which should be automatically parsed, according to [REST API subsection](https://developers.zenodo.org/#add-metadata-to-your-github-repository-release), whenever a new release is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8706#issuecomment-914136123:309,release,release,309,https://root.cern,https://github.com/root-project/root/issues/8706#issuecomment-914136123,4,['release'],['release']
Deployability,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15585#issuecomment-2132384131:64,release,release,64,https://root.cern,https://github.com/root-project/root/issues/15585#issuecomment-2132384131,6,"['patch', 'release', 'upgrade']","['patch', 'patches', 'release', 'upgrade']"
Deployability,"If libbsd installed in custom location,; custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15242:10,install,installed,10,https://root.cern,https://github.com/root-project/root/pull/15242,1,['install'],['installed']
Deployability,"If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch.; ```; c++: error: unrecognized command line option ‘-fcolor-diagnostics’; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3389:235,patch,patch,235,https://root.cern,https://github.com/root-project/root/pull/3389,1,['patch'],['patch']
Deployability,"If one tries to update a directory inside an existing file, Snapshot complains:; `Error in <TFile::mkdir>: An object with name hi exists already`. This fixes the problem by using the `returnExistingDirectory` option in `mkdir`. First mentioned in the forum [here](https://root-forum.cern.ch/t/snapshot-complains-when-updating-existing-directory/37935). Similar to [PR4649](https://github.com/root-project/root/pull/4649).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4964:16,update,update,16,https://root.cern,https://github.com/root-project/root/pull/4964,1,['update'],['update']
Deployability,"If only the OpenGL headers are installed, but not GLU, the cmake check for OpenGL/GLU succeeds, but compile will fail at some point, because the GLU headers are needed.; This pull request fixes this inconsistency by explicitly checking also for GLU in the cmake script.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/120:31,install,installed,31,https://root.cern,https://github.com/root-project/root/pull/120,1,['install'],['installed']
Deployability,"If subBranchName is already in bNamesReg, then we don't need to try to reinsert it.; This patch shaves off ~10% from the runtime of an exploration of a large test TTree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11538:90,patch,patch,90,https://root.cern,https://github.com/root-project/root/pull/11538,1,['patch'],['patch']
Deployability,"If the G__X filenames don't match with a module called X, then; CMake can't find the right dependencies and we get race conditions.; This patch fixes all a few more typos that caused those problems. Found by our debug code in RootNewMacros (which is now nearly silent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/769:138,patch,patch,138,https://root.cern,https://github.com/root-project/root/pull/769,1,['patch'],['patch']
Deployability,"If the change is accepted, please cherry-pick to v6-10-00-patches branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1083#issuecomment-333358784:58,patch,patches,58,https://root.cern,https://github.com/root-project/root/pull/1083#issuecomment-333358784,1,['patch'],['patches']
Deployability,"If the compiler default is lower than C++11, stick with C++11.; This should fix ROOT-10692. Note that this PR changes the C++ standard we compile certain release binaries with, e.g. Ubuntu 20.04 will (or at least, should) switch from C++11 to C++14 as a consequence of these changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6388:154,release,release,154,https://root.cern,https://github.com/root-project/root/pull/6388,1,['release'],['release']
Deployability,"If the constructor of the contained object is not run (e.g. because; assembling its arguments triggered an exception), the dtor must not; be run when destructing the cling::Value. Detect this case by imprinting; canary bytes into the contained object bytes: if they have changed,; run the dtor, if not assume that the constructor has failed. This will cause false positives in those cases where the constructor; is not modifying the first object bytes: in these cases, the dtor; is not run even though the ctor is run. That is still better than; the other case (where the dtor crashes because no ctor was run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4074:212,canary,canary,212,https://root.cern,https://github.com/root-project/root/pull/4074,1,['canary'],['canary']
Deployability,"If the user disables fortran but a fortran compiler is actually; present, then hist/CMakeLists.txt will still try to compile; hbook (which results in a failure). This patch explicitly sets the fortran compiler to not found; in order to prevent this from occurring.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/128:167,patch,patch,167,https://root.cern,https://github.com/root-project/root/pull/128,1,['patch'],['patch']
Deployability,"If this gets backported to 6.16.02, I'll remove the patch from conda-forge when it releases. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3381#issuecomment-461416631:52,patch,patch,52,https://root.cern,https://github.com/root-project/root/pull/3381#issuecomment-461416631,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"If this problem was introduced with the upgrade to LLVM 16, then it cannot affect 6.30 (with LLVM 13) and consequently there is nothing to fix for 6.30.04.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372#issuecomment-1898002836:40,upgrade,upgrade,40,https://root.cern,https://github.com/root-project/root/issues/14372#issuecomment-1898002836,1,['upgrade'],['upgrade']
Deployability,If we agree to merge it - this PR should be applied only to release branches.; For the master #5181 should fix this the problem,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5172#issuecomment-603707022:60,release,release,60,https://root.cern,https://github.com/root-project/root/pull/5172#issuecomment-603707022,1,['release'],['release']
Deployability,"If we are hit by this then so will be many, many users. Please make sure this (requesting Core != requesting Core + MathCore) gets added to the release notes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2506#issuecomment-415436216:144,release,release,144,https://root.cern,https://github.com/root-project/root/pull/2506#issuecomment-415436216,1,['release'],['release']
Deployability,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:186,patch,patch,186,https://root.cern,https://github.com/root-project/root/pull/5420,2,['patch'],['patch']
Deployability,"If we call `gInterpreter->GenerateDictionary(""std::vector<int>"")` with; missing second parameter (which expects to pass the corresponding include); we crash. This patch enables error reporting and removes the default argument to; tell the user that nullptr is not expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724:163,patch,patch,163,https://root.cern,https://github.com/root-project/root/pull/1724,1,['patch'],['patch']
Deployability,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5906:523,install,installation,523,https://root.cern,https://github.com/root-project/root/pull/5906,1,['install'],['installation']
Deployability,"If we have dependencies which we expect to build (like in this case); we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should; fix that. This patch teaches rootcling to build the pcms in order and; particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3000:170,patch,patch,170,https://root.cern,https://github.com/root-project/root/pull/3000,1,['patch'],['patch']
Deployability,"If we have; ```; root_generate_dictionary(HitClassesRootInterfaces; ${CMAKE_CURRENT_SOURCE_DIR}/demo-geant-integration/HitRootIO.hh; ${CMAKE_CURRENT_SOURCE_DIR}/demo-geant-integration/SensitiveHit.hh; NOINSTALL; MODULE demo-geant-integration; DEPENDENCIES Celeritas::accel ${Geant4_LIBRARIES} Celeritas::corecel ; LINKDEF ""${CMAKE_CURRENT_SOURCE_DIR}/demo-geant-integration/HitClassesLinkDef.h""; ); ```; `root_generate_dictionary` will call (if they are proper target at that point) `get_property(dep_include_dirs TARGET ${dep} PROPERTY INCLUDE_DIRECTORIES)`. However there is 2 problems.; (a) It ignores [INTERFACE_INCLUDE_DIRECTORIES](https://cmake.org/cmake/help/latest/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html) and [INTERFACE_SYSTEM_INCLUDE_DIRECTORIES](https://cmake.org/cmake/help/latest/prop_tgt/INTERFACE_SYSTEM_INCLUDE_DIRECTORIES.html); the former is used by `Geant4` (as it should) to publish its installed directories. (b) It fails the properties contains cmake generator expressions that does not expand yet. For example `$<INSTALL_INTERFACE:include>`; it fails badly because it then passed to rootcling a `-I` followed by 'nothing' hence shallowing the next arguments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12263:107,integrat,integration,107,https://root.cern,https://github.com/root-project/root/issues/12263,5,"['install', 'integrat']","['installed', 'integration']"
Deployability,If we include the definition of SMatrix after MathFunctions.h (which; relies on HelperOps.h (to forward declare SMatrix) we cannot see the; default arguments. Patch by Lorenzo Moneta and me!. (cherry picked from commit d4b004c641b1e939250eb17721083a2016172bef),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3127:159,Patch,Patch,159,https://root.cern,https://github.com/root-project/root/pull/3127,1,['Patch'],['Patch']
Deployability,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3843#issuecomment-494989834:534,install,installing,534,https://root.cern,https://github.com/root-project/root/pull/3843#issuecomment-494989834,1,['install'],['installing']
Deployability,"If we understand correctly, this should not block 6.26n anymore as the patches that cause this failure have been reverted in 6.26 (they are still present in master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1026064852:71,patch,patches,71,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1026064852,1,['patch'],['patches']
Deployability,"If we use -fimplicit-module-maps this means that cling will find all files called module.modulemap on the include paths. In certain cases the same modulemap can be present in two locations causing module redefinition errors. This patch teaches cling to work with explicitly specified modulemaps in -fno-implicit-module-maps mode. It moves the generation of the overlay file closer to the CIFactory so that we can reuse the modulemap loading code before the interpreter object was set up. The patch also turns off the implicit module map discovery and explicitly specifies the ROOT-related modulemap files. The modulemap files need to be enumerated in both TCling and rootcling. Rootcling requires -fno-rtti build mode and we cannot use the utilities in TROOT (also because rootcling_stage1 is built before libCore). This requires the extraction of the `GetSysRoot`, `GetIncludeDir` and `GetEtcDir` in the `ROOT::FoundationUtils` which is can be used throughout the entire core component. This fixes ROOT-10354.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553:230,patch,patch,230,https://root.cern,https://github.com/root-project/root/pull/4553,2,['patch'],['patch']
Deployability,"If widget URL includes sensitive information,; one just put it into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14136:697,integrat,integrate,697,https://root.cern,https://github.com/root-project/root/pull/14136,1,['integrat'],['integrate']
Deployability,"If you apply this patch would it make any difference?. ```diff; git diff interpreter/cling/include/cling/libc.modulemap | more; diff --git a/interpreter/cling/include/cling/libc.modulemap b/interpreter/cling/include/cling/libc.modulemap; index 87654b1ecf..40d990f3f5 100644; --- a/interpreter/cling/include/cling/libc.modulemap; +++ b/interpreter/cling/include/cling/libc.modulemap; @@ -63,12 +63,9 @@ module ""libc"" [system] [extern_c] [no_undeclared_includes] {; header ""wchar.h""; }; ; - use ""xlocale.h""; + module ""xlocale.h"" {; + export *; + header ""xlocale.h""; + }; }; ; -// glib specific header. In it's own module because it; -// doesn't exist on some systems with unpatched glib 2.26+; -module ""xlocale.h"" [system] [extern_c] {; - export *; - header ""xlocale.h""; -}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377762782:18,patch,patch,18,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377762782,1,['patch'],['patch']
Deployability,"If you follow the link in my previous post you can check out flamegraphs for master vs patched TTreeReader, and you can see a reduction of the time spent in `SetEntryBase` (from 4% to 2.5%) and `ProxyRead` changing name to `ProxyReadTemplate`. > We also know of a significant overhead for TTreeReaderArray. True, I will be away next week but afterwards I can profile one such usecase. > the flamegraph does not show a factor 2 between TTreeReader and TTree interfaces. You are right, if we trust these measurements to this point -- it's probably something worth checking",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455185710:87,patch,patched,87,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455185710,1,['patch'],['patched']
Deployability,"If you mean with XRootD 4 headaches the problems that show up when old XRootD 4 is still installed on the system, then yes (see the issues linked to this PR). We now use the FindXRootD from XRootD, and not our own, which is better in dealing with those cases. Like this one:; https://github.com/root-project/root/issues/11750. *Edit:* ah you were talking about the `xproofd` deprecation, not necessarily this PR. Yes that was also important in addressing the XRootD headaches, because then we don't need to do the xrootd version check anymore to determine if `xproofd` can actually be built.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13752#issuecomment-1791421168:89,install,installed,89,https://root.cern,https://github.com/root-project/root/pull/13752#issuecomment-1791421168,1,['install'],['installed']
Deployability,"If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:; https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:; https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats; For example here:; https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++; void repro(); {; using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);; x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});; // Doesn't work better either...; // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;; RooArgSet pdfs;; RooArgSet yields;. // Fill the templates; for (std::size_t i = 0; i < 2; ++i) {; auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());; pdf.SetParameters(1, 1200 + 100 * i, 50);; pdf.Print();; TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());; h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));; pdfs.addOwned(; *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));; yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));; }. // Construct final model; RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified; model.fitTo(*data, Range(0.0, 5000));.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13030:124,integrat,integrator,124,https://root.cern,https://github.com/root-project/root/issues/13030,1,['integrat'],['integrator']
Deployability,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11074:31,integrat,integrator,31,https://root.cern,https://github.com/root-project/root/pull/11074,7,"['Configurat', 'configurat', 'integrat']","['Configuration', 'configuration', 'integrator']"
Deployability,"Implement proper handling of canvas window size and canvas drawing area size. By default web browser with given window size/position will be started. Depending from context menu,; status line, other layout components drawing area will be reduced to some value and always adjust to that area. With the call `TCanvas::SetCanvasSize(width,height)` one can fix drawing area to exact value, which does not change with web browser resize. One can toggle state either with context menu or by calling ``c1->SetCanvasSize(0,0)`. All browser window position/size changes are reflected in the TCanvas members. Provide JSROOT with new resize logic, also includes support of TLatex in 3D plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13268:441,toggle,toggle,441,https://root.cern,https://github.com/root-project/root/pull/13268,1,['toggle'],['toggle']
Deployability,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15952:433,patch,patch,433,https://root.cern,https://github.com/root-project/root/pull/15952,1,['patch'],['patch']
Deployability,Implemented pythonization to RDF Define.; Define can now directly accept a python callable.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11078:188,update,updated,188,https://root.cern,https://github.com/root-project/root/pull/11078,1,['update'],['updated']
Deployability,Imported RooAbsArgs should have their workspace set to the workspace they are being imported to. Can we please sweep this into 6.30 patches too please.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14759:132,patch,patches,132,https://root.cern,https://github.com/root-project/root/pull/14759,1,['patch'],['patches']
Deployability,Improve RWebWindow/RWebWindowsManager docu; Update JSROOT with recent fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9094:44,Update,Update,44,https://root.cern,https://github.com/root-project/root/pull/9094,1,['Update'],['Update']
Deployability,Improve configuration of clang-tidy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/603:8,configurat,configuration,8,https://root.cern,https://github.com/root-project/root/pull/603,1,['configurat'],['configuration']
Deployability,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16281:501,install,install,501,https://root.cern,https://github.com/root-project/root/pull/16281,2,['install'],['install']
Deployability,"Improved variant of PR #578 . Idea to create separate actions list, which will be used only for text-based streaming.; Most actions functions can be reused from normal I/O,; only several cases should be implemented slightly different. On the long run one could create complimentary actions list for reading data with TBufferXML or TBufferSQL2 and fully isolate text-based and binary I/O. That is in PR:. creating separate list fWriteText, now used only with JSON; provide new method TStreamerInfo::AddWriteTextAction() to fill actions list; actions build from the full list of class members (avoid compressed members); provide specialized actions for kTNamed, kTObject, kSTLp and kStreamLoop; make actions for kSTLp and kStreamLoop with template parameter isText, potentially can be reused in binary I/O. PR solves several existing problem with JSON:. TNamed and TObject as direct data members; correct store of kSTLp members with arrays; kStreamLoop member with fCounter==0; kStreamLoop member with fCounter==1; rudimentary support for TRef; store dummy TObject instance. With provided code all my test classes working. I can provide patch for roottest. P.S. Most probably, Travis-CI check will be unhappy about source-code formatting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/580:1135,patch,patch,1135,https://root.cern,https://github.com/root-project/root/pull/580,1,['patch'],['patch']
Deployability,"Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer.; - There is currently one concrete implementation, the `RPageAllocatorHeap`; - Pages are movable only and release the page buffer on destruction using the page allocator that created them; - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page; - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction; - Remove the `RPageStorage::ReleasePage()` method; - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16164:300,release,release,300,https://root.cern,https://github.com/root-project/root/pull/16164,2,"['Release', 'release']","['ReleasePage', 'release']"
Deployability,"In #3498 PR I am using now ; ```; if (webui) ; install all ui5 files; endif(); ````; If somebody does not like these files, just do; ```; cmake -Droot7=ON -Dwebui=OFF; ```; There are some webui components, which also works without root7, but it we really difficult to differentiate between `root7-ui5` and `root6-ui5`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3436#issuecomment-469201245:47,install,install,47,https://root.cern,https://github.com/root-project/root/pull/3436#issuecomment-469201245,1,['install'],['install']
Deployability,"In 2003, in a possibly-misguided attempt to make compression faster, the entire contents of the built-in custom compression codec were converted from compilation targets to header files. This code, which is about 90% identical to `zlib`, had continuous additions throughout the years, including the code to invoke non-`zlib` based compression. With this patch, we have:. - `ZDeflate.c`/`ZInflate.c`/`ZTrees.c`/`Bits.c`/`ZIP.h`: Code related to the old compression functions.; - `Bits.h`: headers necessary to actually use the old compression functions.; - `RZip.{cxx,h}`: Modern headers that anything outside this package should use in order to invoke the C-style library functions.; - `Compression.h`: Enums defining the different compression levels. Additionally, we now force external callers to utilize the proper enum for the compression type (`ROOT::ECompressionAlgorithm`) instead of the type-erased `int`. Note that a lot of the resulting code does not follow coding conventions as I attempted to reduce the amount of code-churn related to this commit. `clang-format` checks are expected to fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1223:242,continuous,continuous,242,https://root.cern,https://github.com/root-project/root/pull/1223,2,"['continuous', 'patch']","['continuous', 'patch']"
Deployability,"In 6.26, just don't use the RooSimultaneous and build your NLL as a sum of per-channel NLLs instead, using RooAddition. This is what I also do in the updated cross-check for the simultaneous fit in this PR #11455 ( see the `testRooSimultaneous` file). In 6.24 or older, you would have to further all all these multi-range normalization correction integrals to the RooAddition, like I introduced it under the hood in #7719. But I would not advice doing this unless you carefully validate that you implemented the math correctly. Then, I also have a little hack for you that would work in all ROOT versions: the whole problem **does not affect extended fits**, as explained in this tutorial from ROOT 6.24: https://root.cern.ch/doc/v624/rf204b__extendedLikelihood__rangedFit_8C.html. So even if you don't care about doing an extended fit, by making your PDF an extended one and then ignoring the normalization parameter you're all set. If you already do an extended fit, you also don't have to worry at all about the multi-ranged fits,even with the RooSimultaneous.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11447#issuecomment-1263377786:150,update,updated,150,https://root.cern,https://github.com/root-project/root/issues/11447#issuecomment-1263377786,1,['update'],['updated']
Deployability,"In Fedora 29, with gcc, there is a problem with __builtin_cpu_supports() function. It causes an undefined symbol error during linking, unless you link against -lgcc explicitly. There was already code in the file to protect against this bug in some versions of gcc, but as the problems seems to exist under various gcc build configurations, I change the code to include the fix for every gcc version. See also: https://github.com/root-project/root/issues/6855",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6867:324,configurat,configurations,324,https://root.cern,https://github.com/root-project/root/pull/6867,1,['configurat'],['configurations']
Deployability,"In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time.; With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15974:524,update,updated,524,https://root.cern,https://github.com/root-project/root/pull/15974,1,['update'],['updated']
Deployability,"In TBufferFile::WriteFastArrayString, we had. ```; if (n < 255) {; *this << (UChar_t)n;; } else {; *this << (UChar_t)255;; *this << n;; }; ```. A recent commit changed the type of the n parameter from Int_t to Long64_t. This is effectively an incompatible change in the on-disk format, but only for strings which are at least 255 characters long. Further, ReadFastArrayString is still reading an Int_t, so this version of ROOT cannot read files that it writes. Resolve by changing WriteFastArrayString to explicitly write an Int_t. Also move the bounds check on the length to before writing anything into the buffer. Fixes a failure seen in the unit tests of the ATLAS EventInfo package in the dev3LCG build. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887:805,update,updated,805,https://root.cern,https://github.com/root-project/root/pull/14887,1,['update'],['updated']
Deployability,In TGlobalMappedFunction all global functions casted to the type: `void *(*)()`; But in reality all used functions have other signature: `void *&(*)()`; To silent compiler warnings intermediate casting to (void*) was used - this is **dangerous** and in generally **wrong**. Patch introduces functor inside TGlobalMappedFunction.; Within lambda each function called as it is and just return value casted to `void *`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208:274,Patch,Patch,274,https://root.cern,https://github.com/root-project/root/pull/3208,1,['Patch'],['Patch']
Deployability,"In TXMLEngine in several places pointer was not recalculated after expand of the buffer.; Problem exists since the beginning (approx 2004), but never appeared before.; Most probably while realloc() function in previous glibc versions was always returning same pointer value. Now it is not a case. Reported here: https://root-forum.cern.ch/t/29593. Same patch can be applied to all previous ROOT branches. P.S. cmake /path/to/roottest does not work for me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2280:353,patch,patch,353,https://root.cern,https://github.com/root-project/root/pull/2280,1,['patch'],['patch']
Deployability,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12747:996,configurat,configuration,996,https://root.cern,https://github.com/root-project/root/issues/12747,4,['configurat'],['configuration']
Deployability,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10562:630,configurat,configuration,630,https://root.cern,https://github.com/root-project/root/pull/10562,3,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,"In a meeting in IT I saw that ~200PB/year are being read from the `eoshome` instance via fuse, and I thought that maybe ROOT at least could try to do something smart and just redirect fuse traffic to XRootD if possible. The patch in this pull request does just that. When I talked to Axel about making this work, we wanted the redirection to not happen when using `file://file.root`, but it created some inconsistencies when using `TFile::Open` vs using `TChain` so the final implementation always attempts to redirect. Below is a demo session of ROOT opening a file on EOS with (a former version of) the patch:; ```sh; $ pwd; /eos/home-a/amadio; $ ls *.root; Run2012BC_DoubleMuParked_Muons.root; $ root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I go",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644:224,patch,patch,224,https://root.cern,https://github.com/root-project/root/pull/11644,2,['patch'],['patch']
Deployability,"In a synthetic benchmark that only fills a single histogram for; which no binning was provided (i.e. the case in which; BufferedFillHelper gets used), these are sample runtimes on my; laptop before this patch:. ```; 0 3735; 1 3742; 2 3534; 4 3191; 8 2733; 16 1725; ```. and after:; ```; 0 3552; 1 3876; 2 2466; 4 1696; 8 1202; 16 1038; ```. where over 8 threads hyper-threading kicks in and 0 threads means; no `EnableImplicitMT()` at all.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11089:203,patch,patch,203,https://root.cern,https://github.com/root-project/root/pull/11089,1,['patch'],['patch']
Deployability,In about an hour we should see this working (or not) on https://github.com/conda-forge/root-feedstock/pull/116 (once I remember to actually include the patch!...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6816#issuecomment-728122502:152,patch,patch,152,https://root.cern,https://github.com/root-project/root/pull/6816#issuecomment-728122502,1,['patch'],['patch']
Deployability,"In any case the `zoombox` for 1D is managed in `TPad.cxx`. I de-activated the alpha mode on Mac to be in the same configuration as yourself. But even with your example I do not see any artefact. May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artefact remains ? By the way if you do a simple drawing of a 1D histogram and try to zoom it, do you also see the artefact ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026698105:114,configurat,configuration,114,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026698105,2,['configurat'],['configuration']
Deployability,"In any case, I think I am close to finding a solution for the new builtin_zlib on Windows, which would free you to then update zlib with cloudfare patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-362516316:120,update,update,120,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-362516316,2,"['patch', 'update']","['patches', 'update']"
Deployability,"In any case, the build was triggered: https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/4645, but because of the previous problems, the update to the link here doesn't happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148#issuecomment-394989580:146,update,update,146,https://root.cern,https://github.com/root-project/root/pull/2148#issuecomment-394989580,1,['update'],['update']
Deployability,"In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:; Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:; The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR addresses #11781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11801:711,update,updated,711,https://root.cern,https://github.com/root-project/root/pull/11801,1,['update'],['updated']
Deployability,"In case it helps, I tracked down where template functions called from cppyy are actually getting instantiated. I had initially thought this was happening from TClingCallFunc::compile_wrapper but it actually happens already before, via TListOfFunctions::FindObject (see the below stack trace). ```; Thread 1 ""python3"" hit Breakpoint 1, 0x00007fffefb3c760 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) (); from /data/home/bendavid/rootdev8/install/lib/libCling.so; (gdb) bt; #0 0x00007fffefb3c760 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #1 0x00007fffefb6be37 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #2 0x00007fffefb6bfbf in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #3 0x00007fffefb6c161 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #4 0x00007fffeffafad0 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #5 0x00007ffff085a95c in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (); from /data/home/bendavid/rootdev8/install/lib/libCling.so; #6 0x00007fffefac27dd in cling::findAnyFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) (); from /data/home/bendavid/rootdev8/install/lib/libCling.so; #7 0x00007fffefac852a in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<clang::Expr*> const&, bool, clang::ASTContext&, cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-969416959:458,install,install,458,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-969416959,5,['install'],['install']
Deployability,"In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos.; In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10650:246,update,updated,246,https://root.cern,https://github.com/root-project/root/pull/10650,1,['update'],['updated']
Deployability,In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235:305,patch,patch,305,https://root.cern,https://github.com/root-project/root/pull/5235,1,['patch'],['patch']
Deployability,In cases where we build ROOT with -Dbuiltin_llvm=Off -Dbuiltin_clang=On and we have installed both llvm and clang in /usr/ clad will pick up the clang headers from there too. This patch gives higher priority to the header files which ROOT is supposed to use. It fixes a very obscure initialization issue due to different versions of the ASTContext.h installed and used by ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498:84,install,installed,84,https://root.cern,https://github.com/root-project/root/pull/2498,3,"['install', 'patch']","['installed', 'patch']"
Deployability,"In clang a transient file is a header file which is stored in the pch/pcm file. If this file does not exist, clang creates a virtual file of the unzipped stored file. However, if the file exists it compares the size of the file on disk and the size of the transent file. If the two sizes are different it does not complain (as validation is off) but it triggers an assert in when constructing and outdated clang::InputFile. The implementation disallows a overridden or transient file to be out of date. This patch extends the DisableValidation abilities to span not only for timestamps but we avoid checking the file sizes if the file is on the disk. And, instead we just create a virtual file of the file that we already have. This patch should fix a relocation issue for cmssw and some of the reported LCG issues. cc: @oshadura, @davidlange6, @smuzaffar, @emanca, @zygoloid",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4480:508,patch,patch,508,https://root.cern,https://github.com/root-project/root/pull/4480,2,['patch'],['patch']
Deployability,In clang we finally have some bits to track the template sugar. If we want to remove this patch we should make sure we resugar the necessary types. I believe we will need to update to clang-16 or backport a bunch of patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13072#issuecomment-1602834890:90,patch,patch,90,https://root.cern,https://github.com/root-project/root/pull/13072#issuecomment-1602834890,3,"['patch', 'update']","['patch', 'patches', 'update']"
Deployability,"In clang/lib/Lex/HeaderSearch.cpp HeaderSearch::lookupModule(StringRef ModuleName, StringRef SearchName),;   1. It searches for ModuleName in modulemap directly under the search directory (E.g ""/usr/include"" or ""/home/yuka/build/include"");   2. It searches for ModuleName in modulemap in a subdirectory of the search directory with the same name as the module. If it couldn't find ModuleName in both 1 and 2, it comes to this line;  283     // Load all module maps in the immediate subdirectories of this search;  284     // directory.;  285     loadSubdirectoryModuleMaps(SearchDirs[Idx]);; Which results in iterating over all files in the search path for example ""/usr/include"". For us, we had a problem with CMSSW because Clang started to load our default installed root modulemap in ""usr/include/root/module.modulemap"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2213:759,install,installed,759,https://root.cern,https://github.com/root-project/root/pull/2213,1,['install'],['installed']
Deployability,"In ecd98632, the class version of the `RooAbsArg` class was incremented. As explained in #8791, there are sometimes warnings in the IO of derived classes if their version number is not increased as well. Increasing the class version of RooRealVar indeed fixes this warning that one gets right now when reading old workspaces:. ```; Warning in <TStreamerInfo::BuildCheck>:; The StreamerInfo of class RooRealVar read from file toyws/WS-VHbb-STXS_mu_toy_new.root; has the same version (=8) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,9).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 8 of class 'RooRealVar' differs from; the in-memory layout version 8:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12114:545,update,update,545,https://root.cern,https://github.com/root-project/root/pull/12114,1,['update'],['update']
Deployability,"In general, I think this is a good change. Can you confirm that nothing we do in Windows is affected by this change? It is not clear to me what ""creating Windows installers automatically"" actually means.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16433#issuecomment-2354468531:162,install,installers,162,https://root.cern,https://github.com/root-project/root/pull/16433#issuecomment-2354468531,2,['install'],['installers']
Deployability,"In https://github.com/llvm/llvm-project/commit/0cb7e7ca0c864e052bf49978f3bcd667c9e16930 we have reworked the lookup addition and deletion to be protected operations. We wanted to check this patch if was necessary, however, looking at it we thought that it was maybe not needed even for the current llvm we have as the infrastructure wrt modules/pch has changed significantly since the development of this patch. If we have less patches in our clang fork, it will likely mean faster/smoother llvm upgrades.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10644#issuecomment-1136242211:190,patch,patch,190,https://root.cern,https://github.com/root-project/root/pull/10644#issuecomment-1136242211,4,"['patch', 'upgrade']","['patch', 'patches', 'upgrades']"
Deployability,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11695:604,configurat,configuration,604,https://root.cern,https://github.com/root-project/root/pull/11695,2,['configurat'],['configuration']
Deployability,In most error situations preallocated buffer was not released,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4901:53,release,released,53,https://root.cern,https://github.com/root-project/root/pull/4901,1,['release'],['released']
Deployability,In my opinion the problem is the search order for libraries on macosx. The value of the variable CMAKE_FIND_FRAMEWORK which defines the order is LAST when checking for OpenGL such that any other OpenGL installation is found before the framework one. Since the default setting is FIRST there must be a reason why this is changed. To work around the problem for OpenGL I would propose to change the setting temporarily such that the framework version of OpenGL is taken.; I will prepare a fix after I am sure that this is the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2376202550:202,install,installation,202,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2376202550,1,['install'],['installation']
Deployability,"In my opinion, it does not matter too much where it is stored, as you have to go to QtCreator and add it to the ""help database"" by hand using a file dialog. Maybe including it in the binaries inside a documentation folder would be enough, so that one does not need to reupdate the webpage too often?. In any case, I think it would be great if it is automatically generated when building from source, always in the same position, so that one does not need to update the qtcreator database path pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-889971216:458,update,update,458,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-889971216,1,['update'],['update']
Deployability,"In my opinion, we could just add an ""assert"" statement that is skipped in release mode; and add a note on the doxygen documentation that passing an out-of-range bin leads to undefined behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14575#issuecomment-1941038274:74,release,release,74,https://root.cern,https://github.com/root-project/root/issues/14575#issuecomment-1941038274,1,['release'],['release']
Deployability,In number of cases over the last years we have seen a need to call clang APIs with valid source locations. The interpreter generates code and valid locations can be problematic. This patch allows cling to return a valid source location even when no code was processed. This way we can provide our modules infrastructure proper source locations to activate the module visibility rules on locations which have common predecessor. The common predecessor is essential when we compare entities for diagnostics or reasoning about module visibility. This PR should fix the nightly failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5056:183,patch,patch,183,https://root.cern,https://github.com/root-project/root/pull/5056,1,['patch'],['patch']
Deployability,"In order to avoid {namespace std} interfering with following include files,; when generating a dictionary file add the {using namespace std;} only after; GenerateNecessaryIncludes method is called. Since many legacy root header files do require this global {using namespace std;}; to complete the tests, old behaviour is kept by default and the global; {using namespace std} can be avoided by adding -noGlobalUsingStd to rootcling invocation. Allow passing ACLiC RootCling flags via .rootrc (Vassil). This is a special patch tailored for v6-20-02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5510:519,patch,patch,519,https://root.cern,https://github.com/root-project/root/pull/5510,1,['patch'],['patch']
Deployability,"In order to be able to build unit test support also outside of a ROOT; build (e.g. for standalone roottest or for user tests), the unit test; support library needs to be visible outside of ROOT. Therefore, it is; moved to `core/testsupport`, and now installed and exported under the; name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't; found when a new gtest is defined. Fix #9507. ## For reviewers; - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9528:250,install,installed,250,https://root.cern,https://github.com/root-project/root/pull/9528,1,['install'],['installed']
Deployability,In order to fix ROOT-10034 a new Executor class has been created.; The class wraps the TExecutor types of ROOT and create in MT running a TThreadExecutor or a TSequentialExecutor. ; This allows to use exactly same code in all TMVA depending on sequential or MT running. ; In addition now the TMVA::Config can control the MT running. The behaviour is the following: ; - ROOT::IsImplicitMTEnabled() = false TMVA uses TSequentialExecutor (no MT); - ROOT::IsImplicitMTEnabled() = true TMVA uses TThreadExecutor with the number of threads provided in ROOT::EnableImplicitMT; - TMVA::gConfig.EnableMT(nthreads) : run MT using TThreadExecutor with nthreads (if the ROOT thread pool has not been created before) otherwise use existing pool; - TMVA::gConfig.DisableMT() - delete TThreadExecutor if it has been created (i.e. release the thread pool) and use TSequentialExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3585:815,release,release,815,https://root.cern,https://github.com/root-project/root/pull/3585,1,['release'],['release']
Deployability,"In order to:; - make the build system less entangled and more maintainable ; - give a solution to the bug mentioned in https://github.com/root-project/root/pull/4939; we move the search for Python installation in a new script called SearchRootCoreDeps, where also the search for main Root dependencies will happen at some point. The misleading 'python' option, which was basically enabling pyroot, is deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4945:197,install,installation,197,https://root.cern,https://github.com/root-project/root/pull/4945,1,['install'],['installation']
Deployability,"In particular, backport the deprecation of the old `TList` constructor and improvements in the build system for better packaging of the release. Corresponding PR in roottest:; https://github.com/root-project/roottest/pull/1124",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15478:136,release,release,136,https://root.cern,https://github.com/root-project/root/pull/15478,1,['release'],['release']
Deployability,"In preparation for a future removal of Python 2 support, add the `pyroot-python2` cmake build option (OFF by default). Users who really need Python 2 support can still get it, but warn them that it will be removed in a future ROOT release. This leads to . ```; $: cmake -Dpyroot-python2=ON; [...]; CMake Warning at cmake/modules/SearchRootCoreDeps.cmake:153 (message):; Building ROOT with Python 2 support is deprecated. The support for Python 2; will be removed in ROOT version 6.32.; Call Stack (most recent call first):; CMakeLists.txt:169 (include); ```. ```; $: python -c ""import ROOT""; /home/vpadulan/Programs/rootproject/rootbuild/py2-cmake-test-conda-py2/lib/ROOT/__init__.py:36: DeprecationWarning: The support for Python 2 in ROOT is deprecated. It will be removed in ROOT version 6.32.; ""ROOT version 6.32."", category=DeprecationWarning); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13606:231,release,release,231,https://root.cern,https://github.com/root-project/root/pull/13606,1,['release'],['release']
Deployability,"In preparation for the Dask backend, we need to be sure that we always release the GIL while running distributed RDataFrame applications. In this context, it is better to have a single coherent place where all the computation graph nodes are triggered. This PR introduces changes in the `ComputationGraphGenerator` class so that the `ROOT.RDF.RunGraphs` function can be called (with the GIL released beforehand) in order to trigger the computations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9122:71,release,release,71,https://root.cern,https://github.com/root-project/root/pull/9122,2,['release'],"['release', 'released']"
Deployability,"In preparation for the switch of experimental PyROOT to default in master, this PR updates the cppyy packages to their latest version:; - cppyy-1.6.1 (until [here](https://bitbucket.org/wlav/cppyy/commits/d7802d6e6e74c5359acfaf09443b9a1fc87baf6b)); - CPyCppyy-1.10.1 (until [here](https://bitbucket.org/wlav/cpycppyy/commits/c780f284d0cd0ff81f06007b620797cb18b0e269)) ; - clingwrapper-1.10.7 (until [here](https://bitbucket.org/wlav/cppyy-backend/commits/8200a3709d76b56cf06be89d26a4682a2c9c59cd)). Moreover, the PR also introduces a few fixes and disables one test until the following TCling issue is fixed:; https://sft.its.cern.ch/jira/browse/ROOT-10488",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4957:83,update,updates,83,https://root.cern,https://github.com/root-project/root/pull/4957,1,['update'],['updates']
Deployability,"In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10185:343,patch,patch,343,https://root.cern,https://github.com/root-project/root/pull/10185,1,['patch'],['patch']
Deployability,"In previous allmodules&autoloading patch, we used callback from; DeserializationListener to get Decl and loaded corresponding libraries.; It worked, but the performance was bad because ROOT was loading; excessive libraries. In this patch, we use TCling::LazyFunctionCreatorAutoloadForModule. This; function gets callback when ""mangled_name"" was not found in loaded; libraries thus we have to the load corresponding library and lookup; again. I used unordered_map to store mangled identifier and library pair. I'm; doing an optimization by hashing mangled name and storing library not by; name but by uint8 and hold uint8-name information in another vector.; Also tried std::map but unorderd_map was more performant. There are; better hash table like:; https://probablydance.com/2018/05/28/a-new-fast-hash-table-in-response-to-googles-new-fast-hash-table/; we can try to use them if this part gets crucial. With this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.03 seconds; (TFile *) 0x562b37a14fe0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.362307 seconds; sys time = 0.039741 seconds; res memory = 278.215 Mbytes; vir memory = 448.973 Mbytes; ```. W/o this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes; ```. So it improves time by 4x times and memory by 2x.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093:35,patch,patch,35,https://root.cern,https://github.com/root-project/root/pull/2093,4,['patch'],['patch']
Deployability,In principle I agree with Philippe: the cost of checking out root.git and building only the minuit2 subset is minimal. But we're not going to make a deal breaker out of this: as long as our (esp maintenance) cost of integrating your approach is minimal we should just merge it. Guilherme will guide you through the implementation issues should there be any left.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-370741281:216,integrat,integrating,216,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-370741281,2,['integrat'],['integrating']
Deployability,"In several ROOT scripts, I was having to cast to `Long_t` or to create several temporary `TString` objects to account for lack of overloads. This adds all of the missing methods. Since this adds to the API it might need to wait for a major version update.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1510:248,update,update,248,https://root.cern,https://github.com/root-project/root/pull/1510,1,['update'],['update']
Deployability,"In several cases we have to store information in more than one dictionary.; There are two cases: (a) when dictionary becomes too big (windows) and; more importantly (b) when we want to have double vs Double32_t specializations.; This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option; is specified. For example, `libGenVector_rdict.pcm` and; `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of; `TCling::LoadPCM` it seems impossible to load the second version of the; dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3013:563,patch,patch,563,https://root.cern,https://github.com/root-project/root/pull/3013,1,['patch'],['patch']
Deployability,"In some cases gPad can be set to tmpGuideLinePad, which is deleted any time ShowGuidelines method is called. In that case pointer on this temporary pad should be removed from TContext object. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12773:287,update,updated,287,https://root.cern,https://github.com/root-project/root/pull/12773,1,['update'],['updated']
Deployability,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5993:1549,update,updated,1549,https://root.cern,https://github.com/root-project/root/pull/5993,6,['update'],"['update', 'updated']"
Deployability,In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13105:53,update,update,53,https://root.cern,https://github.com/root-project/root/pull/13105,2,['update'],['update']
Deployability,"In tests on an Apple M1 after the upgrade to LLVM 9, this new instruction selection framework emits branches / calls that expect all code to be reachable in +/- 128 MB. This cannot be guaranteed during JIT, which generates code into allocated pages on the heap and could span the entire address space of the process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7419:34,upgrade,upgrade,34,https://root.cern,https://github.com/root-project/root/pull/7419,1,['upgrade'],['upgrade']
Deployability,"In the 6.28.00 release that will be released in a week or so. Sorry I didn't mean to close the issue, GitHub did that automatically! I'll leave this open until you confirm that the leak is gone. If you manage to source them correctly, you can also try it out with the ROOT nightly builds:; https://root.cern/install/nightlies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1401049536:15,release,release,15,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1401049536,3,"['install', 'release']","['install', 'release', 'released']"
Deployability,"In the RooBatchCompute CPU library, all scalar inputs have to be copied; n times into a buffer that is as long as the SIMD registers, to allow; for vectorization in all cases. To avoid frequent memory allocations, this buffer was made a `static`; variable in the original implementation of the batchcompute library,; which of course made it non-threadsafe. This is now hitting us, because RooFit needs to be able to do multiple; fits concurrently. This is a requirement for CMSSW, and a blocker for; ROOT master adoption in CMSSW since the new CPU backend is the default:; https://github.com/cms-sw/cmsdist/pull/9034. This commit fixes the concurrency problem by doing the buffering in the; DataMaps that are used in the `RooFit::Evaluator`. Like this, multiple; computation graphs can be concurrently evaluated. It was tested with the ATLAS benchmarks in `rootbench` that the fitting; performance remains the same. This PR also makes some code style and memory management improvements documented in the commit messages. It also updates the documentation to make clear the new CPU backend is now the default, which was not done in this PR:; https://github.com/root-project/root/pull/14742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14877:1029,update,updates,1029,https://root.cern,https://github.com/root-project/root/pull/14877,1,['update'],['updates']
Deployability,"In the RooChi2Var and the related `createChi2` functions in RooAbsReal; and RooAbsPdf, the `DataError` was not explained precisely enough. This commit changes the documentation of the RooChi2Var constructor to; exactly explain what is going on, and the the documentation of the; `createChi2` is updated to link to the RooChi2Var documentation to avoid; code duplication. This commit also replaces some LaTeX formulae from titiles in the; documentation because they are not rendered there. Closes #8615.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10914:295,update,updated,295,https://root.cern,https://github.com/root-project/root/pull/10914,1,['update'],['updated']
Deployability,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10566:1009,configurat,configuration,1009,https://root.cern,https://github.com/root-project/root/pull/10566,1,['configurat'],['configuration']
Deployability,"In the RooPoisson integration code, it is hardcoded to return 1.0 if the upper boundary is infinite. But this should only be done if the lower boundary is not greater than zero. Closes #10868.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11697:18,integrat,integration,18,https://root.cern,https://github.com/root-project/root/pull/11697,1,['integrat'],['integration']
Deployability,"In the RooRealIntegral and RooGenProdProj classes, the normalization sets were so far not forwarded to the servers, which resulted in undefined normalization sets for integrated PDFs as reported in #11476. A unit test that covers #11476 and the related JIRA issue ROOT-9436 is also implemented. Closes #11476.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11696:167,integrat,integrated,167,https://root.cern,https://github.com/root-project/root/pull/11696,1,['integrat'],['integrated']
Deployability,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12699:89,integrat,integration,89,https://root.cern,https://github.com/root-project/root/pull/12699,4,['integrat'],['integration']
Deployability,"In the `RPageStorage` destructor: wait for unterminated tasks, if any, as they may still hold a reference to `this`. This is known to happen, e.g. in `RPageSinkBuf` if `CommitClusterImpl()` is not called after committing some pages via `CommitPageImpl()` and the `RPageSinkBuf` is immediately destructed. This fixes the ntuple_extended:`RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12824:417,update,updated,417,https://root.cern,https://github.com/root-project/root/pull/12824,1,['update'],['updated']
Deployability,"In the `RooRealIntegral` constructor, there was a `O(N^2)` operation on; the computation graph, checking the dependency of the top-level function; on each other node. This is very expensive in the numer of RooAbsArgs N; is large. Instead of calling `dependsOnValue` for each leaf node, which is; very expensive because it's a recursive function, the value server; leaves are all put in a RooArgSet before the leaf iteration to check; quickly if a leaf is also a value server. This change speeds up the `createNLL` step of large models like the; ATLAS Higgs combination by at least a factor of two or three. In the same PR, I also bring a little other commit, where the ownership of the `cloneSet` in `cloneTree` is released before removing the top node element, in order to avoid ownership ambiguities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10959:715,release,released,715,https://root.cern,https://github.com/root-project/root/pull/10959,1,['release'],['released']
Deployability,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11814:453,integrat,integrator,453,https://root.cern,https://github.com/root-project/root/issues/11814,5,['integrat'],['integrator']
Deployability,"In the current implementation of `RooDataSet::reduceEng`, the dataset; itself was queried to get the weight variable used in the reduced; dataset. This didn't work with the `RooCompositeDataStore`, because a; dataset with this data store doesn't have a weight variable, as these; are encapsulated in the components of the composite store. Hence,; reducing a weighted dataset with a RooCompositeDataStore yields an; unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic; for the RooCompositeDataStore: the components are now reduced; individually, instead of naively creating a RooCompositeDataStore from a; RooVectorDataStore/RooTreeDataStore. To avoid further code branches in; RooDataSet, a new virtual function `RooAbsDataStore::reduce` is; introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10397:831,update,update,831,https://root.cern,https://github.com/root-project/root/pull/10397,1,['update'],['update']
Deployability,"In the example below, thread #11 is waiting on the ‘AppKit lock’ while thread #1 is waiting on the ROOT read lock and thread #12 is waiting on the ROOT write lock. In thread #11, the ROOT write lock is taken/held by frame #9, TCanvas::Update, to ‘serialize’ the update to the windowing system. In thread #1, the ‘AppKit lock’ is likely taken/held by a frame in the #16 to #40 range. This commit remove the dead lock by removing the unnecessary use of code needing the ROOT lock within code run under the AppKit lock so that in they case thread #1 no longer need to wait for the ROOT (read) lock. In addition it should be investigated whether the ROOT (write) lock should be taken in thread #1, frame 1 (TMacOSXSystem::ProcessPendingEvents) for the same reason it is taken in TCanvas::Update. thread #11; frame #0: 0x00007fffab109bf2 libsystem_kernel.dylib`__psynch_cvwait + 10; frame #1: 0x00007fffab1f57fa libsystem_pthread.dylib`_pthread_cond_wait + 712; frame #2: 0x00007fff93394e34 AppKit`-[NSViewHierarchyLock lockForReadingWithExceptionHandler:] + 287; frame #3: 0x00007fff934948ae AppKit`-[NSWindow _copyAcquiredViewHierarchyLock] + 126; frame #4: 0x00007fff9349442c AppKit`-[NSView lockFocusIfCanDraw] + 159; frame #5: 0x000000011c09063d libGCocoa.so`ROOT::MacOSX::X11::CommandBuffer::Flush(this=0x0000000100dbb080, impl=0x0000000100dbb000) at X11Buffer.mm:550; frame #6: 0x000000011c04e9c4 libGCocoa.so`TGCocoa::Update(this=0x0000000100ad1bc0, mode=1) at TGCocoa.mm:536; frame #7: 0x000000011c04ff3e libGCocoa.so`TGCocoa::UpdateWindow(this=0x0000000100ad1bc0, (null)=1) at TGCocoa.mm:776; frame #8: 0x000000011ad70827 libGpad.so`TCanvas::Flush(this=0x000000012274e740) at TCanvas.cxx:1096; frame #9: 0x000000011ad7830f libGpad.so`TCanvas::Update(this=0x000000012274e740) at TCanvas.cxx:2287; frame #10: 0x0000000100fe4e86 threadsh2_C.so`handle2((null)=0x0000000000000001) at threadsh2.C:105; frame #11: 0x0000000100f55680 libThread.so`TThread::Function(ptr=0x0000000122753b00) at TThread.cxx:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:235,Update,Update,235,https://root.cern,https://github.com/root-project/root/pull/1573,3,"['Update', 'update']","['Update', 'update']"
Deployability,"In the future, we want separate computation graphs to share and re-use already; jitted lambdas. Without this patch, however, we would have an ordering; problem or a redefinition problem, because RDF2 might want to re-use/redefine; a lambda that RDF1 is _going to_ declare, but (since we delay all; jitting to right before an RDF's event loop) that might happen too late; for RDF2. With this change, all RDFs can jit all code that has been booked by all; other RDFs, resolving that problem. In addition, making less, ""fatter""; call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5356:109,patch,patch,109,https://root.cern,https://github.com/root-project/root/pull/5356,1,['patch'],['patch']
Deployability,"In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592:368,patch,patch,368,https://root.cern,https://github.com/root-project/root/pull/9592,1,['patch'],['patch']
Deployability,"In the implementation of `RooHistPdf::plotSamplingHint`, some of the; returned values can be outside the variable definition range. This might; lead to invalid evaluations when the sampling hints are also used to; evaluate other PDF components of a composite PDF, as reported in https://github.com/root-project/root/issues/11482. This commit suggests an improved algorithm for the sampling hint:; consider only bin boundaries that are strictly between the plot limits; within some epsilon, and for the limits just sample two additional; points left and light that are some epsilon aways from the plot limits. The `stressRooFit_ref.root` reference file needs to be updated with this; change, because the sampling changes the RooPlots that are used as; reference objects. The final commit in this PR avoids code redundancy by calling the implementation of `RooHistPdf::plotSamplingHint` also in the `RooHistFunc`. Closes https://github.com/root-project/root/issues/11482.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11701:664,update,updated,664,https://root.cern,https://github.com/root-project/root/pull/11701,1,['update'],['updated']
Deployability,"In the meantime I ran into another issue that concerns empty directories. In the files I'm trying to merge, it rarely happens that a directory/tree is empty because no events have been selected (for that specific selection). In such a case `TFileMerger` raises a seg fault (vanilla `hadd` From tags/v6-20-04@v6-20-04); ```; #6 0x00007faa3fd0e43e in TFileMerger::MergeRecursive(TDirectory*, TList*, int) () from /cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/libRIO.so; #7 0x00007faa3fd0d29c in TFileMerger::PartialMerge(int) () from /cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/libRIO.so; #8 0x0000000000405e9a in main (); ```; Trying my local version built with debug symbols and running gdb didn't yield further info. I was a bit puzzled to see this, since I could swear that I successfully merged files with empty directories in the past. And in fact, it works with root `6.18.00` from `/cvmfs/sft.cern.ch/lcg/views/LCG_96/x86_64-centos7-gcc8-opt` (without complaining - maybe there should be a message with default verbosity settings). ; I diff'ed `hadd.cxx` as well as the `TFileMerger` source and header files between master and v6-18-00-patches, but did not see anything that would lead to these seg-faults. Do you have an idea where this could come from?. Since this is only loosely related to the actual PR, it might not be the right place to discuss this. I can post it elsewhere if that would make sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5995#issuecomment-656582698:1194,patch,patches,1194,https://root.cern,https://github.com/root-project/root/pull/5995#issuecomment-656582698,1,['patch'],['patches']
Deployability,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006463581:34,release,released,34,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006463581,1,['release'],['released']
Deployability,"In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9507:501,install,install,501,https://root.cern,https://github.com/root-project/root/issues/9507,2,"['install', 'release']","['install', 'release']"
Deployability,"In the past, the `getNDim` function was called just `NDim`. The funciton; was renamed to match the code convention (lower case for funciton; names), but we have to keep an overload with the old name to not break; existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:; https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43; (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9332:367,patch,patches,367,https://root.cern,https://github.com/root-project/root/pull/9332,1,['patch'],['patches']
Deployability,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616:885,configurat,configuration,885,https://root.cern,https://github.com/root-project/root/pull/7616,2,['configurat'],['configuration']
Deployability,"In the v6.26 development cycle cycle, some RooFit helper header files; whose names don't start with the `Roo` prefix sneaked into the; RooFitCore library. These headers have the overly generic names; `Floats.h` and `UniqueId.h`, which calls for trouble in environments; where the ROOT headers are directly installed in the main system include; path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new; conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located; in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats).; * Similarly, if the class name doesn't start with Roo, it has to go in; a `Roo*` namespace (usually `RooFit`); * Free functions always need to go in this namespace; * For implmentation details that we can't avoid installing, we can use; a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same; with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers; * `res/` is for headers that are only used at compile time of other; ROOT components; * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9394:306,install,installed,306,https://root.cern,https://github.com/root-project/root/pull/9394,4,"['Install', 'install']","['Installed', 'installed', 'installing']"
Deployability,"In this case PR is absolutely fine - in release builds includes can be found, with standard source builds we know where includes are. @oshadura, you can merge it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5450#issuecomment-619087989:40,release,release,40,https://root.cern,https://github.com/root-project/root/pull/5450#issuecomment-619087989,1,['release'],['release']
Deployability,"In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1252699407:121,install,installed,121,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252699407,1,['install'],['installed']
Deployability,"In writing a paper I noticed that although I promised that users can exchange the integrator of RooBinSamplingPdf,; they cannot. They can only alter options of the existing integrator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6921:82,integrat,integrator,82,https://root.cern,https://github.com/root-project/root/pull/6921,2,['integrat'],['integrator']
Deployability,Include New Deep Learning Module with support for CNN.; Integrate the development of the 2017 GSOC students.; For the moment this PR does not include the RNN and the DAE,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1826:56,Integrat,Integrate,56,https://root.cern,https://github.com/root-project/root/pull/1826,1,['Integrat'],['Integrate']
Deployability,"Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list; of cached object in RBrowserData. Tries to catch situation when ; closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and; therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10673:404,Update,Update,404,https://root.cern,https://github.com/root-project/root/pull/10673,1,['Update'],['Update']
Deployability,Inconsistent behaviour on failed jitting (transaction rollback issue?),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:54,rollback,rollback,54,https://root.cern,https://github.com/root-project/root/issues/16577,1,['rollback'],['rollback']
Deployability,"Indeed the patch I provided cuts half of the overhead, however there is still 40 MB per process I cannot really justify at the moment. In our case that translates to 4 GB of RSS. While I appreciate that being completely lazy in the PCM loading is probably complicated, maybe some tactical solution could be employed (like it was done for the PagedVector). For example I am not convinced ReadSLocEntry needs to keep around the buffer. There is moreover a few more places where the PagedVector could be used effectively, I will try to propose a separate PR for that. The reproducer is as easy as opening a ROOT file, see the main issue. A new profile is:. ![image](https://github.com/root-project/root/assets/10544/955ee083-3051-4127-a74f-7eff016a0743)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1926443058:11,patch,patch,11,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1926443058,1,['patch'],['patch']
Deployability,"Indeed, I should have updated the PR with a comment earlier. At least we can raise the error on the python side though, the call to the pythonization happens before the C++ constructor is called. Maybe the check can be something more specific like; ```python; url = ROOT.TUrl(filename); if url.GetProtocol() != ""file"":; raise ValueError(); ```; instead of the current more simplistic check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063#issuecomment-1198458818:22,update,updated,22,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198458818,2,['update'],['updated']
Deployability,"Indeed, after https://github.com/root-project/root/commit/b0129ad797ce9f163c7a1f71376d3f6a26c2ac15, this is no longer necessary. Also, unless you set `-DLLVM_BUILD_TYPE=...` to other than release, it will be built as release. So no, I don't think you can shoot yourself unless you set the build type to empty and add your custom flags, in which case you probably know what you are doing. I also have a commit to print the options in the correct order with the flags for the build type last, but didn't get to merge that one yet. It's in a branch on my office machine. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4243#issuecomment-529434136:188,release,release,188,https://root.cern,https://github.com/root-project/root/pull/4243#issuecomment-529434136,2,['release'],['release']
Deployability,"Indeed, applying the following patch:; ```.patch; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp~	2023-01-10 11:09:06.666075151 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp	2023-01-10 11:34:45.644464781 -0600; @@ -105,6 +105,7 @@; #include <algorithm>; #include <cassert>; #include <cstdint>; +#include <cstdio>; #include <cstdlib>; #include <cstring>; #include <ctime>; @@ -2498,6 +2499,8 @@; // did not result in us loading a module file for that submodule. For; // instance, a cross-top-level-module 'conflict' declaration will hit this.; unsigned ID = getLocalOrImportedSubmoduleID(Mod);; + fprintf(stderr, ""Mod=%X\n"", Mod);; + fprintf(stderr, ""Submodule=%s\n"", Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; ```; gives:; ```ConsoleSession; <snip/>; End of search list.; Mod=0; #0 0x0000000009107d6a llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f1b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x0000000009106743 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x0000000009108535 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f1a911a0630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3975 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3929 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377675811:31,patch,patch,31,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377675811,2,['patch'],['patch']
Deployability,"Indeed, it looks like ROOT was still behaving in the wrong way if XCode was updated to 15.3 but macOS was still 14.2.1. Is that expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14920#issuecomment-1987366661:76,update,updated,76,https://root.cern,https://github.com/root-project/root/pull/14920#issuecomment-1987366661,1,['update'],['updated']
Deployability,"Indeed, the Pythonization update of `bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py` did *not* get correctly propagated to my build directory! I've now copied it manually and test passes; please create an issue for that so the build system can be fixed. > Okay I installed the compiler-rt package and it still doesn't work. I'm using GCC. Should I use Clang for that?. Clang is generally recommended for ASan builds. I had a quick look and it appears that `libclang_rt.asan-x86_64.so` is hard-coded, so this setup cannot work for GCC (where the lib is apparently named just `libasan.so`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221#issuecomment-1222123312:26,update,update,26,https://root.cern,https://github.com/root-project/root/issues/11221#issuecomment-1222123312,2,"['install', 'update']","['installed', 'update']"
Deployability,"Indeed, the presence of the last optional parameter of the 'TSQLStatement ::SetBinary', which is called 'maxsize', looks very strange for me. If i set binary buffer (void* 'mem' variable) and set its size in bytes ('size' variable), what does the 'maxsize' variable mean? Isn't it obvious how much memory needs to be allocated if the 'size' parameter is specified?; 'maxsize' optional parameter may specify something else, but, unfortunately, i can't find meaning of the parameters in the current ROOT reference guide. Please, add this check, because the presence of the both 'size' and 'maxsize' variables is not obvious, at least, for me. So, i never used the 'maxsize' parameter. After the addition, i'll check one more. Other tests have passed well.; The fixes in older branches is not required (i can use own patches). But if it doesn't take a long time for you, then it would be valuable, because the last FairRoot version, we are based on, has ROOT 6.20.08.; Thank you. With respect, Konstantin.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-774529790:814,patch,patches,814,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-774529790,2,['patch'],['patches']
Deployability,"Indeed, they were not virtual before 23d8612, but they were originally, see e.g. https://github.com/root-project/root/blob/73fd43959e45e0e9e1d2537b93615cb2a58b9c03/roofit/roofitcore/inc/RooDataHist.h#L161. They were changed in 2019 in the following commit: https://github.com/root-project/root/commit/155032e6b4de3e4a50434cfe0b9e9286bc048fa7. The commit message doesn't say why. At this point, the integration with RooFitExtensions may have already broken subtly. `RooExpandedDataHist::get_wgt` was still virtual (_edit: actually doesn't matter that it was virtual, I guess, it was just shadowing_), so from this point it would be shadowing `RooDataHist::get_wgt`: it would no longer be relegated to from inside `RooDataHist` as it would before 155032e, but would only be called from inside RooFitExtensions, leading to two different `get_wgt` calls. I'm not sure how much of a difference this has made in practice in the past three years, as I'm not a user of RooFitExtensions. Maybe @cburgard can say more (or find someone who knows).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11736#issuecomment-1319839498:398,integrat,integration,398,https://root.cern,https://github.com/root-project/root/pull/11736#issuecomment-1319839498,1,['integrat'],['integration']
Deployability,"Indeed, this shows no ZeroMQ symbols in `libRooFitZMQ.so` or `libRooFitMultiProcess.so`, nor in the new `libRooFitCore.so` of #9349, so it seems we are safe. @guitargeek Indeed, in #9349, `roofit_multiprocess` will be switched off. In the coming release, people can start trying it out and it could be defaulted ON later on, when the ZeroMQ release with `zmq_ppoll` has also happened.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-985532273:246,release,release,246,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-985532273,2,['release'],['release']
Deployability,"Indeed, this will be fixed with the `CPyCppyy` update.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7686#issuecomment-1926690966:47,update,update,47,https://root.cern,https://github.com/root-project/root/issues/7686#issuecomment-1926690966,1,['update'],['update']
Deployability,"Indeed, we don't guarantee ABI stability for patch releases. Most people cope (it has never been a huge issue) and it gives us the freedom to keep the LHC experiments working at a reasonable cost ;-) Patch level for us simply means ""it does not have new features, only bug fixes"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7781#issuecomment-813669671:45,patch,patch,45,https://root.cern,https://github.com/root-project/root/issues/7781#issuecomment-813669671,5,"['Patch', 'patch', 'release']","['Patch', 'patch', 'releases']"
Deployability,"Indeed, we need to patch ZeroMQ. The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870451711:19,patch,patch,19,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870451711,1,['patch'],['patch']
Deployability,"Indeed, you are correct. The PR you mentioned needs to be updated (https://github.com/root-project/root/pull/14713/files#r1508200980)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14863#issuecomment-1971974001:58,update,updated,58,https://root.cern,https://github.com/root-project/root/issues/14863#issuecomment-1971974001,1,['update'],['updated']
Deployability,"Indeed, you are right. I still want to give some hints though. How about; ```; ImportError: cannot import module 'pyspark'. Try installing it with `pip install pyspark` or `conda install pyspark`. Refer to the PySpark documentation for more details.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705#issuecomment-809282976:128,install,installing,128,https://root.cern,https://github.com/root-project/root/pull/7705#issuecomment-809282976,3,['install'],"['install', 'installing']"
Deployability,"Info about my system:. [shell] uname -a; Linux <nodename> 4.13.4-1-default #1 SMP PREEMPT Wed Sep 27 14:20:45 UTC 2017 (4dec972) x86_64 x86_64 x86_64 GNU/Linux. libX11.so.6.3.0. [shell] g++ -v; ; Using built-in specs. ; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/7/lto-wrapper; OFFLOAD_TARGET_NAMES=hsa:nvptx-none; Target: x86_64-suse-linux; Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,ada,go --enable-offload-targets=hsa,nvptx-none=/usr/nvptx-none, --without-cuda-driver --enable-checking=release --disable-werror --with-gxx-include-dir=/usr/include/c++/7 --enable-ssp --disable-libssp --disable-libvtv --disable-libcc1 --enable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --with-gcc-major-version-only --enable-linker-build-id --enable-linux-futex --enable-gnu-indirect-function --program-suffix=-7 --without-system-libunwind --enable-multilib --with-arch-32=x86-64 --with-tune=generic --build=x86_64-suse-linux --host=x86_64-suse-linux; Thread model: posix; gcc version 7.2.1 20170927 [gcc-7-branch revision 253227] (SUSE Linux)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1162#issuecomment-335749330:657,release,release,657,https://root.cern,https://github.com/root-project/root/pull/1162#issuecomment-335749330,1,['release'],['release']
Deployability,"Info.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc/LinkDef.h; cling version ROOT_1.0~dev; Looking for C++ headers with:; LC_ALL=C clang-14 -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Found:; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; clang version 13.0.0; Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.5; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Selected GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ignoring nonexistent directory ""/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../x86_64-redhat-linux/include""; ignoring nonexistent directory ""/include""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include""; ignoring duplicate dire",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:8207,Install,InstalledDir,8207,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['Install'],['InstalledDir']
Deployability,"Initial Commit for TMVA SOFIE under TMVA::Experimental::SOFIE. including support for transpose, relu and gemm operators. including cmake configurations for building sofie when protobuf is found. this PR is experimental only and made to accommodate timeline for GSoC selection tests related to TMVA SOFIE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7544:137,configurat,configurations,137,https://root.cern,https://github.com/root-project/root/pull/7544,1,['configurat'],['configurations']
Deployability,"Initializing RooBatchCompute takes over a second when CUDA is also; available on the system. It is unreasonable to do this everytime the; RooFit library is loaded. For example, the time of small unit tests was; completely dominated by the RooBatchCompute initialization time before; this commit. This change entailed another change in `Buffers.cxx` to avoid static; initialization problems. If possible, I'll still try to backport this to the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9915:443,release,release,443,https://root.cern,https://github.com/root-project/root/pull/9915,1,['release'],['release']
Deployability,"Initially, this was to try out the suggestion [in #7151](https://github.com/root-project/root/issues/7151#issuecomment-1047822177), to enable code like; ```c++; TGraph gr({1, 2, 3}, {1, 2, 3});; ```. This doesn't work, unfortunately, because overload resolution cannot disambiguate between the `TVectorF` and `TVectorD` constructors of TGraph. What this enables, however, is this:; ```c++; TVectorD{1., 2., 3.}; ```; or for the TGraph case:; ```c++; TGraph gr(TVectorD{1., 2., 3.}, {1., 2., 3.});; ```. I think it's a nice shortcut to have. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9968:592,update,updated,592,https://root.cern,https://github.com/root-project/root/pull/9968,1,['update'],['updated']
Deployability,Inspired by this forum post:; https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008:59,install,install-root-in-my-directory-in-a-share-server,59,https://root.cern,https://github.com/root-project/root/pull/16008,1,['install'],['install-root-in-my-directory-in-a-share-server']
Deployability,Install GDB pretty printers with correct filename when using soversion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4024:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/4024,1,['Install'],['Install']
Deployability,Install headers with COMPONENT headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6237:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/6237,1,['Install'],['Install']
Deployability,Install liblzma.lib (required by roottest for example),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5638:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/5638,1,['Install'],['Install']
Deployability,Install the global module index.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7338:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/7338,1,['Install'],['Install']
Deployability,"Install the modules, pcms, and rootmap files in the bin directory on …",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3870:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/3870,2,['Install'],['Install']
Deployability,"InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; > #8 0x00002ac889365cac in; > XrdCl::XRootDTransport::HandShake(XrdCl::HandShakeData*, XrdCl::AnyObject&); > (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; > #9 0x00002ac8893c0580 in; > XrdCl::AsyncSocketHandler::OnReadWhileHandshaking() (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; > #10 0x00002ac8893c0915 in XrdCl::AsyncSocketHandler::Event(unsigned char,; > XrdCl::Socket*) (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; > #11 0x00002ac889355c4b in (anonymous; > namespace)::SocketCallBack::Event(XrdSys::IOEvents::Channel*, void*, int) (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; > #12 0x00002ac888df384a in; > XrdSys::IOEvents::Poller::CbkXeq(XrdSys::IOEvents::Channel*, int, int, char; > const*) (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; > #13 0x00002ac888df4d57 in; > XrdSys::IOEvents::PollE::Dispatch(XrdSys::IOEvents::Channel*, unsigned int); > (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; > #14 0x00002ac888df4f62 in XrdSys::IOEvents::PollE::Begin(XrdSysSemaphore*,; > int&, char const**) (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; > #15 0x00002ac888df1655 in XrdSys::IOEvents::BootStrap::Start(void*) (); > from /cvmfs/; > atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760218827:10878,Install,InstallArea,10878,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760218827,1,['Install'],['InstallArea']
Deployability,"InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; > times, additional include site here ; > #include ""Event/ProtoParticle.h"" ; > ^ ; > In file included from input_line_8:1: ; > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' ; > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here ; > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { ; > ^ ; > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg; > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. ; > ```; > ; > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later!. > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161206521:3166,patch,patches,3166,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161206521,2,"['Install', 'patch']","['InstallArea', 'patches']"
Deployability,Installation fails with libvectorDict.so: no such file or directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7293:0,Install,Installation,0,https://root.cern,https://github.com/root-project/root/issues/7293,1,['Install'],['Installation']
Deployability,"Installation in the containers happens from `requirements.txt` present in `master`. As of now, that one doesn't have entries for `tensorflow` and `torch` (that's why I called these two out) and the result will be the same as today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15236#issuecomment-2058952910:0,Install,Installation,0,https://root.cern,https://github.com/root-project/root/pull/15236#issuecomment-2058952910,1,['Install'],['Installation']
Deployability,Installation of GLEW target (backward compatibility),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5583:0,Install,Installation,0,https://root.cern,https://github.com/root-project/root/pull/5583,1,['Install'],['Installation']
Deployability,Installation without internet access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424:0,Install,Installation,0,https://root.cern,https://github.com/root-project/root/issues/8424,1,['Install'],['Installation']
Deployability,Installing missing header MnMatrixfwd.h when building standalone Minuit2. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13522:0,Install,Installing,0,https://root.cern,https://github.com/root-project/root/pull/13522,2,"['Install', 'update']","['Installing', 'updated']"
Deployability,Installing pyROOT required -DPyroot=ON along with -DPYTHON_EXECUTABLE=<path>,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8095:0,Install,Installing,0,https://root.cern,https://github.com/root-project/root/issues/8095,1,['Install'],['Installing']
Deployability,Installing with CMAKE_INSTALL_PYTHONDIR different from CMAKE_INSTALL_LIBDIR leads to incorrect runpath configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11431:0,Install,Installing,0,https://root.cern,https://github.com/root-project/root/issues/11431,2,"['Install', 'configurat']","['Installing', 'configuration']"
Deployability,Instead direct call of Paint() call UpdateAsync(); Prevent Paint() when calling TCanvas::SetGrayscale,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13670:36,Update,UpdateAsync,36,https://root.cern,https://github.com/root-project/root/pull/13670,1,['Update'],['UpdateAsync']
Deployability,"Instead of aborting on an `R__ASSERT`, with this patch RNTuple throws a meaningful exception when trying to open a file that was generated in an incompatible, future format. Fixes lazy loading of the model in `RNTupleReader::LoadEntry()` along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7739:49,patch,patch,49,https://root.cern,https://github.com/root-project/root/pull/7739,1,['patch'],['patch']
Deployability,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14176:61,install,installed,61,https://root.cern,https://github.com/root-project/root/pull/14176,4,"['install', 'patch', 'update']","['installation', 'installed', 'patches', 'updated']"
Deployability,"Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. ; FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). ; This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16602:564,update,updated,564,https://root.cern,https://github.com/root-project/root/pull/16602,1,['update'],['updated']
Deployability,"Instr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:6764,release,release,6764,https://root.cern,https://github.com/root-project/root/pull/12523,1,['release'],['release']
Deployability,Integrate Bitshuffle pre-conditioner for LZ4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221:0,Integrat,Integrate,0,https://root.cern,https://github.com/root-project/root/pull/6221,1,['Integrat'],['Integrate']
Deployability,Integrate [Bitshuffle pre-conditioner](https://github.com/kiyo-masui/bitshuffle) to LZ4 compression algorithm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221:0,Integrat,Integrate,0,https://root.cern,https://github.com/root-project/root/pull/6221,1,['Integrat'],['Integrate']
Deployability,Integrate clad,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1563:0,Integrat,Integrate,0,https://root.cern,https://github.com/root-project/root/pull/1563,1,['Integrat'],['Integrate']
Deployability,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11162:0,Integrat,Integrating,0,https://root.cern,https://github.com/root-project/root/pull/11162,3,"['Integrat', 'integrat']","['Integrating', 'integration']"
Deployability,Integration of Qt5Web and CEF Web Displays for ROOT 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1663:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/1663,1,['Integrat'],['Integration']
Deployability,Integration of all different layers in one Deep Learning module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/817,1,['Integrat'],['Integration']
Deployability,Integration of improvements suggested by running clang-tidy on the CrossValidation class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2630:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/2630,1,['Integrat'],['Integration']
Deployability,Integration of rootbench repository into ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1142:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/1142,1,['Integrat'],['Integration']
Deployability,"Interesting errors, which were to be expected. The ROOT PCMs have coded the version number with a ""/"" while after the changes the version does not contain it any more. Given that root pcms are special files, written w/o streamer infos (for performance reasons and because by construction are read only by the same release that produced them) many tests still fail. If the builds were not incremental, the problem would not be there. Thinking about a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15164#issuecomment-2059319277:314,release,release,314,https://root.cern,https://github.com/root-project/root/pull/15164#issuecomment-2059319277,1,['release'],['release']
Deployability,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```; Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - numba 0.47.0 is installed but numba>=0.48.0 is required; - The 'notebook>=4.4.1' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-619165872:261,install,installed,261,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-619165872,3,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"Interestingly, going back at the first post; > It has been tested with different LCG releases from LCG_94 to LCG_97a and it always works for python2 and fails for python3. And indeed:; ```; [vpadulan@lxplus706 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_94python3/x86_64-centos7-gcc8-opt/setup.sh; [vpadulan@lxplus706 ~]$python; Python 3.6.5 (default, Sep 20 2018, 20:43:16) ; [GCC 8.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> ROOT.__file__; '/cvmfs/sft.cern.ch/lcg/views/LCG_94python3/x86_64-centos7-gcc8-opt/lib/ROOT.py'; >>> import dill; d>>> dill.__version__; '0.2.8.2'; >>> quit(); [vpadulan@lxplus706 ~]$python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/releases/Python/3.6.5-56635/x86_64-centos7-gcc8-opt/lib/python3.6/pickle.py"", line 918, in save_global; obj2, parent = _getattribute(module, name); File ""/cvmfs/sft.cern.ch/lcg/releases/Python/3.6.5-56635/x86_64-centos7-gcc8-opt/lib/python3.6/pickle.py"", line 266, in _getattribute; .format(name, obj)); AttributeError: Can't get local attribute 'compose_method.<locals>.composition_pythonizor' on <function compose_method at 0x7f58daa07268>; ```. But you can see from the block above that the dill version is `0.2.8.2`. If instead the latest `dill` is installed, the issue cannot be reproduced anymore:; ```; [vpadulan@lxplus706 ~]$pip install dill==0.3.3 --user; [vpadulan@lxplus706 ~]$python; Python 3.6.5 (default, Sep 20 2018, 20:43:16) ; [GCC 8.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import sys; >>> sys.path.insert(0, ""/afs/cern.ch/user/v/vpadulan/.local/lib/python3.6/site-packages""); >>> import ROOT; >>> import dill; >>> dill.__version__; '0.3.3'; >>> dill.loads(dill.dumps(ROOT.TH1D())); <ROOT.TH1D object at 0x89a1550>; >>>; ```. So I'm even more convinced that this could be a `dill` issue rather than ROOT pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-822620208:85,release,releases,85,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-822620208,2,['release'],['releases']
Deployability,"Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```; {; auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");; gStyle->SetStatFont(indx);; auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);; auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);; hpx->FillRandom(""gaus"", 10000);; hpx->Draw();; }; ```. This will set monotype font for stats box. Can be used with any objects.; Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. ; Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14086:482,update,update,482,https://root.cern,https://github.com/root-project/root/pull/14086,1,['update'],['update']
Deployability,Introduce `TPad::UpdateAsync` method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13552:17,Update,UpdateAsync,17,https://root.cern,https://github.com/root-project/root/pull/13552,1,['Update'],['UpdateAsync']
Deployability,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16594:488,configurat,configuration,488,https://root.cern,https://github.com/root-project/root/pull/16594,1,['configurat'],['configuration']
Deployability,"Introducing RTreeViewer, integrated with RBrowser. Activated when `TTree` item clicked in the browser. Main features:; 1. Edit draw expressions, cut, options; 2. Input help branch/leafs names as suggested items; 3. Select dialog with fulllist and search over branch list; 4. Drawing performed into recent canvas created in `RBrowser`. Several changes in RBrowser to let implement special features required by tree viewer - ; like activate canvas widget after tree draw. ![tree_draw0](https://user-images.githubusercontent.com/4936580/195348575-b207f199-35fc-4cd6-8d09-d2894c5dba16.png); ![tree_draw1](https://user-images.githubusercontent.com/4936580/195348581-30ca4aae-9d27-4f42-98e7-dc5b596cbefc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11548:25,integrat,integrated,25,https://root.cern,https://github.com/root-project/root/pull/11548,1,['integrat'],['integrated']
Deployability,"Introducing a class acting as a heterogenuous container to store; metadata. Since the intended use case would be obtaining metadata from; json files, the nlohmann::json is used as the underlying container.; This required an extra dependency in tree/dataframe. The RDatasetSpec now only has attributes (treenames, fileglobs, friendinfo,; entryrange, groupinfo), getters and only a single ctor taking a RSpecBuilder.; The user is no longer supposed to build a RDatasetSpec directly.; Therefore all corresponding tests are now removed. The RSpecBuilder has exactly the same attributes as RDatasetSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"":",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526:992,update,updated,992,https://root.cern,https://github.com/root-project/root/pull/11526,1,['update'],['updated']
Deployability,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16546:374,update,updated,374,https://root.cern,https://github.com/root-project/root/pull/16546,1,['update'],['updated']
Deployability,"Irrespective of the plan above or any modification to it, I believe we should sit down and understand how to deploy an automated way to build the module map. For example, internal headers will always be changed and it will be harder and harder to keep present versions of the sdk working and fix new ones.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900#issuecomment-2184830330:109,deploy,deploy,109,https://root.cern,https://github.com/root-project/root/pull/15900#issuecomment-2184830330,1,['deploy'],['deploy']
Deployability,Is it new problem with 6.22 ? This code (TGLFormat) is not recent and has not been changed recently.; The error messages you get would suggest X11 is not properly installed (or not found by the ROOT; install procedure) on your machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6368#issuecomment-694088881:163,install,installed,163,https://root.cern,https://github.com/root-project/root/issues/6368#issuecomment-694088881,2,['install'],"['install', 'installed']"
Deployability,"Is it really necessary to keep this possibility to abuse the root build directory as your working ROOT installation?. If we relax this requirement, then many things would be much easier. We wouldn't have to copy or link the header files at all. Maybe something for ROOT 7?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14953#issuecomment-2393345944:103,install,installation,103,https://root.cern,https://github.com/root-project/root/issues/14953#issuecomment-2393345944,1,['install'],['installation']
Deployability,"Is it something we are still interested in fixing? (I am trying to revive thread); @linev I think your approach is correct (one cumulative patch), about 1) bullet I am not sure.. please @Axel-Naumann @amadio can you comment again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5833#issuecomment-666231350:139,patch,patch,139,https://root.cern,https://github.com/root-project/root/pull/5833#issuecomment-666231350,1,['patch'],['patch']
Deployability,Is that possible to use the precompilled version of root either on Linux or Mac to avoid installation issues?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693443249:89,install,installation,89,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693443249,1,['install'],['installation']
Deployability,"Is there a reason we need `-march=native` on AArch64? I think a more ""standard"" configuration might be better for the start...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16526#issuecomment-2378478897:80,configurat,configuration,80,https://root.cern,https://github.com/root-project/root/pull/16526#issuecomment-2378478897,1,['configurat'],['configuration']
Deployability,Is there a way to understand if those race conditions pre-existing to this patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-333661294:75,patch,patch,75,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-333661294,1,['patch'],['patch']
Deployability,"Is there any chance to get the backtrace with some more debug info from the llvm side, by adding `-DLLVM_BUILD_TYPE=Debug` to ROOT's configuration?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192760901:133,configurat,configuration,133,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192760901,1,['configurat'],['configuration']
Deployability,Is this a candidate for 6.16.02 as well? I'm naming patches in the conda recipe based on when they will be no longer needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3413#issuecomment-463158072:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/pull/3413#issuecomment-463158072,1,['patch'],['patches']
Deployability,Is this still the case after the upgrade?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635#issuecomment-2143711278:33,upgrade,upgrade,33,https://root.cern,https://github.com/root-project/root/issues/12635#issuecomment-2143711278,1,['upgrade'],['upgrade']
Deployability,"IsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get rid of the crash in the atlas build by generating dictionaries; for these classes (here, various specialization of; `CondMultChanCollection<LArConditionsSubset<T> >`).; However, i also looked at bit at the root cause of the crash. The summary is that it seems to involve a Transaction object being released; multiple times back to the TransactionPool. And the fact that TransactionPool; is used only in opt builds is why we don't see this crash if libCling; is compiled with debugging. The crash in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:8652,patch,patches,8652,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2217200122:33,install,installing,33,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2217200122,2,['install'],"['installers', 'installing']"
Deployability,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14963#issuecomment-2018350309:32,patch,patch,32,https://root.cern,https://github.com/root-project/root/issues/14963#issuecomment-2018350309,1,['patch'],['patch']
Deployability,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339205080:114,configurat,configuration,114,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080,8,"['configurat', 'install']","['configuration', 'install']"
Deployability,It appears that the configuration option `pyspark.spark.python` is somehow ineffective and Spark really only cares about the environment variable `PYSPARK_PYTHON` https://issues.apache.org/jira/browse/SPARK-26404 . This is a bummer...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7698#issuecomment-810016192:20,configurat,configuration,20,https://root.cern,https://github.com/root-project/root/pull/7698#issuecomment-810016192,1,['configurat'],['configuration']
Deployability,It appears that the patch was not applied or overwritten. Checking...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1405642683:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1405642683,1,['patch'],['patch']
Deployability,It behaves exactly as Chrome; Provided only on Windows; Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11563:56,Update,Update,56,https://root.cern,https://github.com/root-project/root/pull/11563,2,"['Update', 'release']","['Update', 'release']"
Deployability,It causes a clash of a macro defined in stdatomic with an identifier in boost.; Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8541:231,update,updated,231,https://root.cern,https://github.com/root-project/root/pull/8541,1,['update'],['updated']
Deployability,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12516:1161,update,updated,1161,https://root.cern,https://github.com/root-project/root/pull/12516,1,['update'],['updated']
Deployability,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:; https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2052181093:43,upgrade,upgrade,43,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2052181093,2,['upgrade'],['upgrade']
Deployability,"It does matter a lot because I'm totally not happy that we are starting to patch the modulemap that we copied from Apple's distribution of libc++. If it's the only possibility, then we *can* do it but I'm not able to assess that without knowing why it doesn't work in Philippe's while many other installations, including our CI nodes, are completely fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2370432988:75,patch,patch,75,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2370432988,2,"['install', 'patch']","['installations', 'patch']"
Deployability,It escaped the after-release purge because it does not use the `R__DEPRECATED` mechanism.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13027:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/13027,1,['release'],['release']
Deployability,"It fails very often (more than 90% of the time) on fedora{38,39} since the last update of chromium, and now also on olbdw-01.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14771:80,update,update,80,https://root.cern,https://github.com/root-project/root/pull/14771,1,['update'],['update']
Deployability,"It fixes broken builds on Ubuntu 16:; `[ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooProdPdf.cxx.o; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx: In member function ‘void TWebCanvas::ShowCmd(const char*, Bool_t)’:; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx:516:77: error: ‘Warning’ was not declared in this scope; Warning(""ShowCmd"", ""Send operation not empty when try show %s"", arg); ^; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3551:179,Release,Release,179,https://root.cern,https://github.com/root-project/root/pull/3551,2,['Release'],['Release']
Deployability,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-785864167:16,update,updated,16,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-785864167,4,['update'],['updated']
Deployability,It is a synchronization of revert commits with branch 6.14 patches.; Next PR will generalize a switch between compression algorithms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2889:59,patch,patches,59,https://root.cern,https://github.com/root-project/root/pull/2889,1,['patch'],['patches']
Deployability,"It is already backported and will be part of 6.32.04, which will be released next week",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075#issuecomment-2271663532:68,release,released,68,https://root.cern,https://github.com/root-project/root/pull/16075#issuecomment-2271663532,1,['release'],['released']
Deployability,"It is available less and less often, and we do not actually benefit a lot from printing the distro (stress) or we can get the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14923:149,release,release,149,https://root.cern,https://github.com/root-project/root/pull/14923,1,['release'],['release']
Deployability,"It is available less and less often, and we do not actually; benefit a lot from printing the distro (stress) or we can get; the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11029:151,release,release,151,https://root.cern,https://github.com/root-project/root/pull/11029,1,['release'],['release']
Deployability,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12534#issuecomment-1481262889:145,configurat,configuration,145,https://root.cern,https://github.com/root-project/root/pull/12534#issuecomment-1481262889,1,['configurat'],['configuration']
Deployability,"It is broken by design, there is no way that this interface can; be used in a safe way. Just get rid of it.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12166:202,update,updated,202,https://root.cern,https://github.com/root-project/root/pull/12166,1,['update'],['updated']
Deployability,It is chmod via cmake during the installation. ```; make install; ```. Andrii,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693388992:33,install,installation,33,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693388992,2,['install'],"['install', 'installation']"
Deployability,"It is collection of JSROOT bugfixes since mid March. . It is not necessary for the pre-release of 6.32, but would be nice to have in 6.32.00.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15352#issuecomment-2079225943:87,release,release,87,https://root.cern,https://github.com/root-project/root/pull/15352#issuecomment-2079225943,1,['release'],['release']
Deployability,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638:226,release,release,226,https://root.cern,https://github.com/root-project/root/pull/13638,1,['release'],['release']
Deployability,"It is container for the all menu items, collected for the TDrawable; Now is temporary object, later all items can be preserved until TDrawable::Execute() is called. Create hierarchy of menu items class:; - base TMenuItem class; - TCheckedMenuItem for items which could be toggled; - TArgsMenuItem for item with several arguments, which should be provided for function call",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/786:272,toggle,toggled,272,https://root.cern,https://github.com/root-project/root/pull/786,1,['toggle'],['toggled']
Deployability,"It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:; In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:; /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required; pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );; ^; In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:; /usr/include/pthread.h:51:3: note: previous declaration is here; PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,; ^; 1 error generated.`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3374:140,Release,Release,140,https://root.cern,https://github.com/root-project/root/pull/3374,4,['Release'],['Release']
Deployability,It is good practice to check that the patch compiles and the new tests run correctly before pushing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12422#issuecomment-1458419967:38,patch,patch,38,https://root.cern,https://github.com/root-project/root/pull/12422#issuecomment-1458419967,1,['patch'],['patch']
Deployability,It is most probable place where new canvases are created or existing are modified. ; Therefore need check for update. Simple workaround for some macros execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16439:110,update,update,110,https://root.cern,https://github.com/root-project/root/pull/16439,1,['update'],['update']
Deployability,It is most probable place where new canvases are created or existing are modified. Therefore need to update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16441:101,update,update,101,https://root.cern,https://github.com/root-project/root/pull/16441,1,['update'],['update']
Deployability,"It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:; https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396:541,patch,patch,541,https://root.cern,https://github.com/root-project/root/pull/3396,1,['patch'],['patch']
Deployability,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5897:603,Update,Update,603,https://root.cern,https://github.com/root-project/root/pull/5897,1,['Update'],['Update']
Deployability,"It is part of the set of 'system' modules which gets created on demand when a dictionary includes intrinsics. Make this action explicit. This way we can invalidate it (from within rootcling) and rebuild it when required. This patch also fixes an issue in cmssw where _Builtin_intrinsics is generated and installed on cvmfs. If we have local ROOT which does not have this module generated, the system picks up the one from cvmfs causing out-of-date errors. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4676:226,patch,patch,226,https://root.cern,https://github.com/root-project/root/pull/4676,2,"['install', 'patch']","['installed', 'patch']"
Deployability,"It is problem with return value of gSystem->ExpandPathName().; It is `char *` and should be released. I guess, long time ago it was not a case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4856#issuecomment-578648985:92,release,released,92,https://root.cern,https://github.com/root-project/root/pull/4856#issuecomment-578648985,1,['release'],['released']
Deployability,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:; ```; 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec; Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from ReadRules; [ RUN ] ReadRules.CustomReadRuleWithSpace; C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed; Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms); [----------] 1 test from ReadRules (883 ms total); ; [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (883 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] ReadRules.CustomReadRuleWithSpace; ; 1 FAILED TEST; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9354#issuecomment-2046160417:736,Release,Release,736,https://root.cern,https://github.com/root-project/root/issues/9354#issuecomment-2046160417,1,['Release'],['Release']
Deployability,It is updated now. Thank you @hageboeck !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8111#issuecomment-834147743:6,update,updated,6,https://root.cern,https://github.com/root-project/root/pull/8111#issuecomment-834147743,1,['update'],['updated']
Deployability,It is. Hard to send a link to this commit in a branch but the revision number in release 5.0 is obviously much higher than this one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1016#issuecomment-330562461:81,release,release,81,https://root.cern,https://github.com/root-project/root/pull/1016#issuecomment-330562461,1,['release'],['release']
Deployability,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:167,configurat,configuration,167,https://root.cern,https://github.com/root-project/root/issues/11381,4,"['Configurat', 'Install', 'configurat']","['Configuration', 'Install', 'configuration']"
Deployability,It looks like that clang stores candidates for diagnostics and then does analysis on `clang::Sema::HandleEndOfTranslationUnit` call. When autoloading we call `TCling::RegisterModule` which in turn can call *many* times `clang::Sema::HandleEndOfTranslationUnit`. Second half of the `TCling::RegisterModule` body suppresses diagnostics this silences warnings coming from Sema and flushes the collected candidates. The case here is a little odd: the diagnostics fires only in ROOT built with release mode. The branches being taken by both release and debug mode seem identical. It looks like the debug mode somehow enters in silence diagnostics mode and release does not. This PR is not critical for the runtime cxxmodules development but it fixes the broken autoloading behavior of 'regular' ROOT. This is the only observable failure we got in a very obscure way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-377965643:489,release,release,489,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-377965643,3,['release'],['release']
Deployability,"It looks like the checks never completed, but the patch should not be the reason.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2215#issuecomment-399080999:50,patch,patch,50,https://root.cern,https://github.com/root-project/root/pull/2215#issuecomment-399080999,1,['patch'],['patch']
Deployability,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3847#issuecomment-495597401:48,continuous,continuous-integration,48,https://root.cern,https://github.com/root-project/root/pull/3847#issuecomment-495597401,1,['continuous'],['continuous-integration']
Deployability,"It looks like the different are indeed only the compression size of record affected by the change (this includes the `TStreamerInfo` record but also the record for classes that inherits from the class (`TTree`, `NTuple` and histos). So we just need to update those references.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15021#issuecomment-2013772175:252,update,update,252,https://root.cern,https://github.com/root-project/root/pull/15021#issuecomment-2013772175,1,['update'],['update']
Deployability,It looks like you have two different versions of libpng installed in your system (probably it could be libpng and libpng16 packages installed in the same time). Can you please post here the full output of ``` cmake ``` comand you were using? I need to see which libpng ROOT picks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6645#issuecomment-709888342:56,install,installed,56,https://root.cern,https://github.com/root-project/root/issues/6645#issuecomment-709888342,2,['install'],['installed']
Deployability,"It looks these two commits are causing the compilation failure. The problem is in cmake, but it's complicated than it looks. I will fix and send this patch again, but first we really need to fix nightlies compilation failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2577:150,patch,patch,150,https://root.cern,https://github.com/root-project/root/pull/2577,1,['patch'],['patch']
Deployability,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454#issuecomment-708298542:29,release,releases,29,https://root.cern,https://github.com/root-project/root/issues/6454#issuecomment-708298542,2,['release'],['releases']
Deployability,"It modifies the interpreter state, thus needs locking. UPDATE:. As suggested by @hahnjo I tried to write a small unit test to see the data race in action. In fact it was pretty easy, and it also highlighted another data race in `TCling::LoadFile`. In the latest commits I take care both of adding the lock to the other method and adding the test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13348:55,UPDATE,UPDATE,55,https://root.cern,https://github.com/root-project/root/pull/13348,1,['UPDATE'],['UPDATE']
Deployability,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13552:32,update,update,32,https://root.cern,https://github.com/root-project/root/pull/13552,4,"['Update', 'update']","['Update', 'update']"
Deployability,"It produces false positives on memcpy ""out of bounds"". ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16386:106,update,updated,106,https://root.cern,https://github.com/root-project/root/pull/16386,1,['update'],['updated']
Deployability,"It really looks like the root installation was updated ""partially"", e.g. . ```; make install; .....; git pull ; make -C somedir; make -C somedir install; ```. Another possible explanation is that after some `git pull` the file std.pcm was not remade.; Is that possible to delete the std.pcm in the compilation directory and run make install?. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693411646:30,install,installation,30,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693411646,5,"['install', 'update']","['install', 'installation', 'updated']"
Deployability,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10222#issuecomment-1079823051:456,integrat,integration,456,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051,2,['integrat'],['integration']
Deployability,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because; ```; [yuka@yuka-arch module-release]$ root -l -b; root [0] gMinuit; IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]!; ```; we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2009#issuecomment-391741036:135,release,release,135,https://root.cern,https://github.com/root-project/root/pull/2009#issuecomment-391741036,2,"['patch', 'release']","['patch', 'release']"
Deployability,It seems that either my roottest branch did not update correctly the reference file or it was not picked up by the automated test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14077#issuecomment-1927018904:48,update,update,48,https://root.cern,https://github.com/root-project/root/pull/14077#issuecomment-1927018904,1,['update'],['update']
Deployability,"It seems that since the LLVM upgrade the warnings due to this do not happen on master anymore, but only on the 6.10 and 6.08 branches. How about I close this and just apply this patch to those branches, then? @Axel-Naumann @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1285#issuecomment-344578118:29,upgrade,upgrade,29,https://root.cern,https://github.com/root-project/root/pull/1285#issuecomment-344578118,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,It seems that symbol is not there:; ```; qon@qon /usr/lib/root/6.24/lib $ readelf -W -s libCling.so |grep getSymbolMaterializer; qon@qon /usr/lib/root/6.24/lib $ cd; ```; Also in my working ROOT 6.22.08 installation it is not presetn:; ```; qon@qon /usr/lib/root/6.22/lib $ readelf -W -s libCling.so |grep getSymbolMaterializer; qon@qon /usr/lib/root/6.22/lib $ . ```. CMakeCache for 6.24.00 is attached.; [CMakeCache.txt.tar.gz](https://github.com/root-project/root/files/6501430/CMakeCache.txt.tar.gz),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180#issuecomment-843150311:203,install,installation,203,https://root.cern,https://github.com/root-project/root/issues/8180#issuecomment-843150311,1,['install'],['installation']
Deployability,It seems the clang used by that build does not contain cling's patches. Specifically we seem to be missing https://github.com/root-project/root/commit/573ddb01a4b82d827d80af5914742afd30ccb606#diff-cbb4c66db7e8e43a8aeb144f9385d5fbe6763889972a57f123eb0438be242e73,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1021223697:63,patch,patches,63,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1021223697,1,['patch'],['patches']
Deployability,"It seems to me one can now do:; ```; root [0] ROOT::IsImplicitMTEnabled(); (bool) false; root [1] TMVA::gConfig().EnableMT(4); root [2] ROOT::IsImplicitMTEnabled(); (bool) false; root [3] TMVA::gConfig().GetThreadExecutor().GetPoolSize(); (unsigned int) 4; ```; It could be expected that TMVA IMT implies ROOT IMT. And; ```; root [0] ROOT::EnableImplicitMT(4); root [1] TMVA::gConfig().GetThreadExecutor().GetPoolSize(); (unsigned int) 1; ```; Here the user may expect that TMVA uses IMT, however an extra `TMVA::gConfig().EnableMT()` is required. Are these two situations desirable? If not, the documentation of `ROOT::EnableImplicitMT` should be updated to indicate that TMVA IMT is controlled through a separate interface (`TMVA::gConfig()`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3585#issuecomment-476266847:648,update,updated,648,https://root.cern,https://github.com/root-project/root/pull/3585#issuecomment-476266847,1,['update'],['updated']
Deployability,"It seems to me that the test projectroot.roottest.root.io.double32.roottest_root_io_double32_make fails just because its reference file needs to be updated now. At least I don't see any critical problem with that test.; The test projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall failed once too, but on my local machine it is working. Unfortunately I can no longer access the build logs with my CERN account. Most probably because it was converted to a ""Lightweight Account"" so I am unable to investigate this further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008#issuecomment-921518889:148,update,updated,148,https://root.cern,https://github.com/root-project/root/pull/9008#issuecomment-921518889,1,['update'],['updated']
Deployability,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14910#issuecomment-1985824142:166,release,release,166,https://root.cern,https://github.com/root-project/root/issues/14910#issuecomment-1985824142,1,['release'],['release']
Deployability,"It seems, that GitHub does not work well with `git send-email`. You can also find the patch at `/afs/cern.ch/user/w/wollrath/public/0001-x11ttf-Set-correct-bitmap-padding-in-XCreateImage.patch`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8086#issuecomment-850810407:86,patch,patch,86,https://root.cern,https://github.com/root-project/root/issues/8086#issuecomment-850810407,2,['patch'],['patch']
Deployability,It should be including that patch:. * https://github.com/chrisburr/clangdev-feedstock/blob/9cffa75e1d67c94f951b43e38cbaaba3f2dd1e28/recipe/meta.yaml#L90; * https://github.com/chrisburr/clangdev-feedstock/blob/9cffa75e1d67c94f951b43e38cbaaba3f2dd1e28/recipe/patches/root/0060-Preserve-AnonStructIds-of-mangling-ctx.patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1021249932:28,patch,patch,28,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1021249932,3,['patch'],"['patch', 'patches']"
Deployability,It solves problem I recognize for the first time with ROOT7 webgui.; It was wrong representation for container like: std::vector<UserClass>; Patch for roottest will follow very soon.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/615:141,Patch,Patch,141,https://root.cern,https://github.com/root-project/root/pull/615,1,['Patch'],['Patch']
Deployability,"It turns out that RNTuple data should better not be stored in custom directories because. 1. It is hard to get the TBrowser integration correctly; the TBrowser can only know the special status of the directory when looking at the object, looking at its key is not enough; 2. All the page keys get added to the directory's key list, which is inefficient. Instead, RNTuple will be changed to replicate the TTree approach: an ntuple is represented by a single, small `RNTuple` object, but the actual page data is stored in anonymous keys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4651:124,integrat,integration,124,https://root.cern,https://github.com/root-project/root/pull/4651,1,['integrat'],['integration']
Deployability,It was deprecated (by comment) and emptied in year 2000. This patch removes all uses of it and 'registers' it to the modulemap to avoid our duplication algorithms do not find it as a duplicate.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2500:62,patch,patch,62,https://root.cern,https://github.com/root-project/root/pull/2500,1,['patch'],['patch']
Deployability,"It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15244:191,configurat,configuration,191,https://root.cern,https://github.com/root-project/root/pull/15244,1,['configurat'],['configuration']
Deployability,It was using the wrong signature leading to the configuration to be mis-read. Fixes #7754,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7755:48,configurat,configuration,48,https://root.cern,https://github.com/root-project/root/pull/7755,2,['configurat'],['configuration']
Deployability,"It wasn't an automatic test, I just have logs of memory used by an example job. > On Jul 12, 2022, at 12:14 PM, Jun Zhang ***@***.***> wrote:; > ; > ; > @vgvassilev - I added this patch for tonight's cmssw modules IB for a test...; > ; > Thank you, David! BTW how can I see the test result?; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1181589311:180,patch,patch,180,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1181589311,1,['patch'],['patch']
Deployability,It will be next major JSROOT release; Many changes (see jsroot log).; Main - upgrade of all used packages and moving to ES6 syntax.; Also trying to cleanup API,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6708:29,release,release,29,https://root.cern,https://github.com/root-project/root/pull/6708,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"It worked! Here the relevant output from `alma9`:; ```; Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec; Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec; Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec; Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec; ```; From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15596#issuecomment-2127378438:527,configurat,configuration,527,https://root.cern,https://github.com/root-project/root/pull/15596#issuecomment-2127378438,1,['configurat'],['configuration']
Deployability,"It would also help if the NLL in RooFit for binned fits is reformulated such that the normalization integral is only approximated by evaluating at the bin centers. Like this, the average binning effects are cancelling out because they appear both in the numerator and denominator. Only bin-dependent binning effects are remaining then. Besides reducing binning effects, this would improve numerical fit stability because no numeric integration of the PDF function needs to be done in the integral is not known analytically. More detail with the mathematical background can be found on the ROOT forum:; https://root-forum.cern.ch/t/minimized-nll-not-corresponding-to-best-chi2/50120/22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11951:432,integrat,integration,432,https://root.cern,https://github.com/root-project/root/issues/11951,1,['integrat'],['integration']
Deployability,It would have been even better if the git log enumerated the things that have been removed. Also don't forget to update the Release notes accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4988#issuecomment-586454187:113,update,update,113,https://root.cern,https://github.com/root-project/root/pull/4988#issuecomment-586454187,2,"['Release', 'update']","['Release', 'update']"
Deployability,"It's a bit more involved than that, from what I could understand from debugging: `RooRealIntegral` searches for the clients of the integration variables, and the plot variables have none (clone of the dataset variables?). ; Overriding the projection variables by passing `Project` to the pdf plot solves this, and then it becomes an actual pointer comparison problem as you say.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646#issuecomment-1519887890:131,integrat,integration,131,https://root.cern,https://github.com/root-project/root/issues/12646#issuecomment-1519887890,1,['integrat'],['integration']
Deployability,It's a little price to pay in order to collect all fixed issues for a certain release - a very useful feature for our users!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1928959572:78,release,release,78,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1928959572,1,['release'],['release']
Deployability,"It's a problem of old gccs. New compilers consider naming a variable the; same as a function not a shadow. This was fixed in gcc5, although the; release notes of gcc 4.8 claim that it was in 4.8. That's not the case,; as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7278:145,release,release,145,https://root.cern,https://github.com/root-project/root/pull/7278,1,['release'],['release']
Deployability,It's curious that small files grow in size due to this patch - is that understood?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12439#issuecomment-1457979999:55,patch,patch,55,https://root.cern,https://github.com/root-project/root/pull/12439#issuecomment-1457979999,1,['patch'],['patch']
Deployability,"It's guaranteed that tests excluded by this `ROOT_runtime_cxxmodules_FOUND` are temporary. We have one test in roottest which is inappropriate for modules and we want to exclude this, but I think we want to use REQUIRES-NOT pch for that when Vassil's patch is landed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1992#issuecomment-387658427:251,patch,patch,251,https://root.cern,https://github.com/root-project/root/pull/1992#issuecomment-387658427,1,['patch'],['patch']
Deployability,"It's not a good to backport such a fundamental change to the `RooRealIntegral` constructor, especially not now that we are late in the 6.26 release cycle already. Patch releases become rarer, and if this change causes other bugs if would take months before another patch release could come out with the patches for these potential bugs. I'm afraid in 6.26 we have to live now with this limitation of the batch mode! But maybe you could just use ROOT `master`? The ROOT master nightlies are even on cvmfs:; https://root.cern/install/nightlies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11597#issuecomment-1283659274:140,release,release,140,https://root.cern,https://github.com/root-project/root/pull/11597#issuecomment-1283659274,7,"['Patch', 'install', 'patch', 'release']","['Patch', 'install', 'patch', 'patches', 'release', 'releases']"
Deployability,It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16105:144,update,updated,144,https://root.cern,https://github.com/root-project/root/pull/16105,1,['update'],['updated']
Deployability,"It's still one less patch needed for the conda packaging. Clearly there's a bigger rock to move, but this smaller one could be moved anyway perhaps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2205388408:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2205388408,1,['patch'],['patch']
Deployability,"It's understood. Older gccs won't allow to construct std::tuple from e.g. {1, 1}. That was fixed after the release of C++11.; Fix incoming.; Clarification:; c++11 didn't allow, and gcc implemented. They were conforming to the standard at the time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5530#issuecomment-623522131:107,release,release,107,https://root.cern,https://github.com/root-project/root/pull/5530#issuecomment-623522131,1,['release'],['release']
Deployability,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github; - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7334#issuecomment-789011675:244,integrat,integrated,244,https://root.cern,https://github.com/root-project/root/pull/7334#issuecomment-789011675,4,"['integrat', 'release']","['integrated', 'releases']"
Deployability,"Its Python 3.11 needs the upcoming Spark release, see https://github.com/apache/spark/pull/38987",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12544:41,release,release,41,https://root.cern,https://github.com/root-project/root/pull/12544,1,['release'],['release']
Deployability,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff; diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; index 9548c4adf0..3e39c80f33 100644; --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; @@ -57,6 +57,7 @@ private:; static unsigned int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9474#issuecomment-998846312:311,patch,patch,311,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312,2,['patch'],['patch']
Deployability,"I’ve recently updated my ROOT version to v6.20.06 and my once working code snippet to plot several pdf components on the same canvas broke. No matter if I select the pdf components by object reference or by name, i.e. by:. ```; modelTot.plotOn(frame, RooFit::Components(“ modelBkgTotTrig*”),; FillColor(93), LineColor(93), DrawOption(“F”));; ```. or by:. ```; modelTot.plotOn(frame, RooFit::Components(RooArgSet(expo)),; FillColor(93), LineColor(93), DrawOption(“F”));; ```. I get:. ```; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelTot0) directly selected PDF components: (modelBkgTotTrig0); [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelTot0) indirectly selected PDF components: (); terminate called after throwing an instance of 'std::regex_error'; what(): Unexpected character in brace expression.; Aborted (core dumped); ```. It looks like they are found but then the regex_error appears.; Is this a known issure or shall I do something different to select the pdfs to plot?. Thanks,; Davide",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115:14,update,updated,14,https://root.cern,https://github.com/root-project/root/issues/7115,1,['update'],['updated']
Deployability,"JECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:1889,patch,patches,1889,https://root.cern,https://github.com/root-project/root/issues/11259,2,['patch'],['patches']
Deployability,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:3143,release,releases,3143,https://root.cern,https://github.com/root-project/root/issues/13811,3,"['Install', 'release']","['Installation', 'releases']"
Deployability,JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15352:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/15352,2,"['patch', 'release']","['patches', 'release']"
Deployability,"Javier is testing this patch, so I marked as do-not-merge until I get positive feedback here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/899#issuecomment-325365214:23,patch,patch,23,https://root.cern,https://github.com/root-project/root/pull/899#issuecomment-325365214,2,['patch'],['patch']
Deployability,Javier wants to update the branch. Do not merge yet.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4222#issuecomment-521922711:16,update,update,16,https://root.cern,https://github.com/root-project/root/pull/4222#issuecomment-521922711,1,['update'],['update']
Deployability,"Jenkins is unhappy about the last commit, apparently we have a number of `unhandled Error`s. Unfortunately I cannot reproduce locally on EL8 :confused: I'm going to remove that commit for now, and also make the new CI do a clean build so that it picks up a clean CMake configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12879#issuecomment-1562378395:269,configurat,configuration,269,https://root.cern,https://github.com/root-project/root/pull/12879#issuecomment-1562378395,1,['configurat'],['configuration']
Deployability,Jenkins updated wrongly the status of this PR. Cdash shows full set of tests being green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4656#issuecomment-559837778:8,update,updated,8,https://root.cern,https://github.com/root-project/root/pull/4656#issuecomment-559837778,1,['update'],['updated']
Deployability,"Jonas,; we can merge this PR and do not wait for civetweb 1.16 release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380#issuecomment-1104890473:63,release,release,63,https://root.cern,https://github.com/root-project/root/pull/10380#issuecomment-1104890473,1,['release'],['release']
Deployability,JsMVA should be updated to use the same jsroot version as the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12441:16,update,updated,16,https://root.cern,https://github.com/root-project/root/issues/12441,1,['update'],['updated']
Deployability,"Jupyter may be configured to be served on different base url's, so we cannot assume that is accessible in `/`. This is the case, for example, when it's used together with JupyterHub (like SWAN), where the base url is `/user/_username_/`.; This PR fixes the way jsROOT is loaded in order to take that into account. . For that, I've removed `/static/`, which forced the absolute url to the file, and let requireJs apply its own configuration (which takes the base url into account). For Jupyterlab, I also load requireJs with the base url. In case requireJs is not available (maybe it will be possible to install Jupyterlab without Jupyter Notebooks in the future?), it falls back to a cdn to load it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:426,configurat,configuration,426,https://root.cern,https://github.com/root-project/root/pull/4652,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Just FYI, I confirm that with the new release of ROOT 6.30.02 the issue reported in the forum is solved. Thanks for taking care!. Alessio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12498#issuecomment-1885231841:38,release,release,38,https://root.cern,https://github.com/root-project/root/issues/12498#issuecomment-1885231841,1,['release'],['release']
Deployability,"Just a quick head up!. Adding a virtual method break some of our use code.; The virtual method was not implemented in one of our class, what use to be a normal class is now a virtual class and that cannot be instantiated anymore. The first compilation problem seems to be solved simply by upgrading to the last release of GEANT3, it should not be a big issue, but I just wanted to point out this ""problem"". Cheers,; Simone",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513#issuecomment-516427404:311,release,release,311,https://root.cern,https://github.com/root-project/root/pull/3513#issuecomment-516427404,2,['release'],['release']
Deployability,"Just a small update moving the `#include <pthread.h>` from `BidirMMapPipe.cxx` to `BidirMMapPipe.h` (before, it was not noticed that it was missing because `#include ""BidirMMapPipe.h""` was the final include in the `cxx` file and not the first one, so there was no header consistency check of `BidirMMapPipe.h` ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9504#issuecomment-1007312912:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/9504#issuecomment-1007312912,1,['update'],['update']
Deployability,"Just a small update,; I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:; ```python; import ROOT; f = ROOT.TFile(""file1.root"", ""recreate""); f.Close(); f.Close(); ```; So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11823#issuecomment-1337020095:13,update,update,13,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1337020095,2,['update'],['update']
Deployability,Just added a short example to the release notes showing how to create branches of the new types with and without specifying a range or amount of bits.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3463#issuecomment-468722817:34,release,release,34,https://root.cern,https://github.com/root-project/root/pull/3463#issuecomment-468722817,1,['release'],['release']
Deployability,"Just as a fly-by comment, I don't know if we can retire or in general change the signature of a constructor of a core class like that. It will probably require at least one release cycle with a warning printed whenever it is used. Then I would also agree with @guitargeek that the explicit constructor is the better approach here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15451#issuecomment-2100576555:173,release,release,173,https://root.cern,https://github.com/root-project/root/pull/15451#issuecomment-2100576555,1,['release'],['release']
Deployability,"Just for documentation purposes, I am having fun with this at the moment; ```; 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure; 503: Failed ; 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: ; 503: severity: kError ; 503: received: 0 times (required, fullMatch) ; 503: origin: ""Setup()"" ; 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree; player/test/DisappearingBranch1.root'. ; 503: ; 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure; 503: Failed ; 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; 503: severity: kError ; 503: origin: ""Setup()"" ; 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree; player/test/DisappearingBranch1.root'.; ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16377#issuecomment-2334129931:1006,UPDATE,UPDATE,1006,https://root.cern,https://github.com/root-project/root/pull/16377#issuecomment-2334129931,1,['UPDATE'],['UPDATE']
Deployability,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671#issuecomment-1946037945:140,Update,Update,140,https://root.cern,https://github.com/root-project/root/pull/14671#issuecomment-1946037945,1,['Update'],['Update']
Deployability,"Just for reference this patch is needed by [this PR](https://github.com/conda-forge/root-feedstock/pull/245). Once that PR will be merged and I'll be sure this is the right patch for it, then I'll merge it in ROOT as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15678#issuecomment-2138714077:24,patch,patch,24,https://root.cern,https://github.com/root-project/root/pull/15678#issuecomment-2138714077,2,['patch'],['patch']
Deployability,"Just for temporary use; if you don't need the gui, you could try `https://root-forum.cern.ch/t/building-failed-after-upgrade-to-mac-os-13-3-1/54420/2`; if you don't need to generate dictonary yourself, using `homebrew` to install precompiled root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1508089554:117,upgrade,upgrade-to-mac-os-,117,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1508089554,2,"['install', 'upgrade']","['install', 'upgrade-to-mac-os-']"
Deployability,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,; >; > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301; >; > Could the code at this location be extended to support restricting the range of discrete observables in the fit?; >; > Thanks; > Will",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8231#issuecomment-1163081204:649,continuous,continuous,649,https://root.cern,https://github.com/root-project/root/issues/8231#issuecomment-1163081204,1,['continuous'],['continuous']
Deployability,"Just found that the above change is made in the 6.26 release note on the `v6-28-00-patches` branch, and the 6.28 release note is still waiting for update.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12131#issuecomment-1407459004:53,release,release,53,https://root.cern,https://github.com/root-project/root/pull/12131#issuecomment-1407459004,4,"['patch', 'release', 'update']","['patches', 'release', 'update']"
Deployability,Just had to update the PR because I forgot to remove one line of include.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14494#issuecomment-1918743759:12,update,update,12,https://root.cern,https://github.com/root-project/root/pull/14494#issuecomment-1918743759,1,['update'],['update']
Deployability,"Just tested with latest ROOT (master) and roottest (master) with both VS 2019 and VS 2022:; ```; C:\Users\bellenot\build\x64\release>ctest -VV -C Release -R nullderef; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Test project C:/Users/bellenot/build/x64/release; Constructing a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 972; Start 972: roottest-cling-exception-nullderef-e. 972: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-l^-b^-q^--ptrcheck^-e^int*p=nullptr^-e^*p"" ""-DOUT=C:/Users/bellenot/build/x64/release/roottest/cling/exception/nullderef-e.log"" ""-DCWD=C:/Users/bellenot/build/x64/release/roottest/cling/exception"" ""-DRC=1"" ""-DDIFFCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/roottest/scripts/custom_diff.py"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 972: Environment variables:; 972: ROOT_HIST=0; 972: Test timeout computed to be: 300; 972: -- TEST COMMAND --; 972: cd C:/Users/bellenot/build/x64/release/roottest/cling/exception; 972: C:/Users/bellenot/build/x64/release/bin/root.exe -l -b -q --ptrcheck -e 'int*p=nullptr' -e '*p'; 972: -- BEGIN TEST OUTPUT --; 972:; 972: (int *) nullptr; 972:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742#issuecomment-1025965371:125,release,release,125,https://root.cern,https://github.com/root-project/root/issues/9742#issuecomment-1025965371,9,"['Release', 'Update', 'release']","['Release', 'UpdateCTestConfiguration', 'release']"
Deployability,"Just testing for now, please do not merge as there are LLVM patches in the mix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1393:60,patch,patches,60,https://root.cern,https://github.com/root-project/root/pull/1393,1,['patch'],['patches']
Deployability,"Just testing for now, still need to define how CMake options will be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1595:69,update,updated,69,https://root.cern,https://github.com/root-project/root/pull/1595,1,['update'],['updated']
Deployability,"Just to have my patch fixing other things serialized:; ```diff; diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp; index 93a48f3..18c7029 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp; +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp; @@ -34,6 +34,8 @@; ; #include <iostream>; ; +#include ""llvm/Support/Debug.h""; +; using namespace llvm;; ; namespace cling {; @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,; : m_Diags(diags); #endif; {; + //llvm::DebugFlag = true;; + //setCurrentDebugType(""dyld"");; ; // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition; std::atomic_flag_clear( &m_AtExitFuncsSpinLock );; diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; index e20543b..668bf0b 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,; this->m_Resolver};; },; m_NotifyObjectLoaded, NotifyFinalizedT(*this)),; - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),; + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),; m_LazyEmitLayer(m_CompileLayer) {; ; m_CompileLayer.setNotifyCompiled(NCC);; diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h; index df4360f..ac4c851 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h; @@ -38,6 +38,37 @@ namespace cling {; class Azog;; class IncrementalExecutor;; ; + class MySimpleCompiler : public llvm::orc::SimpleCompiler {; + public:; + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr); + : SimpleCompiler(TM, ObjCache) {}; + CompileResult o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380#issuecomment-985923087:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/pull/9380#issuecomment-985923087,1,['patch'],['patch']
Deployability,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552#issuecomment-2396009029:152,configurat,configuration,152,https://root.cern,https://github.com/root-project/root/issues/16552#issuecomment-2396009029,1,['configurat'],['configuration']
Deployability,Just undo-ed the update.; Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286#issuecomment-970839284:17,update,update,17,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-970839284,2,['update'],['update']
Deployability,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949#issuecomment-1361867124:5,update,updated,5,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867124,1,['update'],['updated']
Deployability,"Just very simple macro:. ```; void *getGlobal(const char *name) ; {; auto gl = gROOT->GetListOfGlobals()->FindObject(name);; if (!gl) return nullptr; ; TGlobal *global = dynamic_cast<TGlobal *> (gl);; return global ? global->GetAddress() : nullptr;; }. void test() ; {; TCanvas c1;; printf(""gROOT %p %p\n"", gROOT, getGlobal(""gROOT""));; printf(""gPad %p %p\n"", gPad, getGlobal(""gPad""));; }; ```; In current ROOT master - gROOT prints identical code, gPad is **DIFFERENT**; This the provided patch gPad and gROOT printouts are identical.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-449373735:489,patch,patch,489,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-449373735,2,['patch'],['patch']
Deployability,"Keras 2.4 version is not a mult-backend version as before, but is just tensorflow.keras, see https://github.com/keras-team/keras/releases/tag/2.4.0. Old keras code will not work then with Keras 2.4 and one needs to swicth to use tensorflow.keras in that case",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6793:129,release,releases,129,https://root.cern,https://github.com/root-project/root/pull/6793,1,['release'],['releases']
Deployability,"Kind)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::WhileStmt::Create(clang::ASTContext const&, clang::VarDecl*, clang::Expr*, clang::Stmt*, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::ASTContext::getConstantArrayType(clang::QualType, llvm::APInt const&, clang::ArrayType::ArraySizeModifier, unsigned int) const'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXFunctionalCastExpr::Create(clang::ASTContext const&, clang::QualType, clang::ExprValueKind, clang::TypeSourceInfo*, clang::CastKind, clang::Expr*, llvm::SmallVector<clang::CXXBaseSpecifier*, 4u> const*, clang::SourceLocation, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXMethodDecl::Create(clang::ASTContext&, clang::CXXRecordDecl*, clang::SourceLocation, clang::DeclarationNameInfo const&, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, bool, clang::ConstexprSpecKind, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: collect2: error: ld returned 1 exit status; ```. when compiling with (v6-28-00-patches) 5ffba22ef571dea2d6eaf186662e19d5a7789a05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12209:9101,patch,patches,9101,https://root.cern,https://github.com/root-project/root/issues/12209,1,['patch'],['patches']
Deployability,"Ks/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft31 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-fea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:13433,Install,InstalledDir,13433,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['Install'],['InstalledDir']
Deployability,"Ks/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft34 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-fea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:22237,Install,InstalledDir,22237,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['Install'],['InstalledDir']
Deployability,"L:${module_defs}>:-D$<JOIN:${module_defs},;-D>>""; ```. Experimentally having INTERFACE_COMPILE_DEFINITIONS contains a single value:; ```; ""SOMETHING""; ```; or a value plus one or more 'empty' generator expressions:; ```; ""SOMETHING;\$<\$<NOT:\$<BOOL:ON>>:JSON_USE_GLOBAL_UDLS=0>""; ```; or a single 'empy' generator expressions:; ```; ""\$<\$<NOT:\$<BOOL:ON>>:JSON_USE_GLOBAL_UDLS=0>""; ```. However if INTERFACE_COMPILE_DEFINITIONS contains 2 or more 'empty' generator; expressions and no other values:; ```; ""\$<\$<NOT:\$<BOOL:ON>>:JSON_USE_GLOBAL_UDLS=0>;\$<\$<NOT:\$<BOOL:ON>>:JSON_USE_IMPLICIT_CONVERSIONS=0>;\$<\$<BOOL:OFF>:JSON_DISABLE_ENUM_SERIALIZATION=1>;\$<\$<BOOL:OFF>:JSON_DIAGNOSTICS=1>;\$<\$<BOOL:OFF>:JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON=1>""; ```. It also appears to works if you don't quote the expressions:; ```; $<$<NOT:$<BOOL:ON>>:JSON_USE_GLOBAL_UDLS=0> $<$<NOT:$<BOOL:ON>>:JSON_USE_IMPLICIT_CONVERSIONS=0> ..; ```. However since those lines of cmake are generated by CMake as part of the install,; we have to deal with the way they are.CMake. It is fixed on the ROOT side with:. ```; commit 08ab7e03061e551647d707637957252d121f9c39 (HEAD); Author: Jonas Rembser <jonas.rembser@cern.ch>; Date: Tue Sep 21 15:15:17 2021 +0200. [cmake] Protect against empty `COMPILE_DEFINITIONS` in rootcint command; ```. but it should be applied also to REFLEX_GENERATE_DICTIONARY:; ```; diff --git a/cmake/modules/RootMacros.cmake b/cmake/modules/RootMacros.cmake; index a19ee4e363..22816fdc8e 100644; --- a/cmake/modules/RootMacros.cmake; +++ b/cmake/modules/RootMacros.cmake; @@ -174,12 +174,16 @@ function(REFLEX_GENERATE_DICTIONARY dictionary). get_directory_property(defs COMPILE_DEFINITIONS); foreach( d ${defs}); + # Note: should we check for empty definitions here?; list(APPEND definitions ${d}); endforeach(). IF(TARGET ${dictionary}); LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); - LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312#issuecomment-1236133895:2004,install,install,2004,https://root.cern,https://github.com/root-project/root/issues/11312#issuecomment-1236133895,1,['install'],['install']
Deployability,"LAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected parameter declarator; template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:57: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:6318,Install,InstallArea,6318,https://root.cern,https://github.com/root-project/root/issues/6454,1,['Install'],['InstallArea']
Deployability,"LGTM thanks. Can we have a release notes entry, mentioning that the splash screen can be seen with `-a` aka ""about""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4187#issuecomment-522512950:27,release,release,27,https://root.cern,https://github.com/root-project/root/pull/4187#issuecomment-522512950,1,['release'],['release']
Deployability,LGTM. Maybe it should be added to 6.30.04 release notes https://github.com/root-project/root/blob/master/README/ReleaseNotes/v630/index.md,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14204#issuecomment-1851552083:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/14204#issuecomment-1851552083,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,LHCb requested adding the Hypatia PDF. A function for fast batch evaluations is missing. Also sneaked in a few small bugfixes and documentation updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4564:144,update,updates,144,https://root.cern,https://github.com/root-project/root/pull/4564,1,['update'],['updates']
Deployability,"LIBRARY); -- Pythia8 not found. Switching off pythia8 option; -- Looking for FFTW3; -- Found fftw3 includes at /usr/include; -- Found fftw3 library at /usr/lib/libfftw3.so; -- Looking for CFITSIO; -- Could NOT find CFITSIO (missing: CFITSIO_LIBRARY CFITSIO_INCLUDE_DIR); -- CFITSIO not found. You can enable the option 'builtin_cfitsio' to build the library internally'; -- For the time being switching off 'fitsio' option; -- Looking for XROOTD; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.4.2; -- Could NOT find GFAL (missing: GFAL_INCLUDE_DIR SRM_IFCE_INCLUDE_DIR GFAL_LIBRARY); -- GFAL library not found. Set variable GFAL_DIR to point to your gfal installation; and the variable SRM_IFCE_DIR to the srm_ifce installation; -- For the time being switching OFF 'gfal' option; -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:7159,install,installation,7159,https://root.cern,https://github.com/root-project/root/issues/10528,1,['install'],['installation']
Deployability,"LLVM had a bug where constructors with the same priority would not be stably sorted. This has been fixed upstream by https://github.com/llvm/llvm-project/pull/95532, but to avoid relying on a backport this commit works around the issue: The idea is that we lower the default priority of concerned constructors to make them sort correctly. ---. As discussed, this provides a bit of magic :magic_wand: to work around the bug if we don't have the backport, for example in the Conda releases. I propose we still leave the backport in our copy of LLVM though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16420:479,release,releases,479,https://root.cern,https://github.com/root-project/root/pull/16420,1,['release'],['releases']
Deployability,"LLVM has dropped it's svn instance, so cpt was unable to retrieve LLVM from svn (and Cling CI was failing). Also, lit is not being installed as an independent package on MacOS when being installed using Python2's pip (used to work earlier). Therefore we decided to drop Python 2 (also Python 2 has reached end of life). @Axel-Naumann This should also solve the sudo issue when running tests, that you mentioned to me around a year ago ;). Linked issue - https://github.com/root-project/cling/issues/385",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7229:131,install,installed,131,https://root.cern,https://github.com/root-project/root/pull/7229,2,['install'],['installed']
Deployability,LLVM is technically patch free. We can teach our build system to try to find LLVM 5.0 and use it. The tricky part is that we still need to build clang (we should probably set the `LLVM_EXTERNAL_CLANG_SOURCE_DIR`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1509#issuecomment-357631977:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/pull/1509#issuecomment-357631977,1,['patch'],['patch']
Deployability,"LUDE_PATH: /usr/include; -- X11_Xft_LIB: /usr/lib64/libXft.so; -- X11_Xext_INCLUDE_PATH: /usr/include; -- X11_Xext_LIB: /usr/lib64/libXext.so; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR); -- Found TIFF: /usr/lib64/libtiff.so (found version ""4.0.3""); -- Found PNG: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/png/1.6.37/x86_64-centos7-gcc9-dbg/lib/libpng.so (found version ""1.6.37""); -- Found JPEG: /usr/lib64/libjpeg.so (found version ""62""); -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Found PkgConfig: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/pkg_config/0.29.2/x86_64-centos7-gcc9-dbg/bin/pkg-config (found version ""0.29.2""); -- Found GSL: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/GSL/2.7/x86_64-centos7-gcc9-dbg/include (found suitable version ""2.7"", minimum required is ""1.10""); -- Looking for OpenGL; -- Found OpenGL: /usr/lib64/libOpenGL.so; -- Looking for gl2ps; -- Found gl2ps: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/gl2ps/1.4.0/x86_64-centos7-gcc9-dbg/lib/libgl2ps.so; -- Looking for LibXml2; -- Found LibXml2: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/libxml2/2.9.10/x86_64-centos7-gcc9-dbg/lib/libxml2.so (found version ""2.9.10""); -- Found OpenSSL: /usr/lib64/libcrypto.so (found version ""1.0.2k""); -- Looking for MySQL; -- Found MySQL: /cvmfs/sft-nightlies.cern.ch/lcg/latest/mysql/10.4.20-00b73/x86_64-centos7-gcc9-dbg/include/mysql; -- Looking for Oracle; -- Found sqlplus version: 19.0.0.0.0; -- Guessed ORACLE_OCI_VERSION value: 9; -- Found Oracle: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg/lib/libocci.so;/build/jenkins/workspace/lcg_nightly_pipeline/instal; l/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg/lib/libclntsh.so;/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg/lib/libnnz19.so; -- Looking for SQLite; -- Found Sqlite: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:8572,install,install,8572,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['install'],['install']
Deployability,LZ4 upgrade to latest recommended version (multiple bug fixes),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4429:4,upgrade,upgrade,4,https://root.cern,https://github.com/root-project/root/pull/4429,1,['upgrade'],['upgrade']
Deployability,"L_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:3697,install,install,3697,https://root.cern,https://github.com/root-project/root/issues/7518,1,['install'],['install']
Deployability,Last force-push splits PR into two commits following advice from @hageboeck (thanks!): one commit for the changes in the RooFit code and one commit for the release note change. Now the PR is again ready to be reviewed as far as I'm concerned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7245#issuecomment-781381490:156,release,release,156,https://root.cern,https://github.com/root-project/root/pull/7245#issuecomment-781381490,1,['release'],['release']
Deployability,"Last performance measurement:; ```.cpp; #include <ROOT/RDataFrame.hxx>. int main(); {; ROOT::EnableImplicitMT();; auto tdf = ROOT::RDataFrame(""rechitntupler/hits"", ""DataForDanilo/ntuple_*.root"");; tdf.Histo1D(""run"")->Draw();; return 0;; }; ```; where `DataForDanilo/ntuple_*.root` is a set of 343 files with a size between 2.2MB to ~100KB. Without the patch, 8 cores, it takes 22s. With the patch 8s. And this is orthogonal to #2116.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393877726:352,patch,patch,352,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393877726,2,['patch'],['patch']
Deployability,Last step :) ... we need to add a nice description of this feature in at least the release notes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/959#issuecomment-328183727:83,release,release,83,https://root.cern,https://github.com/root-project/root/pull/959#issuecomment-328183727,1,['release'],['release']
Deployability,"Last year, with commit 3657e7c, the parameter index calculation was; changed to be on the fly instead of using a look-up map, which is much; faster. However, the implemented formula was not correct for two or three; dimensions, which is fixed by this commit. To make sure that the index computation is correct this time, the new; code was tested in this code snippet with various inputs:. ```C++; void runTest(int nx = 42, int ny = 42, int nz = 42) {; const int nxy = nx * ny;; const int nyz = ny * nz;. for (int i = 0; i < nx; ++i) {; for (int j = 0; j < ny; ++j) {; for (int k = 0; k < nz; ++k) {; const int index = k + j * nz + i * ny * nz;; const int gammaIndex = i + j * nx + k * nx * ny;. const int i2 = index / nyz;; const int tmp = index % nyz;; const int j2 = tmp / nz;; const int k2 = tmp % nz;. const int gammaIndex2 = i2 + j2 * nx + k2 * nxy;. if (gammaIndex2 != gammaIndex) {; std::cout << ""The unraveled indices were not correct!""; << std::endl;; return;; }; }; }; }; }; ```. Needs to be backported to the 6.26 branch to get into the 6.26.06 patch; release. This commit the following problem reported on the forum:; https://root-forum.cern.ch/t/cpycppyy-segfault-on-mac-m1/50822",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10989:1056,patch,patch,1056,https://root.cern,https://github.com/root-project/root/pull/10989,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Latest commit addresses all comments. Examples from the build nodes:; Failure example: [ROOT-performance-centos8-multicore/default](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/109377/console) (pyspark is not installed on this system); ```; 13:04:01 -- Looking for PySpark; 13:04:01 -- Looking for PySpark dependency: Java; 13:04:01 -- Found Java: /usr/bin/java (found suitable version ""1.8.0.275"", minimum required is ""1.8"") found components: Runtime ; 13:04:01 -- Found Java /usr/bin/java; 13:04:01 -- Java version 1.8.0_275; 13:04:01 -- Python package 'pyspark' could not be imported with /usr/bin/python; 13:04:01 Traceback (most recent call last):; 13:04:01 File ""<string>"", line 1, in <module>; 13:04:01 ModuleNotFoundError: No module named 'pyspark'; 13:04:01 ; 13:04:01 CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; 13:04:01 Could NOT find PySpark (missing: PySpark_HOME) (Required is at least; 13:04:01 version ""2.4""); 13:04:01 Call Stack (most recent call first):; 13:04:01 /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); 13:04:01 cmake/modules/FindPySpark.cmake:55 (find_package_handle_standard_args); 13:04:01 cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); 13:04:01 cmake/modules/SearchInstalledSoftware.cmake:1876 (find_package); 13:04:01 CMakeLists.txt:219 (include); ```. Success example: [ROOT-fedora30/default](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/109385/consoleFull) ; ```; 13:05:04 -- Looking for PySpark; 13:05:04 -- Looking for PySpark dependency: Java; 13:05:04 -- Found Java: /usr/bin/java (found suitable version ""1.8.0.252"", minimum required is ""1.8"") found components: Runtime ; 13:05:04 -- Found Java /usr/bin/java; 13:05:04 -- Java version 1.8.0_252; 13:05:04 -- Found PySpark: /usr/local/lib/python3.7/site-packages/pyspark (found suitable version ""3.0.1"", minimum required is ""2.4"") ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7371#issuecomment-792725234:237,install,installed,237,https://root.cern,https://github.com/root-project/root/pull/7371#issuecomment-792725234,1,['install'],['installed']
Deployability,Latest commit implements both ; * `LC_RPATH = build/lib` for libraries in `build/lib` (via the CMAKE_INSTALL_RPATH flag added to the builtin_xrootd build process); * `LC_RPATH = install/lib` for libraries in `install/lib` (via a post install script). Thanks @hageboeck for the hints!. @Axel-Naumann Ready for review!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128#issuecomment-672902329:178,install,install,178,https://root.cern,https://github.com/root-project/root/pull/6128#issuecomment-672902329,3,['install'],['install']
Deployability,"Latest xrood 4.12.8 merged into master, 6.24 and 6.22 branches and fixes compilation problem.; Upgrade to xroot 5.1 needs more investigation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7292#issuecomment-791906238:95,Upgrade,Upgrade,95,https://root.cern,https://github.com/root-project/root/issues/7292#issuecomment-791906238,1,['Upgrade'],['Upgrade']
Deployability,Learning from what the LLVM configuration is doing I believe I managed to make my code quite a bit better. :wink: So I'll be curious about any feedback on this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-546388568:28,configurat,configuration,28,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-546388568,2,['configurat'],['configuration']
Deployability,Let configure such property; Better handling of double click in file dialog; Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9146:77,Update,Update,77,https://root.cern,https://github.com/root-project/root/pull/9146,1,['Update'],['Update']
Deployability,Let configure web display kind when running `rootbrowse`. More important - run event loop when web-based browser is started.; In contrary to normal `TBrowser` one needs event loop running. Fix web-display configuration problem when `WebGui.Display: something` configured in rootrc file.; In such case always web-batch-mode kind was selected. Addressing [question on forum](https://root-forum.cern.ch/t/is-there-an-option-to-customize-rootbrowse/62066/),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16807:205,configurat,configuration,205,https://root.cern,https://github.com/root-project/root/pull/16807,1,['configurat'],['configuration']
Deployability,"Let me add a reproducer where you only need to open the file and try to exit:. % setupATLAS -c centos7 --pwd /afs/cern.ch/work/w/wlampl/public/ATEAM-1001; % asetup Athena,21.0,latest; % root -b tmp.RDO. | Welcome to ROOT 6.08/06 http://root.cern.ch |; Attaching file tmp.RDO as _file0...; Warning in <TClass::Init>: no dictionary for class ROOT::TIOFeatures is available; (TFile *) 0x29cf190; root [1] .q. *** Break *** segmentation violation; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f6cdd6c560c in waitpid () from /lib64/libc.so.6; #1 0x00007f6cdd642f62 in do_system () from /lib64/libc.so.6; #2 0x00007f6cdecce102 in TUnixSystem::StackTrace() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #3 0x00007f6cdecd061c in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #4 <signal handler called>; #5 0x0000000001209080 in ?? (); #6 0x00007f6cdec52005 in TList::FindObject(TObject const*) const () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #7 0x00007f6cdec5237c in TList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #8 0x00007f6cdec50a01 in THashTable::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #9 0x00007f6cdec504dd in THashList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2202499805:815,release,releases,815,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2202499805,1,['release'],['releases']
Deployability,"Let me add here another output from the patched `rootls` of the linked PR:; ```; vpadulan@fedorathinkpad-T550 [~]: rootls -l https://root.cern/files/tutorials/hsimple.root; TProfile Apr 14 17:47 2021 hprof;1 ""Profile of pz versus px"" ; TH1F Apr 14 17:47 2021 hpx;1 ""This is the px distribution"" ; TH2F Apr 14 17:47 2021 hpxpy;1 ""py vs px"" ; TNtuple Apr 14 17:47 2021 ntuple;1 ""Demo ntuple"" ; vpadulan@fedorathinkpad-T550 [~]: rootcp -r https://root.cern/files/tutorials/hsimple.root hsimplecopy.root; vpadulan@fedorathinkpad-T550 [~]: rootcp -r https://root.cern/files/tutorials/hsimple.root hsimplecopy.root; vpadulan@fedorathinkpad-T550 [~]: rootcp -r https://root.cern/files/tutorials/hsimple.root hsimplecopy.root; vpadulan@fedorathinkpad-T550 [~]: rootls -l hsimplecopy.root; TProfile Apr 17 10:00 2021 hprof;3 ""Profile of pz versus px"" [current cycle]; TProfile Apr 17 10:00 2021 hprof;2 ""Profile of pz versus px"" [backup cycle]; TProfile Apr 17 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]; TH1F Apr 17 10:00 2021 hpx;3 ""This is the px distribution"" [current cycle]; TH1F Apr 17 10:00 2021 hpx;2 ""This is the px distribution"" [backup cycle]; TH1F Apr 17 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]; TH2F Apr 17 10:00 2021 hpxpy;3 ""py vs px"" [current cycle]; TH2F Apr 17 10:00 2021 hpxpy;2 ""py vs px"" [backup cycle]; TH2F Apr 17 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]; TNtuple Apr 17 10:00 2021 ntuple;3 ""Demo ntuple"" [current cycle]; TNtuple Apr 17 10:00 2021 ntuple;2 ""Demo ntuple"" [backup cycle]; TNtuple Apr 17 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7053#issuecomment-822609931:40,patch,patched,40,https://root.cern,https://github.com/root-project/root/issues/7053#issuecomment-822609931,1,['patch'],['patched']
Deployability,Let me know if you still see this in v6-24-00-patches or the upcoming v6.24/02 and I'll reopen this issue!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454#issuecomment-868678924:46,patch,patches,46,https://root.cern,https://github.com/root-project/root/issues/6454#issuecomment-868678924,1,['patch'],['patches']
Deployability,Let me know when it will be in and I will install the new version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10059#issuecomment-1080317348:42,install,install,42,https://root.cern,https://github.com/root-project/root/issues/10059#issuecomment-1080317348,1,['install'],['install']
Deployability,Let me reload your PR (I also install the latest ROOt master branch). Brb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081540346:30,install,install,30,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081540346,1,['install'],['install']
Deployability,"Let's get this in (including v6-26-00-patches, please)!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9056#issuecomment-1007258072:38,patch,patches,38,https://root.cern,https://github.com/root-project/root/pull/9056#issuecomment-1007258072,1,['patch'],['patches']
Deployability,Let's move the discussion whether we should install or disable the xrootd CLI tools to #7441.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7443#issuecomment-795620339:44,install,install,44,https://root.cern,https://github.com/root-project/root/pull/7443#issuecomment-795620339,1,['install'],['install']
Deployability,"Let's see if this doesn't break anything. @wdconinc, @kkauder, if we merge this, do you need a backport to the 6.30 branch so this makes it into the 6.30.02 patch release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14251#issuecomment-1858891444:157,patch,patch,157,https://root.cern,https://github.com/root-project/root/pull/14251#issuecomment-1858891444,2,"['patch', 'release']","['patch', 'release']"
Deployability,Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16030:22,configurat,configuration,22,https://root.cern,https://github.com/root-project/root/pull/16030,1,['configurat'],['configuration']
Deployability,Let's see if this will work. I installed arrow on the Ubuntu 18.04 and CentOS 7 nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-453447918:31,install,installed,31,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-453447918,1,['install'],['installed']
Deployability,"Like this, we are polluting the build and install directories less with unneeded files and it also speeds up the build process a bit if RooFit and/or TMVA are disabled. Their pythonization files don't need to be compiled to `.pyc` files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12042:42,install,install,42,https://root.cern,https://github.com/root-project/root/pull/12042,2,['install'],['install']
Deployability,"LikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================. Root > .q; ```. ### ROOT version; ```; ❯ which root; /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/bin/root; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 19",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:16111,release,releases,16111,https://root.cern,https://github.com/root-project/root/issues/15511,1,['release'],['releases']
Deployability,"LikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================; ```. ### Reproducer. With the `test_env.sh` included in [test_env.zip](https://github.com/root-project/root/files/15310428/test_env.zip) on lxplus.cern.ch:; ```; ❯ hx test_env.sh; -bash: hx: command not found; marcocle in 🌐 lxplus913 in ~/tmp/root-issue; ❯ vim test_env.sh;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:3371,release,releases,3371,https://root.cern,https://github.com/root-project/root/issues/15511,1,['release'],['releases']
Deployability,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14564#issuecomment-1940728327:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/issues/14564#issuecomment-1940728327,1,['patch'],['patch']
Deployability,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7858:35,release,release,35,https://root.cern,https://github.com/root-project/root/issues/7858,2,"['Update', 'release']","['Update', 'release']"
Deployability,"List*&, RooLinkedList*&, int&, char const*) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C3DC47: RooProdPdf::evaluate() const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15B12590: RooAbsPdf::getValV(RooArgSet const*) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15B24E8E: RooAbsReal::fillDataHist(RooDataHist*, RooArgSet const*, double, bool, bool) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15B62CCA: RooBinnedGenContext::generate(double, bool, bool) (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C6F42F: RooSimSplitGenContext::generate(double, bool, bool) (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== ; ==759== 1,008,000 bytes in 1 blocks are still reachable in loss record 18,284 of 18,292; ==759== at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344); ==759== by 0x15B5CF61: RooArgSet::operator new(unsigned long) (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C35B09: RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C39FF7: RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, RooArgList*&, RooLinkedList*&, int&, char const*) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C3DC47: RooProdPdf::evaluate(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7890#issuecomment-820445272:4682,release,releases,4682,https://root.cern,https://github.com/root-project/root/issues/7890#issuecomment-820445272,1,['release'],['releases']
Deployability,"Lite; -- Found Sqlite: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/sqlite/3320300/x86_64-centos7-gcc9-dbg/include; -- Looking for FFTW3; -- Found fftw3 includes at /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/fftw3/3.3.8/x86_64-centos7-gcc9-dbg/include; -- Found fftw3 library at /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/fftw3/3.3.8/x86_64-centos7-gcc9-dbg/lib/libfftw3.so; -- Looking for CFITSIO; -- Found CFITSIO: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/cfitsio/3.48/x86_64-centos7-gcc9-dbg/lib/libcfitsio.so (found version ""3.48""); -- Looking for XROOTD; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/include/xrootd;/build/jenkins/workspace/lcg_nightly_pipeline; /build/projects/ROOT-HEAD/src/ROOT/HEAD/proof/xrdinc; -- libraries: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdUtils.so;/build/jenkins/workspace/lcg_nightly_pipel; ine/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdCl.so; -- Found GFAL: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/gfal/1.13.0-0/x86_64-centos7-gcc9-dbg/include/.; -- Found DCAP: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/dcap/2.47.7-1/x86_64-centos7-gcc9-dbg/include; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.7.6; -- Looking for TBB; -- Found TBB: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/tbb/2020_U2/x86_64-centos7-gcc9-dbg (found suitable version ""2020.2"", minimum required is ""2018""); -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Detected Compiler: GCC 9.2.0; -- Performing Test check_cxx_compiler_flag__Wabi; -- Performing Test check_cxx_co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:10606,install,install,10606,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['install'],['install']
Deployability,Little update to `testRooSimultaneous` because one of the unit tests was using the `SplitRange()` command argument in the wrong way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11401#issuecomment-1253603478:7,update,update,7,https://root.cern,https://github.com/root-project/root/pull/11401#issuecomment-1253603478,1,['update'],['update']
Deployability,LiveVisualize does not update canvas on Jupyter notebook,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13631:23,update,update,23,https://root.cern,https://github.com/root-project/root/issues/13631,1,['update'],['update']
Deployability,"LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737; 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660; 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116; 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389; 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471; 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153; 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 13: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479; 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177; 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 7: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s); in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:1603,Update,UpdateIsOnHeap,1603,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['Update'],['UpdateIsOnHeap']
Deployability,"Locking on a child view while inside the parent's -drawRect:; was always looking horrendously (alas, this is how ROOT text; rendering is implemented in TGTextView et al.). Finally,; with macOS 10.14 released, after all these years of horrors, it; stopped working at all. While it's still quite crappy that; TGTextView tries to render text in its child window - TGViewFrame; - it does not mean literally we physically have to do this. A; little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3785:199,release,released,199,https://root.cern,https://github.com/root-project/root/pull/3785,1,['release'],['released']
Deployability,"Log when running with valgrind:. ```; Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746; 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362; 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737; 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660; 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116; 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389; 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471; 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153; 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 13: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479; 5: TApplication::TApplication(char const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:188,Update,UpdateIsOnHeap,188,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['Update'],['UpdateIsOnHeap']
Deployability,"Looking at the code, it was probably the idea at some point in the `RooAbsData` design that the ownership of the variables in the dataset can be shared, i.e. that the outside world can ""claim"" and ""release"" the variables in a RooAbsData. If anything else is still claiming the variables, they will not be deleted by the RooAbsData destructor. That's quite messy. For example, if the RooAbsData is destructed before the external ""claimers"" releases the variables, the claimers suddenly has the responsability to delete the variables themselves. And who of them should do it then? The ownership model is completely unclear. This and other reasons explain probably why the; `RooAbsData::claimVars()` and `RooAbsData::releaseVars()` are not used at all outside the RooAbsData, and this commit suggests to remove these memory-unsafe functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13179:198,release,release,198,https://root.cern,https://github.com/root-project/root/pull/13179,3,['release'],"['release', 'releaseVars', 'releases']"
Deployability,"Looking for general direction here. This is the current patch:. * Add a new hidden option, `ROOT_PYTHON_NO_LINK`, that turns off linking to Python.; * This option also turns on a check when loading libraries, to manually attempt to load libpython for the user. The directory that libpython is in should be searched (it will be on package systems like conda); * The name of libpython is stored in RConfigure.h (since you need to know both the python version and the build flags to determine it). We could strip the final extension as it's not needed to load. Names, etc. can easily be changed if this looks like the right way to do it. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462288529:56,patch,patch,56,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462288529,1,['patch'],['patch']
Deployability,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`); 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6406#issuecomment-696701809:521,install,install,521,https://root.cern,https://github.com/root-project/root/issues/6406#issuecomment-696701809,2,['install'],['install']
Deployability,Looks like 3480394 commit is causing the issue. I re-ran with eda4583 + https://github.com/cms-sw/root/pull/155/files ( i.e. root v6-24 patches branch without 3480394 ) and all tests passed https://github.com/cms-sw/root/pull/155#issuecomment-814408255,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-814417185:136,patch,patches,136,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-814417185,1,['patch'],['patches']
Deployability,Looks like Apple / libc++ broke things:; ```; $ cat repro.cxx; #include <cuchar>; #include <iosfwd>; std::mbstate_t *s;; $ clang -std=c++17 -c repro.cxx; In file included from repro.cxx:2:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iosfwd:99:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__mbstate_t.h:44:9: error: target of using declaration conflicts with declaration already in scope; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_mbstate_t.h:32:28: note: target of using declaration; typedef __darwin_mbstate_t mbstate_t;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:1: note: conflicting declaration; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; In file included from repro.cxx:2:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iosfwd:230:14: error: reference to unresolved using declaration; typedef fpos<mbstate_t> streampos;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:1: note: using declaration annotated with 'using_if_exists' here; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; ```; (etc). So - just don't upgrade macOS 🤣 Let [me see with the libc++ folks](https://github.com/llvm/llvm-project/issues/62573).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536464646:1538,upgrade,upgrade,1538,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536464646,1,['upgrade'],['upgrade']
Deployability,Looks like compilation was ok - on platforms with installed xrood.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-933374311:50,install,installed,50,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-933374311,1,['install'],['installed']
Deployability,Looks like it worked for me due to the system-installed XRootD...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3868#issuecomment-496157751:46,install,installed,46,https://root.cern,https://github.com/root-project/root/pull/3868#issuecomment-496157751,1,['install'],['installed']
Deployability,"Looks like it's not quite ready. After patching up CPT to be able to build from custom repos and branches, I get a hard crash with just `#include <filesystem>`. Here's the repro:. ```; ~/projects/third-party/cling-llvm13 took 16s at 21:38:01 ; ❯ ./cling-build/cling-Arch\ Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling -std=c++17. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ #include <filesystem>; cling: /home/jeaye/projects/third-party/cling-llvm13/cling-build/cling-src/tools/cling/lib/Interpreter/Transaction.cpp:173: void cling::Transaction::forceAppend(DelayCallInfo): Assertion `oldDCI != DCI && ""Duplicates?!""' failed.; #0 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fb288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fb34b; #1 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17f8eac ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x17fabfe; #2 0x000055e9492a6288 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x18491a8 ./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling 0x1848ed8; #3 0x000055e9492a6288 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fb288); #4 0x000055e9492a634b (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fb34b); #5 0x000055e9492a3eac gsignal (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17f8eac); #6 0x000055e9492a5bfe abort (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x17fabfe); #7 0x000055e9492f41a8 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x18491a8); #8 0x000055e9492f3ed8 (./cling-build/cling-Arch Linux-rolling-x86_64-1.0~dev-8759abf/bin/cling+0x1848ed8); #9 0x00007f264623e8e0 ./cling-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192175843:39,patch,patching,39,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192175843,5,"['patch', 'rolling']","['patching', 'rolling-']"
Deployability,"Looks like only TGeoCone was ignoring name.; Fixes error described in https://root-forum.cern.ch/t/32493; Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3340:106,Patch,Patch,106,https://root.cern,https://github.com/root-project/root/pull/3340,1,['Patch'],['Patch']
Deployability,Looks like there is a problem with the installation of Qt4 in the LCG externals...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1663#issuecomment-367959888:39,install,installation,39,https://root.cern,https://github.com/root-project/root/pull/1663#issuecomment-367959888,1,['install'],['installation']
Deployability,"Looks like we need SDKROOT workaround used for 6.22 back:; git diff bump-root-6.22.06 Formula/root.rb; ```diff; ...; def install; - # Work around ""error: no member named 'signbit' in the global namespace""; - ENV.delete(""SDKROOT"") if DevelopmentTools.clang_build_version >= 900; -; # Freetype/afterimage/gl2ps/lz4 are vendored in the tarball, so are fine.; # However, this is still permitting the build process to make remote; # connections. As a hack, since upstream support it, we inreplace; @@ -96,6 +81,10 @@ class Root < Formula; cxx_version = (MacOS.version < :mojave) ? 14 : 17; args << ""-DCMAKE_CXX_STANDARD=#{cxx_version}""; ; + # TODO: probably can be removed; + runtime_cxxmodules = (MacOS.version >= :catalina) ? ""ON"" : ""OFF""; + args << ""-Druntime_cxxmodules=#{runtime_cxxmodules}""; +; # Homebrew now sets CMAKE_INSTALL_LIBDIR to /lib, which is incorrect; # for ROOT with gnuinstall, so we set it back here.; args << ""-DCMAKE_INSTALL_LIBDIR=lib/root""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-843430390:121,install,install,121,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-843430390,1,['install'],['install']
Deployability,"MBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:4381,Configurat,Configuration,4381,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Configurat'],['Configuration']
Deployability,"MSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ``` . And for gdb:; ```; Singularity> gdb cmsRun; (gdb) run /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ```. A sample stacktrace upon destruction of the `TString`:; ```; Thread 1 (Thread 0x7ffff413fc80 (LWP 3407688) ""cmsRun""):; #0 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:88; #1 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:79; #2 tcmalloc::ThreadCache::FreeList::PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/inc/TString.h:265; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007ffff68a2266 in TString::~TString (this=0xcbb820, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TString.cxx:249; #7 0x00007ffff68ac37f in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:1751,Release,ReleaseToCentralCache,1751,https://root.cern,https://github.com/root-project/root/issues/13429,1,['Release'],['ReleaseToCentralCache']
Deployability,"Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6609:615,configurat,configuration,615,https://root.cern,https://github.com/root-project/root/pull/6609,1,['configurat'],['configuration']
Deployability,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dictoffset); 140 {; 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);; 142 }; ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694:3987,Install,Installation,3987,https://root.cern,https://github.com/root-project/root/issues/13694,1,['Install'],['Installation']
Deployability,Major JSROOT upgrade,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10236:13,upgrade,upgrade,13,https://root.cern,https://github.com/root-project/root/pull/10236,1,['upgrade'],['upgrade']
Deployability,"Major point was finding fix for RBrowser list binding.; While this was done in #16481, now latest openui5 can be applied. Required minimal adjustments in the ui5-related code.; Fix several tiny problems in eve7; Update JSROOT and documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16484:212,Update,Update,212,https://root.cern,https://github.com/root-project/root/pull/16484,1,['Update'],['Update']
Deployability,Make RBatchGenerator more visible for the release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14001:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/14001,1,['release'],['release']
Deployability,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654:1002,patch,patch,1002,https://root.cern,https://github.com/root-project/root/pull/12654,1,['patch'],['patch']
Deployability,Make a pre-release check of clad. DONT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8237:11,release,release,11,https://root.cern,https://github.com/root-project/root/pull/8237,1,['release'],['release']
Deployability,Make configuration fail when dependencies are not found and fail-on-missing=ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3975:5,configurat,configuration,5,https://root.cern,https://github.com/root-project/root/pull/3975,1,['configurat'],['configuration']
Deployability,"Make dnn_cuda library static, as it is not installed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3066:43,install,installed,43,https://root.cern,https://github.com/root-project/root/pull/3066,1,['install'],['installed']
Deployability,Make install improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1643:5,install,install,5,https://root.cern,https://github.com/root-project/root/pull/1643,1,['install'],['install']
Deployability,Make sure the CI build all math packages (even GPL ones) in PR builds and add also tmva-sofie and r interface on node where ; these can be built (where protobuf and r installations exist),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14836:167,install,installations,167,https://root.cern,https://github.com/root-project/root/pull/14836,1,['install'],['installations']
Deployability,Make sure we're using the macOS-native framework version in the OpenGL case. See:; * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific; * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15435:338,install,installed,338,https://root.cern,https://github.com/root-project/root/pull/15435,1,['install'],['installed']
Deployability,"MakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’; extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()); ^; In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option); ^~~~~~~~~~~~~; /build/jenkins/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4160#issuecomment-519477877:1275,install,install,1275,https://root.cern,https://github.com/root-project/root/pull/4160#issuecomment-519477877,1,['install'],['install']
Deployability,"Many analyses and frameworks offer the possibility of using a semi-structured format to represent both the full dataset (in terms of the files that need to be processed) and some metadata attached to it. Most often, the files are split into multiple groupings, which are usually called ""samples"" or ""datasets"". A few examples of this pattern are:. * [AGC](https://github.com/iris-hep/analysis-grand-challenge/blob/main/analyses/cms-open-data-ttbar/ntuples.json); * [PocketCoffea](https://github.com/PocketCoffea/PocketCoffea/blob/main/datasets/DATA_DoubleMuon_local.json); * [WRemnants](https://github.com/WMass/WRemnants/blob/4068b8622fd54867ae779ee3d79a4d4aa270a4a5/wremnants/datasets/datasetDict_v9.py); * [Bamboo](https://gitlab.cern.ch/swertz/bambooexamples/-/blob/master/samples.yml). This helps a lot in keeping the configuration of the analysis dataset tidy and short, so that it can also be more easily shared to others and compared between different executions. But this also calls for a discussion on providing a standard schema that all frameworks could accept and digest into their own execution workflows. For example, it is quite natural to always include a list of files in each ""sample"". This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups""; * Cover TTree but plan for RNTuple support; * Should support friend trees per group; * Should support entry ranges per group; * No indexed friend trees (at least for now). One possible starting point would be (using ""samples""=""groups""=""datasets""):; ```python; {; ""samples"":{; ""sample_a"":{; ""treenames"": [""Events""],; ""files"": [""fa*.root""],; ""friends"":{; ""treenames"": [""Friend""],; ""files"": [""fr*.root""],; },; ""entry_range"": [0, 1000],; ""metadata"": {...}; },; ""sample_b"":{; ""treenames"": [""treeb_1"", ""treeb_2""],; ""files"": [""fileb_1.root"", ""fileb_2.root""],; ""friends"":{; ""treenames"": [""Frie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624:823,configurat,configuration,823,https://root.cern,https://github.com/root-project/root/issues/11624,1,['configurat'],['configuration']
Deployability,Many broken tests after recent Clang update on CentOS 8 Stream,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11601:37,update,update,37,https://root.cern,https://github.com/root-project/root/issues/11601,1,['update'],['update']
Deployability,"Many commits in this PR seem to implement new features (""Support"" / ""Implement"") - are they really suitable for backporting to a ""bug fix release""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12733#issuecomment-1527717802:138,release,release,138,https://root.cern,https://github.com/root-project/root/pull/12733#issuecomment-1527717802,1,['release'],['release']
Deployability,"Many new test directories have been added using add_subdirectory instead of using ROOT_ADD_TEST_SUBDIRECTORY. This causes problems, since when the directory is added using add_subdirectory the test binaries are treated as normal binaries and get installed when running make install, polluting the build. This pull request changes to using ROOT_ADD_TEST_SUBDIRECTORY where appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1515:246,install,installed,246,https://root.cern,https://github.com/root-project/root/pull/1515,2,['install'],"['install', 'installed']"
Deployability,"Many people pythonized the RooWorkspace themselves by adding a new; attribute `_import` that calls getattr(self, ""import"") under the; hood. However, `_import` is now the reference to the original cppyy; overload, and resetting it with a wrapper around `import` would cause; infinite recursions! We prevent resetting that attribute here, which; is a clearer error to the user than an infinite call stack involving; the internal pythonization code. The ""official"" way of calling `RooWorkspace::import()` in PyROOT is now `RooWorkspace.Import`. Should be backported to the 6.26 release if possible, so that people are not caught by surprise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9896:575,release,release,575,https://root.cern,https://github.com/root-project/root/pull/9896,1,['release'],['release']
Deployability,"Many tanks for the new stressGraphics.ref It works. May be you can add a few word in edit README/ReleaseNotes/v622/index.md in the section ""2D graphics Libraries"" to annonce this new feature ? Meanwhile I will check also stressGraphics_builtinzlib.ref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5191#issuecomment-604497230:97,Release,ReleaseNotes,97,https://root.cern,https://github.com/root-project/root/pull/5191#issuecomment-604497230,1,['Release'],['ReleaseNotes']
Deployability,Many thanks for all these updates ! ;-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1237#issuecomment-339897173:26,update,updates,26,https://root.cern,https://github.com/root-project/root/pull/1237#issuecomment-339897173,1,['update'],['updates']
Deployability,Many thanks for confirming! We are not yet aligning RNTuple developments with releases. Early testers / adopters are encouraged to follow the developments in the master branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12468#issuecomment-1465194768:78,release,releases,78,https://root.cern,https://github.com/root-project/root/pull/12468#issuecomment-1465194768,1,['release'],['releases']
Deployability,"Many thanks for your effort, I would try your tipps on different Ubuntu system and update to you soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1699056005:83,update,update,83,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1699056005,1,['update'],['update']
Deployability,Many thanks!. First quick comment: please also update the RNTuple format specification on how `std::pair`s are mapped to columns.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8103#issuecomment-1123376456:47,update,update,47,https://root.cern,https://github.com/root-project/root/pull/8103#issuecomment-1123376456,1,['update'],['update']
Deployability,"Many thanks. Jiang Yi ***@***.***> 于 2023年6月5日周一 05:15写道：. > @jalopezg-git <https://github.com/jalopezg-git> Sorry for the late reply.; > I am still trying to fix some corner cases while avoiding too intrusive; > changes. I will update the pull request soon.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/11265#issuecomment-1576431258>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACN3SSVEF3GLBPRSV2CHAELXJWPUNANCNFSM573UE76Q>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265#issuecomment-1577084075:229,update,update,229,https://root.cern,https://github.com/root-project/root/pull/11265#issuecomment-1577084075,1,['update'],['update']
Deployability,"Many users expect to use `Clone()` to copy RooWorkspaces, but so far this resulted in corrupt workspaces because the `Clone()` function was not overridden. This is an important fix that needs to be backported at least to 6.28 and 6.26, better yet every ROOT release used in production.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12638:258,release,release,258,https://root.cern,https://github.com/root-project/root/pull/12638,1,['release'],['release']
Deployability,"Marked a ""Fixed in: not applicable"" because this was a regression and not a bug in any released version of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117#issuecomment-2037491109:87,release,released,87,https://root.cern,https://github.com/root-project/root/issues/15117#issuecomment-2037491109,1,['release'],['released']
Deployability,"Marked as fixed in ""not applicable"", because this only referred to the testing infrastructure which the users don't care about. Therefore, this should also not appear in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2105673287:174,release,release,174,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2105673287,1,['release'],['release']
Deployability,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7205#issuecomment-788053716:91,configurat,configuration,91,https://root.cern,https://github.com/root-project/root/issues/7205#issuecomment-788053716,2,['configurat'],['configuration']
Deployability,Marking with critical priority because no conda nightly builds also means no v6.26 conda package when we'll release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1014426873:108,release,release,108,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1014426873,1,['release'],['release']
Deployability,Master and v6-28-00-patches contain the needed fixes; we will release a new version of ROOT in about two weeks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1505716972:20,patch,patches,20,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1505716972,2,"['patch', 'release']","['patches', 'release']"
Deployability,Master ref guide was rebuilt before qhelpgenerator was installed maybe?. ![image](https://user-images.githubusercontent.com/10653970/149124427-a8355b4c-2202-4da3-9f0e-cd220f3a1d60.png),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1010898506:55,install,installed,55,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010898506,2,['install'],['installed']
Deployability,"MatMul is now supported in both master and 6.30, see. https://github.com/root-project/root/pull/12894. This above list needs to be updated with the new supported operator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10360#issuecomment-1792176060:131,update,updated,131,https://root.cern,https://github.com/root-project/root/issues/10360#issuecomment-1792176060,1,['update'],['updated']
Deployability,Matrix patch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2401:7,patch,patch,7,https://root.cern,https://github.com/root-project/root/pull/2401,1,['patch'],['patch']
Deployability,Matrix updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2364:7,update,updates,7,https://root.cern,https://github.com/root-project/root/pull/2364,2,['update'],['updates']
Deployability,May I ask your version of MacOS CLI SDK installed alongside Xcode ?; I just installed the official Sequoia 15.0 released today. ```; $ xcode-select --version; xcode-select version 2409. $ /usr/bin/cc --version; Apple clang version 16.0.0 (clang-1600.0.22.7); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ ls -ls /Library/Developer/CommandLineTools/SDKs/; total 0; 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk; 0 drwxr-xr-x 7 root wheel 224 May 1 07:16 MacOSX14.5.sdk; 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX14.sdk -> MacOSX14.5.sdk; 0 drwxr-xr-x 7 root wheel 224 Jul 3 05:33 MacOSX15.0.sdk; 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX15.sdk -> MacOSX15.0.sdk; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2353745522:40,install,installed,40,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2353745522,4,"['Install', 'install', 'release']","['InstalledDir', 'installed', 'released']"
Deployability,"Maybe a few more notes to make the review easier, because this is a huge patch. * The previous code used macros to log things. I found that the macros are not needed, so I replaced all the macros with method calls to MnPrint::Error, MnPrint::Info, ....; * The old logging made a useful habit of prefixing messages with a string to indicate the origin, e.g. when you logged from MnHesse, messages would be prefixed with ""MnHesse:"". Inside ``MnHesse``, to stay with the example, you might have seen code like this; ```c++; MN_INFO_MSG(""MnHesse: Some foo happened"");; [...]; MN_INFO_MSG(""MnHesse: Some bar happened"");; [...]; int n = 5;; MN_INFO_MSG(""MnHesse: Frobinated"", n, ""glorps"");; ```; Setting the prefix by hand was error prone and repetetive and made the logging code more distractive from the actual code. Especially now, since all the debug messages should also have this prefix, I wanted to automate this. So I turned MnPrint into a class that one can instantiate with a prefix for a given scope.; ```c++; MnPrint print(""MnHesse""); // appears once at the beginning of a long method; [...]; print.Info(""Some foo happened"");; [...]; print.Info(""Some bar happened"");; [...]; int n = 5;; print.Info(""Frobinated"", n, ""glorps"");; ```; The method ``MnPrint::Info`` uses the prefix set in the MnPrint ctor. The ctor of MnPrint also has an optional argument to print with a local print level. If this is not set, the global print level is used. In the long run (not in this patch), we should get rid of the global print level, because global mutable variables are difficult to reason about and in particular do not play nice with multi-threading. This design prepares for that step.; * I generally made sure that the logging messages contain the same information as the previous ones, but I reduced excess whitespace and improved the formatting. Some debug messages added several empty lines to the output, which made the logs hard to read.; * In very few isolated cases I removed redundant messages. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719713799:73,patch,patch,73,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719713799,1,['patch'],['patch']
Deployability,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856#issuecomment-732749103:333,release,release,333,https://root.cern,https://github.com/root-project/root/issues/6856#issuecomment-732749103,1,['release'],['release']
Deployability,"Maybe check first the log file of the Doxygen build. Close to the end, it will say output an error like:; ```; Running dot...; Patching output file 1/1; Running qhelpgenerator...; qhelpgenerator: could not exec '/usr/lib/qt5/bin/qhelpgenerator': No such file or directory; error: failed to run qhelpgenerator on index.qhp; lookup cache used 1000/65536 hits=4591 misses=1060; finished...; [100%] Built target doc; ```. If that's the case, then yes, it must be relaunched.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009990569:127,Patch,Patching,127,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009990569,1,['Patch'],['Patching']
Deployability,Maybe we can proceed with the merge and backport to 6.32? This would prepare us to the next patch release...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15880#issuecomment-2236107423:92,patch,patch,92,https://root.cern,https://github.com/root-project/root/pull/15880#issuecomment-2236107423,2,"['patch', 'release']","['patch', 'release']"
Deployability,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:; ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; TreeGetEntryOneBranch 247377 ns 247373 ns 2856; TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258; TreeGetEntryTwoBranches 381067 ns 381058 ns 1828; TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701; BranchGetEntryOneBranch 103621 ns 103620 ns 6753; BranchGetEntryTwoBranches 103768 ns 103764 ns 6749; ```. After patch:; ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; TreeGetEntryOneBranch 180852 ns 180846 ns 3872; TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180; TreeGetEntryTwoBranches 292639 ns 292633 ns 2396; TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773; BranchGetEntryOneBranch 104265 ns 104262 ns 6592; BranchGetEntryTwoBranches 105086 ns 105083 ns 6686; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3601#issuecomment-476849268:132,patch,patch,132,https://root.cern,https://github.com/root-project/root/pull/3601#issuecomment-476849268,2,['patch'],['patch']
Deployability,Merge fixes in TMVA for Deep Learning from master to 6.14 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2111:58,patch,patches,58,https://root.cern,https://github.com/root-project/root/pull/2111,1,['patch'],['patches']
Deployability,"Merge the `RooIntegrator1D` class with its slight variations: `RooIntegrator2D`, `RooSegmentedIntegrator1D`, and `RooSegmentedIntegrator2D`. To reflect the fact that it can now be used for the n-dimenstional case, it is renamed to `RooRombergIntegrator`. This greatly reduces boilerplate code to implement the different numeric integration methods (more detail in the PR description).; It will also make porting the numerical integration with the Romberg method to the GPU much easier. The changes were validated with the following script:; ```c++; // runNumIntValidation.C. #include <RooFormulaVar.h>; #include <RooNumIntConfig.h>; #include <RooRealVar.h>. void testIntegrationMethod(int ndim, std::string const &label); {; RooRealVar x{""x"", ""x"", 0, 10};; RooRealVar y{""y"", ""y"", 0, 10};. std::string funcName = std::string(""func"") + label;; RooFormulaVar func{funcName.c_str(), ""x*std::sqrt(x) + y*std::sqrt(y) + x*y"", {x, y}};. std::cout << label << "":"" << std::endl;. RooNumIntConfig cfg(*func.getIntegratorConfig());. if (ndim == 2) {; cfg.method2D().setLabel(label.c_str());; }; if (ndim == 1) {; cfg.method1D().setLabel(label.c_str());; }. RooArgSet iset{x};; if (ndim > 1); iset.add(y);; std::unique_ptr<RooAbsReal> integ{func.createIntegral(iset, RooFit::NumIntConfig(cfg))};; double val = integ->getVal();; std::cout << std::setprecision(15) << val << std::endl;. std::cout << std::endl;; }. void runNumIntValidation(); {; RooHelpers::LocalChangeMsgLevel changeMsgLvl(RooFit::WARNING);. std::vector<std::string> methods1d{""RooIntegrator1D"", ""RooSegmentedIntegrator1D""};; std::vector<std::string> methods2d{""RooAdaptiveIntegratorND"", ""RooIntegrator2D"", ""RooSegmentedIntegrator2D""};. for (auto const &label : methods1d) {; testIntegrationMethod(1, label);; }. for (auto const &label : methods2d) {; testIntegrationMethod(2, label);; }; }; ```. The output with this PR is the same as with ROOT master:; ```; RooIntegrator1D:; 488.294986988088. RooSegmentedIntegrator1D:; 488.294680086881. RooAda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:328,integrat,integration,328,https://root.cern,https://github.com/root-project/root/pull/13384,2,['integrat'],['integration']
Deployability,Merged as fed2167ba6 in v6-26-00-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9621#issuecomment-1017736923:33,patch,patches,33,https://root.cern,https://github.com/root-project/root/pull/9621#issuecomment-1017736923,1,['patch'],['patches']
Deployability,Merged into v6-18-00-patches as 3a55a4702f492abdb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3949#issuecomment-501276399:21,patch,patches,21,https://root.cern,https://github.com/root-project/root/pull/3949#issuecomment-501276399,1,['patch'],['patches']
Deployability,Merged into v6-26-00-patches as 3ad3badbeb91965b28626f30c5f02f7bc3f2fafe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9992#issuecomment-1055522196:21,patch,patches,21,https://root.cern,https://github.com/root-project/root/pull/9992#issuecomment-1055522196,1,['patch'],['patches']
Deployability,Merged into v6-28-00-patches as 36349764e9,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12724#issuecomment-1528817003:21,patch,patches,21,https://root.cern,https://github.com/root-project/root/pull/12724#issuecomment-1528817003,1,['patch'],['patches']
Deployability,Merged into v6-28-00-patches as f7adbd2b04e62a0660245d43f3d411367a8ebebc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12752#issuecomment-1533610101:21,patch,patches,21,https://root.cern,https://github.com/root-project/root/pull/12752#issuecomment-1533610101,1,['patch'],['patches']
Deployability,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6810#issuecomment-729092090:24,update,updated,24,https://root.cern,https://github.com/root-project/root/pull/6810#issuecomment-729092090,1,['update'],['updated']
Deployability,Merged master into feature branch to integrate new `ntuple_types.cxx` test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5619#issuecomment-634876552:37,integrat,integrate,37,https://root.cern,https://github.com/root-project/root/pull/5619#issuecomment-634876552,1,['integrat'],['integrate']
Deployability,Merged now also in v6-26-00-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11080#issuecomment-1205221521:28,patch,patches,28,https://root.cern,https://github.com/root-project/root/issues/11080#issuecomment-1205221521,1,['patch'],['patches']
Deployability,Merged with OpenSSL update in #1845. Closing this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1766#issuecomment-380831826:20,update,update,20,https://root.cern,https://github.com/root-project/root/pull/1766#issuecomment-380831826,1,['update'],['update']
Deployability,"Merged, thanks! I applied the patch locally, so GitHub's interface got confused. Closing this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891#issuecomment-325422715:30,patch,patch,30,https://root.cern,https://github.com/root-project/root/pull/891#issuecomment-325422715,1,['patch'],['patch']
Deployability,Merging (sorry @dpiparo ) to make progress with the release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13902#issuecomment-1783779395:52,release,release,52,https://root.cern,https://github.com/root-project/root/pull/13902#issuecomment-1783779395,1,['release'],['release']
Deployability,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1761301310:154,update,updates,154,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1761301310,1,['update'],['updates']
Deployability,"Method signature used for `DataLoader::PrepareTrainingAndTestSet` triggered the generation of classes ""Signal"" and ""Background"". Since the task was regression this caused confusion further down the processing pipeline. Code changed to use global selection cut instead of implicit signal/background cuts. Also includes additional improvements to variable names and documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2460:209,pipeline,pipeline,209,https://root.cern,https://github.com/root-project/root/pull/2460,1,['pipeline'],['pipeline']
Deployability,Migrate patches to LLVM monorepo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12117:8,patch,patches,8,https://root.cern,https://github.com/root-project/root/pull/12117,1,['patch'],['patches']
Deployability,Minimal installation for basic IO,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6471:8,install,installation,8,https://root.cern,https://github.com/root-project/root/issues/6471,1,['install'],['installation']
Deployability,Minimal set of changes required to enable pip build backends to install ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16669:64,install,install,64,https://root.cern,https://github.com/root-project/root/pull/16669,1,['install'],['install']
Deployability,Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10143:166,update,updated,166,https://root.cern,https://github.com/root-project/root/pull/10143,1,['update'],['updated']
Deployability,Minor backports such that the RooFit sources don't diverge between 6.32 patch releases and `master` just yet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15920:72,patch,patch,72,https://root.cern,https://github.com/root-project/root/pull/15920,2,"['patch', 'release']","['patch', 'releases']"
Deployability,Minor updates and fixes for the build system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4020:6,update,updates,6,https://root.cern,https://github.com/root-project/root/pull/4020,1,['update'],['updates']
Deployability,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:2089,update,updated,2089,https://root.cern,https://github.com/root-project/root/pull/10966,2,['update'],['updated']
Deployability,Minuit2 CMake Update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1699:14,Update,Update,14,https://root.cern,https://github.com/root-project/root/pull/1699,1,['Update'],['Update']
Deployability,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7882:239,patch,patch,239,https://root.cern,https://github.com/root-project/root/pull/7882,2,['patch'],['patch']
Deployability,Minuit2: Install libs to CMAKE_INSTALL_LIBDIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14176:9,Install,Install,9,https://root.cern,https://github.com/root-project/root/pull/14176,1,['Install'],['Install']
Deployability,Missing `test` installation folder in $ROOTSYS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13548:15,install,installation,15,https://root.cern,https://github.com/root-project/root/issues/13548,1,['install'],['installation']
Deployability,Missing in Release Notes for 6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7858:11,Release,Release,11,https://root.cern,https://github.com/root-project/root/issues/7858,1,['Release'],['Release']
Deployability,More build system updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2722:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/2722,1,['update'],['updates']
Deployability,More build system upgrades,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097:18,upgrade,upgrades,18,https://root.cern,https://github.com/root-project/root/pull/4097,1,['upgrade'],['upgrades']
Deployability,More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228:48,release,releases,48,https://root.cern,https://github.com/root-project/root/pull/5228,2,['release'],"['release-', 'releases']"
Deployability,"Most ROOT developers and users seem to agree that autonomously toggling features at configuration time based on the environment is not good. The feature set that ROOT is built with is then not deterministic. In past cases, this already resulted in accidentally missing test coverage because features were switched off after environment changes. That's why for the CI, we are always building with the `fail-on-missing-option`. However, this is not only a problem in testing, but everytime ROOT is built. That's why this commit suggests to make `fail-on-missing` the default, and warn the users of potential future deprecation of this flag in the release notes. An interesting point is also that the `fail-on-missing` code path in `SearchInstalledSoftware.cmake` is much simpler, which also helps to reduce the margin for error. See also:; https://github.com/root-project/root/issues/14188#issuecomment-1844965943",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311:84,configurat,configuration,84,https://root.cern,https://github.com/root-project/root/pull/14311,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"Motivation: we need to make sure that, if PyROOT is used from another process that will keep on living after the Python interpreter dies, PyROOT does not shut down the ROOT interpreter via `TROOT::EndOfProcessCleanups` when running its atexit handler. In that sense, this PR adds a configuration option to tell PyROOT if the teardown needs to be soft, i.e. we do not want to shut down the ROOT interpreter. Instead, in the soft mode, we only want (and need) to clean the objects that are controlled by PyROOT via its `TMemoryRegulator`. @Axel-Naumann @pcanal just one new thing with respect to what we discussed: in the function that does the cleanup of the objects in `TMemoryRegulator`, called `RecursiveRemoveAll` in my commit, we can only delete a C++ object found in the map if the corresponding Python proxy **owns** the C++ object. Otherwise we will have a double delete (if the proxy does not own is because the deletion will happen somewhere else, so our `RecursiveRemoveAll` can't delete too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4687:282,configurat,configuration,282,https://root.cern,https://github.com/root-project/root/pull/4687,1,['configurat'],['configuration']
Deployability,Move Davix to new builtin mechanism and update OpenSSL to 1.0.2o (latest LTS release).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1845:40,update,update,40,https://root.cern,https://github.com/root-project/root/pull/1845,2,"['release', 'update']","['release', 'update']"
Deployability,Move libpcre to new builtin mechanism and update to version 8.42,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3209:42,update,update,42,https://root.cern,https://github.com/root-project/root/pull/3209,1,['update'],['update']
Deployability,Move old release notes into README/ReleaseNotes/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3202:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/3202,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,Move the commit to PR #5252 to integrate the test with the root cause of the issue,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5256#issuecomment-606630138:31,integrat,integrate,31,https://root.cern,https://github.com/root-project/root/pull/5256#issuecomment-606630138,1,['integrat'],['integrate']
Deployability,"Move the fRoofit classes depending on GSL in a new library libRooFitMore. The classes are: . - AdaptiveGauss and GausKronrod 1D integrator from Roofitcore; - Legendre, non-central chi2 and SphArmonic pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4536:128,integrat,integrator,128,https://root.cern,https://github.com/root-project/root/pull/4536,1,['integrat'],['integrator']
Deployability,"Moved from https://github.com/root-project/root/pull/6385 as there are too many bot comments in that PR. cc @vgvassilev. When testing the LLVM 9 PR for conda-forge and had a few issues with external LLVM/Clang/Cling so I temporarily switched to the builtins. This works from the build directory but it then has issues once `make install` is ran. More details are in the comment copied at the end of this issue. I think this is an issue with root's install commands rather than the conda-recipe, but you can reproduce what I'm doing it docker by running:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git; cd root-feedstock; git checkout llvm90-install-error; # Adjust CPU_COUNT as required; CPU_COUNT=192 ./build-locally.py --debug --output-id '*root_base*' linux_64_numpy1.16python3.8.____cpython; # When the container launches, look at the output and run the suggested command; # which will be of the form:; cd xxxxx && source xxxxx/build_env_setup.sh; source $RECIPE_DIR/build_root-base.sh; # Anything with ROOT will now fail, e.g.; root; # Rather than waiting to build again, you can roll back to before; # ""make install"" was ran by running; cd ../..; rm -rf $PWD/*; cp -rp $PWD.bak/* $PWD/; cd -; ```. >The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:; >```log; >$ root -b -q -x -e 1+2; >input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:329,install,install,329,https://root.cern,https://github.com/root-project/root/issues/7055,3,['install'],"['install', 'install-error']"
Deployability,Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12964:366,update,updated,366,https://root.cern,https://github.com/root-project/root/pull/12964,1,['update'],['updated']
Deployability,Multiplication' in /opt/root_src/math/physics/src/TLorentzVector.cxx:294; 2: Calling constructor for 'TLorentzVector' in /opt/root_src/math/physics/inc/TLorentzRotation.h:241; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TLorentzVector.h:608; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::Cross' in /opt/root_src/math/physics/src/TQuaternion.cxx:405; 2: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TVector3.h:336; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TVector3' in /opt/root_src/math/physics/src/TRotation.cxx:759; 2: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Call,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:44965,Update,UpdateIsOnHeap,44965,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,My attempt at a standalone reproducer have not been successful yet. Is there a release of Athena with a debug build of ROOT I can use to debug?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12378#issuecomment-1457268510:79,release,release,79,https://root.cern,https://github.com/root-project/root/issues/12378#issuecomment-1457268510,1,['release'],['release']
Deployability,"My attempt to hotfix the problem didn't work out after all, the test *still* fails on Windows :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14997#issuecomment-2003413291:14,hotfix,hotfix,14,https://root.cern,https://github.com/root-project/root/pull/14997#issuecomment-2003413291,1,['hotfix'],['hotfix']
Deployability,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx; index 23e7ac8..70b662c 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx; @@ -26,6 +26,7 @@; #include <set>; #include <string>; #include <vector>; +#include <iostream>. //- data _______________________________________________________________________; @@ -141,6 +142,8 @@ static inline void sync_templates(; Py_DECREF(pyname);; }. +static auto counter = 0u;; +; static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass); {; // Collect methods and data for the given scope, and add them to the given python; @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name; std::string mtCppName = Cppyy::GetMethodName(method);; + std::cout << ""Counter: "" << counter << std::endl;; + counter++;; + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers; bool setupSetItem = false;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-804879907:279,a/b,a/bindings,279,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-804879907,2,['a/b'],['a/bindings']
Deployability,My current theory is that this works:; ```; /// \file; /// \ingroup tutorial_graphics; /// \notebook -js; /// Draw ellipses.; ```; and this doesn't:; ```; /// \file; /// \ingroup tutorial_graphics; /// \notebook -js; ///; /// Draw ellipses.; ```; Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6433#issuecomment-700826993:325,update,updated,325,https://root.cern,https://github.com/root-project/root/issues/6433#issuecomment-700826993,1,['update'],['updated']
Deployability,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7441#issuecomment-795637893:103,install,install,103,https://root.cern,https://github.com/root-project/root/issues/7441#issuecomment-795637893,3,['install'],['install']
Deployability,My reasoning is bogus :-) Updating a *text* file obviously doesn't trigger a rebuild. We should just update `gitinfo.txt` any time we build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11287#issuecomment-1727677133:101,update,update,101,https://root.cern,https://github.com/root-project/root/issues/11287#issuecomment-1727677133,1,['update'],['update']
Deployability,My remote fork is so outdated that it doesn't reflect the fact this has already been updated :facepalm:.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15965#issuecomment-2202340777:85,update,updated,85,https://root.cern,https://github.com/root-project/root/pull/15965#issuecomment-2202340777,1,['update'],['updated']
Deployability,"My suggestion to try to fix this issue is the following:. ```diff; --- a/builtins/lz4/CMakeLists.txt; +++ b/builtins/lz4/CMakeLists.txt; @@ -44,7 +44,7 @@ set(LZ4_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL """" FORCE); add_library(lz4 STATIC ${LZ4_PUBLIC_HEADERS} ${LZ4_PRIVATE_HEADERS} ${LZ4_SOURCES}); set_target_properties(lz4 PROPERTIES C_VISIBILITY_PRESET hidden POSITION_INDEPENDENT_CODE ON); target_include_directories(lz4 INTERFACE $<BUILD_INTERFACE:${LZ4_INCLUDE_DIR}>); -target_link_libraries(lz4 PRIVATE xxHash::xxHash); +target_include_directories(lz4 PRIVATE $<BUILD_INTERFACE:${xxHash_INCLUDE_DIR}>); ; add_library(LZ4::LZ4 ALIAS lz4); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13739#issuecomment-1740750211:71,a/b,a/builtins,71,https://root.cern,https://github.com/root-project/root/pull/13739#issuecomment-1740750211,1,['a/b'],['a/builtins']
Deployability,"My two cents: I guess the question is whether there are other developers than Max that assume `R__ASSERT` also gets compiled in release builds, and I guess the safe option is to assume there are. Personally I would be ok with a `R__DEBUG_ASSERT` (+ an audit of `R__ASSERT` usages in RDF & co., + a big banner in R__ASSERT's docs). Note that there are other places like `math` where usages of `R__ASSERT` might warrant an audit, they might happen in hot code paths:. ```; roofit/roofitmore/src/RooNonCentralChiSquare.cxx:1; roofit/roofitcore/src/RooHistFunc.cxx:1; roofit/roofitmore/src/RooLegendre.cxx:3; roofit/roofit/src/RooCrystalBall.cxx:2; roofit/roofit/src/RooArgusBG.cxx:1; roofit/roofit/src/RooParamHistFunc.cxx:1; roofit/roofit/src/RooKeysPdf.cxx:2; roofit/roofit/src/RooCBShape.cxx:2; roofit/roofit/src/RooGaussModel.cxx:6; roofit/roofit/src/RooParametricStepFunction.cxx:2; roofit/roofit/src/RooDecay.cxx:1; roofit/roofit/src/RooLognormal.cxx:2; roofit/roofit/src/RooBernstein.cxx:2; roofit/roofit/src/RooBDecay.cxx:1; roofit/roofit/src/RooPolynomial.cxx:2; roofit/roofit/src/RooGamma.cxx:2; roofit/roofit/src/RooNDKeysPdf.cxx:6; roofit/roofit/src/RooPoisson.cxx:2; roofit/roofit/src/RooGExpModel.cxx:4; roofit/roofitcore/src/RooHistPdf.cxx:1; roofit/roofitcore/src/RooRealSumPdf.cxx:2; roofit/roofitcore/src/RooTruthModel.cxx:5; roofit/roofitcore/src/RooEfficiency.cxx:1; roofit/roofitcore/src/RooPolyVar.cxx:2; roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:2; roofit/histfactory/src/FlexibleInterpVar.cxx:11; gui/fitpanel/src/TFitEditor.cxx:1; hist/hist/test/test_THBinIterator.cxx:1; hist/hist/src/THistRange.cxx:1; hist/hist/src/TH1Merger.cxx:5; hist/hist/inc/THistRange.h:4; hist/hist/src/TF1.cxx:2; hist/hist/src/TProfile2D.cxx:4; hist/hist/src/TFormula_v5.cxx:1; hist/hist/src/TH3.cxx:5; hist/hist/inc/TNDArray.h:3; hist/hist/src/TH1.cxx:5; hist/hist/src/TProfileHelper.h:2; hist/hist/src/HFitImpl.cxx:5; hist/hist/src/TPrincipal.cxx:1; hist/hist/src/TProfile3D.cxx:4; hist/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8587#issuecomment-872791223:128,release,release,128,https://root.cern,https://github.com/root-project/root/pull/8587#issuecomment-872791223,1,['release'],['release']
Deployability,Necessary to make cling pickup the VFS from root which fixes all the merging; problems that we have in STL/libc. Original description:. Title: Use the VFS from the CompilerInvocation by default. The CompilerInstance should create its default VFS from its CompilerInvocation. Right now the; user has to manually create the VFS before creating the FileManager even though; `-ivfsoverlay file.yaml` was passed via the CompilerInvocation (which is exactly how we worked; around this issue in `FrontendAction.cpp` so far). This patch uses the invocation's VFS by default and also tests this behavior now from the; point of view of a program that uses the clang API.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/994:523,patch,patch,523,https://root.cern,https://github.com/root-project/root/pull/994,1,['patch'],['patch']
Deployability,Needs to go into the release. * https://github.com/root-project/root/pull/15605; * https://github.com/root-project/root/pull/15602; * https://github.com/root-project/root/pull/15608,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15614:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/15614,1,['release'],['release']
Deployability,Neither svg no png/jpeg images can be produced by eve.; With some efforts one could try to implement png support - but in my mind it is not necessary. This issue was created to let run different tutorials in special testing mode - ; and simply checks that tutorials are still valid. Also there are several tutorials with loop like:; ```; while (gSystem->ProcessEvents()) {; // do something; // update canvas; }; ```; In special testing mode one could limit this loop by several seconds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6651#issuecomment-1923341069:394,update,update,394,https://root.cern,https://github.com/root-project/root/issues/6651#issuecomment-1923341069,2,['update'],['update']
Deployability,New CI label for nightly does not correctly report cmake configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615:57,configurat,configuration,57,https://root.cern,https://github.com/root-project/root/issues/15615,1,['configurat'],['configuration']
Deployability,New dictionary-related crash in 6.24.00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:40,patch,patches,40,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,"New insights:. * when adding the reproducer to `roottest`, most of the Jenkins platforms will fail:; https://github.com/root-project/roottest/pull/1052. * when testing the reproducer together with the CPyCppyy upgrade, the test `projectroot.roottest.python.cpp.roottest_python_cpp_cpp11` will instead pass on all platforms:; https://github.com/root-project/roottest/pull/1071; (note that there are other failures related to the CPyCppyy upgrade that are unrelated to the issue). Therefore, I can attest that this issue will be fixed with the CPyCppyy upgrade. This makes total sense, because the upgrade includes a patch that fixes the conversion of initializer lists:; https://github.com/wlav/CPyCppyy/pull/14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11411#issuecomment-1971062709:210,upgrade,upgrade,210,https://root.cern,https://github.com/root-project/root/issues/11411#issuecomment-1971062709,5,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method); 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays; 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method); 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe; 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works; - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality; - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes; - A new tutorial was written to showcase these features; - Release notes were added; - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9346:1063,Release,Release,1063,https://root.cern,https://github.com/root-project/root/pull/9346,2,"['Release', 'release']","['Release', 'release']"
Deployability,New printValue() integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/75:17,integrat,integration,17,https://root.cern,https://github.com/root-project/root/pull/75,1,['integrat'],['integration']
Deployability,"New releases for the three Cppyy packages are out, merging this since the update of Cppyy in experimental PyROOT is imminent.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3555#issuecomment-475167318:4,release,releases,4,https://root.cern,https://github.com/root-project/root/pull/3555#issuecomment-475167318,2,"['release', 'update']","['releases', 'update']"
Deployability,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12688:72,release,released,72,https://root.cern,https://github.com/root-project/root/pull/12688,2,['release'],"['released', 'releases']"
Deployability,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11752:777,update,updated,777,https://root.cern,https://github.com/root-project/root/pull/11752,1,['update'],['updated']
Deployability,Next issue:; ```; 13:42:12 clad_local_array.patch:50: trailing whitespace.; 13:42:12 m_arr[i] = arr ? arr[i] : 0;; 13:42:12 fatal: corrupt patch at line 61; ```; I'll check later,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833#issuecomment-1551268447:44,patch,patch,44,https://root.cern,https://github.com/root-project/root/pull/12833#issuecomment-1551268447,2,['patch'],['patch']
Deployability,Next iteration of geometry viewer. Following new functions are introduced:; - search of geometry nodes and results display; - sync highlighting of selected volumes in hierarchy browser and in GL drawing; - toggle visibility flags and proper redraw; - fix problems with clipping. Up-to-date demo: https://linev.github.io/geomCMS/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235:206,toggle,toggle,206,https://root.cern,https://github.com/root-project/root/pull/3235,1,['toggle'],['toggle']
Deployability,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963066852:782,patch,patches,782,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852,2,['patch'],['patches']
Deployability,Next stable JSROOT release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1664:19,release,release,19,https://root.cern,https://github.com/root-project/root/pull/1664,1,['release'],['release']
Deployability,Ninja shows dependency issues in our build system; fix those first before switching to Ninja. This reverts commit fcfca4ccdaf97099a180e154c60bc3c621abfafe. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13591:251,update,updated,251,https://root.cern,https://github.com/root-project/root/pull/13591,1,['update'],['updated']
Deployability,"No globbing in html/, do not install tests, fix FindOracle.cmake to not change bindir",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3520:29,install,install,29,https://root.cern,https://github.com/root-project/root/pull/3520,1,['install'],['install']
Deployability,"No need to do a full build, just make sure that the RooAbsReal pythonization file got copied to the install directory correctly:; ```; cp root_src/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py root_install/lib/ROOT/_pythonization/_roofit/_rooabsreal.py; ```. Okay I installed the `compiler-rt` package and it still doesn't work. I'm using GCC. Should I use Clang for that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221#issuecomment-1222106863:100,install,install,100,https://root.cern,https://github.com/root-project/root/issues/11221#issuecomment-1222106863,2,['install'],"['install', 'installed']"
Deployability,"No plans. But whatever the plans currently are will need to be adjusted if and once the clang patch for statements at global scope is in, as that changes the equation dramatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1235094271:94,patch,patch,94,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235094271,1,['patch'],['patch']
Deployability,No really another idea (I never tried to prune the MathJax version 3); An alternative place might be: https://github.com/mathjax/MathJax/releases/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10067#issuecomment-1061680911:137,release,releases,137,https://root.cern,https://github.com/root-project/root/issues/10067#issuecomment-1061680911,1,['release'],['releases']
Deployability,"No response_. ### How to reproduce?. From lxplus9.cern.ch:; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp""; root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed.; ```. The workaround can be demonstrated with:; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #define WORKAROUND; root [1] #include ""custom_meta_enum_test.hpp""; root [2] ; ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT?. LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using?. Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13019:3273,patch,patches,3273,https://root.cern,https://github.com/root-project/root/issues/13019,3,"['install', 'patch']","['install', 'patches']"
Deployability,"No side effects, just enables RPATH by default and uses relative paths for them, so they always work, no matter where you extract the binary release tarballs. Thanks for approving!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8576#issuecomment-871461053:141,release,release,141,https://root.cern,https://github.com/root-project/root/pull/8576#issuecomment-871461053,1,['release'],['release']
Deployability,"No, #7541 is still not fixed, waiting for Apple to fix their `libunwind` before we can do anything about it in general. This one shouldn't happen though, I thought Axel updated Cling to not `throw` exceptions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10548#issuecomment-1121539770:169,update,updated,169,https://root.cern,https://github.com/root-project/root/issues/10548#issuecomment-1121539770,1,['update'],['updated']
Deployability,"No, Python / macOS install issues this time :-/ This is good to go!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9288#issuecomment-976324811:19,install,install,19,https://root.cern,https://github.com/root-project/root/pull/9288#issuecomment-976324811,1,['install'],['install']
Deployability,"No, that discussion is not relevant upstream:. ```; >>> import cppyy; >>> cppyy.gbl.std.any; <class cppyy.gbl.std.any at 0x113f04c30>; ```. Any ""larger discussion"" should be on whether ROOT is ever going to upgrade to the latest version of cppyy? What you have in ROOT is at least 2 years or more behind in development.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11647#issuecomment-1297410736:207,upgrade,upgrade,207,https://root.cern,https://github.com/root-project/root/issues/11647#issuecomment-1297410736,1,['upgrade'],['upgrade']
Deployability,"No, that will not work. As i said protoc is actually configured correctly already. The issue is that /opt/homebrew/include is prepended to the search path for headers. I managed to fix it by doing https://github.com/alisw/root/commit/526782cfe8b7a7fffa90ae0395521b01ae902cf7 which will make sure that my own protobuf comes earlier than the one from homebrew. I see in master protobuf will use a config file, so maybe I can simply patch it in my own build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207#issuecomment-1851824221:430,patch,patch,430,https://root.cern,https://github.com/root-project/root/issues/14207#issuecomment-1851824221,2,['patch'],['patch']
Deployability,"No, there is exactly one remaining usage of the global lock which still needs to be addressed. This happens when the TFile object is added or removed from the global list of UUIDs. It can be bypassed by e.g. the following patch; https://github.com/bendavid/root/commit/7262eb3babbb660c497fb879e4cdd32b99927c26. But this isn't safe in general as we previously discussed, since it could break the (maybe esoteric) case where a TRef points to a TFile object. One way out could be to add another static switch to TFile (a la ```TFIle::SetReadStreamerInfo(false)``) to disable this. Unfortunate that this can't be the default given that it's probably only a small number of workflows that rely on this behaviour, but I don't have any better ideas for the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7710#issuecomment-1070971919:222,patch,patch,222,https://root.cern,https://github.com/root-project/root/issues/7710#issuecomment-1070971919,1,['patch'],['patch']
Deployability,"No, we don't, but that's a good idea. Next time we touch the code, we will update the syncing script to use a specific commit from the upstream repositories:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/sync-upstream",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15151#issuecomment-2277836211:75,update,update,75,https://root.cern,https://github.com/root-project/root/pull/15151#issuecomment-2277836211,1,['update'],['update']
Deployability,"No. I dont think the problem is understood. In my software I link with another library compiled with the system libraries which have a recent libpng.; At run time ROOT finds the old ones from libpng inside imagemagic. It is not too hard to update the lib png. Do you want me to write what I do?. G. > On Dec 5, 2023, at 2:52 PM, Axel Naumann ***@***.***> wrote:; > ; > ; > @unelg <https://github.com/unelg> just FYI your error message is independent of whether ROOT's png is too old or not: you are mixing library and header of libpng from two different versions, likely in your own build? Please don't :-) If what I say here doesn't make sense please post a reproducer of this error at https://root-forum.cern.ch <https://root-forum.cern.ch/> - thanks!; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/13825#issuecomment-1840834891>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAVOOJIRSHYYX74ALYJ55JLYH4RIZAVCNFSM6AAAAAA5W3TU4SVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNBQHAZTIOBZGE>.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825#issuecomment-1840841385:240,update,update,240,https://root.cern,https://github.com/root-project/root/issues/13825#issuecomment-1840841385,1,['update'],['update']
Deployability,"Nope: [clad-configure-out.log](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/168645/parsed_console/job/root-pullrequests-build/168645/parsed_console/log_content.html#ERROR1) says. ```; CMake Warning:; Ignoring extra path from command line:. ""/mnt/build/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/mnt/build/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/include"". CMake Error at CMakeLists.txt:110 (find_package):; Could not find a package configuration file provided by ""Clang"" with any of; the following names:. ClangConfig.cmake; clang-config.cmake. Add the installation prefix of ""Clang"" to CMAKE_PREFIX_PATH or set; ""Clang_DIR"" to a directory containing one of the above files. If ""Clang""; provides a separate development package or SDK, be sure it has been; installed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12333#issuecomment-1433191981:590,configurat,configuration,590,https://root.cern,https://github.com/root-project/root/pull/12333#issuecomment-1433191981,3,"['configurat', 'install']","['configuration', 'installation', 'installed']"
Deployability,"Normally the release build is stripped from debug symbols and they are installed in a separate location (e.g. /usr/lib/debug), you guys don't do this for cvmfs builds?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760480736:13,release,release,13,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760480736,2,"['install', 'release']","['installed', 'release']"
Deployability,Not associating to any ROOT release because this was a temporary error in `master`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16506#issuecomment-2399660691:28,release,release,28,https://root.cern,https://github.com/root-project/root/issues/16506#issuecomment-2399660691,1,['release'],['release']
Deployability,"Not too much, I was mostly the middle man for this patch. I did try it briefly and saw some issues, but also got issues with master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1843#issuecomment-387647478:51,patch,patch,51,https://root.cern,https://github.com/root-project/root/pull/1843#issuecomment-387647478,1,['patch'],['patch']
Deployability,Not trivial solution will be fully integrate building of libAfterImage into ROOT cmake.; But this is too much work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16129#issuecomment-2255341012:35,integrat,integrate,35,https://root.cern,https://github.com/root-project/root/pull/16129#issuecomment-2255341012,1,['integrat'],['integrate']
Deployability,"Note from the JIRA tickets:. Summary of discussion related to this ticket and https://github.com/root-project/root/issues/9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`; * consequently we use an ""emulated collection proxy"" for that collection; * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy; * TStreamerInfo::fSize is set to the value of TClass::fSizeOf; * TClass:New prefers the constructor from the interpreter; * TStreamerInfo::New was using TClass::New for that case; * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for; * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case). Since we can access the emulated collection through the CollectionProxy, it makes sense to have `TClass` to be a way to access/use the interpreted instance. In order to be consistent (`TClass:New` already prefers the interpreted information), TClass::fSizeOf should be set the sizeof the interpreted instance. In addition to the patch mentioned at https://sft.its.cern.ch/jira/browse/ROOT-8273?focusedCommentId=76181&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-76181,; we also need the following changes:. * TClass::SetClassInfo needs to update `TClass::fSizeof` when a (new) ClassInfo is set.; * TStreamerInfo::fSize needs to prefer the value of `TCollectionProxy::SizeOf()` over the value of `TClass::fSizeof`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543#issuecomment-1013280108:1544,patch,patch,1544,https://root.cern,https://github.com/root-project/root/issues/9543#issuecomment-1013280108,2,"['patch', 'update']","['patch', 'update']"
Deployability,"Note that 6.32.06 that supports macos15 has not been released.; v6-32-00-patches works on the new macos sequoia.; Before releasing we need to update with sequoia our CI nodes, an update which is already ongoing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449#issuecomment-2355223577:53,release,released,53,https://root.cern,https://github.com/root-project/root/issues/16449#issuecomment-2355223577,4,"['patch', 'release', 'update']","['patches', 'released', 'update']"
Deployability,"Note that [XRootD 5.6.3](https://github.com/xrootd/xrootd/releases/tag/v5.6.3) has been released, and now exports the version via CMake.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13752#issuecomment-1783001609:58,release,releases,58,https://root.cern,https://github.com/root-project/root/pull/13752#issuecomment-1783001609,2,['release'],"['released', 'releases']"
Deployability,"Note that `XrdClient` is the old client from XRootD 4.x, which is already out of support (and EOS 4.x will also go out of support soon). `XrdClient` was removed from the XRootD repository in the XRootD 5.0 release. I think that this is a good time to review the code, drop obsolete things, require at least XRootD 5.x, use `XRootDConfig.cmake` shipped by XRootD, and drop `FindXROOTD.cmake` from ROOT. If `XRootDConfig.cmake` doesn't have something ROOT needs, please let me know and I will fix it for the next patch or feature release, depending on what it is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1740452464:206,release,release,206,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1740452464,3,"['patch', 'release']","['patch', 'release']"
Deployability,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296#issuecomment-2306368651:36,configurat,configuration,36,https://root.cern,https://github.com/root-project/root/pull/16296#issuecomment-2306368651,1,['configurat'],['configuration']
Deployability,Note that the complete version of this PR is at https://github.com/root-project/root/pull/11261 for the main branch and https://github.com/root-project/root/pull/11292 for the v6.24 patch branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008#issuecomment-1259422813:182,patch,patch,182,https://root.cern,https://github.com/root-project/root/pull/9008#issuecomment-1259422813,1,['patch'],['patch']
Deployability,Note that this fix will be part of the next ROOT release (v6.26/00 coming soon) [and of course be back ported as needed].,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-991262449:49,release,release,49,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-991262449,1,['release'],['release']
Deployability,"Note that we need to land https://github.com/compiler-research/CppInterOp/pull/318, release and then merge this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296#issuecomment-2309780089:84,release,release,84,https://root.cern,https://github.com/root-project/root/pull/16296#issuecomment-2309780089,1,['release'],['release']
Deployability,"Note this still doesn't work after yesterdays cppyy upgrade:; ```txt; C:\root-dev\build\x64\debug>python; Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> s = ROOT.std.set['int'](); Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010; *** Break *** abort; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14710#issuecomment-2009411986:52,upgrade,upgrade,52,https://root.cern,https://github.com/root-project/root/issues/14710#issuecomment-2009411986,1,['upgrade'],['upgrade']
Deployability,Note to myself: Add this to the RDF cheat sheet and the release notes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7833#issuecomment-823360454:56,release,release,56,https://root.cern,https://github.com/root-project/root/pull/7833#issuecomment-823360454,1,['release'],['release']
Deployability,"Note: I am confused :( ... I had been able to use your example and solve the problem (in a way that turns out to not be sufficient) but now that I return to it (to make sure the 'new way' is also working), I am having some ""unrelated"" problem. With any release of ROOT i tried (including v6.22/00) and NONE of your libraries around, I get:; ```; root.exe -b -l -q pluto_oldpers.root -e 'b = SlimMC->GetBranch(""fKineParts.fFinalMomentum""); b->GetEntry(0);'. Attaching file pluto_oldpers.root as _file0...; Warning in <TClass::Init>: no dictionary for class Stream is available; Warning in <TClass::Init>: no dictionary for class RecoInfo is available; Warning in <TClass::Init>: no dictionary for class AnalysisInfo is available; Warning in <TClass::Init>: no dictionary for class CheckPointInfo is available; Warning in <TClass::Init>: no dictionary for class NA62Analysis::Core::AnalyzerIdentifier is available; Warning in <TClass::Init>: no dictionary for class TDetectorVEvent is available; Warning in <TClass::Init>: no dictionary for class TVEvent is available; Warning in <TClass::Init>: no dictionary for class TDetectorVHit is available; Warning in <TClass::Init>: no dictionary for class TVHit is available; Warning in <TClass::Init>: no dictionary for class TVChannelID is available; Warning in <TClass::Init>: no dictionary for class TSpectrometerEvent is available; Warning in <TClass::Init>: no dictionary for class TSpectrometerHit is available; Warning in <TClass::Init>: no dictionary for class SpectrometerChannelID is available; Warning in <TClass::Init>: no dictionary for class SlimEvent is available; Warning in <TClass::Init>: no dictionary for class SlimGenePart is available; Warning in <TClass::Init>: no dictionary for class SlimBasePart is available; Warning in <TClass::Init>: no dictionary for class SlimKinePart is available; Warning in <TClass::Init>: no dictionary for class Float4Vector is available; Warning in <TClass::Init>: no dictionary for class Float3Vector is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-965918817:253,release,release,253,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-965918817,1,['release'],['release']
Deployability,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385674159:58,integrat,integrate-root-my-project-cmake,58,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385674159,1,['integrat'],['integrate-root-my-project-cmake']
Deployability,"Note: RootUseFile could be updated to use `add_compile_options` with the new lists, and that would make it more consistent; it currently adds everything else just at the current directory scope, but sets `CMAKE_*_FLAGS` everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385672116:27,update,updated,27,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385672116,1,['update'],['updated']
Deployability,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits).; However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15874#issuecomment-2173954150:432,update,update,432,https://root.cern,https://github.com/root-project/root/issues/15874#issuecomment-2173954150,1,['update'],['update']
